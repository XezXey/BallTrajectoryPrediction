[%]GPU Enabled
/home/puntawat/Mint/Work/Vision/BallTrajectory/UnityDataset//RealWorld/Unity/Mixed/NormalScaled/Latent/train_set
Mixed:   0%|                                                                                     | 0/3 [00:00<?, ?it/s]Mixed: 100%|█████████████████████████████████████████████████████████████████████████████| 3/3 [00:00<00:00, 30.99it/s]
===============================Dataset shape===============================
Mixed : (5668,)
===========================================================================
Mixed:   0%|                                                                                     | 0/1 [00:00<?, ?it/s]Mixed: 100%|█████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 19.10it/s]
===============================Dataset shape===============================
Mixed : (1850,)
===========================================================================
[[ 4.992570e+02  2.282199e+02  4.631831e+01 ...  1.000000e+00
   3.721284e+00 -9.810000e+00]
 [ 2.193900e+00  3.339900e+00 -4.055000e-02 ...  1.000000e+00
   3.721284e+00 -9.810000e+00]
 [ 2.209700e+00  3.301900e+00 -3.879000e-02 ...  0.000000e+00
   3.721284e+00 -9.810000e+00]
 ...
 [-1.476000e-01  8.430000e-02  4.790000e-03 ...  1.000000e+00
   5.630108e+00 -9.810000e+00]
 [-1.441000e-01  8.220000e-02  4.670000e-03 ...  1.000000e+00
   5.630108e+00 -9.810000e+00]
 [-1.405000e-01  8.040000e-02  4.570000e-03 ...  1.000000e+00
   5.630108e+00 -9.810000e+00]]
[[ 9.995950e+02  6.542516e+02  6.792992e+01 ...  1.000000e+00
   8.425002e-01 -9.810000e+00]
 [-2.473200e+00 -1.706900e+00 -1.270500e-01 ...  1.000000e+00
   8.425002e-01 -9.810000e+00]
 [-2.460400e+00 -1.698900e+00 -1.259800e-01 ...  1.000000e+00
   8.425002e-01 -9.810000e+00]
 ...
 [-1.057000e-01  6.570000e-02  3.970000e-03 ...  1.000000e+00
   5.521661e+00 -9.810000e+00]
 [-1.032000e-01  6.440000e-02  3.850000e-03 ...  1.000000e+00
   5.521661e+00 -9.810000e+00]
 [-1.007000e-01  6.310000e-02  3.750000e-03 ...  1.000000e+00
   5.521661e+00 -9.810000e+00]]
[[ 8.707077e+02  5.864022e+02  6.320370e+01 ...  1.000000e+00
   9.118090e-01 -9.810000e+00]
 [-7.481000e-01  1.761000e+00 -1.399000e-01 ...  1.000000e+00
   9.118090e-01 -9.810000e+00]
 [-7.529000e-01  1.726700e+00 -1.381500e-01 ...  0.000000e+00
   9.118090e-01 -9.810000e+00]
 ...
 [-5.520000e-02 -5.360000e-02 -2.400000e-03 ...  1.000000e+00
   9.791723e-01 -9.810000e+00]
 [-5.400000e-02 -5.220000e-02 -2.330000e-03 ...  1.000000e+00
   9.791723e-01 -9.810000e+00]
 [-5.240000e-02 -5.080000e-02 -2.280000e-03 ...  1.000000e+00
   9.791723e-01 -9.810000e+00]]
[[ 5.964462e+02  4.167178e+02  5.385577e+01 ...  1.000000e+00
   3.833831e+00 -9.810000e+00]
 [ 4.781100e+00  2.437000e+00  1.149900e-01 ...  1.000000e+00
   3.833831e+00 -9.810000e+00]
 [ 4.721600e+00  2.407900e+00  1.141000e-01 ...  1.000000e+00
   3.833831e+00 -9.810000e+00]
 ...
 [-1.601000e-01 -1.163000e-01 -5.710000e-03 ...  1.000000e+00
   8.995176e-01 -9.810000e+00]
 [-1.563000e-01 -1.135000e-01 -5.570000e-03 ...  1.000000e+00
   8.995176e-01 -9.810000e+00]
 [-1.527000e-01 -1.109000e-01 -5.440000e-03 ...  1.000000e+00
   8.995176e-01 -9.810000e+00]]
[[ 7.308535e+02  5.517036e+02  6.099350e+01 ...  1.000000e+00
   2.067793e+00 -9.810000e+00]
 [ 7.246000e-01  3.966000e-01 -1.318900e-01 ...  1.000000e+00
   2.067793e+00 -9.810000e+00]
 [ 7.302000e-01  3.557000e-01 -1.301300e-01 ...  0.000000e+00
   2.067793e+00 -9.810000e+00]
 ...
 [-1.275000e-01 -1.097000e-01 -3.930000e-03 ...  1.000000e+00
   9.963707e-01 -9.810000e+00]
 [-1.244000e-01 -1.069000e-01 -3.850000e-03 ...  1.000000e+00
   9.963707e-01 -9.810000e+00]
 [-1.216000e-01 -1.045000e-01 -3.750000e-03 ...  1.000000e+00
   9.963707e-01 -9.810000e+00]]
[[ 9.790991e+02  4.167009e+02  5.401119e+01 ...  1.000000e+00
   5.589658e+00 -9.810000e+00]
 [-4.059400e+00  2.207800e+00  1.013100e-01 ...  1.000000e+00
   5.589658e+00 -9.810000e+00]
 [-4.010000e+00  2.177200e+00  1.002700e-01 ...  1.000000e+00
   5.589658e+00 -9.810000e+00]
 ...
 [ 1.120000e-01 -6.380000e-02 -2.700000e-03 ...  1.000000e+00
   2.444581e+00 -9.810000e+00]
 [ 1.100000e-01 -6.230000e-02 -2.650000e-03 ...  1.000000e+00
   2.444581e+00 -9.810000e+00]
 [ 1.070000e-01 -6.080000e-02 -2.580000e-03 ...  1.000000e+00
   2.444581e+00 -9.810000e+00]]
[[ 9.880629e+02  3.775947e+02  5.225352e+01 ...  1.000000e+00
   5.312314e+00 -9.810000e+00]
 [-3.075200e+00  3.027400e+00  1.310600e-01 ...  1.000000e+00
   5.312314e+00 -9.810000e+00]
 [-3.028000e+00  2.986200e+00  1.299200e-01 ...  1.000000e+00
   5.312314e+00 -9.810000e+00]
 ...
 [-1.186000e-01  7.950000e-02  5.490000e-03 ...  1.000000e+00
   5.459421e+00 -9.810000e+00]
 [-1.157000e-01  7.760000e-02  5.350000e-03 ...  1.000000e+00
   5.459421e+00 -9.810000e+00]
 [-1.130000e-01  7.570000e-02  5.240000e-03 ...  1.000000e+00
   5.459421e+00 -9.810000e+00]]
======================================================Summary Batch (batch_size = 128)=========================================================================
[[ 9.224196e+02  6.110117e+02  6.484290e+01 ...  1.000000e+00
   6.992164e-01 -9.810000e+00]
 [-2.469800e+00 -1.204100e+00 -8.215000e-02 ...  1.000000e+00
   6.992164e-01 -9.810000e+00]
 [-2.449700e+00 -1.192700e+00 -8.116000e-02 ...  1.000000e+00
   6.992164e-01 -9.810000e+00]
 ...
 [-1.677000e-01 -1.514000e-01 -6.080000e-03 ...  1.000000e+00
   9.691182e-01 -9.810000e+00]
 [-1.639000e-01 -1.477000e-01 -5.930000e-03 ...  1.000000e+00
   9.691182e-01 -9.810000e+00]
 [-1.599000e-01 -1.442000e-01 -5.800000e-03 ...  1.000000e+00
   9.691182e-01 -9.810000e+00]][[ 9.676552e+02  5.667579e+02  6.202808e+01 ...  1.000000e+00
   9.243395e-01 -9.810000e+00]
 [-1.528200e+00 -1.391400e+00 -8.613000e-02 ...  1.000000e+00
   9.243395e-01 -9.810000e+00]
 [-1.509700e+00 -1.377100e+00 -8.501000e-02 ...  1.000000e+00
   9.243395e-01 -9.810000e+00]
 ...
 [ 1.770000e-01 -9.730000e-02 -4.950000e-03 ...  1.000000e+00
   2.415920e+00 -9.810000e+00]
 [ 1.720000e-01 -9.490000e-02 -4.830000e-03 ...  1.000000e+00
   2.415920e+00 -9.810000e+00]
 [ 1.680000e-01 -9.270000e-02 -4.720000e-03 ...  1.000000e+00
   2.415920e+00 -9.810000e+00]]

[[ 9.200582e+02  4.429839e+02  5.523778e+01 ...  1.000000e+00
   5.542633e+00 -9.810000e+00]
 [-4.133300e+00  2.358000e+00  1.132700e-01 ...  1.000000e+00
   5.542633e+00 -9.810000e+00]
 [-4.089000e+00  2.322700e+00  1.120300e-01 ...  1.000000e+00
   5.542633e+00 -9.810000e+00]
 ...
 [ 1.397000e-01 -1.302000e-01 -5.920000e-03 ...  1.000000e+00
   2.228584e+00 -9.810000e+00]
 [ 1.364000e-01 -1.270000e-01 -5.780000e-03 ...  1.000000e+00
   2.228584e+00 -9.810000e+00]
 [ 1.331000e-01 -1.241000e-01 -5.640000e-03 ...  1.000000e+00
   2.228584e+00 -9.810000e+00]]
[[ 8.811866e+02  5.354634e+02  6.012054e+01 ...  1.000000e+00
   6.832696e-01 -9.810000e+00]
 [-1.465700e+00  1.805200e+00 -1.589300e-01 ...  1.000000e+00
   6.832696e-01 -9.810000e+00]
 [-1.475200e+00  1.771900e+00 -1.571900e-01 ...  0.000000e+00
   6.832696e-01 -9.810000e+00]
 ...
 [ 2.031000e-01  7.930000e-02  3.620000e-03 ...  1.000000e+00
   3.659986e+00 -9.810000e+00]
 [ 1.983000e-01  7.720000e-02  3.540000e-03 ...  1.000000e+00
   3.659986e+00 -9.810000e+00]
 [ 1.936000e-01  7.550000e-02  3.450000e-03 ...  1.000000e+00
   3.659986e+00 -9.810000e+00]]
[[ 9.241406e+02  4.553783e+02  5.584972e+01 ...  1.000000e+00
   5.519469e+00 -9.810000e+00]
 [-1.175100e+00  2.866800e+00 -2.980000e-02 ...  1.000000e+00
   5.519469e+00 -9.810000e+00]
 [-1.179700e+00  2.826300e+00 -2.804000e-02 ...  0.000000e+00
   5.519469e+00 -9.810000e+00]
 ...
 [ 1.354000e-01 -1.421000e-01 -6.020000e-03 ...  1.000000e+00
   2.207000e+00 -9.810000e+00]
 [ 1.322000e-01 -1.388000e-01 -5.880000e-03 ...  1.000000e+00
   2.207000e+00 -9.810000e+00]
 [ 1.290000e-01 -1.355000e-01 -5.730000e-03 ...  1.000000e+00
   2.207000e+00 -9.810000e+00]]
[[ 8.710128e+02  4.371305e+02  5.493346e+01  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-2.308400e+00  2.309600e+00  1.104600e-01  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-2.290900e+00  2.267300e+00  1.088700e-01  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-2.261000e+00  2.231500e+00  1.075600e-01  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-2.228200e+00  2.197500e+00  1.063300e-01  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-2.194700e+00  2.164100e+00  1.051300e-01  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-2.161500e+00  2.131400e+00  1.039100e-01  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-2.128600e+00  2.098900e+00  1.027200e-01  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-2.095900e+00  2.066600e+00  1.015100e-01  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-2.063600e+00  2.034800e+00  1.003100e-01  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-2.031600e+00  2.003200e+00  9.910000e-02  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-1.999900e+00  1.971900e+00  9.790000e-02  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-1.968400e+00  1.940900e+00  9.670000e-02  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-1.937200e+00  1.910300e+00  9.549000e-02  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-1.906500e+00  1.879800e+00  9.429000e-02  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-1.875900e+00  1.849700e+00  9.309000e-02  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-1.845500e+00  1.819700e+00  9.188000e-02  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-1.815500e+00  1.790200e+00  9.068000e-02  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-1.785700e+00  1.760700e+00  8.947000e-02  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-1.756300e+00  1.731700e+00  8.827000e-02  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-1.726800e+00  1.702700e+00  8.707000e-02  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-1.697800e+00  1.674200e+00  8.587000e-02  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-1.669200e+00  1.645700e+00  8.466000e-02  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-1.640400e+00  1.617600e+00  8.345000e-02  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-1.612200e+00  1.589700e+00  8.226000e-02  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-1.584000e+00  1.561900e+00  8.106000e-02  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-1.556200e+00  1.534400e+00  7.984000e-02  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-1.528400e+00  1.507100e+00  7.864000e-02  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-1.501100e+00  1.480000e+00  7.744000e-02  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-1.473700e+00  1.453200e+00  7.624000e-02  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-1.446600e+00  1.426400e+00  7.503000e-02  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-1.419800e+00  1.399900e+00  7.383000e-02  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-1.393100e+00  1.373700e+00  7.263000e-02  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-1.366600e+00  1.347600e+00  7.142000e-02  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-1.340300e+00  1.321500e+00  7.022000e-02  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-1.314200e+00  1.295900e+00  6.901000e-02  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-1.288200e+00  1.270200e+00  6.781000e-02  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-1.262400e+00  1.244800e+00  6.662000e-02  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-1.236800e+00  1.219500e+00  6.540000e-02  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-1.211400e+00  1.194400e+00  6.420000e-02  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-1.186100e+00  1.169500e+00  6.300000e-02  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-1.160900e+00  1.144700e+00  6.179000e-02  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-1.135900e+00  1.120100e+00  6.059000e-02  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-1.111100e+00  1.095500e+00  5.939000e-02  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-1.086300e+00  1.071200e+00  5.818000e-02  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-1.061900e+00  1.047000e+00  5.698000e-02  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-1.037300e+00  1.022900e+00  5.578000e-02  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-1.013200e+00  9.990000e-01  5.457000e-02  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-9.890000e-01  9.751000e-01  5.337000e-02  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-9.648000e-01  9.514000e-01  5.217000e-02  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-9.410000e-01  9.279000e-01  5.096000e-02  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-9.173000e-01  9.043000e-01  4.976000e-02  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-8.935000e-01  8.811000e-01  4.855000e-02  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-8.700000e-01  8.579000e-01  4.736000e-02  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-8.465000e-01  8.347000e-01  4.615000e-02  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-8.231000e-01  8.117000e-01  4.494000e-02  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-8.000000e-01  7.887000e-01  4.374000e-02  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-7.768000e-01  7.659000e-01  4.254000e-02  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-7.538000e-01  7.433000e-01  4.133000e-02  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-7.307000e-01  7.206000e-01  4.013000e-02  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-7.080000e-01  6.980000e-01  3.893000e-02  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-6.851000e-01  6.756000e-01  3.772000e-02  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-6.625000e-01  6.532000e-01  3.652000e-02  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-6.433000e-01  6.343000e-01  3.551000e-02  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-6.272000e-01  6.185000e-01  3.466000e-02  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-6.116000e-01  6.030000e-01  3.384000e-02  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-5.964000e-01  5.881000e-01  3.302000e-02  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-5.815000e-01  5.734000e-01  3.224000e-02  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-5.671000e-01  5.591000e-01  3.148000e-02  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-5.530000e-01  5.453000e-01  3.073000e-02  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-5.393000e-01  5.318000e-01  2.999000e-02  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-5.259000e-01  5.186000e-01  2.928000e-02  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-5.129000e-01  5.057000e-01  2.859000e-02  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-5.003000e-01  4.932000e-01  2.789000e-02  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-4.877000e-01  4.810000e-01  2.724000e-02  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-4.759000e-01  4.692000e-01  2.659000e-02  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-4.641000e-01  4.576000e-01  2.596000e-02  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-4.526000e-01  4.463000e-01  2.534000e-02  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-4.415000e-01  4.354000e-01  2.473000e-02  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-4.306000e-01  4.246000e-01  2.415000e-02  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-4.200000e-01  4.142000e-01  2.357000e-02  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-4.098000e-01  4.040000e-01  2.301000e-02  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-3.996000e-01  3.941000e-01  2.246000e-02  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-3.899000e-01  3.844000e-01  2.193000e-02  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-3.803000e-01  3.749000e-01  2.140000e-02  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-3.710000e-01  3.658000e-01  2.090000e-02  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-3.619000e-01  3.569000e-01  2.040000e-02  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-3.531000e-01  3.481000e-01  1.991000e-02  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-3.443000e-01  3.396000e-01  1.944000e-02  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-3.361000e-01  3.314000e-01  1.898000e-02  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-3.278000e-01  3.232000e-01  1.852000e-02  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-3.198000e-01  3.153000e-01  1.808000e-02  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-3.120000e-01  3.076000e-01  1.766000e-02  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-3.044000e-01  3.002000e-01  1.722000e-02  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-2.970000e-01  2.928000e-01  1.683000e-02  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-2.897000e-01  2.857000e-01  1.642000e-02  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-2.827000e-01  2.787000e-01  1.603000e-02  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-2.758000e-01  2.721000e-01  1.564000e-02  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-2.691000e-01  2.653000e-01  1.528000e-02  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-2.626000e-01  2.589000e-01  1.491000e-02  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-2.562000e-01  2.526000e-01  1.456000e-02  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-2.500000e-01  2.465000e-01  1.421000e-02  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-2.439000e-01  2.406000e-01  1.387000e-02  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-2.381000e-01  2.346000e-01  1.354000e-02  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-2.320000e-01  2.289000e-01  1.322000e-02  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-2.266000e-01  2.234000e-01  1.290000e-02  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-2.210000e-01  2.179000e-01  1.259000e-02  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-2.157000e-01  2.127000e-01  1.230000e-02  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-2.105000e-01  2.075000e-01  1.199000e-02  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-2.054000e-01  2.026000e-01  1.172000e-02  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-2.004000e-01  1.975000e-01  1.143000e-02  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-1.956000e-01  1.929000e-01  1.117000e-02  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-1.907000e-01  1.881000e-01  1.089000e-02  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-1.864000e-01  1.837000e-01  1.064000e-02  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-1.816000e-01  1.792000e-01  1.039000e-02  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-1.774000e-01  1.748000e-01  1.014000e-02  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-1.730000e-01  1.706000e-01  9.890000e-03  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-1.689000e-01  1.667000e-01  9.660000e-03  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-1.648000e-01  1.624000e-01  9.430000e-03  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-1.609000e-01  1.586000e-01  9.210000e-03  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-1.569000e-01  1.547000e-01  8.980000e-03  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-1.532000e-01  1.512000e-01  8.780000e-03  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-1.495000e-01  1.473000e-01  8.560000e-03  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-1.459000e-01  1.439000e-01  8.360000e-03  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-1.423000e-01  1.403000e-01  8.170000e-03  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-1.390000e-01  1.371000e-01  7.960000e-03  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-1.356000e-01  1.336000e-01  7.770000e-03  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-1.323000e-01  1.306000e-01  7.600000e-03  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-1.292000e-01  1.272000e-01  7.410000e-03  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-1.260000e-01  1.244000e-01  7.230000e-03  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-1.230000e-01  1.212000e-01  7.060000e-03  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-1.201000e-01  1.185000e-01  6.900000e-03  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-1.172000e-01  1.155000e-01  6.730000e-03  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-1.143000e-01  1.128000e-01  6.570000e-03  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-1.117000e-01  1.100000e-01  6.410000e-03  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-1.088000e-01  1.074000e-01  6.260000e-03  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-1.064000e-01  1.049000e-01  6.100000e-03  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-1.037000e-01  1.022000e-01  5.970000e-03  0.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]
 [-1.012000e-01  9.980000e-02  5.820000e-03  1.000000e+00  1.000000e+00
   5.250992e+00 -9.810000e+00]]
[[ 5.834454e+02  4.143105e+02  5.373932e+01 ...  1.000000e+00
   4.169622e+00 -9.810000e+00]
 [ 2.852000e+00  2.712200e+00  1.264400e-01 ...  1.000000e+00
   4.169622e+00 -9.810000e+00]
 [ 2.805500e+00  2.674700e+00  1.252800e-01 ...  1.000000e+00
   4.169622e+00 -9.810000e+00]
 ...
 [ 1.923000e-01 -6.970000e-02 -3.570000e-03 ...  1.000000e+00
   2.579723e+00 -9.810000e+00]
 [ 1.878000e-01 -6.810000e-02 -3.480000e-03 ...  1.000000e+00
   2.579723e+00 -9.810000e+00]
 [ 1.832000e-01 -6.650000e-02 -3.400000e-03 ...  1.000000e+00
   2.579723e+00 -9.810000e+00]]
[[ 7.416046e+02  4.990001e+02  5.802245e+01 ...  1.000000e+00
   4.067850e+00 -9.810000e+00]
 [ 7.061000e-01  2.814600e+00 -3.569000e-02 ...  1.000000e+00
   4.067850e+00 -9.810000e+00]
 [ 7.091000e-01  2.775000e+00 -3.393000e-02 ...  0.000000e+00
   4.067850e+00 -9.810000e+00]
 ...
 [-6.910000e-02 -3.830000e-02 -2.130000e-03 ...  1.000000e+00
   7.922384e-01 -9.810000e+00]
 [-6.760000e-02 -3.750000e-02 -2.090000e-03 ...  1.000000e+00
   7.922384e-01 -9.810000e+00]
 [-6.590000e-02 -3.650000e-02 -2.030000e-03 ...  1.000000e+00
   7.922384e-01 -9.810000e+00]]
[[ 6.153898e+02  6.476462e+02  6.720261e+01 ...  1.000000e+00
   2.429130e+00 -9.810000e+00]
 [ 8.842000e-01  1.240600e+00 -1.314700e-01 ...  1.000000e+00
   2.429130e+00 -9.810000e+00]
 [ 8.931000e-01  1.204300e+00 -1.297200e-01 ...  0.000000e+00
   2.429130e+00 -9.810000e+00]
 ...
 [-1.355000e-01  7.890000e-02  4.770000e-03 ...  1.000000e+00
   5.560814e+00 -9.810000e+00]
 [-1.321000e-01  7.690000e-02  4.660000e-03 ...  1.000000e+00
   5.560814e+00 -9.810000e+00]
 [-1.291000e-01  7.510000e-02  4.540000e-03 ...  1.000000e+00
   5.560814e+00 -9.810000e+00]]
[[ 6.006851e+02  3.957435e+02  5.290385e+01 ...  1.000000e+00
   3.894610e+00 -9.810000e+00]
 [ 4.864900e+00  2.788400e+00  1.267500e-01 ...  1.000000e+00
   3.894610e+00 -9.810000e+00]
 [ 4.804900e+00  2.752700e+00  1.257300e-01 ...  1.000000e+00
   3.894610e+00 -9.810000e+00]
 ...
 [-2.134000e-01 -1.148000e-01 -4.890000e-03 ...  1.000000e+00
   7.211472e-01 -9.810000e+00]
 [-2.081000e-01 -1.122000e-01 -4.760000e-03 ...  1.000000e+00
   7.211472e-01 -9.810000e+00]
 [-2.034000e-01 -1.095000e-01 -4.650000e-03 ...  1.000000e+00
   7.211472e-01 -9.810000e+00]]
[[ 7.085225e+02  3.950731e+02  5.291627e+01 ...  1.000000e+00
   3.938577e+00 -9.810000e+00]
 [ 1.695000e+00  2.644500e+00 -6.050000e-03 ...  1.000000e+00
   3.938577e+00 -9.810000e+00]
 [ 1.699000e+00  2.601200e+00 -4.300000e-03 ...  0.000000e+00
   3.938577e+00 -9.810000e+00]
 ...
 [-2.069000e-01 -1.211000e-01 -4.970000e-03 ...  1.000000e+00
   7.404987e-01 -9.810000e+00]
 [-2.021000e-01 -1.182000e-01 -4.860000e-03 ...  1.000000e+00
   7.404987e-01 -9.810000e+00]
 [-1.971000e-01 -1.154000e-01 -4.740000e-03 ...  1.000000e+00
   7.404987e-01 -9.810000e+00]]
[[ 8.721614e+02  5.571293e+02  6.139194e+01 ...  1.000000e+00
   7.292953e-01 -9.810000e+00]
 [-2.273600e+00 -1.304500e+00 -7.954000e-02 ...  1.000000e+00
   7.292953e-01 -9.810000e+00]
 [-2.248500e+00 -1.293100e+00 -7.866000e-02 ...  1.000000e+00
   7.292953e-01 -9.810000e+00]
 ...
 [ 1.060000e-01  6.010000e-02  4.400000e-03 ...  1.000000e+00
   3.890649e+00 -9.810000e+00]
 [ 1.030000e-01  5.870000e-02  4.290000e-03 ...  1.000000e+00
   3.890649e+00 -9.810000e+00]
 [ 1.010000e-01  5.730000e-02  4.180000e-03 ...  1.000000e+00
   3.890649e+00 -9.810000e+00]]
[[ 5.515325e+02  6.647260e+02  6.841451e+01 ...  1.000000e+00
   2.616926e+00 -9.810000e+00]
 [ 2.660900e+00 -1.017200e+00 -7.415000e-02 ...  1.000000e+00
   2.616926e+00 -9.810000e+00]
 [ 2.638100e+00 -1.010100e+00 -7.348000e-02 ...  1.000000e+00
   2.616926e+00 -9.810000e+00]
 ...
 [ 2.000000e-01 -6.710000e-02 -3.460000e-03 ...  1.000000e+00
   2.662626e+00 -9.810000e+00]
 [ 1.960000e-01 -6.550000e-02 -3.390000e-03 ...  1.000000e+00
   2.662626e+00 -9.810000e+00]
 [ 1.910000e-01 -6.390000e-02 -3.300000e-03 ...  1.000000e+00
   2.662626e+00 -9.810000e+00]]
[[ 6.985275e+02  3.725278e+02  5.192390e+01 ...  1.000000e+00
   3.691961e+00 -9.810000e+00]
 [ 4.286700e+00  1.741100e+00  7.664000e-02 ...  1.000000e+00
   3.691961e+00 -9.810000e+00]
 [ 4.233100e+00  1.717900e+00  7.585000e-02 ...  1.000000e+00
   3.691961e+00 -9.810000e+00]
 ...
 [-6.650000e-02  7.380000e-02  4.610000e-03 ...  1.000000e+00
   5.350130e+00 -9.810000e+00]
 [-6.470000e-02  7.200000e-02  4.500000e-03 ...  1.000000e+00
   5.350130e+00 -9.810000e+00]
 [-6.330000e-02  7.030000e-02  4.400000e-03 ...  1.000000e+00
   5.350130e+00 -9.810000e+00]]
[[ 1.227309e+03  4.789059e+02  5.718467e+01 ...  1.000000e+00
   5.620294e+00 -9.810000e+00]
 [-3.763000e+00  1.695200e+00  8.686000e-02 ...  1.000000e+00
   5.620294e+00 -9.810000e+00]
 [-3.713000e+00  1.672400e+00  8.596000e-02 ...  1.000000e+00
   5.620294e+00 -9.810000e+00]
 ...
 [-1.723000e-01 -8.170000e-02 -4.390000e-03 ...  1.000000e+00
   6.928247e-01 -9.810000e+00]
 [-1.679000e-01 -7.980000e-02 -4.280000e-03 ...  1.000000e+00
   6.928247e-01 -9.810000e+00]
 [-1.643000e-01 -7.790000e-02 -4.190000e-03 ...  1.000000e+00
   6.928247e-01 -9.810000e+00]]
[[ 9.029006e+02  4.328507e+02  5.474155e+01 ...  1.000000e+00
   5.713974e+00 -9.810000e+00]
 [-2.079700e+00  2.659100e+00 -2.154000e-02 ...  1.000000e+00
   5.713974e+00 -9.810000e+00]
 [-2.083900e+00  2.617500e+00 -1.978000e-02 ...  0.000000e+00
   5.713974e+00 -9.810000e+00]
 ...
 [ 1.404000e-01 -1.437000e-01 -5.920000e-03 ...  1.000000e+00
   2.229235e+00 -9.810000e+00]
 [ 1.371000e-01 -1.402000e-01 -5.770000e-03 ...  1.000000e+00
   2.229235e+00 -9.810000e+00]
 [ 1.339000e-01 -1.370000e-01 -5.630000e-03 ...  1.000000e+00
   2.229235e+00 -9.810000e+00]]
[[ 8.981496e+02  5.386434e+02  6.031318e+01 ...  1.000000e+00
   7.900567e-01 -9.810000e+00]
 [-2.826600e+00 -1.952400e+00 -1.145600e-01 ...  1.000000e+00
   7.900567e-01 -9.810000e+00]
 [-2.804400e+00 -1.945000e+00 -1.136900e-01 ...  1.000000e+00
   7.900567e-01 -9.810000e+00]
 ...
 [ 1.253000e-01  7.840000e-02  5.100000e-03 ...  1.000000e+00
   3.916553e+00 -9.810000e+00]
 [ 1.224000e-01  7.670000e-02  4.970000e-03 ...  1.000000e+00
   3.916553e+00 -9.810000e+00]
 [ 1.195000e-01  7.470000e-02  4.860000e-03 ...  1.000000e+00
   3.916553e+00 -9.810000e+00]]
[[ 1.123517e+03  3.384588e+02  5.065092e+01 ...  1.000000e+00
   5.542986e+00 -9.810000e+00]
 [-1.814000e+00  4.765000e+00 -6.385000e-02 ...  1.000000e+00
   5.542986e+00 -9.810000e+00]
 [-1.828000e+00  4.732800e+00 -6.211000e-02 ...  0.000000e+00
   5.542986e+00 -9.810000e+00]
 ...
 [ 1.453000e-01 -9.620000e-02 -5.260000e-03 ...  1.000000e+00
   2.361136e+00 -9.810000e+00]
 [ 1.418000e-01 -9.390000e-02 -5.140000e-03 ...  1.000000e+00
   2.361136e+00 -9.810000e+00]
 [ 1.385000e-01 -9.180000e-02 -5.010000e-03 ...  1.000000e+00
   2.361136e+00 -9.810000e+00]]
[[ 5.968180e+02  4.813758e+02  5.702468e+01 ...  1.000000e+00
   3.914859e+00 -9.810000e+00]
 [ 9.074000e-01  4.004700e+00 -8.699000e-02 ...  1.000000e+00
   3.914859e+00 -9.810000e+00]
 [ 9.169000e-01  3.973400e+00 -8.523000e-02 ...  0.000000e+00
   3.914859e+00 -9.810000e+00]
 ...
 [-1.290000e-01 -9.410000e-02 -5.750000e-03 ...  1.000000e+00
   9.027690e-01 -9.810000e+00]
 [-1.262000e-01 -9.190000e-02 -5.620000e-03 ...  1.000000e+00
   9.027690e-01 -9.810000e+00]
 [-1.230000e-01 -8.980000e-02 -5.480000e-03 ...  1.000000e+00
   9.027690e-01 -9.810000e+00]]
[[ 5.964130e+02  4.562869e+02  5.575166e+01 ...  1.000000e+00
   3.774210e+00 -9.810000e+00]
 [ 4.205500e+00  1.807400e+00  9.164000e-02 ...  1.000000e+00
   3.774210e+00 -9.810000e+00]
 [ 4.153800e+00  1.783600e+00  9.072000e-02 ...  1.000000e+00
   3.774210e+00 -9.810000e+00]
 ...
 [ 1.930000e-01 -8.460000e-02 -4.150000e-03 ...  1.000000e+00
   2.487078e+00 -9.810000e+00]
 [ 1.890000e-01 -8.280000e-02 -4.060000e-03 ...  1.000000e+00
   2.487078e+00 -9.810000e+00]
 [ 1.850000e-01 -8.070000e-02 -3.950000e-03 ...  1.000000e+00
   2.487078e+00 -9.810000e+00]]
[[ 8.262745e+02  5.226963e+02  5.936589e+01 ...  1.000000e+00
   3.943070e+00 -9.810000e+00]
 [ 4.137300e+00  2.510700e+00  1.435900e-01 ...  1.000000e+00
   3.943070e+00 -9.810000e+00]
 [ 4.093600e+00  2.477300e+00  1.423800e-01 ...  1.000000e+00
   3.943070e+00 -9.810000e+00]
 ...
 [-9.830000e-02 -7.770000e-02 -3.800000e-03 ...  1.000000e+00
   8.760770e-01 -9.810000e+00]
 [-9.590000e-02 -7.570000e-02 -3.710000e-03 ...  1.000000e+00
   8.760770e-01 -9.810000e+00]
 [-9.360000e-02 -7.380000e-02 -3.630000e-03 ...  1.000000e+00
   8.760770e-01 -9.810000e+00]]
[[ 8.264881e+02  4.877667e+02  5.746448e+01 ...  1.000000e+00
   3.667315e+00 -9.810000e+00]
 [ 1.592400e+00  3.086900e+00 -7.483000e-02 ...  1.000000e+00
   3.667315e+00 -9.810000e+00]
 [ 1.596200e+00  3.051800e+00 -7.307000e-02 ...  0.000000e+00
   3.667315e+00 -9.810000e+00]
 ...
 [-1.140000e-01 -6.000000e-02 -3.560000e-03 ...  1.000000e+00
   6.504008e-01 -9.810000e+00]
 [-1.120000e-01 -5.850000e-02 -3.470000e-03 ...  1.000000e+00
   6.504008e-01 -9.810000e+00]
 [-1.100000e-01 -5.700000e-02 -3.390000e-03 ...  1.000000e+00
   6.504008e-01 -9.810000e+00]]
[[ 7.177828e+02  3.623091e+02  5.149511e+01 ...  1.000000e+00
   3.856973e+00 -9.810000e+00]
 [ 2.099400e+00  3.019900e+00 -1.168000e-02 ...  1.000000e+00
   3.856973e+00 -9.810000e+00]
 [ 2.103500e+00  2.977400e+00 -9.930000e-03 ...  0.000000e+00
   3.856973e+00 -9.810000e+00]
 ...
 [-1.713000e-01 -9.430000e-02 -4.750000e-03 ...  1.000000e+00
   6.904999e-01 -9.810000e+00]
 [-1.670000e-01 -9.210000e-02 -4.630000e-03 ...  1.000000e+00
   6.904999e-01 -9.810000e+00]
 [-1.633000e-01 -8.990000e-02 -4.520000e-03 ...  1.000000e+00
   6.904999e-01 -9.810000e+00]]
[[ 8.961164e+02  5.137438e+02  5.890062e+01 ...  1.000000e+00
   5.539510e+00 -9.810000e+00]
 [-4.287700e+00  2.566100e+00  1.403200e-01 ...  1.000000e+00
   5.539510e+00 -9.810000e+00]
 [-4.235100e+00  2.537100e+00  1.393700e-01 ...  1.000000e+00
   5.539510e+00 -9.810000e+00]
 ...
 [ 8.280000e-02 -4.490000e-02 -2.550000e-03 ...  1.000000e+00
   2.434474e+00 -9.810000e+00]
 [ 8.090000e-02 -4.330000e-02 -2.520000e-03 ...  1.000000e+00
   2.434474e+00 -9.810000e+00]
 [ 7.870000e-02 -4.220000e-02 -2.450000e-03 ...  1.000000e+00
   2.434474e+00 -9.810000e+00]]
[[ 6.693856e+02  4.440005e+02  5.518001e+01 ...  1.000000e+00
   3.864028e+00 -9.810000e+00]
 [ 3.398000e+00  1.837200e+00  9.086000e-02 ...  1.000000e+00
   3.864028e+00 -9.810000e+00]
 [ 3.351000e+00  1.811800e+00  8.991000e-02 ...  1.000000e+00
   3.864028e+00 -9.810000e+00]
 ...
 [ 2.210000e-01 -6.240000e-02 -2.980000e-03 ...  1.000000e+00
   2.689071e+00 -9.810000e+00]
 [ 2.160000e-01 -6.090000e-02 -2.900000e-03 ...  1.000000e+00
   2.689071e+00 -9.810000e+00]
 [ 2.110000e-01 -5.950000e-02 -2.840000e-03 ...  1.000000e+00
   2.689071e+00 -9.810000e+00]][[ 1.083480e+03  5.087874e+02  5.871801e+01 ...  1.000000e+00
   5.551108e+00 -9.810000e+00]
 [-1.400000e+00  4.290400e+00 -6.999000e-02 ...  1.000000e+00
   5.551108e+00 -9.810000e+00]
 [-1.411000e+00  4.257600e+00 -6.824000e-02 ...  0.000000e+00
   5.551108e+00 -9.810000e+00]
 ...
 [ 9.980000e-02 -8.700000e-02 -6.140000e-03 ...  1.000000e+00
   2.187078e+00 -9.810000e+00]
 [ 9.740000e-02 -8.500000e-02 -5.990000e-03 ...  1.000000e+00
   2.187078e+00 -9.810000e+00]
 [ 9.530000e-02 -8.300000e-02 -5.850000e-03 ...  1.000000e+00
   2.187078e+00 -9.810000e+00]]
[[ 8.561895e+02  4.788958e+02  5.701435e+01 ...  1.000000e+00
   5.654167e+00 -9.810000e+00]
 [-3.615000e+00  1.594900e+00  8.119000e-02 ...  1.000000e+00
   5.654167e+00 -9.810000e+00]
 [-3.578500e+00  1.565000e+00  7.989000e-02 ...  1.000000e+00
   5.654167e+00 -9.810000e+00]
 ...
 [ 9.670000e-02 -9.660000e-02 -3.410000e-03 ...  1.000000e+00
   2.238708e+00 -9.810000e+00]
 [ 9.450000e-02 -9.410000e-02 -3.330000e-03 ...  1.000000e+00
   2.238708e+00 -9.810000e+00]
 [ 9.210000e-02 -9.190000e-02 -3.250000e-03 ...  1.000000e+00
   2.238708e+00 -9.810000e+00]]

Input batch [0] : batch=torch.Size([128, 922, 4]), lengths=torch.Size([128]), mask=torch.Size([128, 922, 4]), initial position=torch.Size([128, 1, 4])
Output batch [0] : batch=torch.Size([128, 922, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 923, 4]), initial position=torch.Size([128, 1, 4])
[[ 5.146094e+02  3.939985e+02  5.279234e+01 ...  1.000000e+00
   3.926906e+00 -9.810000e+00]
 [ 1.370000e+00  3.801000e+00 -5.183000e-02 ...  1.000000e+00
   3.926906e+00 -9.810000e+00]
 [ 1.382700e+00  3.764300e+00 -5.010000e-02 ...  0.000000e+00
   3.926906e+00 -9.810000e+00]
 ...
 [-1.610000e-01 -1.051000e-01 -5.460000e-03 ...  1.000000e+00
   8.380181e-01 -9.810000e+00]
 [-1.573000e-01 -1.027000e-01 -5.330000e-03 ...  1.000000e+00
   8.380181e-01 -9.810000e+00]
 [-1.535000e-01 -1.002000e-01 -5.200000e-03 ...  1.000000e+00
   8.380181e-01 -9.810000e+00]]
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [1] : batch=torch.Size([128, 844, 4]), lengths=torch.Size([128]), mask=torch.Size([128, 844, 4]), initial position=torch.Size([128, 1, 4])
Output batch [1] : batch=torch.Size([128, 844, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 845, 4]), initial position=torch.Size([128, 1, 4])
[[ 4.509549e+02  2.709332e+02  4.781279e+01 ...  1.000000e+00
   3.957900e+00 -9.810000e+00]
 [ 4.916800e+00  3.234900e+00  1.198900e-01 ...  1.000000e+00
   3.957900e+00 -9.810000e+00]
 [ 4.849600e+00  3.190200e+00  1.188100e-01 ...  1.000000e+00
   3.957900e+00 -9.810000e+00]
 ...
 [ 9.010000e-02  9.080000e-02  6.320000e-03 ...  1.000000e+00
   4.189555e+00 -9.810000e+00]
 [ 8.780000e-02  8.870000e-02  6.180000e-03 ...  1.000000e+00
   4.189555e+00 -9.810000e+00]
 [ 8.580000e-02  8.640000e-02  6.020000e-03 ...  1.000000e+00
   4.189555e+00 -9.810000e+00]]
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [2] : batch=torch.Size([128, 831, 4]), lengths=torch.Size([128]), mask=torch.Size([128, 831, 4]), initial position=torch.Size([128, 1, 4])
Output batch [2] : batch=torch.Size([128, 831, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 832, 4]), initial position=torch.Size([128, 1, 4])
[[ 8.740107e+02  5.747112e+02  6.246895e+01 ...  1.000000e+00
   7.671965e-01 -9.810000e+00]
 [-2.610100e+00 -1.497800e+00 -9.457000e-02 ...  1.000000e+00
   7.671965e-01 -9.810000e+00]
 [-2.591200e+00 -1.485900e+00 -9.352000e-02 ...  1.000000e+00
   7.671965e-01 -9.810000e+00]
 ...
 [ 9.690000e-02  9.150000e-02  6.290000e-03 ...  1.000000e+00
   4.147537e+00 -9.810000e+00]
 [ 9.460000e-02  8.940000e-02  6.120000e-03 ...  1.000000e+00
   4.147537e+00 -9.810000e+00]
 [ 9.240000e-02  8.710000e-02  5.980000e-03 ...  1.000000e+00
   4.147537e+00 -9.810000e+00]]
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [3] : batch=torch.Size([128, 918, 4]), lengths=torch.Size([128]), mask=torch.Size([128, 918, 4]), initial position=torch.Size([128, 1, 4])
Output batch [3] : batch=torch.Size([128, 918, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 919, 4]), initial position=torch.Size([128, 1, 4])
[[ 1.300877e+03  2.244199e+02  4.642982e+01 ...  1.000000e+00
   5.809267e+00 -9.810000e+00]
 [-4.532000e+00  1.640400e+00  5.513000e-02 ...  1.000000e+00
   5.809267e+00 -9.810000e+00]
 [-4.469000e+00  1.613300e+00  5.433000e-02 ...  1.000000e+00
   5.809267e+00 -9.810000e+00]
 ...
 [-2.007000e-01  9.480000e-02  4.060000e-03 ...  1.000000e+00
   5.693556e+00 -9.810000e+00]
 [-1.961000e-01  9.260000e-02  3.970000e-03 ...  1.000000e+00
   5.693556e+00 -9.810000e+00]
 [-1.913000e-01  9.040000e-02  3.860000e-03 ...  1.000000e+00
   5.693556e+00 -9.810000e+00]]
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [4] : batch=torch.Size([128, 862, 4]), lengths=torch.Size([128]), mask=torch.Size([128, 862, 4]), initial position=torch.Size([128, 1, 4])
Output batch [4] : batch=torch.Size([128, 862, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 863, 4]), initial position=torch.Size([128, 1, 4])
[[ 1.039021e+03  4.839512e+02  5.736209e+01 ...  1.000000e+00
   5.184322e+00 -9.810000e+00]
 [-9.190000e-01  2.388000e+00  1.336000e-02 ...  1.000000e+00
   5.184322e+00 -9.810000e+00]
 [-9.250000e-01  2.343800e+00  1.510000e-02 ...  0.000000e+00
   5.184322e+00 -9.810000e+00]
 ...
 [-1.010000e-01 -3.380000e-02 -1.950000e-03 ...  1.000000e+00
   6.426698e-01 -9.810000e+00]
 [-9.860000e-02 -3.290000e-02 -1.900000e-03 ...  1.000000e+00
   6.426698e-01 -9.810000e+00]
 [-9.620000e-02 -3.200000e-02 -1.870000e-03 ...  1.000000e+00
   6.426698e-01 -9.810000e+00]]
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [5] : batch=torch.Size([128, 966, 4]), lengths=torch.Size([128]), mask=torch.Size([128, 966, 4]), initial position=torch.Size([128, 1, 4])
Output batch [5] : batch=torch.Size([128, 966, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 967, 4]), initial position=torch.Size([128, 1, 4])
[[ 8.431072e+02  7.284147e+02  7.374879e+01 ...  1.000000e+00
   2.406452e+00 -9.810000e+00]
 [ 9.657000e-01  2.460300e+00 -1.653200e-01 ...  1.000000e+00
   2.406452e+00 -9.810000e+00]
 [ 9.695000e-01  2.431700e+00 -1.635700e-01 ...  0.000000e+00
   2.406452e+00 -9.810000e+00]
 ...
 [-1.358000e-01 -1.079000e-01 -5.430000e-03 ...  1.000000e+00
   8.084603e-01 -9.810000e+00]
 [-1.325000e-01 -1.054000e-01 -5.300000e-03 ...  1.000000e+00
   8.084603e-01 -9.810000e+00]
 [-1.294000e-01 -1.028000e-01 -5.170000e-03 ...  1.000000e+00
   8.084603e-01 -9.810000e+00]]
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [6] : batch=torch.Size([128, 959, 4]), lengths=torch.Size([128]), mask=torch.Size([128, 959, 4]), initial position=torch.Size([128, 1, 4])
Output batch [6] : batch=torch.Size([128, 959, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 960, 4]), initial position=torch.Size([128, 1, 4])
[[ 7.719918e+02  6.425391e+02  6.693487e+01 ...  1.000000e+00
   2.276878e+00 -9.810000e+00]
 [ 1.948900e+00 -1.395200e+00 -9.838000e-02 ...  1.000000e+00
   2.276878e+00 -9.810000e+00]
 [ 1.932300e+00 -1.383500e+00 -9.727000e-02 ...  1.000000e+00
   2.276878e+00 -9.810000e+00]
 ...
 [-1.406000e-01 -1.157000e-01 -5.910000e-03 ...  1.000000e+00
   8.584265e-01 -9.810000e+00]
 [-1.373000e-01 -1.129000e-01 -5.770000e-03 ...  1.000000e+00
   8.584265e-01 -9.810000e+00]
 [-1.339000e-01 -1.102000e-01 -5.630000e-03 ...  1.000000e+00
   8.584265e-01 -9.810000e+00]]
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [7] : batch=torch.Size([128, 1002, 4]), lengths=torch.Size([128]), mask=torch.Size([128, 1002, 4]), initial position=torch.Size([128, 1, 4])
Output batch [7] : batch=torch.Size([128, 1002, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 1003, 4]), initial position=torch.Size([128, 1, 4])
[[ 9.009611e+02  5.292561e+02  5.977454e+01 ...  1.000000e+00
   6.807740e-01 -9.810000e+00]
 [-2.632700e+00 -1.543800e+00 -8.920000e-02 ...  1.000000e+00
   6.807740e-01 -9.810000e+00]
 [-2.598800e+00 -1.540100e+00 -8.872000e-02 ...  1.000000e+00
   6.807740e-01 -9.810000e+00]
 ...
 [ 1.803000e-01  5.620000e-02  3.190000e-03 ...  1.000000e+00
   3.609905e+00 -9.810000e+00]
 [ 1.759000e-01  5.490000e-02  3.100000e-03 ...  1.000000e+00
   3.609905e+00 -9.810000e+00]
 [ 1.717000e-01  5.350000e-02  3.030000e-03 ...  1.000000e+00
   3.609905e+00 -9.810000e+00]]
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [8] : batch=torch.Size([128, 900, 4]), lengths=torch.Size([128]), mask=torch.Size([128, 900, 4]), initial position=torch.Size([128, 1, 4])
Output batch [8] : batch=torch.Size([128, 900, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 901, 4]), initial position=torch.Size([128, 1, 4])
[[ 8.356531e+02  3.750189e+02  5.208345e+01 ...  1.000000e+00
   3.846007e+00 -9.810000e+00]
 [ 1.828700e+00  3.624800e+00 -5.674000e-02 ...  1.000000e+00
   3.846007e+00 -9.810000e+00]
 [ 1.832000e+00  3.588700e+00 -5.498000e-02 ...  0.000000e+00
   3.846007e+00 -9.810000e+00]
 ...
 [-1.498000e-01 -9.490000e-02 -4.720000e-03 ...  1.000000e+00
   7.224180e-01 -9.810000e+00]
 [-1.462000e-01 -9.250000e-02 -4.610000e-03 ...  1.000000e+00
   7.224180e-01 -9.810000e+00]
 [-1.428000e-01 -9.040000e-02 -4.500000e-03 ...  1.000000e+00
   7.224180e-01 -9.810000e+00]]
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [9] : batch=torch.Size([128, 842, 4]), lengths=torch.Size([128]), mask=torch.Size([128, 842, 4]), initial position=torch.Size([128, 1, 4])
Output batch [9] : batch=torch.Size([128, 842, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 843, 4]), initial position=torch.Size([128, 1, 4])
[[ 8.001484e+02  5.936560e+02  6.362940e+01 ...  1.000000e+00
   2.624799e+00 -9.810000e+00]
 [ 1.466600e+00  1.422100e+00 -1.180400e-01 ...  1.000000e+00
   2.624799e+00 -9.810000e+00]
 [ 1.472600e+00  1.385400e+00 -1.162900e-01 ...  0.000000e+00
   2.624799e+00 -9.810000e+00]
 ...
 [-1.417000e-01  7.000000e-02  4.710000e-03 ...  1.000000e+00
   5.600559e+00 -9.810000e+00]
 [-1.382000e-01  6.840000e-02  4.600000e-03 ...  1.000000e+00
   5.600559e+00 -9.810000e+00]
 [-1.349000e-01  6.670000e-02  4.490000e-03 ...  1.000000e+00
   5.600559e+00 -9.810000e+00]]
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [10] : batch=torch.Size([128, 925, 4]), lengths=torch.Size([128]), mask=torch.Size([128, 925, 4]), initial position=torch.Size([128, 1, 4])
Output batch [10] : batch=torch.Size([128, 925, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 926, 4]), initial position=torch.Size([128, 1, 4])
[[ 5.116262e+02  2.873304e+02  4.843851e+01 ...  1.000000e+00
   3.946996e+00 -9.810000e+00]
 [ 4.518500e+00  2.981500e+00  1.133800e-01 ...  1.000000e+00
   3.946996e+00 -9.810000e+00]
 [ 4.456100e+00  2.940200e+00  1.123300e-01 ...  1.000000e+00
   3.946996e+00 -9.810000e+00]
 ...
 [ 9.500000e-02  6.400000e-02  4.580000e-03 ...  1.000000e+00
   3.961543e+00 -9.810000e+00]
 [ 9.300000e-02  6.270000e-02  4.450000e-03 ...  1.000000e+00
   3.961543e+00 -9.810000e+00]
 [ 9.100000e-02  6.130000e-02  4.330000e-03 ...  1.000000e+00
   3.961543e+00 -9.810000e+00]]
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [11] : batch=torch.Size([128, 960, 4]), lengths=torch.Size([128]), mask=torch.Size([128, 960, 4]), initial position=torch.Size([128, 1, 4])
Output batch [11] : batch=torch.Size([128, 960, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 961, 4]), initial position=torch.Size([128, 1, 4])
[[ 8.848195e+02  5.105357e+02  5.871809e+01 ...  1.000000e+00
   5.813440e+00 -9.810000e+00]
 [-4.602000e+00  1.401000e+00  7.494000e-02 ...  1.000000e+00
   5.813440e+00 -9.810000e+00]
 [-4.557100e+00  1.379700e+00  7.399000e-02 ...  1.000000e+00
   5.813440e+00 -9.810000e+00]
 ...
 [ 8.430000e-02 -1.338000e-01 -6.580000e-03 ...  1.000000e+00
   2.091934e+00 -9.810000e+00]
 [ 8.230000e-02 -1.306000e-01 -6.420000e-03 ...  1.000000e+00
   2.091934e+00 -9.810000e+00]
 [ 8.040000e-02 -1.275000e-01 -6.260000e-03 ...  1.000000e+00
   2.091934e+00 -9.810000e+00]]
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [12] : batch=torch.Size([128, 875, 4]), lengths=torch.Size([128]), mask=torch.Size([128, 875, 4]), initial position=torch.Size([128, 1, 4])
Output batch [12] : batch=torch.Size([128, 875, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 876, 4]), initial position=torch.Size([128, 1, 4])
[[ 4.950711e+02  2.497133e+02  4.706472e+01 ...  1.000000e+00
   3.984944e+00 -9.810000e+00]
 [ 1.192800e+00  3.426800e+00 -3.996000e-02 ...  1.000000e+00
   3.984944e+00 -9.810000e+00]
 [ 1.206800e+00  3.388700e+00 -3.821000e-02 ...  0.000000e+00
   3.984944e+00 -9.810000e+00]
 ...
 [ 1.342000e-01  8.100000e-02  4.840000e-03 ...  1.000000e+00
   3.889010e+00 -9.810000e+00]
 [ 1.311000e-01  7.910000e-02  4.710000e-03 ...  1.000000e+00
   3.889010e+00 -9.810000e+00]
 [ 1.279000e-01  7.730000e-02  4.600000e-03 ...  1.000000e+00
   3.889010e+00 -9.810000e+00]]
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [13] : batch=torch.Size([128, 894, 4]), lengths=torch.Size([128]), mask=torch.Size([128, 894, 4]), initial position=torch.Size([128, 1, 4])
Output batch [13] : batch=torch.Size([128, 894, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 895, 4]), initial position=torch.Size([128, 1, 4])
[[ 8.504098e+02  4.252905e+02  5.436062e+01 ...  1.000000e+00
   5.476847e+00 -9.810000e+00]
 [-1.824500e+00  4.927800e+00 -7.237000e-02 ...  1.000000e+00
   5.476847e+00 -9.810000e+00]
 [-1.830200e+00  4.897100e+00 -7.061000e-02 ...  0.000000e+00
   5.476847e+00 -9.810000e+00]
 ...
 [ 8.970000e-02 -5.710000e-02 -3.630000e-03 ...  1.000000e+00
   2.389245e+00 -9.810000e+00]
 [ 8.770000e-02 -5.510000e-02 -3.560000e-03 ...  1.000000e+00
   2.389245e+00 -9.810000e+00]
 [ 8.560000e-02 -5.380000e-02 -3.480000e-03 ...  1.000000e+00
   2.389245e+00 -9.810000e+00]]
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [14] : batch=torch.Size([128, 838, 4]), lengths=torch.Size([128]), mask=torch.Size([128, 838, 4]), initial position=torch.Size([128, 1, 4])
Output batch [14] : batch=torch.Size([128, 838, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 839, 4]), initial position=torch.Size([128, 1, 4])
[[ 1.243514e+03  3.978822e+02  5.325415e+01 ...  1.000000e+00
   5.420286e+00 -9.810000e+00]
 [-4.317000e+00  2.906600e+00  1.301400e-01 ...  1.000000e+00
   5.420286e+00 -9.810000e+00]
 [-4.256000e+00  2.869100e+00  1.290900e-01 ...  1.000000e+00
   5.420286e+00 -9.810000e+00]
 ...
 [-1.904000e-01 -7.480000e-02 -3.920000e-03 ...  1.000000e+00
   6.131427e-01 -9.810000e+00]
 [-1.860000e-01 -7.290000e-02 -3.820000e-03 ...  1.000000e+00
   6.131427e-01 -9.810000e+00]
 [-1.817000e-01 -7.120000e-02 -3.740000e-03 ...  1.000000e+00
   6.131427e-01 -9.810000e+00]]
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [15] : batch=torch.Size([128, 860, 4]), lengths=torch.Size([128]), mask=torch.Size([128, 860, 4]), initial position=torch.Size([128, 1, 4])
Output batch [15] : batch=torch.Size([128, 860, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 861, 4]), initial position=torch.Size([128, 1, 4])
[[ 6.093780e+02  4.604663e+02  5.596544e+01 ...  1.000000e+00
   4.024495e+00 -9.810000e+00]
 [ 7.724000e-01  3.458600e+00 -5.960000e-02 ...  1.000000e+00
   4.024495e+00 -9.810000e+00]
 [ 7.806000e-01  3.422400e+00 -5.783000e-02 ...  0.000000e+00
   4.024495e+00 -9.810000e+00]
 ...
 [ 1.770000e-01 -7.900000e-02 -4.520000e-03 ...  1.000000e+00
   2.438680e+00 -9.810000e+00]
 [ 1.720000e-01 -7.710000e-02 -4.410000e-03 ...  1.000000e+00
   2.438680e+00 -9.810000e+00]
 [ 1.680000e-01 -7.530000e-02 -4.310000e-03 ...  1.000000e+00
   2.438680e+00 -9.810000e+00]]
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [16] : batch=torch.Size([128, 876, 4]), lengths=torch.Size([128]), mask=torch.Size([128, 876, 4]), initial position=torch.Size([128, 1, 4])
Output batch [16] : batch=torch.Size([128, 876, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 877, 4]), initial position=torch.Size([128, 1, 4])
[[ 8.275097e+02  6.190525e+02  6.533003e+01 ...  1.000000e+00
   2.645650e+00 -9.810000e+00]
 [ 3.612600e+00 -1.044100e+00 -6.888000e-02 ...  1.000000e+00
   2.645650e+00 -9.810000e+00]
 [ 3.594400e+00 -1.027700e+00 -6.763000e-02 ...  1.000000e+00
   2.645650e+00 -9.810000e+00]
 ...
 [-9.560000e-02 -1.302000e-01 -6.470000e-03 ...  1.000000e+00
   9.752076e-01 -9.810000e+00]
 [-9.330000e-02 -1.270000e-01 -6.300000e-03 ...  1.000000e+00
   9.752076e-01 -9.810000e+00]
 [-9.120000e-02 -1.242000e-01 -6.150000e-03 ...  1.000000e+00
   9.752076e-01 -9.810000e+00]]
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [17] : batch=torch.Size([128, 928, 4]), lengths=torch.Size([128]), mask=torch.Size([128, 928, 4]), initial position=torch.Size([128, 1, 4])
Output batch [17] : batch=torch.Size([128, 928, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 929, 4]), initial position=torch.Size([128, 1, 4])
[[ 9.696617e+02  3.467570e+02  5.093687e+01 ...  1.000000e+00
   5.530861e+00 -9.810000e+00]
 [-3.628700e+00  2.370900e+00  9.702000e-02 ...  1.000000e+00
   5.530861e+00 -9.810000e+00]
 [-3.579300e+00  2.336400e+00  9.598000e-02 ...  1.000000e+00
   5.530861e+00 -9.810000e+00]
 ...
 [ 1.076000e-01  8.720000e-02  5.800000e-03 ...  1.000000e+00
   3.992303e+00 -9.810000e+00]
 [ 1.052000e-01  8.500000e-02  5.670000e-03 ...  1.000000e+00
   3.992303e+00 -9.810000e+00]
 [ 1.024000e-01  8.290000e-02  5.520000e-03 ...  1.000000e+00
   3.992303e+00 -9.810000e+00]]
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [18] : batch=torch.Size([128, 832, 4]), lengths=torch.Size([128]), mask=torch.Size([128, 832, 4]), initial position=torch.Size([128, 1, 4])
Output batch [18] : batch=torch.Size([128, 832, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 833, 4]), initial position=torch.Size([128, 1, 4])
[[ 6.331968e+02  6.142931e+02  6.489245e+01 ...  1.000000e+00
   2.680103e+00 -9.810000e+00]
 [ 9.477000e-01  1.495200e+00 -1.022200e-01 ...  1.000000e+00
   2.680103e+00 -9.810000e+00]
 [ 9.557000e-01  1.458300e+00 -1.004800e-01 ...  0.000000e+00
   2.680103e+00 -9.810000e+00]
 ...
 [-1.775000e-01 -8.360000e-02 -4.450000e-03 ...  1.000000e+00
   6.266264e-01 -9.810000e+00]
 [-1.734000e-01 -8.170000e-02 -4.340000e-03 ...  1.000000e+00
   6.266264e-01 -9.810000e+00]
 [-1.692000e-01 -7.980000e-02 -4.240000e-03 ...  1.000000e+00
   6.266264e-01 -9.810000e+00]]
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [19] : batch=torch.Size([128, 953, 4]), lengths=torch.Size([128]), mask=torch.Size([128, 953, 4]), initial position=torch.Size([128, 1, 4])
Output batch [19] : batch=torch.Size([128, 953, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 954, 4]), initial position=torch.Size([128, 1, 4])
[[ 1.078909e+03  6.184217e+02  6.543781e+01 ...  1.000000e+00
   5.448737e-01 -9.810000e+00]
 [-8.680000e-01  1.025400e+00 -8.690000e-02 ...  1.000000e+00
   5.448737e-01 -9.810000e+00]
 [-8.770000e-01  9.868000e-01 -8.516000e-02 ...  0.000000e+00
   5.448737e-01 -9.810000e+00]
 ...
 [-2.136000e-01 -1.113000e-01 -4.790000e-03 ...  1.000000e+00
   7.026787e-01 -9.810000e+00]
 [-2.086000e-01 -1.086000e-01 -4.670000e-03 ...  1.000000e+00
   7.026787e-01 -9.810000e+00]
 [-2.037000e-01 -1.060000e-01 -4.550000e-03 ...  1.000000e+00
   7.026787e-01 -9.810000e+00]]
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [20] : batch=torch.Size([128, 853, 4]), lengths=torch.Size([128]), mask=torch.Size([128, 853, 4]), initial position=torch.Size([128, 1, 4])
Output batch [20] : batch=torch.Size([128, 853, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 854, 4]), initial position=torch.Size([128, 1, 4])
[[ 1.288479e+03  4.372061e+02  5.511449e+01 ...  1.000000e+00
   5.434888e+00 -9.810000e+00]
 [-1.339000e+00  3.657200e+00 -3.169000e-02 ...  1.000000e+00
   5.434888e+00 -9.810000e+00]
 [-1.355000e+00  3.617700e+00 -2.993000e-02 ...  0.000000e+00
   5.434888e+00 -9.810000e+00]
 ...
 [-1.400000e-01 -9.100000e-02 -5.390000e-03 ...  1.000000e+00
   9.247453e-01 -9.810000e+00]
 [-1.368000e-01 -8.890000e-02 -5.270000e-03 ...  1.000000e+00
   9.247453e-01 -9.810000e+00]
 [-1.336000e-01 -8.670000e-02 -5.140000e-03 ...  1.000000e+00
   9.247453e-01 -9.810000e+00]]
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [21] : batch=torch.Size([128, 817, 4]), lengths=torch.Size([128]), mask=torch.Size([128, 817, 4]), initial position=torch.Size([128, 1, 4])
Output batch [21] : batch=torch.Size([128, 817, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 818, 4]), initial position=torch.Size([128, 1, 4])
[[ 7.996554e+02  6.516377e+02  6.760950e+01 ...  1.000000e+00
   2.076944e+00 -9.810000e+00]
 [ 6.374000e-01  7.619000e-01 -1.170100e-01 ...  1.000000e+00
   2.076944e+00 -9.810000e+00]
 [ 6.401000e-01  7.235000e-01 -1.152700e-01 ...  0.000000e+00
   2.076944e+00 -9.810000e+00]
 ...
 [-1.518000e-01 -1.170000e-01 -5.630000e-03 ...  1.000000e+00
   8.120112e-01 -9.810000e+00]
 [-1.482000e-01 -1.143000e-01 -5.500000e-03 ...  1.000000e+00
   8.120112e-01 -9.810000e+00]
 [-1.446000e-01 -1.115000e-01 -5.360000e-03 ...  1.000000e+00
   8.120112e-01 -9.810000e+00]]
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [22] : batch=torch.Size([128, 863, 4]), lengths=torch.Size([128]), mask=torch.Size([128, 863, 4]), initial position=torch.Size([128, 1, 4])
Output batch [22] : batch=torch.Size([128, 863, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 864, 4]), initial position=torch.Size([128, 1, 4])
[[ 7.514263e+02  6.480984e+02  6.732162e+01 ...  1.000000e+00
   2.630808e+00 -9.810000e+00]
 [ 3.585900e+00 -1.189300e+00 -8.363000e-02 ...  1.000000e+00
   2.630808e+00 -9.810000e+00]
 [ 3.565300e+00 -1.181100e+00 -8.284000e-02 ...  1.000000e+00
   2.630808e+00 -9.810000e+00]
 ...
 [-1.087000e-01 -1.039000e-01 -3.550000e-03 ...  1.000000e+00
   8.501242e-01 -9.810000e+00]
 [-1.061000e-01 -1.013000e-01 -3.470000e-03 ...  1.000000e+00
   8.501242e-01 -9.810000e+00]
 [-1.036000e-01 -9.910000e-02 -3.390000e-03 ...  1.000000e+00
   8.501242e-01 -9.810000e+00]]
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [23] : batch=torch.Size([128, 863, 4]), lengths=torch.Size([128]), mask=torch.Size([128, 863, 4]), initial position=torch.Size([128, 1, 4])
Output batch [23] : batch=torch.Size([128, 863, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 864, 4]), initial position=torch.Size([128, 1, 4])
[[ 6.165372e+02  4.683231e+02  5.636410e+01 ...  1.000000e+00
   3.980273e+00 -9.810000e+00]
 [ 2.687500e+00  1.731800e+00  8.913000e-02 ...  1.000000e+00
   3.980273e+00 -9.810000e+00]
 [ 2.645300e+00  1.706000e+00  8.808000e-02 ...  1.000000e+00
   3.980273e+00 -9.810000e+00]
 ...
 [ 1.220000e-01 -3.170000e-02 -1.470000e-03 ...  1.000000e+00
   2.675433e+00 -9.810000e+00]
 [ 1.200000e-01 -3.080000e-02 -1.440000e-03 ...  1.000000e+00
   2.675433e+00 -9.810000e+00]
 [ 1.160000e-01 -3.010000e-02 -1.400000e-03 ...  1.000000e+00
   2.675433e+00 -9.810000e+00]]
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [24] : batch=torch.Size([128, 816, 4]), lengths=torch.Size([128]), mask=torch.Size([128, 816, 4]), initial position=torch.Size([128, 1, 4])
Output batch [24] : batch=torch.Size([128, 816, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 817, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [25] : batch=torch.Size([128, 862, 4]), lengths=torch.Size([128]), mask=torch.Size([128, 862, 4]), initial position=torch.Size([128, 1, 4])
Output batch [25] : batch=torch.Size([128, 862, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 863, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [26] : batch=torch.Size([128, 849, 4]), lengths=torch.Size([128]), mask=torch.Size([128, 849, 4]), initial position=torch.Size([128, 1, 4])
Output batch [26] : batch=torch.Size([128, 849, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 850, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [27] : batch=torch.Size([128, 867, 4]), lengths=torch.Size([128]), mask=torch.Size([128, 867, 4]), initial position=torch.Size([128, 1, 4])
Output batch [27] : batch=torch.Size([128, 867, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 868, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [28] : batch=torch.Size([128, 858, 4]), lengths=torch.Size([128]), mask=torch.Size([128, 858, 4]), initial position=torch.Size([128, 1, 4])
Output batch [28] : batch=torch.Size([128, 858, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 859, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [29] : batch=torch.Size([128, 883, 4]), lengths=torch.Size([128]), mask=torch.Size([128, 883, 4]), initial position=torch.Size([128, 1, 4])
Output batch [29] : batch=torch.Size([128, 883, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 884, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [30] : batch=torch.Size([128, 951, 4]), lengths=torch.Size([128]), mask=torch.Size([128, 951, 4]), initial position=torch.Size([128, 1, 4])
Output batch [30] : batch=torch.Size([128, 951, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 952, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [31] : batch=torch.Size([128, 876, 4]), lengths=torch.Size([128]), mask=torch.Size([128, 876, 4]), initial position=torch.Size([128, 1, 4])
Output batch [31] : batch=torch.Size([128, 876, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 877, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [32] : batch=torch.Size([128, 845, 4]), lengths=torch.Size([128]), mask=torch.Size([128, 845, 4]), initial position=torch.Size([128, 1, 4])
Output batch [32] : batch=torch.Size([128, 845, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 846, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [33] : batch=torch.Size([128, 842, 4]), lengths=torch.Size([128]), mask=torch.Size([128, 842, 4]), initial position=torch.Size([128, 1, 4])
Output batch [33] : batch=torch.Size([128, 842, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 843, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [34] : batch=torch.Size([128, 962, 4]), lengths=torch.Size([128]), mask=torch.Size([128, 962, 4]), initial position=torch.Size([128, 1, 4])
Output batch [34] : batch=torch.Size([128, 962, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 963, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [35] : batch=torch.Size([128, 992, 4]), lengths=torch.Size([128]), mask=torch.Size([128, 992, 4]), initial position=torch.Size([128, 1, 4])
Output batch [35] : batch=torch.Size([128, 992, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 993, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [36] : batch=torch.Size([128, 949, 4]), lengths=torch.Size([128]), mask=torch.Size([128, 949, 4]), initial position=torch.Size([128, 1, 4])
Output batch [36] : batch=torch.Size([128, 949, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 950, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [37] : batch=torch.Size([128, 990, 4]), lengths=torch.Size([128]), mask=torch.Size([128, 990, 4]), initial position=torch.Size([128, 1, 4])
Output batch [37] : batch=torch.Size([128, 990, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 991, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [38] : batch=torch.Size([128, 845, 4]), lengths=torch.Size([128]), mask=torch.Size([128, 845, 4]), initial position=torch.Size([128, 1, 4])
Output batch [38] : batch=torch.Size([128, 845, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 846, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [39] : batch=torch.Size([128, 904, 4]), lengths=torch.Size([128]), mask=torch.Size([128, 904, 4]), initial position=torch.Size([128, 1, 4])
Output batch [39] : batch=torch.Size([128, 904, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 905, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [40] : batch=torch.Size([128, 915, 4]), lengths=torch.Size([128]), mask=torch.Size([128, 915, 4]), initial position=torch.Size([128, 1, 4])
Output batch [40] : batch=torch.Size([128, 915, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 916, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [41] : batch=torch.Size([128, 932, 4]), lengths=torch.Size([128]), mask=torch.Size([128, 932, 4]), initial position=torch.Size([128, 1, 4])
Output batch [41] : batch=torch.Size([128, 932, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 933, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [42] : batch=torch.Size([128, 802, 4]), lengths=torch.Size([128]), mask=torch.Size([128, 802, 4]), initial position=torch.Size([128, 1, 4])
Output batch [42] : batch=torch.Size([128, 802, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 803, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [43] : batch=torch.Size([128, 844, 4]), lengths=torch.Size([128]), mask=torch.Size([128, 844, 4]), initial position=torch.Size([128, 1, 4])
Output batch [43] : batch=torch.Size([128, 844, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 845, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
===>No model checkpoint
[#] Define the Learning rate, Optimizer, Decay rate and Scheduler...
[#]Model Architecture
####### Model - EOT #######
BiGRUResidualAdd(
  (recurrent_blocks): ModuleList(
    (0): GRU(2, 32, batch_first=True, bidirectional=True)
    (1): GRU(64, 32, batch_first=True, bidirectional=True)
    (2): GRU(64, 32, batch_first=True, bidirectional=True)
    (3): GRU(64, 32, batch_first=True, bidirectional=True)
  )
  (fc_blocks): Sequential(
    (0): Sequential(
      (0): Linear(in_features=64, out_features=32, bias=True)
      (1): ReLU()
    )
    (1): Sequential(
      (0): Linear(in_features=32, out_features=16, bias=True)
      (1): ReLU()
    )
    (2): Sequential(
      (0): Linear(in_features=16, out_features=8, bias=True)
      (1): ReLU()
    )
    (3): Sequential(
      (0): Linear(in_features=8, out_features=4, bias=True)
      (1): ReLU()
    )
    (4): Sequential(
      (0): Linear(in_features=4, out_features=1, bias=True)
    )
  )
)
####### Model - Depth #######
BiGRUResidualAdd(
  (recurrent_blocks): ModuleList(
    (0): GRU(4, 32, batch_first=True, bidirectional=True)
    (1): GRU(64, 32, batch_first=True, bidirectional=True)
    (2): GRU(64, 32, batch_first=True, bidirectional=True)
    (3): GRU(64, 32, batch_first=True, bidirectional=True)
  )
  (fc_blocks): Sequential(
    (0): Sequential(
      (0): Linear(in_features=64, out_features=32, bias=True)
      (1): ReLU()
    )
    (1): Sequential(
      (0): Linear(in_features=32, out_features=16, bias=True)
      (1): ReLU()
    )
    (2): Sequential(
      (0): Linear(in_features=16, out_features=8, bias=True)
      (1): ReLU()
    )
    (3): Sequential(
      (0): Linear(in_features=8, out_features=4, bias=True)
      (1): ReLU()
    )
    (4): Sequential(
      (0): Linear(in_features=4, out_features=1, bias=True)
    )
  )
)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[Epoch : 1/100000]<<<<<<<<<<<<<<<<<<<<<<<<<<<<
[#]Learning rate (Depth & EOT) :  0.01
[[ 7.075376e+02  4.219065e+02  5.414267e+01 ...  1.000000e+00
   4.078935e+00 -9.810000e+00]
 [ 3.279400e+00  3.021300e+00  1.430600e-01 ...  1.000000e+00
   4.078935e+00 -9.810000e+00]
 [ 3.219400e+00  2.987600e+00  1.422000e-01 ...  1.000000e+00
   4.078935e+00 -9.810000e+00]
 ...
 [-1.975000e-01 -5.950000e-02 -3.390000e-03 ...  1.000000e+00
   5.042348e-01 -9.810000e+00]
 [-1.927000e-01 -5.810000e-02 -3.320000e-03 ...  1.000000e+00
   5.042348e-01 -9.810000e+00]
 [-1.883000e-01 -5.680000e-02 -3.230000e-03 ...  1.000000e+00
   5.042348e-01 -9.810000e+00]]
[[ 7.960098e+02  5.449223e+02  6.062715e+01 ...  1.000000e+00
   2.202818e+00 -9.810000e+00]
 [ 2.892900e+00 -2.380200e+00 -1.378100e-01 ...  1.000000e+00
   2.202818e+00 -9.810000e+00]
 [ 2.895200e+00 -2.364900e+00 -1.362800e-01 ...  1.000000e+00
   2.202818e+00 -9.810000e+00]
 ...
 [-1.488000e-01  9.400000e-02  4.950000e-03 ...  1.000000e+00
   5.529194e+00 -9.810000e+00]
 [-1.453000e-01  9.180000e-02  4.840000e-03 ...  1.000000e+00
   5.529194e+00 -9.810000e+00]
 [-1.418000e-01  8.950000e-02  4.720000e-03 ...  1.000000e+00
   5.529194e+00 -9.810000e+00]]
[[ 1.061844e+03  7.287171e+02  7.394250e+01 ...  1.000000e+00
   8.439842e-01 -9.810000e+00]
 [-1.621000e+00 -1.067800e+00 -9.429000e-02 ...  1.000000e+00
   8.439842e-01 -9.810000e+00]
 [-1.607000e+00 -1.058100e+00 -9.319000e-02 ...  1.000000e+00
   8.439842e-01 -9.810000e+00]
 ...
 [-1.184000e-01 -8.870000e-02 -5.810000e-03 ...  1.000000e+00
   9.027451e-01 -9.810000e+00]
 [-1.157000e-01 -8.650000e-02 -5.680000e-03 ...  1.000000e+00
   9.027451e-01 -9.810000e+00]
 [-1.129000e-01 -8.440000e-02 -5.540000e-03 ...  1.000000e+00
   9.027451e-01 -9.810000e+00]]
[[ 9.849057e+02  5.022284e+02  5.831227e+01 ...  1.000000e+00
   5.370232e+00 -9.810000e+00]
 [-8.951000e-01  3.139800e+00 -3.844000e-02 ...  1.000000e+00
   5.370232e+00 -9.810000e+00]
 [-9.013000e-01  3.100800e+00 -3.670000e-02 ...  0.000000e+00
   5.370232e+00 -9.810000e+00]
 ...
 [ 1.629000e-01 -5.520000e-02 -3.710000e-03 ...  1.000000e+00
   2.595966e+00 -9.810000e+00]
 [ 1.589000e-01 -5.400000e-02 -3.630000e-03 ...  1.000000e+00
   2.595966e+00 -9.810000e+00]
 [ 1.553000e-01 -5.270000e-02 -3.540000e-03 ...  1.000000e+00
   2.595966e+00 -9.810000e+00]][[ 8.260547e+02  5.074175e+02  5.851877e+01 ...  1.000000e+00
   4.083183e+00 -9.810000e+00]
 [ 9.480000e-01  3.557400e+00 -4.877000e-02 ...  1.000000e+00
   4.083183e+00 -9.810000e+00]
 [ 9.493000e-01  3.520300e+00 -4.702000e-02 ...  0.000000e+00
   4.083183e+00 -9.810000e+00]
 ...
 [-1.411000e-01 -5.810000e-02 -4.380000e-03 ...  1.000000e+00
   6.580108e-01 -9.810000e+00]
 [-1.376000e-01 -5.660000e-02 -4.290000e-03 ...  1.000000e+00
   6.580108e-01 -9.810000e+00]
 [-1.344000e-01 -5.520000e-02 -4.170000e-03 ...  1.000000e+00
   6.580108e-01 -9.810000e+00]]

[[ 9.712391e+02  4.960552e+02  5.797277e+01 ...  1.000000e+00
   5.310854e+00 -9.810000e+00]
 [-2.680900e+00  2.120000e+00  1.126600e-01 ...  1.000000e+00
   5.310854e+00 -9.810000e+00]
 [-2.655200e+00  2.083800e+00  1.111500e-01 ...  1.000000e+00
   5.310854e+00 -9.810000e+00]
 ...
 [ 9.100000e-02 -7.310000e-02 -3.730000e-03 ...  1.000000e+00
   2.218437e+00 -9.810000e+00]
 [ 8.890000e-02 -7.140000e-02 -3.640000e-03 ...  1.000000e+00
   2.218437e+00 -9.810000e+00]
 [ 8.680000e-02 -6.960000e-02 -3.560000e-03 ...  1.000000e+00
   2.218437e+00 -9.810000e+00]]
[[ 7.725242e+02  6.218506e+02  6.548805e+01 ...  1.000000e+00
   2.702133e+00 -9.810000e+00]
 [ 1.631400e+00  1.730500e+00 -1.291600e-01 ...  1.000000e+00
   2.702133e+00 -9.810000e+00]
 [ 1.639000e+00  1.695800e+00 -1.274100e-01 ...  0.000000e+00
   2.702133e+00 -9.810000e+00]
 ...
 [-4.640000e-02  2.440000e-02  1.640000e-03 ...  1.000000e+00
   5.558951e+00 -9.810000e+00]
 [-4.540000e-02  2.390000e-02  1.610000e-03 ...  1.000000e+00
   5.558951e+00 -9.810000e+00]
 [-4.410000e-02  2.320000e-02  1.570000e-03 ...  1.000000e+00
   5.558951e+00 -9.810000e+00]]
[[ 9.010606e+02  4.705757e+02  5.660617e+01 ...  1.000000e+00
   5.682278e+00 -9.810000e+00]
 [-3.381300e+00  1.541800e+00  7.743000e-02 ...  1.000000e+00
   5.682278e+00 -9.810000e+00]
 [-3.336900e+00  1.520600e+00  7.656000e-02 ...  1.000000e+00
   5.682278e+00 -9.810000e+00]
 ...
 [ 9.850000e-02 -1.600000e-01 -6.740000e-03 ...  1.000000e+00
   2.029302e+00 -9.810000e+00]
 [ 9.610000e-02 -1.561000e-01 -6.590000e-03 ...  1.000000e+00
   2.029302e+00 -9.810000e+00]
 [ 9.390000e-02 -1.525000e-01 -6.420000e-03 ...  1.000000e+00
   2.029302e+00 -9.810000e+00]]
[[ 8.373076e+02  4.769434e+02  5.690467e+01 ...  1.000000e+00
   3.663240e+00 -9.810000e+00]
 [ 1.613100e+00  1.797600e+00 -3.162000e-02 ...  1.000000e+00
   3.663240e+00 -9.810000e+00]
 [ 1.614400e+00  1.756300e+00 -2.988000e-02 ...  0.000000e+00
   3.663240e+00 -9.810000e+00]
 ...
 [-2.042000e-01 -1.516000e-01 -5.310000e-03 ...  1.000000e+00
   7.970136e-01 -9.810000e+00]
 [-1.996000e-01 -1.482000e-01 -5.170000e-03 ...  1.000000e+00
   7.970136e-01 -9.810000e+00]
 [-1.947000e-01 -1.446000e-01 -5.060000e-03 ...  1.000000e+00
   7.970136e-01 -9.810000e+00]]
[[ 1.060080e+03  4.616186e+02  5.622230e+01 ...  1.000000e+00
   5.295401e+00 -9.810000e+00]
 [-3.152000e+00  2.778100e+00  1.390800e-01 ...  1.000000e+00
   5.295401e+00 -9.810000e+00]
 [-3.107000e+00  2.741000e+00  1.378900e-01 ...  1.000000e+00
   5.295401e+00 -9.810000e+00]
 ...
 [-1.643000e-01 -7.590000e-02 -4.590000e-03 ...  1.000000e+00
   7.450081e-01 -9.810000e+00]
 [-1.602000e-01 -7.400000e-02 -4.490000e-03 ...  1.000000e+00
   7.450081e-01 -9.810000e+00]
 [-1.564000e-01 -7.240000e-02 -4.380000e-03 ...  1.000000e+00
   7.450081e-01 -9.810000e+00]]
[[ 9.580734e+02  4.729209e+02  5.675210e+01 ...  1.000000e+00
   5.551321e+00 -9.810000e+00]
 [-9.034000e-01  2.460200e+00 -4.422000e-02 ...  1.000000e+00
   5.551321e+00 -9.810000e+00]
 [-9.090000e-01  2.420700e+00 -4.247000e-02 ...  0.000000e+00
   5.551321e+00 -9.810000e+00]
 ...
 [ 1.620000e-01 -1.109000e-01 -4.240000e-03 ...  1.000000e+00
   2.332344e+00 -9.810000e+00]
 [ 1.580000e-01 -1.082000e-01 -4.150000e-03 ...  1.000000e+00
   2.332344e+00 -9.810000e+00]
 [ 1.540000e-01 -1.057000e-01 -4.050000e-03 ...  1.000000e+00
   2.332344e+00 -9.810000e+00]]
[[ 7.865186e+02  5.748177e+02  6.242769e+01 ...  1.000000e+00
   2.455476e+00 -9.810000e+00]
 [ 4.324200e+00 -2.095300e+00 -1.276800e-01 ...  1.000000e+00
   2.455476e+00 -9.810000e+00]
 [ 4.322200e+00 -2.081400e+00 -1.263000e-01 ...  1.000000e+00
   2.455476e+00 -9.810000e+00]
 ...
 [-8.830000e-02  5.340000e-02  3.680000e-03 ...  1.000000e+00
   5.515093e+00 -9.810000e+00]
 [-8.620000e-02  5.200000e-02  3.600000e-03 ...  1.000000e+00
   5.515093e+00 -9.810000e+00]
 [-8.410000e-02  5.080000e-02  3.520000e-03 ...  1.000000e+00
   5.515093e+00 -9.810000e+00]]
[[ 7.304369e+02  4.243047e+02  5.426455e+01 ...  1.000000e+00
   4.027702e+00 -9.810000e+00]
 [ 8.524000e-01  2.780200e+00 -3.251000e-02 ...  1.000000e+00
   4.027702e+00 -9.810000e+00]
 [ 8.563000e-01  2.739800e+00 -3.077000e-02 ...  0.000000e+00
   4.027702e+00 -9.810000e+00]
 ...
 [-1.996000e-01 -1.210000e-01 -5.200000e-03 ...  1.000000e+00
   7.854418e-01 -9.810000e+00]
 [-1.949000e-01 -1.182000e-01 -5.070000e-03 ...  1.000000e+00
   7.854418e-01 -9.810000e+00]
 [-1.904000e-01 -1.155000e-01 -4.960000e-03 ...  1.000000e+00
   7.854418e-01 -9.810000e+00]]
[[ 7.292525e+02  6.543610e+02  6.776334e+01 ...  1.000000e+00
   2.143534e+00 -9.810000e+00]
 [ 1.469300e+00 -1.507400e+00 -1.093400e-01 ...  1.000000e+00
   2.143534e+00 -9.810000e+00]
 [ 1.454800e+00 -1.495800e+00 -1.081500e-01 ...  1.000000e+00
   2.143534e+00 -9.810000e+00]
 ...
 [ 1.780000e-01 -1.318000e-01 -5.680000e-03 ...  1.000000e+00
   2.288741e+00 -9.810000e+00]
 [ 1.740000e-01 -1.286000e-01 -5.530000e-03 ...  1.000000e+00
   2.288741e+00 -9.810000e+00]
 [ 1.700000e-01 -1.257000e-01 -5.410000e-03 ...  1.000000e+00
   2.288741e+00 -9.810000e+00]][[ 7.593259e+02  3.772657e+02  5.215174e+01 ...  1.000000e+00
   3.983248e+00 -9.810000e+00]
 [ 4.335900e+00  3.540500e+00  1.557800e-01 ...  1.000000e+00
   3.983248e+00 -9.810000e+00]
 [ 4.262900e+00  3.504400e+00  1.551000e-01 ...  1.000000e+00
   3.983248e+00 -9.810000e+00]
 ...
 [-1.478000e-01 -8.880000e-02 -4.120000e-03 ...  1.000000e+00
   7.620165e-01 -9.810000e+00]
 [-1.443000e-01 -8.670000e-02 -4.030000e-03 ...  1.000000e+00
   7.620165e-01 -9.810000e+00]
 [-1.409000e-01 -8.460000e-02 -3.940000e-03 ...  1.000000e+00
   7.620165e-01 -9.810000e+00]]

[[ 6.235237e+02  3.950034e+02  5.287978e+01 ...  1.000000e+00
   3.828636e+00 -9.810000e+00]
 [ 1.434700e+00  3.204600e+00 -5.370000e-02 ...  1.000000e+00
   3.828636e+00 -9.810000e+00]
 [ 1.444100e+00  3.167100e+00 -5.196000e-02 ...  0.000000e+00
   3.828636e+00 -9.810000e+00]
 ...
 [-1.415000e-01 -1.014000e-01 -3.110000e-03 ...  1.000000e+00
   8.270366e-01 -9.810000e+00]
 [-1.381000e-01 -9.890000e-02 -3.050000e-03 ...  1.000000e+00
   8.270366e-01 -9.810000e+00]
 [-1.350000e-01 -9.660000e-02 -2.970000e-03 ...  1.000000e+00
   8.270366e-01 -9.810000e+00]][[ 1.001106e+03  6.643334e+02  6.868151e+01 ...  1.000000e+00
   7.554979e-01 -9.810000e+00]
 [-2.121200e+00 -1.167400e+00 -8.916000e-02 ...  1.000000e+00
   7.554979e-01 -9.810000e+00]
 [-2.103900e+00 -1.157000e+00 -8.814000e-02 ...  1.000000e+00
   7.554979e-01 -9.810000e+00]
 ...
 [-1.642000e-01 -9.520000e-02 -5.180000e-03 ...  1.000000e+00
   7.772684e-01 -9.810000e+00]
 [-1.603000e-01 -9.290000e-02 -5.060000e-03 ...  1.000000e+00
   7.772684e-01 -9.810000e+00]
 [-1.566000e-01 -9.090000e-02 -4.940000e-03 ...  1.000000e+00
   7.772684e-01 -9.810000e+00]]

[[ 5.188726e+02  6.797042e+02  6.952967e+01 ...  1.000000e+00
   2.021987e+00 -9.810000e+00]
 [ 1.283000e-01  6.529000e-01 -1.284600e-01 ...  1.000000e+00
   2.021987e+00 -9.810000e+00]
 [ 1.362000e-01  6.148000e-01 -1.266900e-01 ...  0.000000e+00
   2.021987e+00 -9.810000e+00]
 ...
 [ 2.010000e-01 -1.584000e-01 -5.290000e-03 ...  1.000000e+00
   2.354936e+00 -9.810000e+00]
 [ 1.970000e-01 -1.547000e-01 -5.150000e-03 ...  1.000000e+00
   2.354936e+00 -9.810000e+00]
 [ 1.930000e-01 -1.510000e-01 -5.040000e-03 ...  1.000000e+00
   2.354936e+00 -9.810000e+00]][[ 9.600348e+02  4.971019e+02  5.802367e+01 ...  1.000000e+00
   5.640059e+00 -9.810000e+00]
 [-1.096900e+00  1.884500e+00 -2.408000e-02 ...  1.000000e+00
   5.640059e+00 -9.810000e+00]
 [-1.102300e+00  1.843100e+00 -2.233000e-02 ...  0.000000e+00
   5.640059e+00 -9.810000e+00]
 ...
 [ 8.500000e-02 -4.410000e-02 -1.960000e-03 ...  1.000000e+00
   2.465510e+00 -9.810000e+00]
 [ 8.300000e-02 -4.310000e-02 -1.920000e-03 ...  1.000000e+00
   2.465510e+00 -9.810000e+00]
 [ 8.100000e-02 -4.200000e-02 -1.870000e-03 ...  1.000000e+00
   2.465510e+00 -9.810000e+00]]

[[ 8.320779e+02  4.938754e+02  5.779082e+01 ...  1.000000e+00
   4.049602e+00 -9.810000e+00]
 [ 1.440900e+00  2.577200e+00  3.800000e-03 ...  1.000000e+00
   4.049602e+00 -9.810000e+00]
 [ 1.440100e+00  2.533700e+00  5.550000e-03 ...  0.000000e+00
   4.049602e+00 -9.810000e+00]
 ...
 [-1.221000e-01 -6.410000e-02 -3.320000e-03 ...  1.000000e+00
   7.259319e-01 -9.810000e+00]
 [-1.193000e-01 -6.250000e-02 -3.240000e-03 ...  1.000000e+00
   7.259319e-01 -9.810000e+00]
 [-1.164000e-01 -6.100000e-02 -3.170000e-03 ...  1.000000e+00
   7.259319e-01 -9.810000e+00]]
[[ 4.968062e+02  2.968878e+02  4.879406e+01 ...  1.000000e+00
   4.249764e+00 -9.810000e+00]
 [ 6.702000e-01  3.667800e+00 -3.590000e-02 ...  1.000000e+00
   4.249764e+00 -9.810000e+00]
 [ 6.827000e-01  3.629100e+00 -3.413000e-02 ...  0.000000e+00
   4.249764e+00 -9.810000e+00]
 ...
 [ 1.280000e-01 -8.590000e-02 -3.080000e-03 ...  1.000000e+00
   2.329135e+00 -9.810000e+00]
 [ 1.260000e-01 -8.380000e-02 -3.000000e-03 ...  1.000000e+00
   2.329135e+00 -9.810000e+00]
 [ 1.220000e-01 -8.170000e-02 -2.930000e-03 ...  1.000000e+00
   2.329135e+00 -9.810000e+00]]
===> [Minibatch 1/44].........tensor([[[  2.8929,  -2.3802,   0.0000,   2.2028],
         [  2.8952,  -2.3649,   0.0000,   2.2028],
         [  2.8875,  -2.3539,   0.0000,   2.2028],
         ...,
         [-10.0000, -10.0000, -10.0000, -10.0000],
         [-10.0000, -10.0000, -10.0000, -10.0000],
         [-10.0000, -10.0000, -10.0000, -10.0000]],

        [[ -1.3840,   4.0219,   0.0000,   5.7209],
         [ -1.3950,   3.9929,   0.0000,   5.7209],
         [ -1.4070,   3.9634,   0.0000,   5.7209],
         ...,
         [  0.1187,  -0.0610,   0.0000,   2.5295],
         [  0.1159,  -0.0595,   0.0000,   2.5295],
         [  0.1131,  -0.0579,   1.0000,   2.5295]],

        [[ -3.5044,  -2.1314,   0.0000,   0.7538],
         [ -3.4927,  -2.1237,   0.0000,   0.7538],
         [ -3.4805,  -2.1162,   0.0000,   0.7538],
         ...,
         [-10.0000, -10.0000, -10.0000, -10.0000],
         [-10.0000, -10.0000, -10.0000, -10.0000],
         [-10.0000, -10.0000, -10.0000, -10.0000]],

        ...,

        [[  1.5453,   3.8523,   0.0000,   4.0670],
         [  1.5500,   3.8153,   0.0000,   4.0670],
         [  1.5549,   3.7779,   0.0000,   4.0670],
         ...,
         [-10.0000, -10.0000, -10.0000, -10.0000],
         [-10.0000, -10.0000, -10.0000, -10.0000],
         [-10.0000, -10.0000, -10.0000, -10.0000]],

        [[ -2.0802,   2.4003,   0.0000,   5.7659],
         [ -2.0835,   2.3591,   0.0000,   5.7659],
         [ -2.0866,   2.3176,   0.0000,   5.7659],
         ...,
         [-10.0000, -10.0000, -10.0000, -10.0000],
         [-10.0000, -10.0000, -10.0000, -10.0000],
         [-10.0000, -10.0000, -10.0000, -10.0000]],

        [[  1.2463,   3.8281,   0.0000,   3.9085],
         [  1.2523,   3.7949,   0.0000,   3.9085],
         [  1.2579,   3.7615,   0.0000,   3.9085],
         ...,
         [-10.0000, -10.0000, -10.0000, -10.0000],
         [-10.0000, -10.0000, -10.0000, -10.0000],
         [-10.0000, -10.0000, -10.0000, -10.0000]]], device='cuda:0')
