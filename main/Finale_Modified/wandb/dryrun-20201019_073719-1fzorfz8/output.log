==============================================Features==============================================
Prediction = depth, Environment = unity
Available features :  ['x-0', 'y-1', 'z-2', 'u-3', 'v-4', 'd-5', 'eot-6', 'og-7', 'rad-8', 'f_sin-9', 'f_cos-10', 'g-11']
Selected features :  [6]
1. input_col =  [3, 4, 6]
2. input_startpos_col =  [3, 4, 5, 6]
3. gt_col =  [5, 6]
4. gt_startpos_col =  [0, 1, 2, 6]
5. gt_xyz_col =  [0, 1, 2, 6]
====================================================================================================
[#]Training : Trajectory Estimation
Mixed:   0%|                                                                   | 0/3 [00:00<?, ?it/s]Mixed:  67%|███████████████████████████████████████▎                   | 2/3 [00:00<00:00, 13.24it/s]Mixed: 100%|███████████████████████████████████████████████████████████| 3/3 [00:00<00:00, 12.52it/s]
===============================Dataset shape===============================
Mixed : (16533,)
===========================================================================
Mixed:   0%|                                                                   | 0/1 [00:00<?, ?it/s]Mixed: 100%|███████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 24.91it/s]
===============================Dataset shape===============================
Mixed : (1841,)
===========================================================================
======================================================Summary Batch (batch_size = 128)=========================================================================
Input batch [0] : batch=torch.Size([128, 844, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 844, 3]), initial position=torch.Size([128, 1, 4])
gt batch [0] : batch=torch.Size([128, 844, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 845, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [1] : batch=torch.Size([128, 862, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 862, 3]), initial position=torch.Size([128, 1, 4])
gt batch [1] : batch=torch.Size([128, 862, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 863, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [2] : batch=torch.Size([128, 758, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 758, 3]), initial position=torch.Size([128, 1, 4])
gt batch [2] : batch=torch.Size([128, 758, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 759, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [3] : batch=torch.Size([128, 1023, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 1023, 3]), initial position=torch.Size([128, 1, 4])
gt batch [3] : batch=torch.Size([128, 1023, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 1024, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [4] : batch=torch.Size([128, 884, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 884, 3]), initial position=torch.Size([128, 1, 4])
gt batch [4] : batch=torch.Size([128, 884, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 885, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [5] : batch=torch.Size([128, 918, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 918, 3]), initial position=torch.Size([128, 1, 4])
gt batch [5] : batch=torch.Size([128, 918, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 919, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [6] : batch=torch.Size([128, 884, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 884, 3]), initial position=torch.Size([128, 1, 4])
gt batch [6] : batch=torch.Size([128, 884, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 885, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [7] : batch=torch.Size([128, 773, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 773, 3]), initial position=torch.Size([128, 1, 4])
gt batch [7] : batch=torch.Size([128, 773, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 774, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [8] : batch=torch.Size([128, 939, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 939, 3]), initial position=torch.Size([128, 1, 4])
gt batch [8] : batch=torch.Size([128, 939, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 940, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [9] : batch=torch.Size([128, 772, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 772, 3]), initial position=torch.Size([128, 1, 4])
gt batch [9] : batch=torch.Size([128, 772, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 773, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [10] : batch=torch.Size([128, 765, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 765, 3]), initial position=torch.Size([128, 1, 4])
gt batch [10] : batch=torch.Size([128, 765, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 766, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [11] : batch=torch.Size([128, 838, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 838, 3]), initial position=torch.Size([128, 1, 4])
gt batch [11] : batch=torch.Size([128, 838, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 839, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [12] : batch=torch.Size([128, 849, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 849, 3]), initial position=torch.Size([128, 1, 4])
gt batch [12] : batch=torch.Size([128, 849, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 850, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [13] : batch=torch.Size([128, 914, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 914, 3]), initial position=torch.Size([128, 1, 4])
gt batch [13] : batch=torch.Size([128, 914, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 915, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [14] : batch=torch.Size([128, 860, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 860, 3]), initial position=torch.Size([128, 1, 4])
gt batch [14] : batch=torch.Size([128, 860, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 861, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [15] : batch=torch.Size([128, 816, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 816, 3]), initial position=torch.Size([128, 1, 4])
gt batch [15] : batch=torch.Size([128, 816, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 817, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [16] : batch=torch.Size([128, 785, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 785, 3]), initial position=torch.Size([128, 1, 4])
gt batch [16] : batch=torch.Size([128, 785, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 786, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [17] : batch=torch.Size([128, 790, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 790, 3]), initial position=torch.Size([128, 1, 4])
gt batch [17] : batch=torch.Size([128, 790, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 791, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [18] : batch=torch.Size([128, 879, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 879, 3]), initial position=torch.Size([128, 1, 4])
gt batch [18] : batch=torch.Size([128, 879, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 880, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [19] : batch=torch.Size([128, 915, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 915, 3]), initial position=torch.Size([128, 1, 4])
gt batch [19] : batch=torch.Size([128, 915, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 916, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [20] : batch=torch.Size([128, 808, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 808, 3]), initial position=torch.Size([128, 1, 4])
gt batch [20] : batch=torch.Size([128, 808, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 809, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [21] : batch=torch.Size([128, 782, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 782, 3]), initial position=torch.Size([128, 1, 4])
gt batch [21] : batch=torch.Size([128, 782, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 783, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [22] : batch=torch.Size([128, 826, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 826, 3]), initial position=torch.Size([128, 1, 4])
gt batch [22] : batch=torch.Size([128, 826, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 827, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [23] : batch=torch.Size([128, 836, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 836, 3]), initial position=torch.Size([128, 1, 4])
gt batch [23] : batch=torch.Size([128, 836, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 837, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [24] : batch=torch.Size([128, 845, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 845, 3]), initial position=torch.Size([128, 1, 4])
gt batch [24] : batch=torch.Size([128, 845, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 846, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [25] : batch=torch.Size([128, 868, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 868, 3]), initial position=torch.Size([128, 1, 4])
gt batch [25] : batch=torch.Size([128, 868, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 869, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [26] : batch=torch.Size([128, 768, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 768, 3]), initial position=torch.Size([128, 1, 4])
gt batch [26] : batch=torch.Size([128, 768, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 769, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [27] : batch=torch.Size([128, 878, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 878, 3]), initial position=torch.Size([128, 1, 4])
gt batch [27] : batch=torch.Size([128, 878, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 879, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [28] : batch=torch.Size([128, 901, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 901, 3]), initial position=torch.Size([128, 1, 4])
gt batch [28] : batch=torch.Size([128, 901, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 902, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [29] : batch=torch.Size([128, 828, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 828, 3]), initial position=torch.Size([128, 1, 4])
gt batch [29] : batch=torch.Size([128, 828, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 829, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [30] : batch=torch.Size([128, 943, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 943, 3]), initial position=torch.Size([128, 1, 4])
gt batch [30] : batch=torch.Size([128, 943, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 944, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [31] : batch=torch.Size([128, 854, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 854, 3]), initial position=torch.Size([128, 1, 4])
gt batch [31] : batch=torch.Size([128, 854, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 855, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [32] : batch=torch.Size([128, 881, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 881, 3]), initial position=torch.Size([128, 1, 4])
gt batch [32] : batch=torch.Size([128, 881, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 882, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [33] : batch=torch.Size([128, 915, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 915, 3]), initial position=torch.Size([128, 1, 4])
gt batch [33] : batch=torch.Size([128, 915, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 916, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [34] : batch=torch.Size([128, 760, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 760, 3]), initial position=torch.Size([128, 1, 4])
gt batch [34] : batch=torch.Size([128, 760, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 761, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [35] : batch=torch.Size([128, 741, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 741, 3]), initial position=torch.Size([128, 1, 4])
gt batch [35] : batch=torch.Size([128, 741, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 742, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [36] : batch=torch.Size([128, 661, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 661, 3]), initial position=torch.Size([128, 1, 4])
gt batch [36] : batch=torch.Size([128, 661, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 662, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [37] : batch=torch.Size([128, 945, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 945, 3]), initial position=torch.Size([128, 1, 4])
gt batch [37] : batch=torch.Size([128, 945, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 946, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [38] : batch=torch.Size([128, 900, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 900, 3]), initial position=torch.Size([128, 1, 4])
gt batch [38] : batch=torch.Size([128, 900, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 901, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [39] : batch=torch.Size([128, 955, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 955, 3]), initial position=torch.Size([128, 1, 4])
gt batch [39] : batch=torch.Size([128, 955, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 956, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [40] : batch=torch.Size([128, 837, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 837, 3]), initial position=torch.Size([128, 1, 4])
gt batch [40] : batch=torch.Size([128, 837, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 838, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [41] : batch=torch.Size([128, 721, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 721, 3]), initial position=torch.Size([128, 1, 4])
gt batch [41] : batch=torch.Size([128, 721, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 722, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [42] : batch=torch.Size([128, 943, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 943, 3]), initial position=torch.Size([128, 1, 4])
gt batch [42] : batch=torch.Size([128, 943, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 944, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [43] : batch=torch.Size([128, 821, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 821, 3]), initial position=torch.Size([128, 1, 4])
gt batch [43] : batch=torch.Size([128, 821, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 822, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [44] : batch=torch.Size([128, 868, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 868, 3]), initial position=torch.Size([128, 1, 4])
gt batch [44] : batch=torch.Size([128, 868, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 869, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [45] : batch=torch.Size([128, 966, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 966, 3]), initial position=torch.Size([128, 1, 4])
gt batch [45] : batch=torch.Size([128, 966, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 967, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [46] : batch=torch.Size([128, 854, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 854, 3]), initial position=torch.Size([128, 1, 4])
gt batch [46] : batch=torch.Size([128, 854, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 855, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [47] : batch=torch.Size([128, 823, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 823, 3]), initial position=torch.Size([128, 1, 4])
gt batch [47] : batch=torch.Size([128, 823, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 824, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [48] : batch=torch.Size([128, 782, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 782, 3]), initial position=torch.Size([128, 1, 4])
gt batch [48] : batch=torch.Size([128, 782, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 783, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [49] : batch=torch.Size([128, 875, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 875, 3]), initial position=torch.Size([128, 1, 4])
gt batch [49] : batch=torch.Size([128, 875, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 876, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [50] : batch=torch.Size([128, 809, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 809, 3]), initial position=torch.Size([128, 1, 4])
gt batch [50] : batch=torch.Size([128, 809, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 810, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [51] : batch=torch.Size([128, 825, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 825, 3]), initial position=torch.Size([128, 1, 4])
gt batch [51] : batch=torch.Size([128, 825, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 826, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [52] : batch=torch.Size([128, 856, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 856, 3]), initial position=torch.Size([128, 1, 4])
gt batch [52] : batch=torch.Size([128, 856, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 857, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [53] : batch=torch.Size([128, 868, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 868, 3]), initial position=torch.Size([128, 1, 4])
gt batch [53] : batch=torch.Size([128, 868, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 869, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [54] : batch=torch.Size([128, 789, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 789, 3]), initial position=torch.Size([128, 1, 4])
gt batch [54] : batch=torch.Size([128, 789, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 790, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [55] : batch=torch.Size([128, 970, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 970, 3]), initial position=torch.Size([128, 1, 4])
gt batch [55] : batch=torch.Size([128, 970, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 971, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [56] : batch=torch.Size([128, 922, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 922, 3]), initial position=torch.Size([128, 1, 4])
gt batch [56] : batch=torch.Size([128, 922, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 923, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [57] : batch=torch.Size([128, 837, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 837, 3]), initial position=torch.Size([128, 1, 4])
gt batch [57] : batch=torch.Size([128, 837, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 838, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [58] : batch=torch.Size([128, 842, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 842, 3]), initial position=torch.Size([128, 1, 4])
gt batch [58] : batch=torch.Size([128, 842, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 843, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [59] : batch=torch.Size([128, 789, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 789, 3]), initial position=torch.Size([128, 1, 4])
gt batch [59] : batch=torch.Size([128, 789, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 790, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [60] : batch=torch.Size([128, 762, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 762, 3]), initial position=torch.Size([128, 1, 4])
gt batch [60] : batch=torch.Size([128, 762, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 763, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [61] : batch=torch.Size([128, 1000, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 1000, 3]), initial position=torch.Size([128, 1, 4])
gt batch [61] : batch=torch.Size([128, 1000, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 1001, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [62] : batch=torch.Size([128, 782, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 782, 3]), initial position=torch.Size([128, 1, 4])
gt batch [62] : batch=torch.Size([128, 782, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 783, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [63] : batch=torch.Size([128, 914, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 914, 3]), initial position=torch.Size([128, 1, 4])
gt batch [63] : batch=torch.Size([128, 914, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 915, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [64] : batch=torch.Size([128, 858, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 858, 3]), initial position=torch.Size([128, 1, 4])
gt batch [64] : batch=torch.Size([128, 858, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 859, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [65] : batch=torch.Size([128, 914, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 914, 3]), initial position=torch.Size([128, 1, 4])
gt batch [65] : batch=torch.Size([128, 914, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 915, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [66] : batch=torch.Size([128, 883, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 883, 3]), initial position=torch.Size([128, 1, 4])
gt batch [66] : batch=torch.Size([128, 883, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 884, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [67] : batch=torch.Size([128, 704, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 704, 3]), initial position=torch.Size([128, 1, 4])
gt batch [67] : batch=torch.Size([128, 704, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 705, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [68] : batch=torch.Size([128, 892, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 892, 3]), initial position=torch.Size([128, 1, 4])
gt batch [68] : batch=torch.Size([128, 892, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 893, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [69] : batch=torch.Size([128, 822, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 822, 3]), initial position=torch.Size([128, 1, 4])
gt batch [69] : batch=torch.Size([128, 822, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 823, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [70] : batch=torch.Size([128, 780, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 780, 3]), initial position=torch.Size([128, 1, 4])
gt batch [70] : batch=torch.Size([128, 780, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 781, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [71] : batch=torch.Size([128, 861, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 861, 3]), initial position=torch.Size([128, 1, 4])
gt batch [71] : batch=torch.Size([128, 861, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 862, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [72] : batch=torch.Size([128, 976, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 976, 3]), initial position=torch.Size([128, 1, 4])
gt batch [72] : batch=torch.Size([128, 976, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 977, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [73] : batch=torch.Size([128, 735, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 735, 3]), initial position=torch.Size([128, 1, 4])
gt batch [73] : batch=torch.Size([128, 735, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 736, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [74] : batch=torch.Size([128, 832, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 832, 3]), initial position=torch.Size([128, 1, 4])
gt batch [74] : batch=torch.Size([128, 832, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 833, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [75] : batch=torch.Size([128, 891, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 891, 3]), initial position=torch.Size([128, 1, 4])
gt batch [75] : batch=torch.Size([128, 891, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 892, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [76] : batch=torch.Size([128, 969, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 969, 3]), initial position=torch.Size([128, 1, 4])
gt batch [76] : batch=torch.Size([128, 969, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 970, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [77] : batch=torch.Size([128, 724, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 724, 3]), initial position=torch.Size([128, 1, 4])
gt batch [77] : batch=torch.Size([128, 724, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 725, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [78] : batch=torch.Size([128, 948, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 948, 3]), initial position=torch.Size([128, 1, 4])
gt batch [78] : batch=torch.Size([128, 948, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 949, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [79] : batch=torch.Size([128, 886, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 886, 3]), initial position=torch.Size([128, 1, 4])
gt batch [79] : batch=torch.Size([128, 886, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 887, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [80] : batch=torch.Size([128, 956, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 956, 3]), initial position=torch.Size([128, 1, 4])
gt batch [80] : batch=torch.Size([128, 956, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 957, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [81] : batch=torch.Size([128, 841, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 841, 3]), initial position=torch.Size([128, 1, 4])
gt batch [81] : batch=torch.Size([128, 841, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 842, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [82] : batch=torch.Size([128, 1000, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 1000, 3]), initial position=torch.Size([128, 1, 4])
gt batch [82] : batch=torch.Size([128, 1000, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 1001, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [83] : batch=torch.Size([128, 875, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 875, 3]), initial position=torch.Size([128, 1, 4])
gt batch [83] : batch=torch.Size([128, 875, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 876, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [84] : batch=torch.Size([128, 886, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 886, 3]), initial position=torch.Size([128, 1, 4])
gt batch [84] : batch=torch.Size([128, 886, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 887, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [85] : batch=torch.Size([128, 843, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 843, 3]), initial position=torch.Size([128, 1, 4])
gt batch [85] : batch=torch.Size([128, 843, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 844, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [86] : batch=torch.Size([128, 836, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 836, 3]), initial position=torch.Size([128, 1, 4])
gt batch [86] : batch=torch.Size([128, 836, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 837, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [87] : batch=torch.Size([128, 790, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 790, 3]), initial position=torch.Size([128, 1, 4])
gt batch [87] : batch=torch.Size([128, 790, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 791, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [88] : batch=torch.Size([128, 830, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 830, 3]), initial position=torch.Size([128, 1, 4])
gt batch [88] : batch=torch.Size([128, 830, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 831, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [89] : batch=torch.Size([128, 935, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 935, 3]), initial position=torch.Size([128, 1, 4])
gt batch [89] : batch=torch.Size([128, 935, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 936, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [90] : batch=torch.Size([128, 814, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 814, 3]), initial position=torch.Size([128, 1, 4])
gt batch [90] : batch=torch.Size([128, 814, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 815, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [91] : batch=torch.Size([128, 884, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 884, 3]), initial position=torch.Size([128, 1, 4])
gt batch [91] : batch=torch.Size([128, 884, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 885, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [92] : batch=torch.Size([128, 915, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 915, 3]), initial position=torch.Size([128, 1, 4])
gt batch [92] : batch=torch.Size([128, 915, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 916, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [93] : batch=torch.Size([128, 906, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 906, 3]), initial position=torch.Size([128, 1, 4])
gt batch [93] : batch=torch.Size([128, 906, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 907, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [94] : batch=torch.Size([128, 820, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 820, 3]), initial position=torch.Size([128, 1, 4])
gt batch [94] : batch=torch.Size([128, 820, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 821, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [95] : batch=torch.Size([128, 852, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 852, 3]), initial position=torch.Size([128, 1, 4])
gt batch [95] : batch=torch.Size([128, 852, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 853, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [96] : batch=torch.Size([128, 919, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 919, 3]), initial position=torch.Size([128, 1, 4])
gt batch [96] : batch=torch.Size([128, 919, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 920, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [97] : batch=torch.Size([128, 932, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 932, 3]), initial position=torch.Size([128, 1, 4])
gt batch [97] : batch=torch.Size([128, 932, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 933, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [98] : batch=torch.Size([128, 825, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 825, 3]), initial position=torch.Size([128, 1, 4])
gt batch [98] : batch=torch.Size([128, 825, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 826, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [99] : batch=torch.Size([128, 982, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 982, 3]), initial position=torch.Size([128, 1, 4])
gt batch [99] : batch=torch.Size([128, 982, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 983, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [100] : batch=torch.Size([128, 788, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 788, 3]), initial position=torch.Size([128, 1, 4])
gt batch [100] : batch=torch.Size([128, 788, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 789, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [101] : batch=torch.Size([128, 795, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 795, 3]), initial position=torch.Size([128, 1, 4])
gt batch [101] : batch=torch.Size([128, 795, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 796, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [102] : batch=torch.Size([128, 843, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 843, 3]), initial position=torch.Size([128, 1, 4])
gt batch [102] : batch=torch.Size([128, 843, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 844, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [103] : batch=torch.Size([128, 906, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 906, 3]), initial position=torch.Size([128, 1, 4])
gt batch [103] : batch=torch.Size([128, 906, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 907, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [104] : batch=torch.Size([128, 995, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 995, 3]), initial position=torch.Size([128, 1, 4])
gt batch [104] : batch=torch.Size([128, 995, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 996, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [105] : batch=torch.Size([128, 869, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 869, 3]), initial position=torch.Size([128, 1, 4])
gt batch [105] : batch=torch.Size([128, 869, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 870, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [106] : batch=torch.Size([128, 903, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 903, 3]), initial position=torch.Size([128, 1, 4])
gt batch [106] : batch=torch.Size([128, 903, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 904, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [107] : batch=torch.Size([128, 826, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 826, 3]), initial position=torch.Size([128, 1, 4])
gt batch [107] : batch=torch.Size([128, 826, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 827, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [108] : batch=torch.Size([128, 869, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 869, 3]), initial position=torch.Size([128, 1, 4])
gt batch [108] : batch=torch.Size([128, 869, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 870, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [109] : batch=torch.Size([128, 815, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 815, 3]), initial position=torch.Size([128, 1, 4])
gt batch [109] : batch=torch.Size([128, 815, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 816, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [110] : batch=torch.Size([128, 801, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 801, 3]), initial position=torch.Size([128, 1, 4])
gt batch [110] : batch=torch.Size([128, 801, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 802, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [111] : batch=torch.Size([128, 802, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 802, 3]), initial position=torch.Size([128, 1, 4])
gt batch [111] : batch=torch.Size([128, 802, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 803, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [112] : batch=torch.Size([128, 931, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 931, 3]), initial position=torch.Size([128, 1, 4])
gt batch [112] : batch=torch.Size([128, 931, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 932, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [113] : batch=torch.Size([128, 793, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 793, 3]), initial position=torch.Size([128, 1, 4])
gt batch [113] : batch=torch.Size([128, 793, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 794, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [114] : batch=torch.Size([128, 824, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 824, 3]), initial position=torch.Size([128, 1, 4])
gt batch [114] : batch=torch.Size([128, 824, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 825, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [115] : batch=torch.Size([128, 956, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 956, 3]), initial position=torch.Size([128, 1, 4])
gt batch [115] : batch=torch.Size([128, 956, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 957, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [116] : batch=torch.Size([128, 900, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 900, 3]), initial position=torch.Size([128, 1, 4])
gt batch [116] : batch=torch.Size([128, 900, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 901, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [117] : batch=torch.Size([128, 807, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 807, 3]), initial position=torch.Size([128, 1, 4])
gt batch [117] : batch=torch.Size([128, 807, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 808, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [118] : batch=torch.Size([128, 860, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 860, 3]), initial position=torch.Size([128, 1, 4])
gt batch [118] : batch=torch.Size([128, 860, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 861, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [119] : batch=torch.Size([128, 795, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 795, 3]), initial position=torch.Size([128, 1, 4])
gt batch [119] : batch=torch.Size([128, 795, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 796, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [120] : batch=torch.Size([128, 868, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 868, 3]), initial position=torch.Size([128, 1, 4])
gt batch [120] : batch=torch.Size([128, 868, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 869, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [121] : batch=torch.Size([128, 786, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 786, 3]), initial position=torch.Size([128, 1, 4])
gt batch [121] : batch=torch.Size([128, 786, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 787, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [122] : batch=torch.Size([128, 952, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 952, 3]), initial position=torch.Size([128, 1, 4])
gt batch [122] : batch=torch.Size([128, 952, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 953, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [123] : batch=torch.Size([128, 814, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 814, 3]), initial position=torch.Size([128, 1, 4])
gt batch [123] : batch=torch.Size([128, 814, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 815, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [124] : batch=torch.Size([128, 861, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 861, 3]), initial position=torch.Size([128, 1, 4])
gt batch [124] : batch=torch.Size([128, 861, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 862, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [125] : batch=torch.Size([128, 904, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 904, 3]), initial position=torch.Size([128, 1, 4])
gt batch [125] : batch=torch.Size([128, 904, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 905, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [126] : batch=torch.Size([128, 851, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 851, 3]), initial position=torch.Size([128, 1, 4])
gt batch [126] : batch=torch.Size([128, 851, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 852, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [127] : batch=torch.Size([128, 1040, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 1040, 3]), initial position=torch.Size([128, 1, 4])
gt batch [127] : batch=torch.Size([128, 1040, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 1041, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [128] : batch=torch.Size([128, 928, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 928, 3]), initial position=torch.Size([128, 1, 4])
gt batch [128] : batch=torch.Size([128, 928, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 929, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
{'flag': {'input_size': 2, 'output_size': 1, 'hidden_dim': 32, 'n_layers': 1, 'n_stack': 4, 'recurrent_stacked': [2, 32, 32, 32, 32], 'fc_size': [64, 32, 16, 8, 4, 1]}, 'depth': {'input_size': 3, 'output_size': 2, 'hidden_dim': 32, 'n_layers': 1, 'n_stack': 4, 'recurrent_stacked': [3, 32, 32, 32, 32], 'fc_size': [64, 32, 16, 8, 4, 2]}}
===>No model checkpoint
[#] Define the Learning rate, Optimizer, Decay rate and Scheduler...
[#]Model Architecture
####### Model - EOT #######
BiLSTMResidualTrainableInit(
  (recurrent_blocks): ModuleList(
    (0): LSTM(2, 32, batch_first=True, bidirectional=True)
    (1): LSTM(64, 32, batch_first=True, bidirectional=True)
    (2): LSTM(64, 32, batch_first=True, bidirectional=True)
    (3): LSTM(64, 32, batch_first=True, bidirectional=True)
  )
  (fc_blocks): Sequential(
    (0): Sequential(
      (0): Linear(in_features=64, out_features=32, bias=True)
      (1): LeakyReLU(negative_slope=0.01)
    )
    (1): Sequential(
      (0): Linear(in_features=32, out_features=16, bias=True)
      (1): LeakyReLU(negative_slope=0.01)
    )
    (2): Sequential(
      (0): Linear(in_features=16, out_features=8, bias=True)
      (1): LeakyReLU(negative_slope=0.01)
    )
    (3): Sequential(
      (0): Linear(in_features=8, out_features=4, bias=True)
      (1): LeakyReLU(negative_slope=0.01)
    )
    (4): Sequential(
      (0): Linear(in_features=4, out_features=1, bias=True)
      (1): Sigmoid()
    )
  )
)
####### Model - Depth #######
BiLSTMResidualTrainableInit(
  (recurrent_blocks): ModuleList(
    (0): LSTM(3, 32, batch_first=True, bidirectional=True)
    (1): LSTM(64, 32, batch_first=True, bidirectional=True)
    (2): LSTM(64, 32, batch_first=True, bidirectional=True)
    (3): LSTM(64, 32, batch_first=True, bidirectional=True)
  )
  (fc_blocks): Sequential(
    (0): Sequential(
      (0): Linear(in_features=64, out_features=32, bias=True)
      (1): LeakyReLU(negative_slope=0.01)
    )
    (1): Sequential(
      (0): Linear(in_features=32, out_features=16, bias=True)
      (1): LeakyReLU(negative_slope=0.01)
    )
    (2): Sequential(
      (0): Linear(in_features=16, out_features=8, bias=True)
      (1): LeakyReLU(negative_slope=0.01)
    )
    (3): Sequential(
      (0): Linear(in_features=8, out_features=4, bias=True)
      (1): LeakyReLU(negative_slope=0.01)
    )
    (4): Sequential(
      (0): Linear(in_features=4, out_features=2, bias=True)
    )
  )
)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[Epoch : 1/100000]<<<<<<<<<<<<<<<<<<<<<<<<<<<<
[#]Learning rate (Depth & EOT) :  0.01
===> [Minibatch 1/129].........IDX = 0 :  tensor([[[ 0.2428, -0.0510, -0.6722,  ..., -0.7939, -0.7707,  0.3937],
         [-0.3583,  0.8475, -1.5438,  ..., -0.8479, -0.2718, -0.0548],
         [-0.0614, -1.2905, -0.0883,  ...,  0.3568,  0.3889, -0.5495],
         ...,
         [-0.6646, -0.5634, -1.9747,  ...,  0.4470, -0.5356, -1.5583],
         [-0.7763, -1.2880,  0.6941,  ..., -0.3789, -1.8190, -0.1237],
         [-0.6060,  1.1331,  0.8436,  ..., -1.3342, -0.6655,  1.5830]],

        [[-0.4587,  0.6252, -0.1543,  ...,  0.5273, -1.9134, -0.4268],
         [-0.9383,  1.0788, -0.4994,  ..., -0.5502, -1.3095, -0.6235],
         [ 1.0618, -0.3084, -0.0173,  ...,  0.7288, -0.1863, -0.5768],
         ...,
         [-1.5184,  0.7093, -0.3369,  ...,  0.8107, -0.4139,  1.7749],
         [ 2.6326,  0.3525, -0.5683,  ..., -1.8275,  0.7922, -0.1074],
         [ 0.1416,  0.1839, -0.5803,  ...,  0.2500, -0.6743,  0.4498]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[-0.7010,  0.4671,  0.5354,  ..., -0.3263, -0.0273,  0.6220],
         [ 1.5539,  2.0876, -1.3794,  ..., -0.8121,  1.2068, -1.2296],
         [ 0.3241,  1.2405, -0.9241,  ..., -1.0854, -0.5184,  2.3796],
         ...,
         [-2.3690, -0.2524, -0.9314,  ..., -0.7101, -1.0622, -0.1377],
         [ 0.2970,  0.1680, -0.0124,  ...,  0.0952, -0.7636,  0.4815],
         [-0.0589, -0.2317, -0.8848,  ...,  0.6164, -0.0738,  1.2190]],

        [[-0.0527,  1.0178,  0.1093,  ...,  0.5348,  0.9095,  1.0306],
         [-0.9016, -1.2882, -0.9868,  ...,  2.0688, -0.5416,  0.2619],
         [-1.2302, -0.5858,  0.3002,  ...,  0.0612, -0.3788,  0.3214],
         ...,
         [-2.0726, -0.7199, -0.1006,  ..., -1.6499, -1.5307, -1.5095],
         [ 0.2776, -0.3101, -0.3019,  ..., -0.8523,  0.6928,  0.6480],
         [ 1.2479, -0.8342, -1.1580,  ..., -0.0900,  1.0539,  0.4691]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 0.2329, -0.0412, -0.6629,  ..., -0.7870, -0.7608,  0.3857],
         [-0.3671,  0.8379, -1.5530,  ..., -0.8577, -0.2783, -0.0618],
         [-0.0702, -1.2815, -0.0976,  ...,  0.3472,  0.3984, -0.5592],
         ...,
         [-0.6744, -0.5536, -1.9650,  ...,  0.4381, -0.5427, -1.5681],
         [-0.7861, -1.2783,  0.7027,  ..., -0.3887, -1.8093, -0.1141],
         [-0.6154,  1.1429,  0.8518,  ..., -1.3299, -0.6558,  1.5734]],

        [[-0.4487,  0.6152, -0.1643,  ...,  0.5373, -1.9034, -0.4169],
         [-0.9483,  1.0888, -0.4894,  ..., -0.5402, -1.2995, -0.6135],
         [ 1.0518, -0.2984, -0.0073,  ...,  0.7388, -0.1764, -0.5668],
         ...,
         [-1.5284,  0.6993, -0.3269,  ...,  0.8008, -0.4239,  1.7848],
         [ 2.6227,  0.3425, -0.5583,  ..., -1.8375,  0.8022, -0.1174],
         [ 0.1316,  0.1739, -0.5703,  ...,  0.2400, -0.6843,  0.4398]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[-0.7093,  0.4763,  0.5262,  ..., -0.3187, -0.0365,  0.6313],
         [ 1.5616,  2.0950, -1.3750,  ..., -0.8169,  1.1985, -1.2217],
         [ 0.3323,  1.2352, -0.9304,  ..., -1.0895, -0.5242,  2.3865],
         ...,
         [-2.3789, -0.2622, -0.9216,  ..., -0.7002, -1.0523, -0.1281],
         [ 0.2943,  0.1585, -0.0221,  ...,  0.1040, -0.7732,  0.4908],
         [-0.0663, -0.2225, -0.8788,  ...,  0.6132, -0.0831,  1.2281]],

        [[-0.0619,  1.0273,  0.1180,  ...,  0.5437,  0.9183,  1.0396],
         [-0.9104, -1.2791, -0.9786,  ...,  2.0652, -0.5505,  0.2710],
         [-1.2353, -0.5934,  0.3072,  ...,  0.0531, -0.3795,  0.3287],
         ...,
         [-2.0825, -0.7296, -0.0908,  ..., -1.6597, -1.5402, -1.5000],
         [ 0.2680, -0.3014, -0.2922,  ..., -0.8432,  0.6841,  0.6574],
         [ 1.2533, -0.8434, -1.1518,  ..., -0.0979,  1.0494,  0.4777]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 2862.417, Val Loss : 7486.288
======> Trajectory Loss : 2720.976, Gravity Loss : 0.001, EndOfTrajectory Loss : 1.414, BelowGroundPenalize Loss : 0.000
Opening in existing browser session.
[1019/143727.058475:ERROR:nacl_helper_linux.cc(308)] NaCl helper process running without a sandbox!
Most likely you need to configure your SUID sandbox correctly
Opening in existing browser session.
[1019/143727.375359:ERROR:nacl_helper_linux.cc(308)] NaCl helper process running without a sandbox!
Most likely you need to configure your SUID sandbox correctly
Opening in existing browser session.
[1019/143727.667791:ERROR:nacl_helper_linux.cc(308)] NaCl helper process running without a sandbox!
Most likely you need to configure your SUID sandbox correctly
===> [Minibatch 2/129].........IDX = 0 :  tensor([[[ 0.2329, -0.0412, -0.6629,  ..., -0.7870, -0.7608,  0.3857],
         [-0.3671,  0.8379, -1.5530,  ..., -0.8577, -0.2783, -0.0618],
         [-0.0702, -1.2815, -0.0976,  ...,  0.3472,  0.3984, -0.5592],
         ...,
         [-0.6744, -0.5536, -1.9650,  ...,  0.4381, -0.5427, -1.5681],
         [-0.7861, -1.2783,  0.7027,  ..., -0.3887, -1.8093, -0.1141],
         [-0.6154,  1.1429,  0.8518,  ..., -1.3299, -0.6558,  1.5734]],

        [[-0.4487,  0.6152, -0.1643,  ...,  0.5373, -1.9034, -0.4169],
         [-0.9483,  1.0888, -0.4894,  ..., -0.5402, -1.2995, -0.6135],
         [ 1.0518, -0.2984, -0.0073,  ...,  0.7388, -0.1764, -0.5668],
         ...,
         [-1.5284,  0.6993, -0.3269,  ...,  0.8008, -0.4239,  1.7848],
         [ 2.6227,  0.3425, -0.5583,  ..., -1.8375,  0.8022, -0.1174],
         [ 0.1316,  0.1739, -0.5703,  ...,  0.2400, -0.6843,  0.4398]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[-0.7093,  0.4763,  0.5262,  ..., -0.3187, -0.0365,  0.6313],
         [ 1.5616,  2.0950, -1.3750,  ..., -0.8169,  1.1985, -1.2217],
         [ 0.3323,  1.2352, -0.9304,  ..., -1.0895, -0.5242,  2.3865],
         ...,
         [-2.3789, -0.2622, -0.9216,  ..., -0.7002, -1.0523, -0.1281],
         [ 0.2943,  0.1585, -0.0221,  ...,  0.1040, -0.7732,  0.4908],
         [-0.0663, -0.2225, -0.8788,  ...,  0.6132, -0.0831,  1.2281]],

        [[-0.0619,  1.0273,  0.1180,  ...,  0.5437,  0.9183,  1.0396],
         [-0.9104, -1.2791, -0.9786,  ...,  2.0652, -0.5505,  0.2710],
         [-1.2353, -0.5934,  0.3072,  ...,  0.0531, -0.3795,  0.3287],
         ...,
         [-2.0825, -0.7296, -0.0908,  ..., -1.6597, -1.5402, -1.5000],
         [ 0.2680, -0.3014, -0.2922,  ..., -0.8432,  0.6841,  0.6574],
         [ 1.2533, -0.8434, -1.1518,  ..., -0.0979,  1.0494,  0.4777]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 0.2232, -0.0314, -0.6546,  ..., -0.7939, -0.7511,  0.3781],
         [-0.3754,  0.8288, -1.5619,  ..., -0.8673, -0.2722, -0.0559],
         [-0.0777, -1.2831, -0.0931,  ...,  0.3378,  0.4079, -0.5658],
         ...,
         [-0.6787, -0.5444, -1.9600,  ...,  0.4293, -0.5360, -1.5773],
         [-0.7921, -1.2707,  0.7000,  ..., -0.3975, -1.7996, -0.1170],
         [-0.6149,  1.1527,  0.8600,  ..., -1.3227, -0.6462,  1.5642]],

        [[-0.4546,  0.6170, -0.1739,  ...,  0.5471, -1.9041, -0.4082],
         [-0.9576,  1.0976, -0.4960,  ..., -0.5307, -1.2912, -0.6041],
         [ 1.0418, -0.3000,  0.0027,  ...,  0.7484, -0.1788, -0.5569],
         ...,
         [-1.5364,  0.6908, -0.3329,  ...,  0.8027, -0.4333,  1.7778],
         [ 2.6299,  0.3347, -0.5650,  ..., -1.8442,  0.7957, -0.1265],
         [ 0.1353,  0.1640, -0.5676,  ...,  0.2307, -0.6920,  0.4433]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[-0.7153,  0.4830,  0.5177,  ..., -0.3141, -0.0443,  0.6382],
         [ 1.5683,  2.1028, -1.3814,  ..., -0.8238,  1.1903, -1.2140],
         [ 0.3407,  1.2340, -0.9377,  ..., -1.0830, -0.5314,  2.3939],
         ...,
         [-2.3858, -0.2690, -0.9148,  ..., -0.6931, -1.0454, -0.1214],
         [ 0.3006,  0.1590, -0.0282,  ...,  0.1127, -0.7771,  0.4906],
         [-0.0739, -0.2159, -0.8779,  ...,  0.6172, -0.0900,  1.2345]],

        [[-0.0688,  1.0339,  0.1240,  ...,  0.5485,  0.9245,  1.0476],
         [-0.9186, -1.2709, -0.9809,  ...,  2.0585, -0.5595,  0.2724],
         [-1.2419, -0.6013,  0.3149,  ...,  0.0544, -0.3750,  0.3229],
         ...,
         [-2.0896, -0.7381, -0.0831,  ..., -1.6662, -1.5477, -1.4954],
         [ 0.2586, -0.3070, -0.2876,  ..., -0.8476,  0.6844,  0.6668],
         [ 1.2527, -0.8525, -1.1552,  ..., -0.1035,  1.0423,  0.4854]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 1932.885, Val Loss : 4911.483
======> Trajectory Loss : 1792.595, Gravity Loss : 0.001, EndOfTrajectory Loss : 1.403, BelowGroundPenalize Loss : 0.000
===> [Minibatch 3/129].........IDX = 0 :  tensor([[[ 0.2232, -0.0314, -0.6546,  ..., -0.7939, -0.7511,  0.3781],
         [-0.3754,  0.8288, -1.5619,  ..., -0.8673, -0.2722, -0.0559],
         [-0.0777, -1.2831, -0.0931,  ...,  0.3378,  0.4079, -0.5658],
         ...,
         [-0.6787, -0.5444, -1.9600,  ...,  0.4293, -0.5360, -1.5773],
         [-0.7921, -1.2707,  0.7000,  ..., -0.3975, -1.7996, -0.1170],
         [-0.6149,  1.1527,  0.8600,  ..., -1.3227, -0.6462,  1.5642]],

        [[-0.4546,  0.6170, -0.1739,  ...,  0.5471, -1.9041, -0.4082],
         [-0.9576,  1.0976, -0.4960,  ..., -0.5307, -1.2912, -0.6041],
         [ 1.0418, -0.3000,  0.0027,  ...,  0.7484, -0.1788, -0.5569],
         ...,
         [-1.5364,  0.6908, -0.3329,  ...,  0.8027, -0.4333,  1.7778],
         [ 2.6299,  0.3347, -0.5650,  ..., -1.8442,  0.7957, -0.1265],
         [ 0.1353,  0.1640, -0.5676,  ...,  0.2307, -0.6920,  0.4433]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[-0.7153,  0.4830,  0.5177,  ..., -0.3141, -0.0443,  0.6382],
         [ 1.5683,  2.1028, -1.3814,  ..., -0.8238,  1.1903, -1.2140],
         [ 0.3407,  1.2340, -0.9377,  ..., -1.0830, -0.5314,  2.3939],
         ...,
         [-2.3858, -0.2690, -0.9148,  ..., -0.6931, -1.0454, -0.1214],
         [ 0.3006,  0.1590, -0.0282,  ...,  0.1127, -0.7771,  0.4906],
         [-0.0739, -0.2159, -0.8779,  ...,  0.6172, -0.0900,  1.2345]],

        [[-0.0688,  1.0339,  0.1240,  ...,  0.5485,  0.9245,  1.0476],
         [-0.9186, -1.2709, -0.9809,  ...,  2.0585, -0.5595,  0.2724],
         [-1.2419, -0.6013,  0.3149,  ...,  0.0544, -0.3750,  0.3229],
         ...,
         [-2.0896, -0.7381, -0.0831,  ..., -1.6662, -1.5477, -1.4954],
         [ 0.2586, -0.3070, -0.2876,  ..., -0.8476,  0.6844,  0.6668],
         [ 1.2527, -0.8525, -1.1552,  ..., -0.1035,  1.0423,  0.4854]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 2.1355e-01, -2.1619e-02, -6.4622e-01,  ..., -8.0190e-01,
          -7.4124e-01,  3.6949e-01],
         [-3.8395e-01,  8.2100e-01, -1.5709e+00,  ..., -8.7681e-01,
          -2.7038e-01, -6.0401e-02],
         [-8.4879e-02, -1.2886e+00, -9.0721e-02,  ...,  3.2914e-01,
           4.1630e-01, -5.7356e-01],
         ...,
         [-6.8449e-01, -5.3495e-01, -1.9527e+00,  ...,  4.2081e-01,
          -5.3031e-01, -1.5860e+00],
         [-7.9639e-01, -1.2621e+00,  6.9582e-01,  ..., -4.0615e-01,
          -1.7906e+00, -1.2219e-01],
         [-6.1066e-01,  1.1621e+00,  8.6665e-01,  ..., -1.3144e+00,
          -6.3656e-01,  1.5553e+00]],

        [[-4.6250e-01,  6.1108e-01, -1.8340e-01,  ...,  5.4620e-01,
          -1.9077e+00, -4.0164e-01],
         [-9.6715e-01,  1.1011e+00, -5.0408e-01,  ..., -5.3012e-01,
          -1.2852e+00, -5.9543e-01],
         [ 1.0318e+00, -3.0633e-01,  2.5818e-03,  ...,  7.5504e-01,
          -1.8541e-01, -5.4720e-01],
         ...,
         [-1.5452e+00,  6.8300e-01, -3.4075e-01,  ...,  7.9751e-01,
          -4.4167e-01,  1.7761e+00],
         [ 2.6382e+00,  3.2613e-01, -5.7158e-01,  ..., -1.8522e+00,
           7.9133e-01, -1.2687e-01],
         [ 1.3041e-01,  1.5454e-01, -5.6890e-01,  ...,  2.2126e-01,
          -7.0069e-01,  4.4994e-01]]], device='cuda:0',
       grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[-0.7176,  0.4882,  0.5089,  ..., -0.3101, -0.0518,  0.6450],
         [ 1.5757,  2.1113, -1.3887,  ..., -0.8279,  1.1821, -1.2070],
         [ 0.3493,  1.2390, -0.9457,  ..., -1.0769, -0.5385,  2.4016],
         ...,
         [-2.3912, -0.2742, -0.9100,  ..., -0.6874, -1.0399, -0.1161],
         [ 0.3083,  0.1631, -0.0340,  ...,  0.1216, -0.7779,  0.4917],
         [-0.0696, -0.2083, -0.8816,  ...,  0.6196, -0.0978,  1.2417]],

        [[-0.0682,  1.0418,  0.1289,  ...,  0.5472,  0.9320,  1.0539],
         [-0.9162, -1.2633, -0.9853,  ...,  2.0524, -0.5686,  0.2762],
         [-1.2401, -0.6052,  0.3157,  ...,  0.0579, -0.3687,  0.3184],
         ...,
         [-2.0945, -0.7451, -0.0776,  ..., -1.6712, -1.5533, -1.4940],
         [ 0.2578, -0.3078, -0.2867,  ..., -0.8526,  0.6807,  0.6736],
         [ 1.2583, -0.8475, -1.1506,  ..., -0.1100,  1.0478,  0.4805]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 1463.869, Val Loss : 1792.269
======> Trajectory Loss : 1324.737, Gravity Loss : 0.001, EndOfTrajectory Loss : 1.391, BelowGroundPenalize Loss : 0.000
===> [Minibatch 4/129].........IDX = 0 :  tensor([[[ 2.1355e-01, -2.1619e-02, -6.4622e-01,  ..., -8.0190e-01,
          -7.4124e-01,  3.6949e-01],
         [-3.8395e-01,  8.2100e-01, -1.5709e+00,  ..., -8.7681e-01,
          -2.7038e-01, -6.0401e-02],
         [-8.4879e-02, -1.2886e+00, -9.0721e-02,  ...,  3.2914e-01,
           4.1630e-01, -5.7356e-01],
         ...,
         [-6.8449e-01, -5.3495e-01, -1.9527e+00,  ...,  4.2081e-01,
          -5.3031e-01, -1.5860e+00],
         [-7.9639e-01, -1.2621e+00,  6.9582e-01,  ..., -4.0615e-01,
          -1.7906e+00, -1.2219e-01],
         [-6.1066e-01,  1.1621e+00,  8.6665e-01,  ..., -1.3144e+00,
          -6.3656e-01,  1.5553e+00]],

        [[-4.6250e-01,  6.1108e-01, -1.8340e-01,  ...,  5.4620e-01,
          -1.9077e+00, -4.0164e-01],
         [-9.6715e-01,  1.1011e+00, -5.0408e-01,  ..., -5.3012e-01,
          -1.2852e+00, -5.9543e-01],
         [ 1.0318e+00, -3.0633e-01,  2.5818e-03,  ...,  7.5504e-01,
          -1.8541e-01, -5.4720e-01],
         ...,
         [-1.5452e+00,  6.8300e-01, -3.4075e-01,  ...,  7.9751e-01,
          -4.4167e-01,  1.7761e+00],
         [ 2.6382e+00,  3.2613e-01, -5.7158e-01,  ..., -1.8522e+00,
           7.9133e-01, -1.2687e-01],
         [ 1.3041e-01,  1.5454e-01, -5.6890e-01,  ...,  2.2126e-01,
          -7.0069e-01,  4.4994e-01]]], device='cuda:0',
       grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[-0.7176,  0.4882,  0.5089,  ..., -0.3101, -0.0518,  0.6450],
         [ 1.5757,  2.1113, -1.3887,  ..., -0.8279,  1.1821, -1.2070],
         [ 0.3493,  1.2390, -0.9457,  ..., -1.0769, -0.5385,  2.4016],
         ...,
         [-2.3912, -0.2742, -0.9100,  ..., -0.6874, -1.0399, -0.1161],
         [ 0.3083,  0.1631, -0.0340,  ...,  0.1216, -0.7779,  0.4917],
         [-0.0696, -0.2083, -0.8816,  ...,  0.6196, -0.0978,  1.2417]],

        [[-0.0682,  1.0418,  0.1289,  ...,  0.5472,  0.9320,  1.0539],
         [-0.9162, -1.2633, -0.9853,  ...,  2.0524, -0.5686,  0.2762],
         [-1.2401, -0.6052,  0.3157,  ...,  0.0579, -0.3687,  0.3184],
         ...,
         [-2.0945, -0.7451, -0.0776,  ..., -1.6712, -1.5533, -1.4940],
         [ 0.2578, -0.3078, -0.2867,  ..., -0.8526,  0.6807,  0.6736],
         [ 1.2583, -0.8475, -1.1506,  ..., -0.1100,  1.0478,  0.4805]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 2.0381e-01, -1.2599e-02, -6.4680e-01,  ..., -8.1055e-01,
          -7.3165e-01,  3.6068e-01],
         [-3.9192e-01,  8.2076e-01, -1.5791e+00,  ..., -8.8623e-01,
          -2.7373e-01, -6.7026e-02],
         [-9.2835e-02, -1.2957e+00, -9.1277e-02,  ...,  3.2003e-01,
           4.2516e-01, -5.8128e-01],
         ...,
         [-6.9134e-01, -5.2534e-01, -1.9445e+00,  ...,  4.1593e-01,
          -5.2299e-01, -1.5946e+00],
         [-8.0265e-01, -1.2531e+00,  6.8958e-01,  ..., -4.1522e-01,
          -1.7815e+00, -1.2894e-01],
         [-6.1361e-01,  1.1716e+00,  8.6974e-01,  ..., -1.3138e+00,
          -6.2679e-01,  1.5463e+00]],

        [[-4.6971e-01,  6.0354e-01, -1.9127e-01,  ...,  5.4057e-01,
          -1.9142e+00, -3.9771e-01],
         [-9.7628e-01,  1.0977e+00, -5.1237e-01,  ..., -5.3507e-01,
          -1.2839e+00, -5.8750e-01],
         [ 1.0221e+00, -3.1402e-01, -1.6779e-03,  ...,  7.5580e-01,
          -1.9321e-01, -5.3796e-01],
         ...,
         [-1.5540e+00,  6.7439e-01, -3.4929e-01,  ...,  7.9033e-01,
          -4.5047e-01,  1.7789e+00],
         [ 2.6418e+00,  3.1706e-01, -5.7695e-01,  ..., -1.8600e+00,
           7.8900e-01, -1.2402e-01],
         [ 1.2351e-01,  1.4523e-01, -5.7281e-01,  ...,  2.1243e-01,
          -7.0981e-01,  4.5781e-01]]], device='cuda:0',
       grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[-0.7194,  0.4926,  0.5005,  ..., -0.3070, -0.0581,  0.6511],
         [ 1.5806,  2.1186, -1.3952,  ..., -0.8308,  1.1754, -1.2013],
         [ 0.3573,  1.2456, -0.9541,  ..., -1.0729, -0.5458,  2.4000],
         ...,
         [-2.3956, -0.2776, -0.9056,  ..., -0.6817, -1.0364, -0.1150],
         [ 0.3151,  0.1671, -0.0384,  ...,  0.1297, -0.7777,  0.4927],
         [-0.0645, -0.2008, -0.8780,  ...,  0.6166, -0.1027,  1.2473]],

        [[-0.0650,  1.0502,  0.1290,  ...,  0.5429,  0.9400,  1.0525],
         [-0.9126, -1.2559, -0.9904,  ...,  2.0455, -0.5761,  0.2774],
         [-1.2344, -0.6006,  0.3100,  ...,  0.0540, -0.3624,  0.3118],
         ...,
         [-2.0916, -0.7423, -0.0823,  ..., -1.6782, -1.5513, -1.4991],
         [ 0.2603, -0.3065, -0.2873,  ..., -0.8577,  0.6790,  0.6744],
         [ 1.2650, -0.8405, -1.1460,  ..., -0.1178,  1.0551,  0.4735]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 567.419, Val Loss : 581.728
======> Trajectory Loss : 431.232, Gravity Loss : 0.000, EndOfTrajectory Loss : 1.362, BelowGroundPenalize Loss : 0.000
===> [Minibatch 5/129].........IDX = 0 :  tensor([[[ 2.0381e-01, -1.2599e-02, -6.4680e-01,  ..., -8.1055e-01,
          -7.3165e-01,  3.6068e-01],
         [-3.9192e-01,  8.2076e-01, -1.5791e+00,  ..., -8.8623e-01,
          -2.7373e-01, -6.7026e-02],
         [-9.2835e-02, -1.2957e+00, -9.1277e-02,  ...,  3.2003e-01,
           4.2516e-01, -5.8128e-01],
         ...,
         [-6.9134e-01, -5.2534e-01, -1.9445e+00,  ...,  4.1593e-01,
          -5.2299e-01, -1.5946e+00],
         [-8.0265e-01, -1.2531e+00,  6.8958e-01,  ..., -4.1522e-01,
          -1.7815e+00, -1.2894e-01],
         [-6.1361e-01,  1.1716e+00,  8.6974e-01,  ..., -1.3138e+00,
          -6.2679e-01,  1.5463e+00]],

        [[-4.6971e-01,  6.0354e-01, -1.9127e-01,  ...,  5.4057e-01,
          -1.9142e+00, -3.9771e-01],
         [-9.7628e-01,  1.0977e+00, -5.1237e-01,  ..., -5.3507e-01,
          -1.2839e+00, -5.8750e-01],
         [ 1.0221e+00, -3.1402e-01, -1.6779e-03,  ...,  7.5580e-01,
          -1.9321e-01, -5.3796e-01],
         ...,
         [-1.5540e+00,  6.7439e-01, -3.4929e-01,  ...,  7.9033e-01,
          -4.5047e-01,  1.7789e+00],
         [ 2.6418e+00,  3.1706e-01, -5.7695e-01,  ..., -1.8600e+00,
           7.8900e-01, -1.2402e-01],
         [ 1.2351e-01,  1.4523e-01, -5.7281e-01,  ...,  2.1243e-01,
          -7.0981e-01,  4.5781e-01]]], device='cuda:0',
       grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[-0.7194,  0.4926,  0.5005,  ..., -0.3070, -0.0581,  0.6511],
         [ 1.5806,  2.1186, -1.3952,  ..., -0.8308,  1.1754, -1.2013],
         [ 0.3573,  1.2456, -0.9541,  ..., -1.0729, -0.5458,  2.4000],
         ...,
         [-2.3956, -0.2776, -0.9056,  ..., -0.6817, -1.0364, -0.1150],
         [ 0.3151,  0.1671, -0.0384,  ...,  0.1297, -0.7777,  0.4927],
         [-0.0645, -0.2008, -0.8780,  ...,  0.6166, -0.1027,  1.2473]],

        [[-0.0650,  1.0502,  0.1290,  ...,  0.5429,  0.9400,  1.0525],
         [-0.9126, -1.2559, -0.9904,  ...,  2.0455, -0.5761,  0.2774],
         [-1.2344, -0.6006,  0.3100,  ...,  0.0540, -0.3624,  0.3118],
         ...,
         [-2.0916, -0.7423, -0.0823,  ..., -1.6782, -1.5513, -1.4991],
         [ 0.2603, -0.3065, -0.2873,  ..., -0.8577,  0.6790,  0.6744],
         [ 1.2650, -0.8405, -1.1460,  ..., -0.1178,  1.0551,  0.4735]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 0.1956, -0.0042, -0.6521,  ..., -0.8188, -0.7230,  0.3532],
         [-0.3991,  0.8156, -1.5868,  ..., -0.8931, -0.2794, -0.0736],
         [-0.0998, -1.3024, -0.0966,  ...,  0.3117,  0.4336, -0.5887],
         ...,
         [-0.6989, -0.5172, -1.9387,  ...,  0.4096, -0.5156, -1.6029],
         [-0.8095, -1.2440,  0.6822,  ..., -0.4232, -1.7729, -0.1365],
         [-0.6195,  1.1801,  0.8654,  ..., -1.3185, -0.6178,  1.5372]],

        [[-0.4775,  0.5954, -0.1968,  ...,  0.5334, -1.9218, -0.3983],
         [-0.9851,  1.0916, -0.5212,  ..., -0.5419, -1.2875, -0.5811],
         [ 1.0134, -0.3222, -0.0081,  ...,  0.7523, -0.2015, -0.5292],
         ...,
         [-1.5625,  0.6656, -0.3577,  ...,  0.7825, -0.4595,  1.7845],
         [ 2.6385,  0.3078, -0.5765,  ..., -1.8680,  0.7883, -0.1184],
         [ 0.1160,  0.1360, -0.5775,  ...,  0.2038, -0.7192,  0.4664]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[-0.7209,  0.4964,  0.5006,  ..., -0.3102, -0.0582,  0.6547],
         [ 1.5867,  2.1171, -1.3964,  ..., -0.8364,  1.1729, -1.1987],
         [ 0.3640,  1.2488, -0.9591,  ..., -1.0711, -0.5494,  2.3994],
         ...,
         [-2.3992, -0.2807, -0.9020,  ..., -0.6773, -1.0333, -0.1139],
         [ 0.3204,  0.1691, -0.0421,  ...,  0.1339, -0.7782,  0.4944],
         [-0.0605, -0.1953, -0.8749,  ...,  0.6135, -0.1070,  1.2526]],

        [[-0.0698,  1.0461,  0.1343,  ...,  0.5477,  0.9380,  1.0578],
         [-0.9178, -1.2607, -0.9853,  ...,  2.0507, -0.5728,  0.2828],
         [-1.2307, -0.5985,  0.3081,  ...,  0.0551, -0.3594,  0.3104],
         ...,
         [-2.0897, -0.7408, -0.0855,  ..., -1.6830, -1.5505, -1.5024],
         [ 0.2584, -0.3083, -0.2855,  ..., -0.8591,  0.6763,  0.6791],
         [ 1.2684, -0.8363, -1.1425,  ..., -0.1224,  1.0597,  0.4706]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 260.719, Val Loss : 584.387
======> Trajectory Loss : 113.053, Gravity Loss : 0.000, EndOfTrajectory Loss : 1.314, BelowGroundPenalize Loss : 16.254
===> [Minibatch 6/129].........IDX = 0 :  tensor([[[ 0.1956, -0.0042, -0.6521,  ..., -0.8188, -0.7230,  0.3532],
         [-0.3991,  0.8156, -1.5868,  ..., -0.8931, -0.2794, -0.0736],
         [-0.0998, -1.3024, -0.0966,  ...,  0.3117,  0.4336, -0.5887],
         ...,
         [-0.6989, -0.5172, -1.9387,  ...,  0.4096, -0.5156, -1.6029],
         [-0.8095, -1.2440,  0.6822,  ..., -0.4232, -1.7729, -0.1365],
         [-0.6195,  1.1801,  0.8654,  ..., -1.3185, -0.6178,  1.5372]],

        [[-0.4775,  0.5954, -0.1968,  ...,  0.5334, -1.9218, -0.3983],
         [-0.9851,  1.0916, -0.5212,  ..., -0.5419, -1.2875, -0.5811],
         [ 1.0134, -0.3222, -0.0081,  ...,  0.7523, -0.2015, -0.5292],
         ...,
         [-1.5625,  0.6656, -0.3577,  ...,  0.7825, -0.4595,  1.7845],
         [ 2.6385,  0.3078, -0.5765,  ..., -1.8680,  0.7883, -0.1184],
         [ 0.1160,  0.1360, -0.5775,  ...,  0.2038, -0.7192,  0.4664]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[-0.7209,  0.4964,  0.5006,  ..., -0.3102, -0.0582,  0.6547],
         [ 1.5867,  2.1171, -1.3964,  ..., -0.8364,  1.1729, -1.1987],
         [ 0.3640,  1.2488, -0.9591,  ..., -1.0711, -0.5494,  2.3994],
         ...,
         [-2.3992, -0.2807, -0.9020,  ..., -0.6773, -1.0333, -0.1139],
         [ 0.3204,  0.1691, -0.0421,  ...,  0.1339, -0.7782,  0.4944],
         [-0.0605, -0.1953, -0.8749,  ...,  0.6135, -0.1070,  1.2526]],

        [[-0.0698,  1.0461,  0.1343,  ...,  0.5477,  0.9380,  1.0578],
         [-0.9178, -1.2607, -0.9853,  ...,  2.0507, -0.5728,  0.2828],
         [-1.2307, -0.5985,  0.3081,  ...,  0.0551, -0.3594,  0.3104],
         ...,
         [-2.0897, -0.7408, -0.0855,  ..., -1.6830, -1.5505, -1.5024],
         [ 0.2584, -0.3083, -0.2855,  ..., -0.8591,  0.6763,  0.6791],
         [ 1.2684, -0.8363, -1.1425,  ..., -0.1224,  1.0597,  0.4706]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 0.1872,  0.0038, -0.6582,  ..., -0.8275, -0.7147,  0.3456],
         [-0.4070,  0.8112, -1.5949,  ..., -0.9003, -0.2862, -0.0808],
         [-0.1077, -1.3062, -0.1035,  ...,  0.3028,  0.4424, -0.5968],
         ...,
         [-0.7069, -0.5090, -1.9337,  ...,  0.4025, -0.5076, -1.6112],
         [-0.8173, -1.2346,  0.6753,  ..., -0.4307, -1.7653, -0.1447],
         [-0.6256,  1.1890,  0.8598,  ..., -1.3144, -0.6108,  1.5312]],

        [[-0.4860,  0.5867, -0.1994,  ...,  0.5254, -1.9302, -0.3978],
         [-0.9943,  1.0843, -0.5299,  ..., -0.5498, -1.2927, -0.5744],
         [ 1.0043, -0.3310, -0.0153,  ...,  0.7472, -0.2103, -0.5201],
         ...,
         [-1.5715,  0.6564, -0.3654,  ...,  0.7740, -0.4689,  1.7914],
         [ 2.6327,  0.2983, -0.5724,  ..., -1.8766,  0.7896, -0.1113],
         [ 0.1077,  0.1265, -0.5818,  ...,  0.1947, -0.7286,  0.4754]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[-0.7177,  0.4979,  0.5043,  ..., -0.3158, -0.0549,  0.6590],
         [ 1.5923,  2.1155, -1.3972,  ..., -0.8416,  1.1707, -1.1966],
         [ 0.3686,  1.2500, -0.9608,  ..., -1.0697, -0.5506,  2.3997],
         ...,
         [-2.4023, -0.2841, -0.8992,  ..., -0.6747, -1.0306, -0.1117],
         [ 0.3269,  0.1683, -0.0469,  ...,  0.1312, -0.7820,  0.4986],
         [-0.0559, -0.1920, -0.8746,  ...,  0.6086, -0.1105,  1.2566]],

        [[-0.0763,  1.0398,  0.1412,  ...,  0.5543,  0.9326,  1.0647],
         [-0.9228, -1.2653, -0.9802,  ...,  2.0556, -0.5697,  0.2881],
         [-1.2291, -0.5988,  0.3095,  ...,  0.0589, -0.3596,  0.3121],
         ...,
         [-2.0898, -0.7418, -0.0855,  ..., -1.6841, -1.5530, -1.5028],
         [ 0.2529, -0.3136, -0.2802,  ..., -0.8552,  0.6709,  0.6852],
         [ 1.2686, -0.8365, -1.1370,  ..., -0.1220,  1.0599,  0.4729]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 259.693, Val Loss : 143.350
======> Trajectory Loss : 117.194, Gravity Loss : 0.000, EndOfTrajectory Loss : 1.234, BelowGroundPenalize Loss : 19.145
===> [Minibatch 7/129].........IDX = 0 :  tensor([[[ 0.1872,  0.0038, -0.6582,  ..., -0.8275, -0.7147,  0.3456],
         [-0.4070,  0.8112, -1.5949,  ..., -0.9003, -0.2862, -0.0808],
         [-0.1077, -1.3062, -0.1035,  ...,  0.3028,  0.4424, -0.5968],
         ...,
         [-0.7069, -0.5090, -1.9337,  ...,  0.4025, -0.5076, -1.6112],
         [-0.8173, -1.2346,  0.6753,  ..., -0.4307, -1.7653, -0.1447],
         [-0.6256,  1.1890,  0.8598,  ..., -1.3144, -0.6108,  1.5312]],

        [[-0.4860,  0.5867, -0.1994,  ...,  0.5254, -1.9302, -0.3978],
         [-0.9943,  1.0843, -0.5299,  ..., -0.5498, -1.2927, -0.5744],
         [ 1.0043, -0.3310, -0.0153,  ...,  0.7472, -0.2103, -0.5201],
         ...,
         [-1.5715,  0.6564, -0.3654,  ...,  0.7740, -0.4689,  1.7914],
         [ 2.6327,  0.2983, -0.5724,  ..., -1.8766,  0.7896, -0.1113],
         [ 0.1077,  0.1265, -0.5818,  ...,  0.1947, -0.7286,  0.4754]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[-0.7177,  0.4979,  0.5043,  ..., -0.3158, -0.0549,  0.6590],
         [ 1.5923,  2.1155, -1.3972,  ..., -0.8416,  1.1707, -1.1966],
         [ 0.3686,  1.2500, -0.9608,  ..., -1.0697, -0.5506,  2.3997],
         ...,
         [-2.4023, -0.2841, -0.8992,  ..., -0.6747, -1.0306, -0.1117],
         [ 0.3269,  0.1683, -0.0469,  ...,  0.1312, -0.7820,  0.4986],
         [-0.0559, -0.1920, -0.8746,  ...,  0.6086, -0.1105,  1.2566]],

        [[-0.0763,  1.0398,  0.1412,  ...,  0.5543,  0.9326,  1.0647],
         [-0.9228, -1.2653, -0.9802,  ...,  2.0556, -0.5697,  0.2881],
         [-1.2291, -0.5988,  0.3095,  ...,  0.0589, -0.3596,  0.3121],
         ...,
         [-2.0898, -0.7418, -0.0855,  ..., -1.6841, -1.5530, -1.5028],
         [ 0.2529, -0.3136, -0.2802,  ..., -0.8552,  0.6709,  0.6852],
         [ 1.2686, -0.8365, -1.1370,  ..., -0.1220,  1.0599,  0.4729]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 0.1796,  0.0108, -0.6640,  ..., -0.8358, -0.7075,  0.3387],
         [-0.4138,  0.8076, -1.6020,  ..., -0.9066, -0.2922, -0.0871],
         [-0.1151, -1.3103, -0.1102,  ...,  0.2943,  0.4507, -0.6049],
         ...,
         [-0.7138, -0.5014, -1.9299,  ...,  0.3950, -0.5003, -1.6189],
         [-0.8232, -1.2258,  0.6684,  ..., -0.4374, -1.7582, -0.1523],
         [-0.6312,  1.1969,  0.8548,  ..., -1.3112, -0.6047,  1.5258]],

        [[-0.4948,  0.5776, -0.2003,  ...,  0.5168, -1.9391, -0.3949],
         [-1.0037,  1.0765, -0.5378,  ..., -0.5582, -1.2986, -0.5672],
         [ 0.9948, -0.3402, -0.0230,  ...,  0.7410, -0.2195, -0.5107],
         ...,
         [-1.5807,  0.6469, -0.3722,  ...,  0.7650, -0.4784,  1.7992],
         [ 2.6255,  0.2886, -0.5662,  ..., -1.8857,  0.7919, -0.1034],
         [ 0.0988,  0.1167, -0.5851,  ...,  0.1853, -0.7379,  0.4844]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[-0.7166,  0.4997,  0.5063,  ..., -0.3194, -0.0532,  0.6623],
         [ 1.5984,  2.1106, -1.3927,  ..., -0.8473,  1.1661, -1.1925],
         [ 0.3706,  1.2535, -0.9637,  ..., -1.0672, -0.5547,  2.3975],
         ...,
         [-2.4050, -0.2876, -0.8972,  ..., -0.6733, -1.0281, -0.1087],
         [ 0.3336,  0.1633, -0.0526,  ...,  0.1259, -0.7874,  0.5039],
         [-0.0524, -0.1887, -0.8722,  ...,  0.6044, -0.1139,  1.2596]],

        [[-0.0813,  1.0358,  0.1452,  ...,  0.5587,  0.9311,  1.0693],
         [-0.9294, -1.2718, -0.9736,  ...,  2.0623, -0.5667,  0.2948],
         [-1.2291, -0.5952,  0.3055,  ...,  0.0557, -0.3554,  0.3106],
         ...,
         [-2.0886, -0.7408, -0.0885,  ..., -1.6877, -1.5502, -1.5048],
         [ 0.2474, -0.3191, -0.2748,  ..., -0.8498,  0.6655,  0.6908],
         [ 1.2685, -0.8351, -1.1364,  ..., -0.1236,  1.0617,  0.4732]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 124.764, Val Loss : 126.797
======> Trajectory Loss : 10.910, Gravity Loss : 0.000, EndOfTrajectory Loss : 1.131, BelowGroundPenalize Loss : 0.742
===> [Minibatch 8/129].........IDX = 0 :  tensor([[[ 0.1796,  0.0108, -0.6640,  ..., -0.8358, -0.7075,  0.3387],
         [-0.4138,  0.8076, -1.6020,  ..., -0.9066, -0.2922, -0.0871],
         [-0.1151, -1.3103, -0.1102,  ...,  0.2943,  0.4507, -0.6049],
         ...,
         [-0.7138, -0.5014, -1.9299,  ...,  0.3950, -0.5003, -1.6189],
         [-0.8232, -1.2258,  0.6684,  ..., -0.4374, -1.7582, -0.1523],
         [-0.6312,  1.1969,  0.8548,  ..., -1.3112, -0.6047,  1.5258]],

        [[-0.4948,  0.5776, -0.2003,  ...,  0.5168, -1.9391, -0.3949],
         [-1.0037,  1.0765, -0.5378,  ..., -0.5582, -1.2986, -0.5672],
         [ 0.9948, -0.3402, -0.0230,  ...,  0.7410, -0.2195, -0.5107],
         ...,
         [-1.5807,  0.6469, -0.3722,  ...,  0.7650, -0.4784,  1.7992],
         [ 2.6255,  0.2886, -0.5662,  ..., -1.8857,  0.7919, -0.1034],
         [ 0.0988,  0.1167, -0.5851,  ...,  0.1853, -0.7379,  0.4844]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[-0.7166,  0.4997,  0.5063,  ..., -0.3194, -0.0532,  0.6623],
         [ 1.5984,  2.1106, -1.3927,  ..., -0.8473,  1.1661, -1.1925],
         [ 0.3706,  1.2535, -0.9637,  ..., -1.0672, -0.5547,  2.3975],
         ...,
         [-2.4050, -0.2876, -0.8972,  ..., -0.6733, -1.0281, -0.1087],
         [ 0.3336,  0.1633, -0.0526,  ...,  0.1259, -0.7874,  0.5039],
         [-0.0524, -0.1887, -0.8722,  ...,  0.6044, -0.1139,  1.2596]],

        [[-0.0813,  1.0358,  0.1452,  ...,  0.5587,  0.9311,  1.0693],
         [-0.9294, -1.2718, -0.9736,  ...,  2.0623, -0.5667,  0.2948],
         [-1.2291, -0.5952,  0.3055,  ...,  0.0557, -0.3554,  0.3106],
         ...,
         [-2.0886, -0.7408, -0.0885,  ..., -1.6877, -1.5502, -1.5048],
         [ 0.2474, -0.3191, -0.2748,  ..., -0.8498,  0.6655,  0.6908],
         [ 1.2685, -0.8351, -1.1364,  ..., -0.1236,  1.0617,  0.4732]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 0.1733,  0.0167, -0.6682,  ..., -0.8422, -0.7014,  0.3332],
         [-0.4198,  0.8058, -1.6093,  ..., -0.9132, -0.2986, -0.0945],
         [-0.1212, -1.3135, -0.1153,  ...,  0.2875,  0.4573, -0.6110],
         ...,
         [-0.7216, -0.4937, -1.9247,  ...,  0.3935, -0.4922, -1.6273],
         [-0.8202, -1.2201,  0.6629,  ..., -0.4451, -1.7525, -0.1581],
         [-0.6364,  1.2041,  0.8503,  ..., -1.3081, -0.5993,  1.5212]],

        [[-0.5039,  0.5682, -0.2002,  ...,  0.5080, -1.9483, -0.3901],
         [-1.0132,  1.0684, -0.5454,  ..., -0.5669, -1.3052, -0.5601],
         [ 0.9855, -0.3496, -0.0311,  ...,  0.7337, -0.2289, -0.5012],
         ...,
         [-1.5901,  0.6374, -0.3779,  ...,  0.7557, -0.4880,  1.8074],
         [ 2.6175,  0.2787, -0.5588,  ..., -1.8951,  0.7929, -0.0948],
         [ 0.0896,  0.1068, -0.5859,  ...,  0.1756, -0.7473,  0.4934]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[-0.7135,  0.5023,  0.5099,  ..., -0.3236, -0.0506,  0.6663],
         [ 1.5976,  2.1079, -1.3901,  ..., -0.8501,  1.1598, -1.1867],
         [ 0.3754,  1.2494, -0.9662,  ..., -1.0716, -0.5504,  2.4001],
         ...,
         [-2.4077, -0.2887, -0.8928,  ..., -0.6695, -1.0265, -0.1094],
         [ 0.3346,  0.1610, -0.0550,  ...,  0.1233, -0.7907,  0.5076],
         [-0.0481, -0.1866, -0.8744,  ...,  0.5998, -0.1168,  1.2631]],

        [[-0.0859,  1.0319,  0.1496,  ...,  0.5634,  0.9276,  1.0739],
         [-0.9347, -1.2766, -0.9692,  ...,  2.0672, -0.5620,  0.3006],
         [-1.2244, -0.5972,  0.3082,  ...,  0.0595, -0.3576,  0.3055],
         ...,
         [-2.0865, -0.7403, -0.0939,  ..., -1.6934, -1.5447, -1.5056],
         [ 0.2436, -0.3225, -0.2713,  ..., -0.8461,  0.6599,  0.6947],
         [ 1.2688, -0.8343, -1.1344,  ..., -0.1243,  1.0628,  0.4736]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 107.472, Val Loss : 213.687
======> Trajectory Loss : 7.681, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.993, BelowGroundPenalize Loss : 0.511
===> [Minibatch 9/129].........IDX = 0 :  tensor([[[ 0.1733,  0.0167, -0.6682,  ..., -0.8422, -0.7014,  0.3332],
         [-0.4198,  0.8058, -1.6093,  ..., -0.9132, -0.2986, -0.0945],
         [-0.1212, -1.3135, -0.1153,  ...,  0.2875,  0.4573, -0.6110],
         ...,
         [-0.7216, -0.4937, -1.9247,  ...,  0.3935, -0.4922, -1.6273],
         [-0.8202, -1.2201,  0.6629,  ..., -0.4451, -1.7525, -0.1581],
         [-0.6364,  1.2041,  0.8503,  ..., -1.3081, -0.5993,  1.5212]],

        [[-0.5039,  0.5682, -0.2002,  ...,  0.5080, -1.9483, -0.3901],
         [-1.0132,  1.0684, -0.5454,  ..., -0.5669, -1.3052, -0.5601],
         [ 0.9855, -0.3496, -0.0311,  ...,  0.7337, -0.2289, -0.5012],
         ...,
         [-1.5901,  0.6374, -0.3779,  ...,  0.7557, -0.4880,  1.8074],
         [ 2.6175,  0.2787, -0.5588,  ..., -1.8951,  0.7929, -0.0948],
         [ 0.0896,  0.1068, -0.5859,  ...,  0.1756, -0.7473,  0.4934]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[-0.7135,  0.5023,  0.5099,  ..., -0.3236, -0.0506,  0.6663],
         [ 1.5976,  2.1079, -1.3901,  ..., -0.8501,  1.1598, -1.1867],
         [ 0.3754,  1.2494, -0.9662,  ..., -1.0716, -0.5504,  2.4001],
         ...,
         [-2.4077, -0.2887, -0.8928,  ..., -0.6695, -1.0265, -0.1094],
         [ 0.3346,  0.1610, -0.0550,  ...,  0.1233, -0.7907,  0.5076],
         [-0.0481, -0.1866, -0.8744,  ...,  0.5998, -0.1168,  1.2631]],

        [[-0.0859,  1.0319,  0.1496,  ...,  0.5634,  0.9276,  1.0739],
         [-0.9347, -1.2766, -0.9692,  ...,  2.0672, -0.5620,  0.3006],
         [-1.2244, -0.5972,  0.3082,  ...,  0.0595, -0.3576,  0.3055],
         ...,
         [-2.0865, -0.7403, -0.0939,  ..., -1.6934, -1.5447, -1.5056],
         [ 0.2436, -0.3225, -0.2713,  ..., -0.8461,  0.6599,  0.6947],
         [ 1.2688, -0.8343, -1.1344,  ..., -0.1243,  1.0628,  0.4736]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 0.1660,  0.0230, -0.6735,  ..., -0.8497, -0.6952,  0.3270],
         [-0.4270,  0.8014, -1.6171,  ..., -0.9197, -0.3054, -0.1019],
         [-0.1195, -1.3191, -0.1205,  ...,  0.2823,  0.4629, -0.6161],
         ...,
         [-0.7295, -0.4862, -1.9243,  ...,  0.3932, -0.4837, -1.6360],
         [-0.8157, -1.2133,  0.6562,  ..., -0.4529, -1.7456, -0.1650],
         [-0.6407,  1.2104,  0.8466,  ..., -1.3050, -0.5944,  1.5172]],

        [[-0.5127,  0.5599, -0.2012,  ...,  0.5001, -1.9575, -0.3855],
         [-1.0224,  1.0612, -0.5529,  ..., -0.5741, -1.3123, -0.5546],
         [ 0.9758, -0.3591, -0.0387,  ...,  0.7261, -0.2385, -0.4915],
         ...,
         [-1.5990,  0.6291, -0.3846,  ...,  0.7499, -0.4974,  1.8149],
         [ 2.6098,  0.2697, -0.5527,  ..., -1.9037,  0.7907, -0.0875],
         [ 0.0805,  0.0973, -0.5862,  ...,  0.1663, -0.7567,  0.5021]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[-0.7148,  0.5004,  0.5100,  ..., -0.3276, -0.0520,  0.6720],
         [ 1.5966,  2.1056, -1.3879,  ..., -0.8524,  1.1542, -1.1814],
         [ 0.3778,  1.2462, -0.9691,  ..., -1.0746, -0.5470,  2.4021],
         ...,
         [-2.4101, -0.2894, -0.8882,  ..., -0.6655, -1.0251, -0.1112],
         [ 0.3352,  0.1591, -0.0569,  ...,  0.1211, -0.7934,  0.5108],
         [-0.0448, -0.1849, -0.8759,  ...,  0.5955, -0.1195,  1.2658]],

        [[-0.0904,  1.0277,  0.1535,  ...,  0.5655,  0.9293,  1.0777],
         [-0.9395, -1.2808, -0.9653,  ...,  2.0716, -0.5573,  0.3058],
         [-1.2216, -0.5989,  0.3102,  ...,  0.0621, -0.3593,  0.3029],
         ...,
         [-2.0853, -0.7416, -0.0991,  ..., -1.6992, -1.5393, -1.5049],
         [ 0.2401, -0.3255, -0.2682,  ..., -0.8429,  0.6544,  0.6982],
         [ 1.2689, -0.8335, -1.1336,  ..., -0.1252,  1.0639,  0.4743]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 121.138, Val Loss : 179.964
======> Trajectory Loss : 29.558, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.916, BelowGroundPenalize Loss : 0.013
===> [Minibatch 10/129].........IDX = 0 :  tensor([[[ 0.1660,  0.0230, -0.6735,  ..., -0.8497, -0.6952,  0.3270],
         [-0.4270,  0.8014, -1.6171,  ..., -0.9197, -0.3054, -0.1019],
         [-0.1195, -1.3191, -0.1205,  ...,  0.2823,  0.4629, -0.6161],
         ...,
         [-0.7295, -0.4862, -1.9243,  ...,  0.3932, -0.4837, -1.6360],
         [-0.8157, -1.2133,  0.6562,  ..., -0.4529, -1.7456, -0.1650],
         [-0.6407,  1.2104,  0.8466,  ..., -1.3050, -0.5944,  1.5172]],

        [[-0.5127,  0.5599, -0.2012,  ...,  0.5001, -1.9575, -0.3855],
         [-1.0224,  1.0612, -0.5529,  ..., -0.5741, -1.3123, -0.5546],
         [ 0.9758, -0.3591, -0.0387,  ...,  0.7261, -0.2385, -0.4915],
         ...,
         [-1.5990,  0.6291, -0.3846,  ...,  0.7499, -0.4974,  1.8149],
         [ 2.6098,  0.2697, -0.5527,  ..., -1.9037,  0.7907, -0.0875],
         [ 0.0805,  0.0973, -0.5862,  ...,  0.1663, -0.7567,  0.5021]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[-0.7148,  0.5004,  0.5100,  ..., -0.3276, -0.0520,  0.6720],
         [ 1.5966,  2.1056, -1.3879,  ..., -0.8524,  1.1542, -1.1814],
         [ 0.3778,  1.2462, -0.9691,  ..., -1.0746, -0.5470,  2.4021],
         ...,
         [-2.4101, -0.2894, -0.8882,  ..., -0.6655, -1.0251, -0.1112],
         [ 0.3352,  0.1591, -0.0569,  ...,  0.1211, -0.7934,  0.5108],
         [-0.0448, -0.1849, -0.8759,  ...,  0.5955, -0.1195,  1.2658]],

        [[-0.0904,  1.0277,  0.1535,  ...,  0.5655,  0.9293,  1.0777],
         [-0.9395, -1.2808, -0.9653,  ...,  2.0716, -0.5573,  0.3058],
         [-1.2216, -0.5989,  0.3102,  ...,  0.0621, -0.3593,  0.3029],
         ...,
         [-2.0853, -0.7416, -0.0991,  ..., -1.6992, -1.5393, -1.5049],
         [ 0.2401, -0.3255, -0.2682,  ..., -0.8429,  0.6544,  0.6982],
         [ 1.2689, -0.8335, -1.1336,  ..., -0.1252,  1.0639,  0.4743]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 0.1603,  0.0278, -0.6773,  ..., -0.8516, -0.6900,  0.3226],
         [-0.4328,  0.7970, -1.6228,  ..., -0.9247, -0.3106, -0.1067],
         [-0.1203, -1.3253, -0.1265,  ...,  0.2772,  0.4690, -0.6214],
         ...,
         [-0.7375, -0.4800, -1.9261,  ...,  0.3943, -0.4749, -1.6451],
         [-0.8118, -1.2074,  0.6504,  ..., -0.4591, -1.7396, -0.1709],
         [-0.6438,  1.2144,  0.8445,  ..., -1.3003, -0.5898,  1.5144]],

        [[-0.5215,  0.5555, -0.2053,  ...,  0.4950, -1.9669, -0.3816],
         [-1.0315,  1.0566, -0.5611,  ..., -0.5772, -1.3203, -0.5548],
         [ 0.9671, -0.3684, -0.0447,  ...,  0.7181, -0.2479, -0.4825],
         ...,
         [-1.6072,  0.6228, -0.3923,  ...,  0.7478, -0.5066,  1.8203],
         [ 2.6037,  0.2627, -0.5512,  ..., -1.9100,  0.7857, -0.0841],
         [ 0.0711,  0.0876, -0.5844,  ...,  0.1567, -0.7664,  0.5112]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[-0.7167,  0.4983,  0.5099,  ..., -0.3308, -0.0534,  0.6772],
         [ 1.5954,  2.1036, -1.3860,  ..., -0.8543,  1.1494, -1.1766],
         [ 0.3799,  1.2433, -0.9717,  ..., -1.0773, -0.5439,  2.4038],
         ...,
         [-2.4123, -0.2899, -0.8841,  ..., -0.6616, -1.0239, -0.1131],
         [ 0.3357,  0.1574, -0.0586,  ...,  0.1191, -0.7958,  0.5136],
         [-0.0427, -0.1835, -0.8764,  ...,  0.5918, -0.1218,  1.2676]],

        [[-0.0946,  1.0237,  0.1571,  ...,  0.5672,  0.9313,  1.0811],
         [-0.9439, -1.2846, -0.9617,  ...,  2.0756, -0.5527,  0.3106],
         [-1.2191, -0.6005,  0.3121,  ...,  0.0645, -0.3609,  0.3006],
         ...,
         [-2.0846, -0.7433, -0.1038,  ..., -1.7045, -1.5344, -1.5039],
         [ 0.2370, -0.3282, -0.2655,  ..., -0.8399,  0.6495,  0.7013],
         [ 1.2690, -0.8329, -1.1338,  ..., -0.1262,  1.0651,  0.4752]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 113.002, Val Loss : 105.775
======> Trajectory Loss : 27.893, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.851, BelowGroundPenalize Loss : 0.013
===> [Minibatch 11/129].........IDX = 0 :  tensor([[[ 0.1603,  0.0278, -0.6773,  ..., -0.8516, -0.6900,  0.3226],
         [-0.4328,  0.7970, -1.6228,  ..., -0.9247, -0.3106, -0.1067],
         [-0.1203, -1.3253, -0.1265,  ...,  0.2772,  0.4690, -0.6214],
         ...,
         [-0.7375, -0.4800, -1.9261,  ...,  0.3943, -0.4749, -1.6451],
         [-0.8118, -1.2074,  0.6504,  ..., -0.4591, -1.7396, -0.1709],
         [-0.6438,  1.2144,  0.8445,  ..., -1.3003, -0.5898,  1.5144]],

        [[-0.5215,  0.5555, -0.2053,  ...,  0.4950, -1.9669, -0.3816],
         [-1.0315,  1.0566, -0.5611,  ..., -0.5772, -1.3203, -0.5548],
         [ 0.9671, -0.3684, -0.0447,  ...,  0.7181, -0.2479, -0.4825],
         ...,
         [-1.6072,  0.6228, -0.3923,  ...,  0.7478, -0.5066,  1.8203],
         [ 2.6037,  0.2627, -0.5512,  ..., -1.9100,  0.7857, -0.0841],
         [ 0.0711,  0.0876, -0.5844,  ...,  0.1567, -0.7664,  0.5112]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[-0.7167,  0.4983,  0.5099,  ..., -0.3308, -0.0534,  0.6772],
         [ 1.5954,  2.1036, -1.3860,  ..., -0.8543,  1.1494, -1.1766],
         [ 0.3799,  1.2433, -0.9717,  ..., -1.0773, -0.5439,  2.4038],
         ...,
         [-2.4123, -0.2899, -0.8841,  ..., -0.6616, -1.0239, -0.1131],
         [ 0.3357,  0.1574, -0.0586,  ...,  0.1191, -0.7958,  0.5136],
         [-0.0427, -0.1835, -0.8764,  ...,  0.5918, -0.1218,  1.2676]],

        [[-0.0946,  1.0237,  0.1571,  ...,  0.5672,  0.9313,  1.0811],
         [-0.9439, -1.2846, -0.9617,  ...,  2.0756, -0.5527,  0.3106],
         [-1.2191, -0.6005,  0.3121,  ...,  0.0645, -0.3609,  0.3006],
         ...,
         [-2.0846, -0.7433, -0.1038,  ..., -1.7045, -1.5344, -1.5039],
         [ 0.2370, -0.3282, -0.2655,  ..., -0.8399,  0.6495,  0.7013],
         [ 1.2690, -0.8329, -1.1338,  ..., -0.1262,  1.0651,  0.4752]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 0.1551,  0.0311, -0.6798,  ..., -0.8520, -0.6859,  0.3193],
         [-0.4377,  0.7915, -1.6259,  ..., -0.9288, -0.3157, -0.1078],
         [-0.1209, -1.3311, -0.1316,  ...,  0.2729,  0.4742, -0.6258],
         ...,
         [-0.7436, -0.4730, -1.9292,  ...,  0.3987, -0.4673, -1.6545],
         [-0.8084, -1.2023,  0.6455,  ..., -0.4643, -1.7343, -0.1760],
         [-0.6463,  1.2177,  0.8433,  ..., -1.2955, -0.5854,  1.5122]],

        [[-0.5301,  0.5556, -0.2114,  ...,  0.4935, -1.9761, -0.3806],
         [-1.0406,  1.0545, -0.5699,  ..., -0.5767, -1.3288, -0.5577],
         [ 0.9589, -0.3771, -0.0470,  ...,  0.7101, -0.2564, -0.4742],
         ...,
         [-1.6147,  0.6194, -0.4007,  ...,  0.7494, -0.5152,  1.8232],
         [ 2.6001,  0.2592, -0.5541,  ..., -1.9126,  0.7791, -0.0850],
         [ 0.0614,  0.0777, -0.5811,  ...,  0.1470, -0.7764,  0.5206]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[-0.7193,  0.4958,  0.5098,  ..., -0.3329, -0.0545,  0.6821],
         [ 1.5973,  2.1020, -1.3836,  ..., -0.8566,  1.1430, -1.1743],
         [ 0.3849,  1.2465, -0.9767,  ..., -1.0826, -0.5387,  2.3994],
         ...,
         [-2.4164, -0.2923, -0.8806,  ..., -0.6563, -1.0210, -0.1178],
         [ 0.3364,  0.1559, -0.0604,  ...,  0.1173, -0.7984,  0.5165],
         [-0.0377, -0.1806, -0.8807,  ...,  0.5868, -0.1245,  1.2721]],

        [[-0.0985,  1.0194,  0.1608,  ...,  0.5680,  0.9345,  1.0842],
         [-0.9451, -1.2857, -0.9596,  ...,  2.0778, -0.5561,  0.3100],
         [-1.2140, -0.5980,  0.3156,  ...,  0.0697, -0.3620,  0.2956],
         ...,
         [-2.0857, -0.7479, -0.1087,  ..., -1.7103, -1.5292, -1.5000],
         [ 0.2344, -0.3306, -0.2631,  ..., -0.8373,  0.6459,  0.7040],
         [ 1.2672, -0.8309, -1.1293,  ..., -0.1243,  1.0640,  0.4718]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 89.478, Val Loss : 100.209
======> Trajectory Loss : 8.154, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.808, BelowGroundPenalize Loss : 0.563
===> [Minibatch 12/129].........IDX = 0 :  tensor([[[ 0.1551,  0.0311, -0.6798,  ..., -0.8520, -0.6859,  0.3193],
         [-0.4377,  0.7915, -1.6259,  ..., -0.9288, -0.3157, -0.1078],
         [-0.1209, -1.3311, -0.1316,  ...,  0.2729,  0.4742, -0.6258],
         ...,
         [-0.7436, -0.4730, -1.9292,  ...,  0.3987, -0.4673, -1.6545],
         [-0.8084, -1.2023,  0.6455,  ..., -0.4643, -1.7343, -0.1760],
         [-0.6463,  1.2177,  0.8433,  ..., -1.2955, -0.5854,  1.5122]],

        [[-0.5301,  0.5556, -0.2114,  ...,  0.4935, -1.9761, -0.3806],
         [-1.0406,  1.0545, -0.5699,  ..., -0.5767, -1.3288, -0.5577],
         [ 0.9589, -0.3771, -0.0470,  ...,  0.7101, -0.2564, -0.4742],
         ...,
         [-1.6147,  0.6194, -0.4007,  ...,  0.7494, -0.5152,  1.8232],
         [ 2.6001,  0.2592, -0.5541,  ..., -1.9126,  0.7791, -0.0850],
         [ 0.0614,  0.0777, -0.5811,  ...,  0.1470, -0.7764,  0.5206]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[-0.7193,  0.4958,  0.5098,  ..., -0.3329, -0.0545,  0.6821],
         [ 1.5973,  2.1020, -1.3836,  ..., -0.8566,  1.1430, -1.1743],
         [ 0.3849,  1.2465, -0.9767,  ..., -1.0826, -0.5387,  2.3994],
         ...,
         [-2.4164, -0.2923, -0.8806,  ..., -0.6563, -1.0210, -0.1178],
         [ 0.3364,  0.1559, -0.0604,  ...,  0.1173, -0.7984,  0.5165],
         [-0.0377, -0.1806, -0.8807,  ...,  0.5868, -0.1245,  1.2721]],

        [[-0.0985,  1.0194,  0.1608,  ...,  0.5680,  0.9345,  1.0842],
         [-0.9451, -1.2857, -0.9596,  ...,  2.0778, -0.5561,  0.3100],
         [-1.2140, -0.5980,  0.3156,  ...,  0.0697, -0.3620,  0.2956],
         ...,
         [-2.0857, -0.7479, -0.1087,  ..., -1.7103, -1.5292, -1.5000],
         [ 0.2344, -0.3306, -0.2631,  ..., -0.8373,  0.6459,  0.7040],
         [ 1.2672, -0.8309, -1.1293,  ..., -0.1243,  1.0640,  0.4718]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 0.1525,  0.0358, -0.6834,  ..., -0.8492, -0.6809,  0.3154],
         [-0.4427,  0.7850, -1.6276,  ..., -0.9317, -0.3201, -0.1078],
         [-0.1207, -1.3331, -0.1368,  ...,  0.2687,  0.4795, -0.6303],
         ...,
         [-0.7506, -0.4684, -1.9282,  ...,  0.4031, -0.4619, -1.6618],
         [-0.8079, -1.1983,  0.6418,  ..., -0.4689, -1.7302, -0.1802],
         [-0.6491,  1.2193,  0.8444,  ..., -1.2922, -0.5834,  1.5104]],

        [[-0.5382,  0.5589, -0.2186,  ...,  0.4952, -1.9838, -0.3826],
         [-1.0494,  1.0554, -0.5791,  ..., -0.5734, -1.3373, -0.5628],
         [ 0.9502, -0.3863, -0.0456,  ...,  0.7015, -0.2654, -0.4653],
         ...,
         [-1.6212,  0.6188, -0.4095,  ...,  0.7533, -0.5224,  1.8236],
         [ 2.6002,  0.2593, -0.5592,  ..., -1.9116,  0.7721, -0.0888],
         [ 0.0518,  0.0678, -0.5775,  ...,  0.1373, -0.7864,  0.5300]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[-0.7198,  0.4909,  0.5070,  ..., -0.3371, -0.0586,  0.6883],
         [ 1.5981,  2.0999, -1.3812,  ..., -0.8578,  1.1377, -1.1717],
         [ 0.3893,  1.2496, -0.9813,  ..., -1.0873, -0.5343,  2.3953],
         ...,
         [-2.4189, -0.2932, -0.8806,  ..., -0.6533, -1.0204, -0.1215],
         [ 0.3383,  0.1548, -0.0636,  ...,  0.1151, -0.8021,  0.5196],
         [-0.0335, -0.1782, -0.8852,  ...,  0.5835, -0.1269,  1.2768]],

        [[-0.1017,  1.0168,  0.1633,  ...,  0.5694,  0.9358,  1.0868],
         [-0.9467, -1.2872, -0.9573,  ...,  2.0800, -0.5581,  0.3102],
         [-1.2098, -0.5961,  0.3187,  ...,  0.0740, -0.3633,  0.2915],
         ...,
         [-2.0857, -0.7498, -0.1128,  ..., -1.7150, -1.5246, -1.4987],
         [ 0.2321, -0.3327, -0.2611,  ..., -0.8351,  0.6444,  0.7063],
         [ 1.2650, -0.8289, -1.1246,  ..., -0.1221,  1.0627,  0.4681]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 83.660, Val Loss : 125.189
======> Trajectory Loss : 7.244, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.759, BelowGroundPenalize Loss : 0.481
===> [Minibatch 13/129].........IDX = 0 :  tensor([[[ 0.1525,  0.0358, -0.6834,  ..., -0.8492, -0.6809,  0.3154],
         [-0.4427,  0.7850, -1.6276,  ..., -0.9317, -0.3201, -0.1078],
         [-0.1207, -1.3331, -0.1368,  ...,  0.2687,  0.4795, -0.6303],
         ...,
         [-0.7506, -0.4684, -1.9282,  ...,  0.4031, -0.4619, -1.6618],
         [-0.8079, -1.1983,  0.6418,  ..., -0.4689, -1.7302, -0.1802],
         [-0.6491,  1.2193,  0.8444,  ..., -1.2922, -0.5834,  1.5104]],

        [[-0.5382,  0.5589, -0.2186,  ...,  0.4952, -1.9838, -0.3826],
         [-1.0494,  1.0554, -0.5791,  ..., -0.5734, -1.3373, -0.5628],
         [ 0.9502, -0.3863, -0.0456,  ...,  0.7015, -0.2654, -0.4653],
         ...,
         [-1.6212,  0.6188, -0.4095,  ...,  0.7533, -0.5224,  1.8236],
         [ 2.6002,  0.2593, -0.5592,  ..., -1.9116,  0.7721, -0.0888],
         [ 0.0518,  0.0678, -0.5775,  ...,  0.1373, -0.7864,  0.5300]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[-0.7198,  0.4909,  0.5070,  ..., -0.3371, -0.0586,  0.6883],
         [ 1.5981,  2.0999, -1.3812,  ..., -0.8578,  1.1377, -1.1717],
         [ 0.3893,  1.2496, -0.9813,  ..., -1.0873, -0.5343,  2.3953],
         ...,
         [-2.4189, -0.2932, -0.8806,  ..., -0.6533, -1.0204, -0.1215],
         [ 0.3383,  0.1548, -0.0636,  ...,  0.1151, -0.8021,  0.5196],
         [-0.0335, -0.1782, -0.8852,  ...,  0.5835, -0.1269,  1.2768]],

        [[-0.1017,  1.0168,  0.1633,  ...,  0.5694,  0.9358,  1.0868],
         [-0.9467, -1.2872, -0.9573,  ...,  2.0800, -0.5581,  0.3102],
         [-1.2098, -0.5961,  0.3187,  ...,  0.0740, -0.3633,  0.2915],
         ...,
         [-2.0857, -0.7498, -0.1128,  ..., -1.7150, -1.5246, -1.4987],
         [ 0.2321, -0.3327, -0.2611,  ..., -0.8351,  0.6444,  0.7063],
         [ 1.2650, -0.8289, -1.1246,  ..., -0.1221,  1.0627,  0.4681]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 0.1499,  0.0415, -0.6882,  ..., -0.8456, -0.6749,  0.3106],
         [-0.4493,  0.7774, -1.6317,  ..., -0.9352, -0.3225, -0.1109],
         [-0.1204, -1.3355, -0.1411,  ...,  0.2650,  0.4839, -0.6342],
         ...,
         [-0.7576, -0.4646, -1.9263,  ...,  0.4085, -0.4574, -1.6681],
         [-0.8075, -1.1950,  0.6386,  ..., -0.4727, -1.7265, -0.1837],
         [-0.6515,  1.2213,  0.8453,  ..., -1.2888, -0.5814,  1.5087]],

        [[-0.5456,  0.5637, -0.2267,  ...,  0.4985, -1.9901, -0.3867],
         [-1.0577,  1.0577, -0.5885,  ..., -0.5691, -1.3451, -0.5689],
         [ 0.9413, -0.3956, -0.0430,  ...,  0.6927, -0.2746, -0.4562],
         ...,
         [-1.6267,  0.6199, -0.4188,  ...,  0.7584, -0.5280,  1.8222],
         [ 2.6020,  0.2611, -0.5653,  ..., -1.9090,  0.7655, -0.0940],
         [ 0.0431,  0.0595, -0.5759,  ...,  0.1289, -0.7958,  0.5374]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[-0.7221,  0.4868,  0.5061,  ..., -0.3388, -0.0604,  0.6941],
         [ 1.5988,  2.0978, -1.3788,  ..., -0.8588,  1.1332, -1.1692],
         [ 0.3934,  1.2525, -0.9854,  ..., -1.0915, -0.5304,  2.3917],
         ...,
         [-2.4213, -0.2936, -0.8805,  ..., -0.6502, -1.0200, -0.1255],
         [ 0.3400,  0.1537, -0.0664,  ...,  0.1131, -0.8054,  0.5222],
         [-0.0311, -0.1768, -0.8857,  ...,  0.5860, -0.1263,  1.2801]],

        [[-0.1046,  1.0145,  0.1654,  ...,  0.5707,  0.9368,  1.0890],
         [-0.9482, -1.2888, -0.9551,  ...,  2.0821, -0.5598,  0.3105],
         [-1.2060, -0.5945,  0.3216,  ...,  0.0778, -0.3645,  0.2879],
         ...,
         [-2.0861, -0.7523, -0.1165,  ..., -1.7194, -1.5206, -1.4968],
         [ 0.2300, -0.3346, -0.2593,  ..., -0.8330,  0.6428,  0.7084],
         [ 1.2654, -0.8286, -1.1226,  ..., -0.1213,  1.0619,  0.4674]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 84.881, Val Loss : 105.259
======> Trajectory Loss : 11.006, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.738, BelowGroundPenalize Loss : 0.035
===> [Minibatch 14/129].........IDX = 0 :  tensor([[[ 0.1499,  0.0415, -0.6882,  ..., -0.8456, -0.6749,  0.3106],
         [-0.4493,  0.7774, -1.6317,  ..., -0.9352, -0.3225, -0.1109],
         [-0.1204, -1.3355, -0.1411,  ...,  0.2650,  0.4839, -0.6342],
         ...,
         [-0.7576, -0.4646, -1.9263,  ...,  0.4085, -0.4574, -1.6681],
         [-0.8075, -1.1950,  0.6386,  ..., -0.4727, -1.7265, -0.1837],
         [-0.6515,  1.2213,  0.8453,  ..., -1.2888, -0.5814,  1.5087]],

        [[-0.5456,  0.5637, -0.2267,  ...,  0.4985, -1.9901, -0.3867],
         [-1.0577,  1.0577, -0.5885,  ..., -0.5691, -1.3451, -0.5689],
         [ 0.9413, -0.3956, -0.0430,  ...,  0.6927, -0.2746, -0.4562],
         ...,
         [-1.6267,  0.6199, -0.4188,  ...,  0.7584, -0.5280,  1.8222],
         [ 2.6020,  0.2611, -0.5653,  ..., -1.9090,  0.7655, -0.0940],
         [ 0.0431,  0.0595, -0.5759,  ...,  0.1289, -0.7958,  0.5374]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[-0.7221,  0.4868,  0.5061,  ..., -0.3388, -0.0604,  0.6941],
         [ 1.5988,  2.0978, -1.3788,  ..., -0.8588,  1.1332, -1.1692],
         [ 0.3934,  1.2525, -0.9854,  ..., -1.0915, -0.5304,  2.3917],
         ...,
         [-2.4213, -0.2936, -0.8805,  ..., -0.6502, -1.0200, -0.1255],
         [ 0.3400,  0.1537, -0.0664,  ...,  0.1131, -0.8054,  0.5222],
         [-0.0311, -0.1768, -0.8857,  ...,  0.5860, -0.1263,  1.2801]],

        [[-0.1046,  1.0145,  0.1654,  ...,  0.5707,  0.9368,  1.0890],
         [-0.9482, -1.2888, -0.9551,  ...,  2.0821, -0.5598,  0.3105],
         [-1.2060, -0.5945,  0.3216,  ...,  0.0778, -0.3645,  0.2879],
         ...,
         [-2.0861, -0.7523, -0.1165,  ..., -1.7194, -1.5206, -1.4968],
         [ 0.2300, -0.3346, -0.2593,  ..., -0.8330,  0.6428,  0.7084],
         [ 1.2654, -0.8286, -1.1226,  ..., -0.1213,  1.0619,  0.4674]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 0.1480,  0.0476, -0.6937,  ..., -0.8407, -0.6684,  0.3058],
         [-0.4565,  0.7694, -1.6328,  ..., -0.9368, -0.3252, -0.1110],
         [-0.1202, -1.3382, -0.1446,  ...,  0.2619,  0.4876, -0.6374],
         ...,
         [-0.7636, -0.4609, -1.9251,  ...,  0.4145, -0.4529, -1.6738],
         [-0.8115, -1.1943,  0.6383,  ..., -0.4765, -1.7254, -0.1861],
         [-0.6530,  1.2201,  0.8481,  ..., -1.2846, -0.5790,  1.5082]],

        [[-0.5522,  0.5699, -0.2353,  ...,  0.5034, -1.9947, -0.3927],
         [-1.0653,  1.0613, -0.5982,  ..., -0.5636, -1.3523, -0.5762],
         [ 0.9325, -0.4048, -0.0406,  ...,  0.6842, -0.2836, -0.4473],
         ...,
         [-1.6310,  0.6230, -0.4284,  ...,  0.7648, -0.5320,  1.8186],
         [ 2.6058,  0.2646, -0.5724,  ..., -1.9048,  0.7592, -0.1005],
         [ 0.0358,  0.0542, -0.5778,  ...,  0.1225, -0.8045,  0.5404]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[-0.7231,  0.4835,  0.5048,  ..., -0.3413, -0.0625,  0.6992],
         [ 1.5989,  2.0965, -1.3778,  ..., -0.8596,  1.1290, -1.1670],
         [ 0.3970,  1.2551, -0.9892,  ..., -1.0953, -0.5270,  2.3883],
         ...,
         [-2.4236, -0.2940, -0.8805,  ..., -0.6472, -1.0196, -0.1298],
         [ 0.3417,  0.1528, -0.0688,  ...,  0.1113, -0.8083,  0.5244],
         [-0.0306, -0.1752, -0.8826,  ...,  0.5908, -0.1262,  1.2789]],

        [[-0.1075,  1.0113,  0.1685,  ...,  0.5714,  0.9387,  1.0915],
         [-0.9508, -1.2917, -0.9519,  ...,  2.0850, -0.5596,  0.3124],
         [-1.2029, -0.5933,  0.3241,  ...,  0.0811, -0.3657,  0.2848],
         ...,
         [-2.0871, -0.7557, -0.1198,  ..., -1.7237, -1.5171, -1.4943],
         [ 0.2281, -0.3364, -0.2576,  ..., -0.8312,  0.6410,  0.7103],
         [ 1.2693, -0.8310, -1.1242,  ..., -0.1226,  1.0614,  0.4704]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 73.269, Val Loss : 87.667
======> Trajectory Loss : 6.999, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.662, BelowGroundPenalize Loss : 0.081
===> [Minibatch 15/129].........IDX = 0 :  tensor([[[ 0.1480,  0.0476, -0.6937,  ..., -0.8407, -0.6684,  0.3058],
         [-0.4565,  0.7694, -1.6328,  ..., -0.9368, -0.3252, -0.1110],
         [-0.1202, -1.3382, -0.1446,  ...,  0.2619,  0.4876, -0.6374],
         ...,
         [-0.7636, -0.4609, -1.9251,  ...,  0.4145, -0.4529, -1.6738],
         [-0.8115, -1.1943,  0.6383,  ..., -0.4765, -1.7254, -0.1861],
         [-0.6530,  1.2201,  0.8481,  ..., -1.2846, -0.5790,  1.5082]],

        [[-0.5522,  0.5699, -0.2353,  ...,  0.5034, -1.9947, -0.3927],
         [-1.0653,  1.0613, -0.5982,  ..., -0.5636, -1.3523, -0.5762],
         [ 0.9325, -0.4048, -0.0406,  ...,  0.6842, -0.2836, -0.4473],
         ...,
         [-1.6310,  0.6230, -0.4284,  ...,  0.7648, -0.5320,  1.8186],
         [ 2.6058,  0.2646, -0.5724,  ..., -1.9048,  0.7592, -0.1005],
         [ 0.0358,  0.0542, -0.5778,  ...,  0.1225, -0.8045,  0.5404]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[-0.7231,  0.4835,  0.5048,  ..., -0.3413, -0.0625,  0.6992],
         [ 1.5989,  2.0965, -1.3778,  ..., -0.8596,  1.1290, -1.1670],
         [ 0.3970,  1.2551, -0.9892,  ..., -1.0953, -0.5270,  2.3883],
         ...,
         [-2.4236, -0.2940, -0.8805,  ..., -0.6472, -1.0196, -0.1298],
         [ 0.3417,  0.1528, -0.0688,  ...,  0.1113, -0.8083,  0.5244],
         [-0.0306, -0.1752, -0.8826,  ...,  0.5908, -0.1262,  1.2789]],

        [[-0.1075,  1.0113,  0.1685,  ...,  0.5714,  0.9387,  1.0915],
         [-0.9508, -1.2917, -0.9519,  ...,  2.0850, -0.5596,  0.3124],
         [-1.2029, -0.5933,  0.3241,  ...,  0.0811, -0.3657,  0.2848],
         ...,
         [-2.0871, -0.7557, -0.1198,  ..., -1.7237, -1.5171, -1.4943],
         [ 0.2281, -0.3364, -0.2576,  ..., -0.8312,  0.6410,  0.7103],
         [ 1.2693, -0.8310, -1.1242,  ..., -0.1226,  1.0614,  0.4704]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 0.1443,  0.0490, -0.6960,  ..., -0.8390, -0.6668,  0.3029],
         [-0.4643,  0.7616, -1.6347,  ..., -0.9383, -0.3268, -0.1121],
         [-0.1200, -1.3401, -0.1479,  ...,  0.2592,  0.4910, -0.6404],
         ...,
         [-0.7678, -0.4567, -1.9251,  ...,  0.4210, -0.4480, -1.6793],
         [-0.8163, -1.1941,  0.6391,  ..., -0.4797, -1.7254, -0.1877],
         [-0.6548,  1.2197,  0.8512,  ..., -1.2797, -0.5778,  1.5081]],

        [[-0.5581,  0.5769, -0.2445,  ...,  0.5093, -1.9980, -0.3999],
         [-1.0725,  1.0658, -0.6080,  ..., -0.5574, -1.3593, -0.5842],
         [ 0.9243, -0.4135, -0.0390,  ...,  0.6763, -0.2922, -0.4390],
         ...,
         [-1.6344,  0.6275, -0.4383,  ...,  0.7721, -0.5347,  1.8135],
         [ 2.6107,  0.2692, -0.5800,  ..., -1.8996,  0.7529, -0.1079],
         [ 0.0297,  0.0515, -0.5814,  ...,  0.1179, -0.8129,  0.5404]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[-0.7279,  0.4782,  0.5081,  ..., -0.3378, -0.0597,  0.7039],
         [ 1.5988,  2.0953, -1.3765,  ..., -0.8601,  1.1253, -1.1648],
         [ 0.4002,  1.2574, -0.9924,  ..., -1.0986, -0.5238,  2.3853],
         ...,
         [-2.4240, -0.2954, -0.8803,  ..., -0.6468, -1.0203, -0.1280],
         [ 0.3429,  0.1520, -0.0708,  ...,  0.1098, -0.8108,  0.5264],
         [-0.0310, -0.1736, -0.8795,  ...,  0.5966, -0.1259,  1.2784]],

        [[-0.1090,  1.0116,  0.1691,  ...,  0.5738,  0.9374,  1.0925],
         [-0.9529, -1.2939, -0.9492,  ...,  2.0874, -0.5598,  0.3137],
         [-1.1999, -0.5921,  0.3265,  ...,  0.0842, -0.3667,  0.2819],
         ...,
         [-2.0863, -0.7543, -0.1226,  ..., -1.7251, -1.5136, -1.4957],
         [ 0.2264, -0.3380, -0.2561,  ..., -0.8295,  0.6398,  0.7120],
         [ 1.2713, -0.8324, -1.1244,  ..., -0.1229,  1.0606,  0.4720]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 72.449, Val Loss : 83.276
======> Trajectory Loss : 10.232, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.615, BelowGroundPenalize Loss : 0.765
===> [Minibatch 16/129].........IDX = 0 :  tensor([[[ 0.1443,  0.0490, -0.6960,  ..., -0.8390, -0.6668,  0.3029],
         [-0.4643,  0.7616, -1.6347,  ..., -0.9383, -0.3268, -0.1121],
         [-0.1200, -1.3401, -0.1479,  ...,  0.2592,  0.4910, -0.6404],
         ...,
         [-0.7678, -0.4567, -1.9251,  ...,  0.4210, -0.4480, -1.6793],
         [-0.8163, -1.1941,  0.6391,  ..., -0.4797, -1.7254, -0.1877],
         [-0.6548,  1.2197,  0.8512,  ..., -1.2797, -0.5778,  1.5081]],

        [[-0.5581,  0.5769, -0.2445,  ...,  0.5093, -1.9980, -0.3999],
         [-1.0725,  1.0658, -0.6080,  ..., -0.5574, -1.3593, -0.5842],
         [ 0.9243, -0.4135, -0.0390,  ...,  0.6763, -0.2922, -0.4390],
         ...,
         [-1.6344,  0.6275, -0.4383,  ...,  0.7721, -0.5347,  1.8135],
         [ 2.6107,  0.2692, -0.5800,  ..., -1.8996,  0.7529, -0.1079],
         [ 0.0297,  0.0515, -0.5814,  ...,  0.1179, -0.8129,  0.5404]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[-0.7279,  0.4782,  0.5081,  ..., -0.3378, -0.0597,  0.7039],
         [ 1.5988,  2.0953, -1.3765,  ..., -0.8601,  1.1253, -1.1648],
         [ 0.4002,  1.2574, -0.9924,  ..., -1.0986, -0.5238,  2.3853],
         ...,
         [-2.4240, -0.2954, -0.8803,  ..., -0.6468, -1.0203, -0.1280],
         [ 0.3429,  0.1520, -0.0708,  ...,  0.1098, -0.8108,  0.5264],
         [-0.0310, -0.1736, -0.8795,  ...,  0.5966, -0.1259,  1.2784]],

        [[-0.1090,  1.0116,  0.1691,  ...,  0.5738,  0.9374,  1.0925],
         [-0.9529, -1.2939, -0.9492,  ...,  2.0874, -0.5598,  0.3137],
         [-1.1999, -0.5921,  0.3265,  ...,  0.0842, -0.3667,  0.2819],
         ...,
         [-2.0863, -0.7543, -0.1226,  ..., -1.7251, -1.5136, -1.4957],
         [ 0.2264, -0.3380, -0.2561,  ..., -0.8295,  0.6398,  0.7120],
         [ 1.2713, -0.8324, -1.1244,  ..., -0.1229,  1.0606,  0.4720]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 0.1404,  0.0495, -0.6974,  ..., -0.8376, -0.6661,  0.3010],
         [-0.4723,  0.7534, -1.6351,  ..., -0.9389, -0.3293, -0.1115],
         [-0.1196, -1.3421, -0.1507,  ...,  0.2569,  0.4942, -0.6429],
         ...,
         [-0.7736, -0.4603, -1.9204,  ...,  0.4185, -0.4504, -1.6772],
         [-0.8212, -1.1943,  0.6403,  ..., -0.4816, -1.7257, -0.1888],
         [-0.6581,  1.2158,  0.8566,  ..., -1.2765, -0.5799,  1.5092]],

        [[-0.5634,  0.5848, -0.2541,  ...,  0.5162, -2.0001, -0.4079],
         [-1.0794,  1.0710, -0.6178,  ..., -0.5507, -1.3662, -0.5929],
         [ 0.9168, -0.4214, -0.0386,  ...,  0.6695, -0.3000, -0.4313],
         ...,
         [-1.6370,  0.6332, -0.4484,  ...,  0.7801, -0.5366,  1.8072],
         [ 2.6167,  0.2750, -0.5882,  ..., -1.8934,  0.7458, -0.1161],
         [ 0.0247,  0.0510, -0.5866,  ...,  0.1149, -0.8207,  0.5382]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[-0.7320,  0.4736,  0.5110,  ..., -0.3349, -0.0573,  0.7082],
         [ 1.5987,  2.0930, -1.3729,  ..., -0.8588,  1.1238, -1.1624],
         [ 0.4030,  1.2594, -0.9949,  ..., -1.1014, -0.5207,  2.3830],
         ...,
         [-2.4245, -0.2968, -0.8800,  ..., -0.6464, -1.0208, -0.1263],
         [ 0.3419,  0.1508, -0.0717,  ...,  0.1091, -0.8121,  0.5285],
         [-0.0314, -0.1732, -0.8769,  ...,  0.6023, -0.1246,  1.2783]],

        [[-0.1103,  1.0118,  0.1697,  ...,  0.5761,  0.9362,  1.0934],
         [-0.9545, -1.2953, -0.9470,  ...,  2.0892, -0.5611,  0.3142],
         [-1.1965, -0.5901,  0.3286,  ...,  0.0877, -0.3671,  0.2786],
         ...,
         [-2.0856, -0.7531, -0.1251,  ..., -1.7263, -1.5104, -1.4972],
         [ 0.2249, -0.3395, -0.2549,  ..., -0.8280,  0.6396,  0.7135],
         [ 1.2724, -0.8335, -1.1239,  ..., -0.1228,  1.0598,  0.4729]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 69.003, Val Loss : 71.797
======> Trajectory Loss : 9.733, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.584, BelowGroundPenalize Loss : 0.887
===> [Minibatch 17/129].........IDX = 0 :  tensor([[[ 0.1404,  0.0495, -0.6974,  ..., -0.8376, -0.6661,  0.3010],
         [-0.4723,  0.7534, -1.6351,  ..., -0.9389, -0.3293, -0.1115],
         [-0.1196, -1.3421, -0.1507,  ...,  0.2569,  0.4942, -0.6429],
         ...,
         [-0.7736, -0.4603, -1.9204,  ...,  0.4185, -0.4504, -1.6772],
         [-0.8212, -1.1943,  0.6403,  ..., -0.4816, -1.7257, -0.1888],
         [-0.6581,  1.2158,  0.8566,  ..., -1.2765, -0.5799,  1.5092]],

        [[-0.5634,  0.5848, -0.2541,  ...,  0.5162, -2.0001, -0.4079],
         [-1.0794,  1.0710, -0.6178,  ..., -0.5507, -1.3662, -0.5929],
         [ 0.9168, -0.4214, -0.0386,  ...,  0.6695, -0.3000, -0.4313],
         ...,
         [-1.6370,  0.6332, -0.4484,  ...,  0.7801, -0.5366,  1.8072],
         [ 2.6167,  0.2750, -0.5882,  ..., -1.8934,  0.7458, -0.1161],
         [ 0.0247,  0.0510, -0.5866,  ...,  0.1149, -0.8207,  0.5382]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[-0.7320,  0.4736,  0.5110,  ..., -0.3349, -0.0573,  0.7082],
         [ 1.5987,  2.0930, -1.3729,  ..., -0.8588,  1.1238, -1.1624],
         [ 0.4030,  1.2594, -0.9949,  ..., -1.1014, -0.5207,  2.3830],
         ...,
         [-2.4245, -0.2968, -0.8800,  ..., -0.6464, -1.0208, -0.1263],
         [ 0.3419,  0.1508, -0.0717,  ...,  0.1091, -0.8121,  0.5285],
         [-0.0314, -0.1732, -0.8769,  ...,  0.6023, -0.1246,  1.2783]],

        [[-0.1103,  1.0118,  0.1697,  ...,  0.5761,  0.9362,  1.0934],
         [-0.9545, -1.2953, -0.9470,  ...,  2.0892, -0.5611,  0.3142],
         [-1.1965, -0.5901,  0.3286,  ...,  0.0877, -0.3671,  0.2786],
         ...,
         [-2.0856, -0.7531, -0.1251,  ..., -1.7263, -1.5104, -1.4972],
         [ 0.2249, -0.3395, -0.2549,  ..., -0.8280,  0.6396,  0.7135],
         [ 1.2724, -0.8335, -1.1239,  ..., -0.1228,  1.0598,  0.4729]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 0.1359,  0.0493, -0.6981,  ..., -0.8347, -0.6649,  0.3001],
         [-0.4805,  0.7451, -1.6363,  ..., -0.9411, -0.3335, -0.1124],
         [-0.1190, -1.3446, -0.1528,  ...,  0.2550,  0.4966, -0.6450],
         ...,
         [-0.7786, -0.4635, -1.9161,  ...,  0.4165, -0.4525, -1.6753],
         [-0.8253, -1.1950,  0.6414,  ..., -0.4828, -1.7256, -0.1891],
         [-0.6611,  1.2127,  0.8618,  ..., -1.2736, -0.5819,  1.5102]],

        [[-0.5681,  0.5928, -0.2637,  ...,  0.5233, -2.0016, -0.4163],
         [-1.0859,  1.0765, -0.6274,  ..., -0.5437, -1.3735, -0.6020],
         [ 0.9100, -0.4286, -0.0388,  ...,  0.6633, -0.3072, -0.4242],
         ...,
         [-1.6390,  0.6393, -0.4583,  ...,  0.7883, -0.5380,  1.8005],
         [ 2.6231,  0.2810, -0.5965,  ..., -1.8871,  0.7385, -0.1245],
         [ 0.0207,  0.0520, -0.5928,  ...,  0.1131, -0.8283,  0.5346]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[-0.7377,  0.4674,  0.5165,  ..., -0.3294, -0.0520,  0.7142],
         [ 1.5988,  2.0930, -1.3737,  ..., -0.8601,  1.1202, -1.1619],
         [ 0.4056,  1.2612, -0.9973,  ..., -1.1040, -0.5179,  2.3808],
         ...,
         [-2.4247, -0.2970, -0.8812,  ..., -0.6462, -1.0221, -0.1253],
         [ 0.3386,  0.1496, -0.0718,  ...,  0.1094, -0.8124,  0.5313],
         [-0.0309, -0.1777, -0.8780,  ...,  0.6087, -0.1204,  1.2804]],

        [[-0.1062,  1.0168,  0.1649,  ...,  0.5813,  0.9311,  1.0889],
         [-0.9565, -1.2974, -0.9446,  ...,  2.0913, -0.5609,  0.3155],
         [-1.1937, -0.5888,  0.3306,  ...,  0.0906, -0.3678,  0.2759],
         ...,
         [-2.0856, -0.7540, -0.1275,  ..., -1.7288, -1.5074, -1.4969],
         [ 0.2239, -0.3407, -0.2544,  ..., -0.8267,  0.6420,  0.7145],
         [ 1.2696, -0.8321, -1.1202,  ..., -0.1200,  1.0582,  0.4706]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 54.123, Val Loss : 66.385
======> Trajectory Loss : 4.807, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.493, BelowGroundPenalize Loss : 0.063
===> [Minibatch 18/129].........IDX = 0 :  tensor([[[ 0.1359,  0.0493, -0.6981,  ..., -0.8347, -0.6649,  0.3001],
         [-0.4805,  0.7451, -1.6363,  ..., -0.9411, -0.3335, -0.1124],
         [-0.1190, -1.3446, -0.1528,  ...,  0.2550,  0.4966, -0.6450],
         ...,
         [-0.7786, -0.4635, -1.9161,  ...,  0.4165, -0.4525, -1.6753],
         [-0.8253, -1.1950,  0.6414,  ..., -0.4828, -1.7256, -0.1891],
         [-0.6611,  1.2127,  0.8618,  ..., -1.2736, -0.5819,  1.5102]],

        [[-0.5681,  0.5928, -0.2637,  ...,  0.5233, -2.0016, -0.4163],
         [-1.0859,  1.0765, -0.6274,  ..., -0.5437, -1.3735, -0.6020],
         [ 0.9100, -0.4286, -0.0388,  ...,  0.6633, -0.3072, -0.4242],
         ...,
         [-1.6390,  0.6393, -0.4583,  ...,  0.7883, -0.5380,  1.8005],
         [ 2.6231,  0.2810, -0.5965,  ..., -1.8871,  0.7385, -0.1245],
         [ 0.0207,  0.0520, -0.5928,  ...,  0.1131, -0.8283,  0.5346]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[-0.7377,  0.4674,  0.5165,  ..., -0.3294, -0.0520,  0.7142],
         [ 1.5988,  2.0930, -1.3737,  ..., -0.8601,  1.1202, -1.1619],
         [ 0.4056,  1.2612, -0.9973,  ..., -1.1040, -0.5179,  2.3808],
         ...,
         [-2.4247, -0.2970, -0.8812,  ..., -0.6462, -1.0221, -0.1253],
         [ 0.3386,  0.1496, -0.0718,  ...,  0.1094, -0.8124,  0.5313],
         [-0.0309, -0.1777, -0.8780,  ...,  0.6087, -0.1204,  1.2804]],

        [[-0.1062,  1.0168,  0.1649,  ...,  0.5813,  0.9311,  1.0889],
         [-0.9565, -1.2974, -0.9446,  ...,  2.0913, -0.5609,  0.3155],
         [-1.1937, -0.5888,  0.3306,  ...,  0.0906, -0.3678,  0.2759],
         ...,
         [-2.0856, -0.7540, -0.1275,  ..., -1.7288, -1.5074, -1.4969],
         [ 0.2239, -0.3407, -0.2544,  ..., -0.8267,  0.6420,  0.7145],
         [ 1.2696, -0.8321, -1.1202,  ..., -0.1200,  1.0582,  0.4706]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 0.1307,  0.0485, -0.6983,  ..., -0.8307, -0.6633,  0.3002],
         [-0.4878,  0.7376, -1.6371,  ..., -0.9429, -0.3371, -0.1130],
         [-0.1182, -1.3462, -0.1547,  ...,  0.2532,  0.4988, -0.6469],
         ...,
         [-0.7838, -0.4666, -1.9116,  ...,  0.4157, -0.4541, -1.6732],
         [-0.8282, -1.1952,  0.6423,  ..., -0.4835, -1.7253, -0.1896],
         [-0.6638,  1.2096,  0.8667,  ..., -1.2703, -0.5837,  1.5114]],

        [[-0.5721,  0.6010, -0.2733,  ...,  0.5305, -2.0025, -0.4252],
         [-1.0921,  1.0819, -0.6367,  ..., -0.5368, -1.3807, -0.6110],
         [ 0.9035, -0.4355, -0.0392,  ...,  0.6576, -0.3139, -0.4176],
         ...,
         [-1.6406,  0.6457, -0.4681,  ...,  0.7965, -0.5393,  1.7934],
         [ 2.6299,  0.2874, -0.6049,  ..., -1.8805,  0.7310, -0.1331],
         [ 0.0174,  0.0539, -0.5991,  ...,  0.1120, -0.8359,  0.5299]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[-0.7431,  0.4615,  0.5216,  ..., -0.3242, -0.0470,  0.7197],
         [ 1.5979,  2.0912, -1.3718,  ..., -0.8600,  1.1183, -1.1592],
         [ 0.4079,  1.2632, -0.9998,  ..., -1.1063, -0.5154,  2.3786],
         ...,
         [-2.4252, -0.2982, -0.8814,  ..., -0.6463, -1.0226, -0.1238],
         [ 0.3357,  0.1487, -0.0719,  ...,  0.1097, -0.8127,  0.5338],
         [-0.0306, -0.1818, -0.8790,  ...,  0.6147, -0.1164,  1.2823]],

        [[-0.1025,  1.0212,  0.1606,  ...,  0.5860,  0.9266,  1.0848],
         [-0.9573, -1.2980, -0.9429,  ...,  2.0927, -0.5626,  0.3152],
         [-1.1940, -0.5911,  0.3324,  ...,  0.0905, -0.3699,  0.2763],
         ...,
         [-2.0856, -0.7547, -0.1296,  ..., -1.7309, -1.5047, -1.4969],
         [ 0.2224, -0.3418, -0.2529,  ..., -0.8255,  0.6399,  0.7160],
         [ 1.2665, -0.8306, -1.1165,  ..., -0.1171,  1.0567,  0.4681]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 51.913, Val Loss : 62.516
======> Trajectory Loss : 4.962, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.469, BelowGroundPenalize Loss : 0.044
===> [Minibatch 19/129].........IDX = 0 :  tensor([[[ 0.1307,  0.0485, -0.6983,  ..., -0.8307, -0.6633,  0.3002],
         [-0.4878,  0.7376, -1.6371,  ..., -0.9429, -0.3371, -0.1130],
         [-0.1182, -1.3462, -0.1547,  ...,  0.2532,  0.4988, -0.6469],
         ...,
         [-0.7838, -0.4666, -1.9116,  ...,  0.4157, -0.4541, -1.6732],
         [-0.8282, -1.1952,  0.6423,  ..., -0.4835, -1.7253, -0.1896],
         [-0.6638,  1.2096,  0.8667,  ..., -1.2703, -0.5837,  1.5114]],

        [[-0.5721,  0.6010, -0.2733,  ...,  0.5305, -2.0025, -0.4252],
         [-1.0921,  1.0819, -0.6367,  ..., -0.5368, -1.3807, -0.6110],
         [ 0.9035, -0.4355, -0.0392,  ...,  0.6576, -0.3139, -0.4176],
         ...,
         [-1.6406,  0.6457, -0.4681,  ...,  0.7965, -0.5393,  1.7934],
         [ 2.6299,  0.2874, -0.6049,  ..., -1.8805,  0.7310, -0.1331],
         [ 0.0174,  0.0539, -0.5991,  ...,  0.1120, -0.8359,  0.5299]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[-0.7431,  0.4615,  0.5216,  ..., -0.3242, -0.0470,  0.7197],
         [ 1.5979,  2.0912, -1.3718,  ..., -0.8600,  1.1183, -1.1592],
         [ 0.4079,  1.2632, -0.9998,  ..., -1.1063, -0.5154,  2.3786],
         ...,
         [-2.4252, -0.2982, -0.8814,  ..., -0.6463, -1.0226, -0.1238],
         [ 0.3357,  0.1487, -0.0719,  ...,  0.1097, -0.8127,  0.5338],
         [-0.0306, -0.1818, -0.8790,  ...,  0.6147, -0.1164,  1.2823]],

        [[-0.1025,  1.0212,  0.1606,  ...,  0.5860,  0.9266,  1.0848],
         [-0.9573, -1.2980, -0.9429,  ...,  2.0927, -0.5626,  0.3152],
         [-1.1940, -0.5911,  0.3324,  ...,  0.0905, -0.3699,  0.2763],
         ...,
         [-2.0856, -0.7547, -0.1296,  ..., -1.7309, -1.5047, -1.4969],
         [ 0.2224, -0.3418, -0.2529,  ..., -0.8255,  0.6399,  0.7160],
         [ 1.2665, -0.8306, -1.1165,  ..., -0.1171,  1.0567,  0.4681]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 0.1272,  0.0486, -0.6987,  ..., -0.8259, -0.6609,  0.3003],
         [-0.4955,  0.7292, -1.6371,  ..., -0.9441, -0.3391, -0.1124],
         [-0.1178, -1.3463, -0.1564,  ...,  0.2517,  0.5011, -0.6488],
         ...,
         [-0.7901, -0.4706, -1.9064,  ...,  0.4159, -0.4570, -1.6697],
         [-0.8306, -1.1951,  0.6429,  ..., -0.4836, -1.7246, -0.1900],
         [-0.6660,  1.2079,  0.8713,  ..., -1.2666, -0.5850,  1.5122]],

        [[-0.5755,  0.6092, -0.2829,  ...,  0.5379, -2.0031, -0.4343],
         [-1.0978,  1.0874, -0.6458,  ..., -0.5300, -1.3879, -0.6202],
         [ 0.8976, -0.4418, -0.0398,  ...,  0.6525, -0.3201, -0.4116],
         ...,
         [-1.6416,  0.6525, -0.4778,  ...,  0.8048, -0.5403,  1.7859],
         [ 2.6372,  0.2940, -0.6136,  ..., -1.8738,  0.7224, -0.1422],
         [ 0.0147,  0.0566, -0.6058,  ...,  0.1116, -0.8436,  0.5244]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[-0.7480,  0.4560,  0.5263,  ..., -0.3194, -0.0424,  0.7244],
         [ 1.5964,  2.0885, -1.3687,  ..., -0.8588,  1.1175, -1.1559],
         [ 0.4077,  1.2620, -0.9986,  ..., -1.1069, -0.5124,  2.3780],
         ...,
         [-2.4260, -0.3001, -0.8807,  ..., -0.6465, -1.0225, -0.1220],
         [ 0.3329,  0.1478, -0.0718,  ...,  0.1101, -0.8128,  0.5361],
         [-0.0306, -0.1864, -0.8800,  ...,  0.6195, -0.1138,  1.2842]],

        [[-0.0990,  1.0254,  0.1566,  ...,  0.5904,  0.9223,  1.0810],
         [-0.9575, -1.2977, -0.9416,  ...,  2.0936, -0.5657,  0.3139],
         [-1.1940, -0.5928,  0.3340,  ...,  0.0907, -0.3716,  0.2764],
         ...,
         [-2.0856, -0.7549, -0.1315,  ..., -1.7324, -1.5023, -1.4971],
         [ 0.2210, -0.3429, -0.2517,  ..., -0.8245,  0.6381,  0.7174],
         [ 1.2614, -0.8277, -1.1112,  ..., -0.1124,  1.0542,  0.4639]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 51.701, Val Loss : 58.107
======> Trajectory Loss : 8.011, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.432, BelowGroundPenalize Loss : 0.517
===> [Minibatch 20/129].........IDX = 0 :  tensor([[[ 0.1272,  0.0486, -0.6987,  ..., -0.8259, -0.6609,  0.3003],
         [-0.4955,  0.7292, -1.6371,  ..., -0.9441, -0.3391, -0.1124],
         [-0.1178, -1.3463, -0.1564,  ...,  0.2517,  0.5011, -0.6488],
         ...,
         [-0.7901, -0.4706, -1.9064,  ...,  0.4159, -0.4570, -1.6697],
         [-0.8306, -1.1951,  0.6429,  ..., -0.4836, -1.7246, -0.1900],
         [-0.6660,  1.2079,  0.8713,  ..., -1.2666, -0.5850,  1.5122]],

        [[-0.5755,  0.6092, -0.2829,  ...,  0.5379, -2.0031, -0.4343],
         [-1.0978,  1.0874, -0.6458,  ..., -0.5300, -1.3879, -0.6202],
         [ 0.8976, -0.4418, -0.0398,  ...,  0.6525, -0.3201, -0.4116],
         ...,
         [-1.6416,  0.6525, -0.4778,  ...,  0.8048, -0.5403,  1.7859],
         [ 2.6372,  0.2940, -0.6136,  ..., -1.8738,  0.7224, -0.1422],
         [ 0.0147,  0.0566, -0.6058,  ...,  0.1116, -0.8436,  0.5244]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[-0.7480,  0.4560,  0.5263,  ..., -0.3194, -0.0424,  0.7244],
         [ 1.5964,  2.0885, -1.3687,  ..., -0.8588,  1.1175, -1.1559],
         [ 0.4077,  1.2620, -0.9986,  ..., -1.1069, -0.5124,  2.3780],
         ...,
         [-2.4260, -0.3001, -0.8807,  ..., -0.6465, -1.0225, -0.1220],
         [ 0.3329,  0.1478, -0.0718,  ...,  0.1101, -0.8128,  0.5361],
         [-0.0306, -0.1864, -0.8800,  ...,  0.6195, -0.1138,  1.2842]],

        [[-0.0990,  1.0254,  0.1566,  ...,  0.5904,  0.9223,  1.0810],
         [-0.9575, -1.2977, -0.9416,  ...,  2.0936, -0.5657,  0.3139],
         [-1.1940, -0.5928,  0.3340,  ...,  0.0907, -0.3716,  0.2764],
         ...,
         [-2.0856, -0.7549, -0.1315,  ..., -1.7324, -1.5023, -1.4971],
         [ 0.2210, -0.3429, -0.2517,  ..., -0.8245,  0.6381,  0.7174],
         [ 1.2614, -0.8277, -1.1112,  ..., -0.1124,  1.0542,  0.4639]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 0.1245,  0.0494, -0.6990,  ..., -0.8214, -0.6581,  0.3002],
         [-0.5017,  0.7235, -1.6370,  ..., -0.9453, -0.3401, -0.1123],
         [-0.1177, -1.3453, -0.1579,  ...,  0.2504,  0.5034, -0.6506],
         ...,
         [-0.7958, -0.4739, -1.9016,  ...,  0.4172, -0.4594, -1.6666],
         [-0.8334, -1.1958,  0.6433,  ..., -0.4826, -1.7235, -0.1900],
         [-0.6679,  1.2076,  0.8757,  ..., -1.2633, -0.5859,  1.5126]],

        [[-0.5786,  0.6173, -0.2922,  ...,  0.5452, -2.0034, -0.4434],
         [-1.1033,  1.0928, -0.6547,  ..., -0.5234, -1.3949, -0.6291],
         [ 0.8921, -0.4477, -0.0407,  ...,  0.6478, -0.3259, -0.4059],
         ...,
         [-1.6425,  0.6587, -0.4867,  ...,  0.8124, -0.5411,  1.7790],
         [ 2.6437,  0.2999, -0.6215,  ..., -1.8678,  0.7146, -0.1503],
         [ 0.0122,  0.0592, -0.6122,  ...,  0.1113, -0.8509,  0.5192]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[-0.7527,  0.4506,  0.5308,  ..., -0.3149, -0.0381,  0.7283],
         [ 1.5949,  2.0853, -1.3653,  ..., -0.8574,  1.1171, -1.1532],
         [ 0.4073,  1.2607, -0.9974,  ..., -1.1073, -0.5095,  2.3776],
         ...,
         [-2.4277, -0.3037, -0.8777,  ..., -0.6464, -1.0208, -0.1195],
         [ 0.3305,  0.1470, -0.0719,  ...,  0.1104, -0.8130,  0.5381],
         [-0.0310, -0.1913, -0.8808,  ...,  0.6240, -0.1110,  1.2860]],

        [[-0.0958,  1.0292,  0.1528,  ...,  0.5945,  0.9184,  1.0774],
         [-0.9579, -1.2976, -0.9404,  ...,  2.0945, -0.5682,  0.3129],
         [-1.1939, -0.5942,  0.3355,  ...,  0.0909, -0.3732,  0.2764],
         ...,
         [-2.0858, -0.7542, -0.1328,  ..., -1.7327, -1.5003, -1.4981],
         [ 0.2198, -0.3438, -0.2505,  ..., -0.8235,  0.6365,  0.7187],
         [ 1.2557, -0.8244, -1.1054,  ..., -0.1074,  1.0516,  0.4592]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 56.139, Val Loss : 86.074
======> Trajectory Loss : 5.648, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.503, BelowGroundPenalize Loss : 0.151
===> [Minibatch 21/129].........IDX = 0 :  tensor([[[ 0.1245,  0.0494, -0.6990,  ..., -0.8214, -0.6581,  0.3002],
         [-0.5017,  0.7235, -1.6370,  ..., -0.9453, -0.3401, -0.1123],
         [-0.1177, -1.3453, -0.1579,  ...,  0.2504,  0.5034, -0.6506],
         ...,
         [-0.7958, -0.4739, -1.9016,  ...,  0.4172, -0.4594, -1.6666],
         [-0.8334, -1.1958,  0.6433,  ..., -0.4826, -1.7235, -0.1900],
         [-0.6679,  1.2076,  0.8757,  ..., -1.2633, -0.5859,  1.5126]],

        [[-0.5786,  0.6173, -0.2922,  ...,  0.5452, -2.0034, -0.4434],
         [-1.1033,  1.0928, -0.6547,  ..., -0.5234, -1.3949, -0.6291],
         [ 0.8921, -0.4477, -0.0407,  ...,  0.6478, -0.3259, -0.4059],
         ...,
         [-1.6425,  0.6587, -0.4867,  ...,  0.8124, -0.5411,  1.7790],
         [ 2.6437,  0.2999, -0.6215,  ..., -1.8678,  0.7146, -0.1503],
         [ 0.0122,  0.0592, -0.6122,  ...,  0.1113, -0.8509,  0.5192]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[-0.7527,  0.4506,  0.5308,  ..., -0.3149, -0.0381,  0.7283],
         [ 1.5949,  2.0853, -1.3653,  ..., -0.8574,  1.1171, -1.1532],
         [ 0.4073,  1.2607, -0.9974,  ..., -1.1073, -0.5095,  2.3776],
         ...,
         [-2.4277, -0.3037, -0.8777,  ..., -0.6464, -1.0208, -0.1195],
         [ 0.3305,  0.1470, -0.0719,  ...,  0.1104, -0.8130,  0.5381],
         [-0.0310, -0.1913, -0.8808,  ...,  0.6240, -0.1110,  1.2860]],

        [[-0.0958,  1.0292,  0.1528,  ...,  0.5945,  0.9184,  1.0774],
         [-0.9579, -1.2976, -0.9404,  ...,  2.0945, -0.5682,  0.3129],
         [-1.1939, -0.5942,  0.3355,  ...,  0.0909, -0.3732,  0.2764],
         ...,
         [-2.0858, -0.7542, -0.1328,  ..., -1.7327, -1.5003, -1.4981],
         [ 0.2198, -0.3438, -0.2505,  ..., -0.8235,  0.6365,  0.7187],
         [ 1.2557, -0.8244, -1.1054,  ..., -0.1074,  1.0516,  0.4592]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 0.1232,  0.0509, -0.6994,  ..., -0.8163, -0.6548,  0.3000],
         [-0.5059,  0.7214, -1.6366,  ..., -0.9467, -0.3394, -0.1130],
         [-0.1173, -1.3428, -0.1590,  ...,  0.2492,  0.5057, -0.6523],
         ...,
         [-0.7995, -0.4756, -1.8973,  ...,  0.4171, -0.4602, -1.6645],
         [-0.8338, -1.1949,  0.6435,  ..., -0.4829, -1.7216, -0.1902],
         [-0.6700,  1.2097,  0.8803,  ..., -1.2611, -0.5868,  1.5124]],

        [[-0.5811,  0.6256, -0.3018,  ...,  0.5526, -2.0038, -0.4531],
         [-1.1087,  1.0981, -0.6636,  ..., -0.5170, -1.4023, -0.6384],
         [ 0.8869, -0.4535, -0.0420,  ...,  0.6436, -0.3313, -0.4004],
         ...,
         [-1.6433,  0.6645, -0.4950,  ...,  0.8195, -0.5419,  1.7725],
         [ 2.6487,  0.3047, -0.6283,  ..., -1.8629,  0.7071, -0.1572],
         [ 0.0095,  0.0609, -0.6177,  ...,  0.1105, -0.8579,  0.5153]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[-0.7568,  0.4461,  0.5346,  ..., -0.3109, -0.0343,  0.7328],
         [ 1.5935,  2.0825, -1.3623,  ..., -0.8561,  1.1167, -1.1508],
         [ 0.4070,  1.2599, -0.9967,  ..., -1.1076, -0.5070,  2.3770],
         ...,
         [-2.4288, -0.3022, -0.8798,  ..., -0.6447, -1.0217, -0.1208],
         [ 0.3286,  0.1464, -0.0720,  ...,  0.1106, -0.8133,  0.5400],
         [-0.0308, -0.1946, -0.8816,  ...,  0.6272, -0.1099,  1.2876]],

        [[-0.0935,  1.0321,  0.1501,  ...,  0.5976,  0.9155,  1.0750],
         [-0.9595, -1.2992, -0.9385,  ...,  2.0958, -0.5674,  0.3142],
         [-1.1943, -0.5962,  0.3368,  ...,  0.0907, -0.3748,  0.2769],
         ...,
         [-2.0859, -0.7544, -0.1342,  ..., -1.7339, -1.4983, -1.4984],
         [ 0.2186, -0.3447, -0.2494,  ..., -0.8226,  0.6349,  0.7198],
         [ 1.2521, -0.8222, -1.1014,  ..., -0.1040,  1.0497,  0.4562]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 33.587, Val Loss : 73.271
======> Trajectory Loss : 6.479, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.271, BelowGroundPenalize Loss : 0.001
===> [Minibatch 22/129].........IDX = 0 :  tensor([[[ 0.1232,  0.0509, -0.6994,  ..., -0.8163, -0.6548,  0.3000],
         [-0.5059,  0.7214, -1.6366,  ..., -0.9467, -0.3394, -0.1130],
         [-0.1173, -1.3428, -0.1590,  ...,  0.2492,  0.5057, -0.6523],
         ...,
         [-0.7995, -0.4756, -1.8973,  ...,  0.4171, -0.4602, -1.6645],
         [-0.8338, -1.1949,  0.6435,  ..., -0.4829, -1.7216, -0.1902],
         [-0.6700,  1.2097,  0.8803,  ..., -1.2611, -0.5868,  1.5124]],

        [[-0.5811,  0.6256, -0.3018,  ...,  0.5526, -2.0038, -0.4531],
         [-1.1087,  1.0981, -0.6636,  ..., -0.5170, -1.4023, -0.6384],
         [ 0.8869, -0.4535, -0.0420,  ...,  0.6436, -0.3313, -0.4004],
         ...,
         [-1.6433,  0.6645, -0.4950,  ...,  0.8195, -0.5419,  1.7725],
         [ 2.6487,  0.3047, -0.6283,  ..., -1.8629,  0.7071, -0.1572],
         [ 0.0095,  0.0609, -0.6177,  ...,  0.1105, -0.8579,  0.5153]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[-0.7568,  0.4461,  0.5346,  ..., -0.3109, -0.0343,  0.7328],
         [ 1.5935,  2.0825, -1.3623,  ..., -0.8561,  1.1167, -1.1508],
         [ 0.4070,  1.2599, -0.9967,  ..., -1.1076, -0.5070,  2.3770],
         ...,
         [-2.4288, -0.3022, -0.8798,  ..., -0.6447, -1.0217, -0.1208],
         [ 0.3286,  0.1464, -0.0720,  ...,  0.1106, -0.8133,  0.5400],
         [-0.0308, -0.1946, -0.8816,  ...,  0.6272, -0.1099,  1.2876]],

        [[-0.0935,  1.0321,  0.1501,  ...,  0.5976,  0.9155,  1.0750],
         [-0.9595, -1.2992, -0.9385,  ...,  2.0958, -0.5674,  0.3142],
         [-1.1943, -0.5962,  0.3368,  ...,  0.0907, -0.3748,  0.2769],
         ...,
         [-2.0859, -0.7544, -0.1342,  ..., -1.7339, -1.4983, -1.4984],
         [ 0.2186, -0.3447, -0.2494,  ..., -0.8226,  0.6349,  0.7198],
         [ 1.2521, -0.8222, -1.1014,  ..., -0.1040,  1.0497,  0.4562]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 0.1204,  0.0532, -0.7002,  ..., -0.8102, -0.6512,  0.3005],
         [-0.5099,  0.7213, -1.6362,  ..., -0.9482, -0.3374, -0.1149],
         [-0.1172, -1.3394, -0.1601,  ...,  0.2482,  0.5081, -0.6539],
         ...,
         [-0.8030, -0.4772, -1.8933,  ...,  0.4171, -0.4610, -1.6625],
         [-0.8335, -1.1942,  0.6431,  ..., -0.4822, -1.7190, -0.1899],
         [-0.6735,  1.2130,  0.8847,  ..., -1.2582, -0.5863,  1.5127]],

        [[-0.5834,  0.6342, -0.3117,  ...,  0.5603, -2.0037, -0.4632],
         [-1.1140,  1.1035, -0.6727,  ..., -0.5106, -1.4099, -0.6482],
         [ 0.8820, -0.4588, -0.0432,  ...,  0.6397, -0.3364, -0.3954],
         ...,
         [-1.6438,  0.6704, -0.5032,  ...,  0.8264, -0.5427,  1.7658],
         [ 2.6552,  0.3100, -0.6358,  ..., -1.8577,  0.6990, -0.1653],
         [ 0.0076,  0.0642, -0.6231,  ...,  0.1103, -0.8659,  0.5090]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[-0.7585,  0.4461,  0.5365,  ..., -0.3099, -0.0322,  0.7369],
         [ 1.5924,  2.0803, -1.3599,  ..., -0.8553,  1.1161, -1.1483],
         [ 0.4110,  1.2636, -1.0010,  ..., -1.1117, -0.5069,  2.3744],
         ...,
         [-2.4286, -0.2990, -0.8836,  ..., -0.6432, -1.0241, -0.1231],
         [ 0.3318,  0.1480, -0.0760,  ...,  0.1088, -0.8168,  0.5418],
         [-0.0267, -0.1955, -0.8833,  ...,  0.6252, -0.1132,  1.2890]],

        [[-0.0916,  1.0345,  0.1477,  ...,  0.6003,  0.9130,  1.0730],
         [-0.9611, -1.3009, -0.9367,  ...,  2.0971, -0.5664,  0.3156],
         [-1.1949, -0.5983,  0.3380,  ...,  0.0901, -0.3761,  0.2778],
         ...,
         [-2.0859, -0.7554, -0.1355,  ..., -1.7356, -1.4964, -1.4981],
         [ 0.2175, -0.3455, -0.2483,  ..., -0.8218,  0.6331,  0.7210],
         [ 1.2497, -0.8209, -1.0985,  ..., -0.1017,  1.0483,  0.4541]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 35.106, Val Loss : 54.795
======> Trajectory Loss : 7.370, Gravity Loss : 0.001, EndOfTrajectory Loss : 0.277, BelowGroundPenalize Loss : 0.001
===> [Minibatch 23/129].........IDX = 0 :  tensor([[[ 0.1204,  0.0532, -0.7002,  ..., -0.8102, -0.6512,  0.3005],
         [-0.5099,  0.7213, -1.6362,  ..., -0.9482, -0.3374, -0.1149],
         [-0.1172, -1.3394, -0.1601,  ...,  0.2482,  0.5081, -0.6539],
         ...,
         [-0.8030, -0.4772, -1.8933,  ...,  0.4171, -0.4610, -1.6625],
         [-0.8335, -1.1942,  0.6431,  ..., -0.4822, -1.7190, -0.1899],
         [-0.6735,  1.2130,  0.8847,  ..., -1.2582, -0.5863,  1.5127]],

        [[-0.5834,  0.6342, -0.3117,  ...,  0.5603, -2.0037, -0.4632],
         [-1.1140,  1.1035, -0.6727,  ..., -0.5106, -1.4099, -0.6482],
         [ 0.8820, -0.4588, -0.0432,  ...,  0.6397, -0.3364, -0.3954],
         ...,
         [-1.6438,  0.6704, -0.5032,  ...,  0.8264, -0.5427,  1.7658],
         [ 2.6552,  0.3100, -0.6358,  ..., -1.8577,  0.6990, -0.1653],
         [ 0.0076,  0.0642, -0.6231,  ...,  0.1103, -0.8659,  0.5090]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[-0.7585,  0.4461,  0.5365,  ..., -0.3099, -0.0322,  0.7369],
         [ 1.5924,  2.0803, -1.3599,  ..., -0.8553,  1.1161, -1.1483],
         [ 0.4110,  1.2636, -1.0010,  ..., -1.1117, -0.5069,  2.3744],
         ...,
         [-2.4286, -0.2990, -0.8836,  ..., -0.6432, -1.0241, -0.1231],
         [ 0.3318,  0.1480, -0.0760,  ...,  0.1088, -0.8168,  0.5418],
         [-0.0267, -0.1955, -0.8833,  ...,  0.6252, -0.1132,  1.2890]],

        [[-0.0916,  1.0345,  0.1477,  ...,  0.6003,  0.9130,  1.0730],
         [-0.9611, -1.3009, -0.9367,  ...,  2.0971, -0.5664,  0.3156],
         [-1.1949, -0.5983,  0.3380,  ...,  0.0901, -0.3761,  0.2778],
         ...,
         [-2.0859, -0.7554, -0.1355,  ..., -1.7356, -1.4964, -1.4981],
         [ 0.2175, -0.3455, -0.2483,  ..., -0.8218,  0.6331,  0.7210],
         [ 1.2497, -0.8209, -1.0985,  ..., -0.1017,  1.0483,  0.4541]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 0.1180,  0.0555, -0.7010,  ..., -0.8044, -0.6478,  0.3010],
         [-0.5136,  0.7214, -1.6359,  ..., -0.9497, -0.3355, -0.1168],
         [-0.1172, -1.3362, -0.1611,  ...,  0.2474,  0.5103, -0.6554],
         ...,
         [-0.8061, -0.4785, -1.8896,  ...,  0.4175, -0.4615, -1.6608],
         [-0.8332, -1.1934,  0.6428,  ..., -0.4815, -1.7166, -0.1897],
         [-0.6767,  1.2160,  0.8886,  ..., -1.2556, -0.5858,  1.5130]],

        [[-0.5854,  0.6424, -0.3211,  ...,  0.5675, -2.0037, -0.4729],
         [-1.1190,  1.1085, -0.6811,  ..., -0.5048, -1.4172, -0.6574],
         [ 0.8777, -0.4636, -0.0451,  ...,  0.6363, -0.3409, -0.3909],
         ...,
         [-1.6442,  0.6760, -0.5110,  ...,  0.8330, -0.5436,  1.7594],
         [ 2.6613,  0.3150, -0.6428,  ..., -1.8529,  0.6910, -0.1730],
         [ 0.0060,  0.0676, -0.6282,  ...,  0.1102, -0.8736,  0.5028]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[-0.7609,  0.4443,  0.5390,  ..., -0.3082, -0.0299,  0.7377],
         [ 1.5883,  2.0748, -1.3543,  ..., -0.8503,  1.1199, -1.1509],
         [ 0.4143,  1.2664, -1.0045,  ..., -1.1156, -0.5067,  2.3726],
         ...,
         [-2.4281, -0.2956, -0.8875,  ..., -0.6419, -1.0268, -0.1254],
         [ 0.3348,  0.1494, -0.0795,  ...,  0.1071, -0.8199,  0.5434],
         [-0.0226, -0.1961, -0.8849,  ...,  0.6230, -0.1166,  1.2902]],

        [[-0.0898,  1.0368,  0.1455,  ...,  0.6028,  0.9107,  1.0711],
         [-0.9612, -1.3005, -0.9360,  ...,  2.0976, -0.5683,  0.3147],
         [-1.1947, -0.5992,  0.3392,  ...,  0.0904, -0.3773,  0.2777],
         ...,
         [-2.0858, -0.7567, -0.1368,  ..., -1.7375, -1.4946, -1.4976],
         [ 0.2165, -0.3462, -0.2474,  ..., -0.8211,  0.6316,  0.7220],
         [ 1.2476, -0.8197, -1.0959,  ..., -0.0996,  1.0471,  0.4522]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 48.500, Val Loss : 50.094
======> Trajectory Loss : 6.163, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.423, BelowGroundPenalize Loss : 0.084
===> [Minibatch 24/129].........IDX = 0 :  tensor([[[ 0.1180,  0.0555, -0.7010,  ..., -0.8044, -0.6478,  0.3010],
         [-0.5136,  0.7214, -1.6359,  ..., -0.9497, -0.3355, -0.1168],
         [-0.1172, -1.3362, -0.1611,  ...,  0.2474,  0.5103, -0.6554],
         ...,
         [-0.8061, -0.4785, -1.8896,  ...,  0.4175, -0.4615, -1.6608],
         [-0.8332, -1.1934,  0.6428,  ..., -0.4815, -1.7166, -0.1897],
         [-0.6767,  1.2160,  0.8886,  ..., -1.2556, -0.5858,  1.5130]],

        [[-0.5854,  0.6424, -0.3211,  ...,  0.5675, -2.0037, -0.4729],
         [-1.1190,  1.1085, -0.6811,  ..., -0.5048, -1.4172, -0.6574],
         [ 0.8777, -0.4636, -0.0451,  ...,  0.6363, -0.3409, -0.3909],
         ...,
         [-1.6442,  0.6760, -0.5110,  ...,  0.8330, -0.5436,  1.7594],
         [ 2.6613,  0.3150, -0.6428,  ..., -1.8529,  0.6910, -0.1730],
         [ 0.0060,  0.0676, -0.6282,  ...,  0.1102, -0.8736,  0.5028]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[-0.7609,  0.4443,  0.5390,  ..., -0.3082, -0.0299,  0.7377],
         [ 1.5883,  2.0748, -1.3543,  ..., -0.8503,  1.1199, -1.1509],
         [ 0.4143,  1.2664, -1.0045,  ..., -1.1156, -0.5067,  2.3726],
         ...,
         [-2.4281, -0.2956, -0.8875,  ..., -0.6419, -1.0268, -0.1254],
         [ 0.3348,  0.1494, -0.0795,  ...,  0.1071, -0.8199,  0.5434],
         [-0.0226, -0.1961, -0.8849,  ...,  0.6230, -0.1166,  1.2902]],

        [[-0.0898,  1.0368,  0.1455,  ...,  0.6028,  0.9107,  1.0711],
         [-0.9612, -1.3005, -0.9360,  ...,  2.0976, -0.5683,  0.3147],
         [-1.1947, -0.5992,  0.3392,  ...,  0.0904, -0.3773,  0.2777],
         ...,
         [-2.0858, -0.7567, -0.1368,  ..., -1.7375, -1.4946, -1.4976],
         [ 0.2165, -0.3462, -0.2474,  ..., -0.8211,  0.6316,  0.7220],
         [ 1.2476, -0.8197, -1.0959,  ..., -0.0996,  1.0471,  0.4522]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 0.1158,  0.0578, -0.7018,  ..., -0.7991, -0.6448,  0.3014],
         [-0.5172,  0.7216, -1.6358,  ..., -0.9512, -0.3334, -0.1187],
         [-0.1171, -1.3330, -0.1619,  ...,  0.2466,  0.5123, -0.6568],
         ...,
         [-0.8089, -0.4796, -1.8863,  ...,  0.4177, -0.4620, -1.6594],
         [-0.8329, -1.1926,  0.6425,  ..., -0.4809, -1.7144, -0.1895],
         [-0.6797,  1.2189,  0.8922,  ..., -1.2532, -0.5853,  1.5132]],

        [[-0.5872,  0.6500, -0.3300,  ...,  0.5743, -2.0037, -0.4823],
         [-1.1235,  1.1129, -0.6888,  ..., -0.4995, -1.4243, -0.6662],
         [ 0.8738, -0.4677, -0.0474,  ...,  0.6334, -0.3451, -0.3869],
         ...,
         [-1.6445,  0.6813, -0.5185,  ...,  0.8392, -0.5446,  1.7532],
         [ 2.6671,  0.3197, -0.6493,  ..., -1.8485,  0.6834, -0.1804],
         [ 0.0047,  0.0709, -0.6331,  ...,  0.1102, -0.8811,  0.4967]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[-0.7633,  0.4425,  0.5414,  ..., -0.3065, -0.0277,  0.7385],
         [ 1.5837,  2.0687, -1.3479,  ..., -0.8444,  1.1248, -1.1528],
         [ 0.4163,  1.2669, -1.0063,  ..., -1.1193, -0.5063,  2.3729],
         ...,
         [-2.4279, -0.2933, -0.8905,  ..., -0.6410, -1.0286, -0.1271],
         [ 0.3375,  0.1507, -0.0828,  ...,  0.1055, -0.8227,  0.5449],
         [-0.0178, -0.1954, -0.8860,  ...,  0.6200, -0.1215,  1.2913]],

        [[-0.0880,  1.0390,  0.1434,  ...,  0.6052,  0.9085,  1.0693],
         [-0.9613, -1.3001, -0.9354,  ...,  2.0980, -0.5700,  0.3139],
         [-1.1939, -0.5992,  0.3403,  ...,  0.0912, -0.3783,  0.2770],
         ...,
         [-2.0860, -0.7569, -0.1377,  ..., -1.7384, -1.4933, -1.4978],
         [ 0.2156, -0.3468, -0.2465,  ..., -0.8204,  0.6302,  0.7229],
         [ 1.2459, -0.8188, -1.0937,  ..., -0.0979,  1.0462,  0.4507]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 40.613, Val Loss : 59.801
======> Trajectory Loss : 4.868, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.357, BelowGroundPenalize Loss : 0.081
===> [Minibatch 25/129].........IDX = 0 :  tensor([[[ 0.1158,  0.0578, -0.7018,  ..., -0.7991, -0.6448,  0.3014],
         [-0.5172,  0.7216, -1.6358,  ..., -0.9512, -0.3334, -0.1187],
         [-0.1171, -1.3330, -0.1619,  ...,  0.2466,  0.5123, -0.6568],
         ...,
         [-0.8089, -0.4796, -1.8863,  ...,  0.4177, -0.4620, -1.6594],
         [-0.8329, -1.1926,  0.6425,  ..., -0.4809, -1.7144, -0.1895],
         [-0.6797,  1.2189,  0.8922,  ..., -1.2532, -0.5853,  1.5132]],

        [[-0.5872,  0.6500, -0.3300,  ...,  0.5743, -2.0037, -0.4823],
         [-1.1235,  1.1129, -0.6888,  ..., -0.4995, -1.4243, -0.6662],
         [ 0.8738, -0.4677, -0.0474,  ...,  0.6334, -0.3451, -0.3869],
         ...,
         [-1.6445,  0.6813, -0.5185,  ...,  0.8392, -0.5446,  1.7532],
         [ 2.6671,  0.3197, -0.6493,  ..., -1.8485,  0.6834, -0.1804],
         [ 0.0047,  0.0709, -0.6331,  ...,  0.1102, -0.8811,  0.4967]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[-0.7633,  0.4425,  0.5414,  ..., -0.3065, -0.0277,  0.7385],
         [ 1.5837,  2.0687, -1.3479,  ..., -0.8444,  1.1248, -1.1528],
         [ 0.4163,  1.2669, -1.0063,  ..., -1.1193, -0.5063,  2.3729],
         ...,
         [-2.4279, -0.2933, -0.8905,  ..., -0.6410, -1.0286, -0.1271],
         [ 0.3375,  0.1507, -0.0828,  ...,  0.1055, -0.8227,  0.5449],
         [-0.0178, -0.1954, -0.8860,  ...,  0.6200, -0.1215,  1.2913]],

        [[-0.0880,  1.0390,  0.1434,  ...,  0.6052,  0.9085,  1.0693],
         [-0.9613, -1.3001, -0.9354,  ...,  2.0980, -0.5700,  0.3139],
         [-1.1939, -0.5992,  0.3403,  ...,  0.0912, -0.3783,  0.2770],
         ...,
         [-2.0860, -0.7569, -0.1377,  ..., -1.7384, -1.4933, -1.4978],
         [ 0.2156, -0.3468, -0.2465,  ..., -0.8204,  0.6302,  0.7229],
         [ 1.2459, -0.8188, -1.0937,  ..., -0.0979,  1.0462,  0.4507]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 0.1138,  0.0600, -0.7025,  ..., -0.7941, -0.6420,  0.3017],
         [-0.5204,  0.7225, -1.6361,  ..., -0.9527, -0.3319, -0.1208],
         [-0.1170, -1.3301, -0.1627,  ...,  0.2459,  0.5141, -0.6580],
         ...,
         [-0.8113, -0.4805, -1.8831,  ...,  0.4179, -0.4623, -1.6582],
         [-0.8325, -1.1917,  0.6422,  ..., -0.4805, -1.7122, -0.1894],
         [-0.6827,  1.2217,  0.8954,  ..., -1.2510, -0.5850,  1.5134]],

        [[-0.5887,  0.6573, -0.3384,  ...,  0.5807, -2.0039, -0.4917],
         [-1.1278,  1.1166, -0.6955,  ..., -0.4951, -1.4316, -0.6747],
         [ 0.8703, -0.4716, -0.0500,  ...,  0.6307, -0.3490, -0.3834],
         ...,
         [-1.6446,  0.6865, -0.5259,  ...,  0.8452, -0.5458,  1.7470],
         [ 2.6729,  0.3243, -0.6556,  ..., -1.8442,  0.6760, -0.1876],
         [ 0.0035,  0.0743, -0.6381,  ...,  0.1104, -0.8882,  0.4905]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[-0.7604,  0.4466,  0.5390,  ..., -0.3102, -0.0300,  0.7401],
         [ 1.5794,  2.0628, -1.3418,  ..., -0.8387,  1.1297, -1.1544],
         [ 0.4182,  1.2672, -1.0079,  ..., -1.1227, -0.5059,  2.3732],
         ...,
         [-2.4277, -0.2903, -0.8944,  ..., -0.6401, -1.0304, -0.1292],
         [ 0.3400,  0.1518, -0.0858,  ...,  0.1040, -0.8253,  0.5463],
         [-0.0120, -0.1942, -0.8872,  ...,  0.6162, -0.1274,  1.2923]],

        [[-0.0866,  1.0407,  0.1417,  ...,  0.6071,  0.9067,  1.0679],
         [-0.9616, -1.3000, -0.9347,  ...,  2.0985, -0.5712,  0.3134],
         [-1.1938, -0.6001,  0.3413,  ...,  0.0913, -0.3794,  0.2770],
         ...,
         [-2.0858, -0.7595, -0.1389,  ..., -1.7410, -1.4920, -1.4963],
         [ 0.2148, -0.3474, -0.2457,  ..., -0.8198,  0.6287,  0.7237],
         [ 1.2446, -0.8186, -1.0921,  ..., -0.0969,  1.0455,  0.4498]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 39.817, Val Loss : 47.505
======> Trajectory Loss : 4.448, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.354, BelowGroundPenalize Loss : 0.005
===> [Minibatch 26/129].........IDX = 0 :  tensor([[[ 0.1138,  0.0600, -0.7025,  ..., -0.7941, -0.6420,  0.3017],
         [-0.5204,  0.7225, -1.6361,  ..., -0.9527, -0.3319, -0.1208],
         [-0.1170, -1.3301, -0.1627,  ...,  0.2459,  0.5141, -0.6580],
         ...,
         [-0.8113, -0.4805, -1.8831,  ...,  0.4179, -0.4623, -1.6582],
         [-0.8325, -1.1917,  0.6422,  ..., -0.4805, -1.7122, -0.1894],
         [-0.6827,  1.2217,  0.8954,  ..., -1.2510, -0.5850,  1.5134]],

        [[-0.5887,  0.6573, -0.3384,  ...,  0.5807, -2.0039, -0.4917],
         [-1.1278,  1.1166, -0.6955,  ..., -0.4951, -1.4316, -0.6747],
         [ 0.8703, -0.4716, -0.0500,  ...,  0.6307, -0.3490, -0.3834],
         ...,
         [-1.6446,  0.6865, -0.5259,  ...,  0.8452, -0.5458,  1.7470],
         [ 2.6729,  0.3243, -0.6556,  ..., -1.8442,  0.6760, -0.1876],
         [ 0.0035,  0.0743, -0.6381,  ...,  0.1104, -0.8882,  0.4905]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[-0.7604,  0.4466,  0.5390,  ..., -0.3102, -0.0300,  0.7401],
         [ 1.5794,  2.0628, -1.3418,  ..., -0.8387,  1.1297, -1.1544],
         [ 0.4182,  1.2672, -1.0079,  ..., -1.1227, -0.5059,  2.3732],
         ...,
         [-2.4277, -0.2903, -0.8944,  ..., -0.6401, -1.0304, -0.1292],
         [ 0.3400,  0.1518, -0.0858,  ...,  0.1040, -0.8253,  0.5463],
         [-0.0120, -0.1942, -0.8872,  ...,  0.6162, -0.1274,  1.2923]],

        [[-0.0866,  1.0407,  0.1417,  ...,  0.6071,  0.9067,  1.0679],
         [-0.9616, -1.3000, -0.9347,  ...,  2.0985, -0.5712,  0.3134],
         [-1.1938, -0.6001,  0.3413,  ...,  0.0913, -0.3794,  0.2770],
         ...,
         [-2.0858, -0.7595, -0.1389,  ..., -1.7410, -1.4920, -1.4963],
         [ 0.2148, -0.3474, -0.2457,  ..., -0.8198,  0.6287,  0.7237],
         [ 1.2446, -0.8186, -1.0921,  ..., -0.0969,  1.0455,  0.4498]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 0.1123,  0.0628, -0.7034,  ..., -0.7897, -0.6391,  0.3017],
         [-0.5236,  0.7237, -1.6365,  ..., -0.9541, -0.3300, -0.1230],
         [-0.1168, -1.3267, -0.1634,  ...,  0.2453,  0.5158, -0.6593],
         ...,
         [-0.8135, -0.4813, -1.8803,  ...,  0.4181, -0.4627, -1.6571],
         [-0.8322, -1.1909,  0.6417,  ..., -0.4802, -1.7101, -0.1896],
         [-0.6867,  1.2273,  0.8982,  ..., -1.2507, -0.5861,  1.5119]],

        [[-0.5899,  0.6650, -0.3474,  ...,  0.5875, -2.0042, -0.5018],
         [-1.1321,  1.1206, -0.7030,  ..., -0.4904, -1.4393, -0.6840],
         [ 0.8673, -0.4748, -0.0544,  ...,  0.6288, -0.3526, -0.3806],
         ...,
         [-1.6439,  0.6928, -0.5343,  ...,  0.8520, -0.5487,  1.7392],
         [ 2.6792,  0.3292, -0.6623,  ..., -1.8398,  0.6676, -0.1957],
         [ 0.0027,  0.0790, -0.6438,  ...,  0.1112, -0.8961,  0.4831]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[-0.7576,  0.4504,  0.5367,  ..., -0.3136, -0.0321,  0.7416],
         [ 1.5759,  2.0581, -1.3369,  ..., -0.8344,  1.1329, -1.1555],
         [ 0.4195,  1.2669, -1.0091,  ..., -1.1258, -0.5053,  2.3740],
         ...,
         [-2.4274, -0.2873, -0.8982,  ..., -0.6391, -1.0322, -0.1313],
         [ 0.3426,  0.1531, -0.0888,  ...,  0.1026, -0.8280,  0.5475],
         [-0.0061, -0.1925, -0.8883,  ...,  0.6123, -0.1336,  1.2931]],

        [[-0.0855,  1.0423,  0.1402,  ...,  0.6088,  0.9052,  1.0667],
         [-0.9621, -1.3001, -0.9339,  ...,  2.0991, -0.5719,  0.3134],
         [-1.1939, -0.6012,  0.3423,  ...,  0.0914, -0.3804,  0.2772],
         ...,
         [-2.0855, -0.7621, -0.1400,  ..., -1.7436, -1.4909, -1.4947],
         [ 0.2139, -0.3480, -0.2448,  ..., -0.8192,  0.6270,  0.7246],
         [ 1.2436, -0.8186, -1.0908,  ..., -0.0962,  1.0450,  0.4493]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 24.933, Val Loss : 34.204
======> Trajectory Loss : 4.322, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.206, BelowGroundPenalize Loss : 0.001
===> [Minibatch 27/129].........IDX = 0 :  tensor([[[ 0.1123,  0.0628, -0.7034,  ..., -0.7897, -0.6391,  0.3017],
         [-0.5236,  0.7237, -1.6365,  ..., -0.9541, -0.3300, -0.1230],
         [-0.1168, -1.3267, -0.1634,  ...,  0.2453,  0.5158, -0.6593],
         ...,
         [-0.8135, -0.4813, -1.8803,  ...,  0.4181, -0.4627, -1.6571],
         [-0.8322, -1.1909,  0.6417,  ..., -0.4802, -1.7101, -0.1896],
         [-0.6867,  1.2273,  0.8982,  ..., -1.2507, -0.5861,  1.5119]],

        [[-0.5899,  0.6650, -0.3474,  ...,  0.5875, -2.0042, -0.5018],
         [-1.1321,  1.1206, -0.7030,  ..., -0.4904, -1.4393, -0.6840],
         [ 0.8673, -0.4748, -0.0544,  ...,  0.6288, -0.3526, -0.3806],
         ...,
         [-1.6439,  0.6928, -0.5343,  ...,  0.8520, -0.5487,  1.7392],
         [ 2.6792,  0.3292, -0.6623,  ..., -1.8398,  0.6676, -0.1957],
         [ 0.0027,  0.0790, -0.6438,  ...,  0.1112, -0.8961,  0.4831]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[-0.7576,  0.4504,  0.5367,  ..., -0.3136, -0.0321,  0.7416],
         [ 1.5759,  2.0581, -1.3369,  ..., -0.8344,  1.1329, -1.1555],
         [ 0.4195,  1.2669, -1.0091,  ..., -1.1258, -0.5053,  2.3740],
         ...,
         [-2.4274, -0.2873, -0.8982,  ..., -0.6391, -1.0322, -0.1313],
         [ 0.3426,  0.1531, -0.0888,  ...,  0.1026, -0.8280,  0.5475],
         [-0.0061, -0.1925, -0.8883,  ...,  0.6123, -0.1336,  1.2931]],

        [[-0.0855,  1.0423,  0.1402,  ...,  0.6088,  0.9052,  1.0667],
         [-0.9621, -1.3001, -0.9339,  ...,  2.0991, -0.5719,  0.3134],
         [-1.1939, -0.6012,  0.3423,  ...,  0.0914, -0.3804,  0.2772],
         ...,
         [-2.0855, -0.7621, -0.1400,  ..., -1.7436, -1.4909, -1.4947],
         [ 0.2139, -0.3480, -0.2448,  ..., -0.8192,  0.6270,  0.7246],
         [ 1.2436, -0.8186, -1.0908,  ..., -0.0962,  1.0450,  0.4493]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 1.1099e-01,  6.5543e-02, -7.0432e-01,  ..., -7.8550e-01,
          -6.3633e-01,  3.0157e-01],
         [-5.2677e-01,  7.2483e-01, -1.6369e+00,  ..., -9.5532e-01,
          -3.2809e-01, -1.2505e-01],
         [-1.1657e-01, -1.3236e+00, -1.6402e-01,  ...,  2.4465e-01,
           5.1732e-01, -6.6047e-01],
         ...,
         [-8.1533e-01, -4.8183e-01, -1.8777e+00,  ...,  4.1830e-01,
          -4.6287e-01, -1.6561e+00],
         [-8.3195e-01, -1.1901e+00,  6.4133e-01,  ..., -4.7980e-01,
          -1.7081e+00, -1.8962e-01],
         [-6.9040e-01,  1.2324e+00,  9.0071e-01,  ..., -1.2500e+00,
          -5.8703e-01,  1.5105e+00]],

        [[-5.9096e-01,  6.7312e-01, -3.5686e-01,  ...,  5.9469e-01,
          -2.0043e+00, -5.1252e-01],
         [-1.1365e+00,  1.1246e+00, -7.1079e-01,  ..., -4.8584e-01,
          -1.4471e+00, -6.9367e-01],
         [ 8.6480e-01, -4.7739e-01, -5.9963e-02,  ...,  6.2767e-01,
          -3.5596e-01, -3.7837e-01],
         ...,
         [-1.6431e+00,  6.9890e-01, -5.4246e-01,  ...,  8.5859e-01,
          -5.5156e-01,  1.7316e+00],
         [ 2.6858e+00,  3.3416e-01, -6.6910e-01,  ..., -1.8354e+00,
           6.5927e-01, -2.0391e-01],
         [ 2.1189e-03,  8.4317e-02, -6.5025e-01,  ...,  1.1236e-01,
          -9.0445e-01,  4.7496e-01]]], device='cuda:0',
       grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[-7.5509e-01,  4.5378e-01,  5.3469e-01,  ..., -3.1671e-01,
          -3.4053e-02,  7.4293e-01],
         [ 1.5726e+00,  2.0538e+00, -1.3323e+00,  ..., -8.3044e-01,
           1.1359e+00, -1.1563e+00],
         [ 4.2077e-01,  1.2669e+00, -1.0102e+00,  ..., -1.1286e+00,
          -5.0495e-01,  2.3747e+00],
         ...,
         [-2.4270e+00, -2.8482e-01, -9.0125e-01,  ..., -6.3839e-01,
          -1.0338e+00, -1.3296e-01],
         [ 3.4502e-01,  1.5422e-01, -9.1579e-02,  ...,  1.0120e-01,
          -8.3048e-01,  5.4863e-01],
         [-7.7521e-04, -1.9097e-01, -8.8934e-01,  ...,  6.0858e-01,
          -1.3918e-01,  1.2939e+00]],

        [[-8.4407e-02,  1.0437e+00,  1.3885e-01,  ...,  6.1039e-01,
           9.0382e-01,  1.0656e+00],
         [-9.6250e-01, -1.3002e+00, -9.3323e-01,  ...,  2.0996e+00,
          -5.7264e-01,  3.1323e-01],
         [-1.1939e+00, -6.0202e-01,  3.4325e-01,  ...,  9.1439e-02,
          -3.8132e-01,  2.7722e-01],
         ...,
         [-2.0853e+00, -7.6437e-01, -1.4102e-01,  ..., -1.7459e+00,
          -1.4899e+00, -1.4932e+00],
         [ 2.1313e-01, -3.4851e-01, -2.4398e-01,  ..., -8.1865e-01,
           6.2544e-01,  7.2542e-01],
         [ 1.2427e+00, -8.1856e-01, -1.0896e+00,  ..., -9.5530e-02,
           1.0446e+00,  4.4875e-01]]], device='cuda:0',
       grad_fn=<SelectBackward>)
Train Loss : 27.899, Val Loss : 26.945
======> Trajectory Loss : 6.794, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.209, BelowGroundPenalize Loss : 0.212
===> [Minibatch 28/129].........IDX = 0 :  tensor([[[ 1.1099e-01,  6.5543e-02, -7.0432e-01,  ..., -7.8550e-01,
          -6.3633e-01,  3.0157e-01],
         [-5.2677e-01,  7.2483e-01, -1.6369e+00,  ..., -9.5532e-01,
          -3.2809e-01, -1.2505e-01],
         [-1.1657e-01, -1.3236e+00, -1.6402e-01,  ...,  2.4465e-01,
           5.1732e-01, -6.6047e-01],
         ...,
         [-8.1533e-01, -4.8183e-01, -1.8777e+00,  ...,  4.1830e-01,
          -4.6287e-01, -1.6561e+00],
         [-8.3195e-01, -1.1901e+00,  6.4133e-01,  ..., -4.7980e-01,
          -1.7081e+00, -1.8962e-01],
         [-6.9040e-01,  1.2324e+00,  9.0071e-01,  ..., -1.2500e+00,
          -5.8703e-01,  1.5105e+00]],

        [[-5.9096e-01,  6.7312e-01, -3.5686e-01,  ...,  5.9469e-01,
          -2.0043e+00, -5.1252e-01],
         [-1.1365e+00,  1.1246e+00, -7.1079e-01,  ..., -4.8584e-01,
          -1.4471e+00, -6.9367e-01],
         [ 8.6480e-01, -4.7739e-01, -5.9963e-02,  ...,  6.2767e-01,
          -3.5596e-01, -3.7837e-01],
         ...,
         [-1.6431e+00,  6.9890e-01, -5.4246e-01,  ...,  8.5859e-01,
          -5.5156e-01,  1.7316e+00],
         [ 2.6858e+00,  3.3416e-01, -6.6910e-01,  ..., -1.8354e+00,
           6.5927e-01, -2.0391e-01],
         [ 2.1189e-03,  8.4317e-02, -6.5025e-01,  ...,  1.1236e-01,
          -9.0445e-01,  4.7496e-01]]], device='cuda:0',
       grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[-7.5509e-01,  4.5378e-01,  5.3469e-01,  ..., -3.1671e-01,
          -3.4053e-02,  7.4293e-01],
         [ 1.5726e+00,  2.0538e+00, -1.3323e+00,  ..., -8.3044e-01,
           1.1359e+00, -1.1563e+00],
         [ 4.2077e-01,  1.2669e+00, -1.0102e+00,  ..., -1.1286e+00,
          -5.0495e-01,  2.3747e+00],
         ...,
         [-2.4270e+00, -2.8482e-01, -9.0125e-01,  ..., -6.3839e-01,
          -1.0338e+00, -1.3296e-01],
         [ 3.4502e-01,  1.5422e-01, -9.1579e-02,  ...,  1.0120e-01,
          -8.3048e-01,  5.4863e-01],
         [-7.7521e-04, -1.9097e-01, -8.8934e-01,  ...,  6.0858e-01,
          -1.3918e-01,  1.2939e+00]],

        [[-8.4407e-02,  1.0437e+00,  1.3885e-01,  ...,  6.1039e-01,
           9.0382e-01,  1.0656e+00],
         [-9.6250e-01, -1.3002e+00, -9.3323e-01,  ...,  2.0996e+00,
          -5.7264e-01,  3.1323e-01],
         [-1.1939e+00, -6.0202e-01,  3.4325e-01,  ...,  9.1439e-02,
          -3.8132e-01,  2.7722e-01],
         ...,
         [-2.0853e+00, -7.6437e-01, -1.4102e-01,  ..., -1.7459e+00,
          -1.4899e+00, -1.4932e+00],
         [ 2.1313e-01, -3.4851e-01, -2.4398e-01,  ..., -8.1865e-01,
           6.2544e-01,  7.2542e-01],
         [ 1.2427e+00, -8.1856e-01, -1.0896e+00,  ..., -9.5530e-02,
           1.0446e+00,  4.4875e-01]]], device='cuda:0',
       grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 1.1030e-01,  6.8434e-02, -7.0527e-01,  ..., -7.8167e-01,
          -6.3358e-01,  3.0121e-01],
         [-5.2988e-01,  7.2604e-01, -1.6375e+00,  ..., -9.5638e-01,
          -3.2592e-01, -1.2705e-01],
         [-1.1631e-01, -1.3206e+00, -1.6459e-01,  ...,  2.4411e-01,
           5.1874e-01, -6.6154e-01],
         ...,
         [-8.1682e-01, -4.8208e-01, -1.8751e+00,  ...,  4.1839e-01,
          -4.6292e-01, -1.6556e+00],
         [-8.3141e-01, -1.1897e+00,  6.4083e-01,  ..., -4.7891e-01,
          -1.7060e+00, -1.8943e-01],
         [-6.9387e-01,  1.2376e+00,  9.0281e-01,  ..., -1.2494e+00,
          -5.8776e-01,  1.5089e+00]],

        [[-5.9171e-01,  6.8169e-01, -3.6676e-01,  ...,  6.0223e-01,
          -2.0050e+00, -5.2368e-01],
         [-1.1411e+00,  1.1286e+00, -7.1908e-01,  ..., -4.8126e-01,
          -1.4553e+00, -7.0393e-01],
         [ 8.6267e-01, -4.7943e-01, -6.6707e-02,  ...,  6.2720e-01,
          -3.5904e-01, -3.7667e-01],
         ...,
         [-1.6423e+00,  7.0459e-01, -5.5013e-01,  ...,  8.6472e-01,
          -5.5427e-01,  1.7244e+00],
         [ 2.6928e+00,  3.3936e-01, -6.7644e-01,  ..., -1.8309e+00,
           6.5007e-01, -2.1286e-01],
         [ 1.7178e-03,  9.0383e-02, -6.5782e-01,  ...,  1.1395e-01,
          -9.1286e-01,  4.6631e-01]]], device='cuda:0',
       grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[-0.7526,  0.4572,  0.5326,  ..., -0.3197, -0.0360,  0.7452],
         [ 1.5686,  2.0492, -1.3268,  ..., -0.8248,  1.1410, -1.1564],
         [ 0.4220,  1.2669, -1.0114,  ..., -1.1313, -0.5047,  2.3753],
         ...,
         [-2.4267, -0.2825, -0.9041,  ..., -0.6377, -1.0353, -0.1346],
         [ 0.3418,  0.1528, -0.0899,  ...,  0.1040, -0.8282,  0.5504],
         [ 0.0040, -0.1901, -0.8904,  ...,  0.6054, -0.1440,  1.2946]],

        [[-0.0835,  1.0449,  0.1377,  ...,  0.6118,  0.9026,  1.0647],
         [-0.9623, -1.2997, -0.9333,  ...,  2.0998, -0.5741,  0.3124],
         [-1.1938, -0.6028,  0.3441,  ...,  0.0915, -0.3821,  0.2773],
         ...,
         [-2.0851, -0.7664, -0.1420,  ..., -1.7480, -1.4890, -1.4920],
         [ 0.2127, -0.3489, -0.2438,  ..., -0.8182,  0.6255,  0.7258],
         [ 1.2418, -0.8182, -1.0884,  ..., -0.0947,  1.0441,  0.4480]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 23.831, Val Loss : 61.157
======> Trajectory Loss : 5.550, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.182, BelowGroundPenalize Loss : 0.112
===> [Minibatch 29/129].........IDX = 0 :  tensor([[[ 1.1030e-01,  6.8434e-02, -7.0527e-01,  ..., -7.8167e-01,
          -6.3358e-01,  3.0121e-01],
         [-5.2988e-01,  7.2604e-01, -1.6375e+00,  ..., -9.5638e-01,
          -3.2592e-01, -1.2705e-01],
         [-1.1631e-01, -1.3206e+00, -1.6459e-01,  ...,  2.4411e-01,
           5.1874e-01, -6.6154e-01],
         ...,
         [-8.1682e-01, -4.8208e-01, -1.8751e+00,  ...,  4.1839e-01,
          -4.6292e-01, -1.6556e+00],
         [-8.3141e-01, -1.1897e+00,  6.4083e-01,  ..., -4.7891e-01,
          -1.7060e+00, -1.8943e-01],
         [-6.9387e-01,  1.2376e+00,  9.0281e-01,  ..., -1.2494e+00,
          -5.8776e-01,  1.5089e+00]],

        [[-5.9171e-01,  6.8169e-01, -3.6676e-01,  ...,  6.0223e-01,
          -2.0050e+00, -5.2368e-01],
         [-1.1411e+00,  1.1286e+00, -7.1908e-01,  ..., -4.8126e-01,
          -1.4553e+00, -7.0393e-01],
         [ 8.6267e-01, -4.7943e-01, -6.6707e-02,  ...,  6.2720e-01,
          -3.5904e-01, -3.7667e-01],
         ...,
         [-1.6423e+00,  7.0459e-01, -5.5013e-01,  ...,  8.6472e-01,
          -5.5427e-01,  1.7244e+00],
         [ 2.6928e+00,  3.3936e-01, -6.7644e-01,  ..., -1.8309e+00,
           6.5007e-01, -2.1286e-01],
         [ 1.7178e-03,  9.0383e-02, -6.5782e-01,  ...,  1.1395e-01,
          -9.1286e-01,  4.6631e-01]]], device='cuda:0',
       grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[-0.7526,  0.4572,  0.5326,  ..., -0.3197, -0.0360,  0.7452],
         [ 1.5686,  2.0492, -1.3268,  ..., -0.8248,  1.1410, -1.1564],
         [ 0.4220,  1.2669, -1.0114,  ..., -1.1313, -0.5047,  2.3753],
         ...,
         [-2.4267, -0.2825, -0.9041,  ..., -0.6377, -1.0353, -0.1346],
         [ 0.3418,  0.1528, -0.0899,  ...,  0.1040, -0.8282,  0.5504],
         [ 0.0040, -0.1901, -0.8904,  ...,  0.6054, -0.1440,  1.2946]],

        [[-0.0835,  1.0449,  0.1377,  ...,  0.6118,  0.9026,  1.0647],
         [-0.9623, -1.2997, -0.9333,  ...,  2.0998, -0.5741,  0.3124],
         [-1.1938, -0.6028,  0.3441,  ...,  0.0915, -0.3821,  0.2773],
         ...,
         [-2.0851, -0.7664, -0.1420,  ..., -1.7480, -1.4890, -1.4920],
         [ 0.2127, -0.3489, -0.2438,  ..., -0.8182,  0.6255,  0.7258],
         [ 1.2418, -0.8182, -1.0884,  ..., -0.0947,  1.0441,  0.4480]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 1.0962e-01,  7.1086e-02, -7.0617e-01,  ..., -7.7815e-01,
          -6.3103e-01,  3.0086e-01],
         [-5.3273e-01,  7.2717e-01, -1.6380e+00,  ..., -9.5735e-01,
          -3.2401e-01, -1.2889e-01],
         [-1.1608e-01, -1.3178e+00, -1.6512e-01,  ...,  2.4362e-01,
           5.2005e-01, -6.6251e-01],
         ...,
         [-8.1818e-01, -4.8231e-01, -1.8728e+00,  ...,  4.1848e-01,
          -4.6295e-01, -1.6550e+00],
         [-8.3092e-01, -1.1893e+00,  6.4036e-01,  ..., -4.7811e-01,
          -1.7041e+00, -1.8926e-01],
         [-6.9705e-01,  1.2424e+00,  9.0472e-01,  ..., -1.2488e+00,
          -5.8842e-01,  1.5074e+00]],

        [[-5.9223e-01,  6.8932e-01, -3.7562e-01,  ...,  6.0896e-01,
          -2.0062e+00, -5.3421e-01],
         [-1.1450e+00,  1.1323e+00, -7.2649e-01,  ..., -4.7717e-01,
          -1.4627e+00, -7.1369e-01],
         [ 8.6070e-01, -4.8150e-01, -7.3106e-02,  ...,  6.2662e-01,
          -3.6196e-01, -3.7517e-01],
         ...,
         [-1.6416e+00,  7.0973e-01, -5.5693e-01,  ...,  8.7027e-01,
          -5.5711e-01,  1.7176e+00],
         [ 2.6992e+00,  3.4385e-01, -6.8288e-01,  ..., -1.8272e+00,
           6.4097e-01, -2.2127e-01],
         [ 1.5520e-03,  9.5921e-02, -6.6419e-01,  ...,  1.1544e-01,
          -9.2047e-01,  4.5810e-01]]], device='cuda:0',
       grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[-0.7504,  0.4603,  0.5310,  ..., -0.3222, -0.0375,  0.7474],
         [ 1.5656,  2.0456, -1.3225,  ..., -0.8202,  1.1448, -1.1572],
         [ 0.4232,  1.2669, -1.0125,  ..., -1.1338, -0.5045,  2.3757],
         ...,
         [-2.4260, -0.2788, -0.9087,  ..., -0.6371, -1.0387, -0.1378],
         [ 0.3399,  0.1520, -0.0891,  ...,  0.1059, -0.8270,  0.5520],
         [ 0.0076, -0.1933, -0.8929,  ...,  0.6036, -0.1446,  1.2948]],

        [[-0.0829,  1.0458,  0.1367,  ...,  0.6129,  0.9017,  1.0640],
         [-0.9627, -1.2997, -0.9327,  ...,  2.1002, -0.5748,  0.3122],
         [-1.1940, -0.6038,  0.3449,  ...,  0.0914, -0.3830,  0.2775],
         ...,
         [-2.0851, -0.7691, -0.1426,  ..., -1.7503, -1.4885, -1.4903],
         [ 0.2122, -0.3493, -0.2433,  ..., -0.8179,  0.6250,  0.7263],
         [ 1.2405, -0.8171, -1.0870,  ..., -0.0933,  1.0435,  0.4466]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 47.646, Val Loss : 54.282
======> Trajectory Loss : 3.272, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.444, BelowGroundPenalize Loss : 0.016
===> [Minibatch 30/129].........IDX = 0 :  tensor([[[ 1.0962e-01,  7.1086e-02, -7.0617e-01,  ..., -7.7815e-01,
          -6.3103e-01,  3.0086e-01],
         [-5.3273e-01,  7.2717e-01, -1.6380e+00,  ..., -9.5735e-01,
          -3.2401e-01, -1.2889e-01],
         [-1.1608e-01, -1.3178e+00, -1.6512e-01,  ...,  2.4362e-01,
           5.2005e-01, -6.6251e-01],
         ...,
         [-8.1818e-01, -4.8231e-01, -1.8728e+00,  ...,  4.1848e-01,
          -4.6295e-01, -1.6550e+00],
         [-8.3092e-01, -1.1893e+00,  6.4036e-01,  ..., -4.7811e-01,
          -1.7041e+00, -1.8926e-01],
         [-6.9705e-01,  1.2424e+00,  9.0472e-01,  ..., -1.2488e+00,
          -5.8842e-01,  1.5074e+00]],

        [[-5.9223e-01,  6.8932e-01, -3.7562e-01,  ...,  6.0896e-01,
          -2.0062e+00, -5.3421e-01],
         [-1.1450e+00,  1.1323e+00, -7.2649e-01,  ..., -4.7717e-01,
          -1.4627e+00, -7.1369e-01],
         [ 8.6070e-01, -4.8150e-01, -7.3106e-02,  ...,  6.2662e-01,
          -3.6196e-01, -3.7517e-01],
         ...,
         [-1.6416e+00,  7.0973e-01, -5.5693e-01,  ...,  8.7027e-01,
          -5.5711e-01,  1.7176e+00],
         [ 2.6992e+00,  3.4385e-01, -6.8288e-01,  ..., -1.8272e+00,
           6.4097e-01, -2.2127e-01],
         [ 1.5520e-03,  9.5921e-02, -6.6419e-01,  ...,  1.1544e-01,
          -9.2047e-01,  4.5810e-01]]], device='cuda:0',
       grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[-0.7504,  0.4603,  0.5310,  ..., -0.3222, -0.0375,  0.7474],
         [ 1.5656,  2.0456, -1.3225,  ..., -0.8202,  1.1448, -1.1572],
         [ 0.4232,  1.2669, -1.0125,  ..., -1.1338, -0.5045,  2.3757],
         ...,
         [-2.4260, -0.2788, -0.9087,  ..., -0.6371, -1.0387, -0.1378],
         [ 0.3399,  0.1520, -0.0891,  ...,  0.1059, -0.8270,  0.5520],
         [ 0.0076, -0.1933, -0.8929,  ...,  0.6036, -0.1446,  1.2948]],

        [[-0.0829,  1.0458,  0.1367,  ...,  0.6129,  0.9017,  1.0640],
         [-0.9627, -1.2997, -0.9327,  ...,  2.1002, -0.5748,  0.3122],
         [-1.1940, -0.6038,  0.3449,  ...,  0.0914, -0.3830,  0.2775],
         ...,
         [-2.0851, -0.7691, -0.1426,  ..., -1.7503, -1.4885, -1.4903],
         [ 0.2122, -0.3493, -0.2433,  ..., -0.8179,  0.6250,  0.7263],
         [ 1.2405, -0.8171, -1.0870,  ..., -0.0933,  1.0435,  0.4466]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 1.0901e-01,  7.3511e-02, -7.0700e-01,  ..., -7.7493e-01,
          -6.2871e-01,  3.0054e-01],
         [-5.3528e-01,  7.2844e-01, -1.6386e+00,  ..., -9.5833e-01,
          -3.2240e-01, -1.3071e-01],
         [-1.1590e-01, -1.3153e+00, -1.6561e-01,  ...,  2.4317e-01,
           5.2126e-01, -6.6339e-01],
         ...,
         [-8.1941e-01, -4.8252e-01, -1.8707e+00,  ...,  4.1856e-01,
          -4.6298e-01, -1.6546e+00],
         [-8.3047e-01, -1.1889e+00,  6.3992e-01,  ..., -4.7737e-01,
          -1.7023e+00, -1.8910e-01],
         [-6.9996e-01,  1.2467e+00,  9.0642e-01,  ..., -1.2482e+00,
          -5.8896e-01,  1.5061e+00]],

        [[-5.9258e-01,  6.9628e-01, -3.8368e-01,  ...,  6.1507e-01,
          -2.0076e+00, -5.4417e-01],
         [-1.1486e+00,  1.1354e+00, -7.3318e-01,  ..., -4.7365e-01,
          -1.4698e+00, -7.2285e-01],
         [ 8.5894e-01, -4.8356e-01, -7.8298e-02,  ...,  6.2577e-01,
          -3.6472e-01, -3.7387e-01],
         ...,
         [-1.6407e+00,  7.1419e-01, -5.6191e-01,  ...,  8.7513e-01,
          -5.6004e-01,  1.7107e+00],
         [ 2.7051e+00,  3.4753e-01, -6.8828e-01,  ..., -1.8242e+00,
           6.3168e-01, -2.2927e-01],
         [ 1.6641e-03,  1.0099e-01, -6.6961e-01,  ...,  1.1691e-01,
          -9.2712e-01,  4.5050e-01]]], device='cuda:0',
       grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[-0.7479,  0.4635,  0.5290,  ..., -0.3250, -0.0395,  0.7523],
         [ 1.5627,  2.0420, -1.3182,  ..., -0.8156,  1.1486, -1.1577],
         [ 0.4243,  1.2670, -1.0135,  ..., -1.1360, -0.5043,  2.3762],
         ...,
         [-2.4253, -0.2757, -0.9127,  ..., -0.6367, -1.0418, -0.1405],
         [ 0.3395,  0.1518, -0.0897,  ...,  0.1064, -0.8271,  0.5532],
         [ 0.0127, -0.1958, -0.8965,  ...,  0.5989, -0.1456,  1.2940]],

        [[-0.0827,  1.0464,  0.1363,  ...,  0.6138,  0.9010,  1.0637],
         [-0.9629, -1.2996, -0.9323,  ...,  2.1005, -0.5755,  0.3120],
         [-1.1943, -0.6051,  0.3458,  ...,  0.0912, -0.3839,  0.2779],
         ...,
         [-2.0858, -0.7741, -0.1423,  ..., -1.7538, -1.4896, -1.4872],
         [ 0.2116, -0.3497, -0.2426,  ..., -0.8175,  0.6239,  0.7269],
         [ 1.2400, -0.8171, -1.0859,  ..., -0.0927,  1.0430,  0.4461]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 44.013, Val Loss : 18.620
======> Trajectory Loss : 4.714, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.393, BelowGroundPenalize Loss : 0.003
===> [Minibatch 31/129].........IDX = 0 :  tensor([[[ 1.0901e-01,  7.3511e-02, -7.0700e-01,  ..., -7.7493e-01,
          -6.2871e-01,  3.0054e-01],
         [-5.3528e-01,  7.2844e-01, -1.6386e+00,  ..., -9.5833e-01,
          -3.2240e-01, -1.3071e-01],
         [-1.1590e-01, -1.3153e+00, -1.6561e-01,  ...,  2.4317e-01,
           5.2126e-01, -6.6339e-01],
         ...,
         [-8.1941e-01, -4.8252e-01, -1.8707e+00,  ...,  4.1856e-01,
          -4.6298e-01, -1.6546e+00],
         [-8.3047e-01, -1.1889e+00,  6.3992e-01,  ..., -4.7737e-01,
          -1.7023e+00, -1.8910e-01],
         [-6.9996e-01,  1.2467e+00,  9.0642e-01,  ..., -1.2482e+00,
          -5.8896e-01,  1.5061e+00]],

        [[-5.9258e-01,  6.9628e-01, -3.8368e-01,  ...,  6.1507e-01,
          -2.0076e+00, -5.4417e-01],
         [-1.1486e+00,  1.1354e+00, -7.3318e-01,  ..., -4.7365e-01,
          -1.4698e+00, -7.2285e-01],
         [ 8.5894e-01, -4.8356e-01, -7.8298e-02,  ...,  6.2577e-01,
          -3.6472e-01, -3.7387e-01],
         ...,
         [-1.6407e+00,  7.1419e-01, -5.6191e-01,  ...,  8.7513e-01,
          -5.6004e-01,  1.7107e+00],
         [ 2.7051e+00,  3.4753e-01, -6.8828e-01,  ..., -1.8242e+00,
           6.3168e-01, -2.2927e-01],
         [ 1.6641e-03,  1.0099e-01, -6.6961e-01,  ...,  1.1691e-01,
          -9.2712e-01,  4.5050e-01]]], device='cuda:0',
       grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[-0.7479,  0.4635,  0.5290,  ..., -0.3250, -0.0395,  0.7523],
         [ 1.5627,  2.0420, -1.3182,  ..., -0.8156,  1.1486, -1.1577],
         [ 0.4243,  1.2670, -1.0135,  ..., -1.1360, -0.5043,  2.3762],
         ...,
         [-2.4253, -0.2757, -0.9127,  ..., -0.6367, -1.0418, -0.1405],
         [ 0.3395,  0.1518, -0.0897,  ...,  0.1064, -0.8271,  0.5532],
         [ 0.0127, -0.1958, -0.8965,  ...,  0.5989, -0.1456,  1.2940]],

        [[-0.0827,  1.0464,  0.1363,  ...,  0.6138,  0.9010,  1.0637],
         [-0.9629, -1.2996, -0.9323,  ...,  2.1005, -0.5755,  0.3120],
         [-1.1943, -0.6051,  0.3458,  ...,  0.0912, -0.3839,  0.2779],
         ...,
         [-2.0858, -0.7741, -0.1423,  ..., -1.7538, -1.4896, -1.4872],
         [ 0.2116, -0.3497, -0.2426,  ..., -0.8175,  0.6239,  0.7269],
         [ 1.2400, -0.8171, -1.0859,  ..., -0.0927,  1.0430,  0.4461]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 1.0837e-01,  7.5820e-02, -7.0782e-01,  ..., -7.7206e-01,
          -6.2645e-01,  3.0016e-01],
         [-5.3788e-01,  7.2994e-01, -1.6394e+00,  ..., -9.5931e-01,
          -3.2095e-01, -1.3282e-01],
         [-1.1576e-01, -1.3127e+00, -1.6603e-01,  ...,  2.4273e-01,
           5.2234e-01, -6.6426e-01],
         ...,
         [-8.2021e-01, -4.8228e-01, -1.8684e+00,  ...,  4.1763e-01,
          -4.6287e-01, -1.6550e+00],
         [-8.2977e-01, -1.1886e+00,  6.3943e-01,  ..., -4.7655e-01,
          -1.7004e+00, -1.8890e-01],
         [-7.0456e-01,  1.2536e+00,  9.0955e-01,  ..., -1.2512e+00,
          -5.9224e-01,  1.5021e+00]],

        [[-5.9158e-01,  7.0395e-01, -3.9219e-01,  ...,  6.2184e-01,
          -2.0091e+00, -5.5463e-01],
         [-1.1520e+00,  1.1382e+00, -7.3935e-01,  ..., -4.7048e-01,
          -1.4764e+00, -7.3131e-01],
         [ 8.5751e-01, -4.8524e-01, -8.5378e-02,  ...,  6.2575e-01,
          -3.6747e-01, -3.7335e-01],
         ...,
         [-1.6373e+00,  7.1659e-01, -5.5936e-01,  ...,  8.7756e-01,
          -5.6224e-01,  1.7022e+00],
         [ 2.7121e+00,  3.5115e-01, -6.9405e-01,  ..., -1.8216e+00,
           6.2160e-01, -2.3855e-01],
         [ 1.3450e-03,  1.0715e-01, -6.7669e-01,  ...,  1.1833e-01,
          -9.3534e-01,  4.4155e-01]]], device='cuda:0',
       grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[-0.7453,  0.4669,  0.5268,  ..., -0.3276, -0.0414,  0.7586],
         [ 1.5604,  2.0390, -1.3146,  ..., -0.8118,  1.1518, -1.1577],
         [ 0.4252,  1.2669, -1.0143,  ..., -1.1380, -0.5041,  2.3768],
         ...,
         [-2.4246, -0.2731, -0.9160,  ..., -0.6368, -1.0445, -0.1425],
         [ 0.3385,  0.1516, -0.0893,  ...,  0.1079, -0.8266,  0.5548],
         [ 0.0173, -0.1981, -0.8998,  ...,  0.5946, -0.1465,  1.2934]],

        [[-0.0827,  1.0468,  0.1361,  ...,  0.6145,  0.9006,  1.0637],
         [-0.9635, -1.2999, -0.9315,  ...,  2.1010, -0.5758,  0.3122],
         [-1.1946, -0.6061,  0.3466,  ...,  0.0911, -0.3847,  0.2782],
         ...,
         [-2.0865, -0.7784, -0.1421,  ..., -1.7569, -1.4904, -1.4844],
         [ 0.2113, -0.3500, -0.2423,  ..., -0.8172,  0.6237,  0.7272],
         [ 1.2395, -0.8170, -1.0849,  ..., -0.0921,  1.0427,  0.4456]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 15.337, Val Loss : 48.381
======> Trajectory Loss : 5.452, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.098, BelowGroundPenalize Loss : 0.071
===> [Minibatch 32/129].........IDX = 0 :  tensor([[[ 1.0837e-01,  7.5820e-02, -7.0782e-01,  ..., -7.7206e-01,
          -6.2645e-01,  3.0016e-01],
         [-5.3788e-01,  7.2994e-01, -1.6394e+00,  ..., -9.5931e-01,
          -3.2095e-01, -1.3282e-01],
         [-1.1576e-01, -1.3127e+00, -1.6603e-01,  ...,  2.4273e-01,
           5.2234e-01, -6.6426e-01],
         ...,
         [-8.2021e-01, -4.8228e-01, -1.8684e+00,  ...,  4.1763e-01,
          -4.6287e-01, -1.6550e+00],
         [-8.2977e-01, -1.1886e+00,  6.3943e-01,  ..., -4.7655e-01,
          -1.7004e+00, -1.8890e-01],
         [-7.0456e-01,  1.2536e+00,  9.0955e-01,  ..., -1.2512e+00,
          -5.9224e-01,  1.5021e+00]],

        [[-5.9158e-01,  7.0395e-01, -3.9219e-01,  ...,  6.2184e-01,
          -2.0091e+00, -5.5463e-01],
         [-1.1520e+00,  1.1382e+00, -7.3935e-01,  ..., -4.7048e-01,
          -1.4764e+00, -7.3131e-01],
         [ 8.5751e-01, -4.8524e-01, -8.5378e-02,  ...,  6.2575e-01,
          -3.6747e-01, -3.7335e-01],
         ...,
         [-1.6373e+00,  7.1659e-01, -5.5936e-01,  ...,  8.7756e-01,
          -5.6224e-01,  1.7022e+00],
         [ 2.7121e+00,  3.5115e-01, -6.9405e-01,  ..., -1.8216e+00,
           6.2160e-01, -2.3855e-01],
         [ 1.3450e-03,  1.0715e-01, -6.7669e-01,  ...,  1.1833e-01,
          -9.3534e-01,  4.4155e-01]]], device='cuda:0',
       grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[-0.7453,  0.4669,  0.5268,  ..., -0.3276, -0.0414,  0.7586],
         [ 1.5604,  2.0390, -1.3146,  ..., -0.8118,  1.1518, -1.1577],
         [ 0.4252,  1.2669, -1.0143,  ..., -1.1380, -0.5041,  2.3768],
         ...,
         [-2.4246, -0.2731, -0.9160,  ..., -0.6368, -1.0445, -0.1425],
         [ 0.3385,  0.1516, -0.0893,  ...,  0.1079, -0.8266,  0.5548],
         [ 0.0173, -0.1981, -0.8998,  ...,  0.5946, -0.1465,  1.2934]],

        [[-0.0827,  1.0468,  0.1361,  ...,  0.6145,  0.9006,  1.0637],
         [-0.9635, -1.2999, -0.9315,  ...,  2.1010, -0.5758,  0.3122],
         [-1.1946, -0.6061,  0.3466,  ...,  0.0911, -0.3847,  0.2782],
         ...,
         [-2.0865, -0.7784, -0.1421,  ..., -1.7569, -1.4904, -1.4844],
         [ 0.2113, -0.3500, -0.2423,  ..., -0.8172,  0.6237,  0.7272],
         [ 1.2395, -0.8170, -1.0849,  ..., -0.0921,  1.0427,  0.4456]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 1.0780e-01,  7.7934e-02, -7.0858e-01,  ..., -7.6944e-01,
          -6.2438e-01,  2.9981e-01],
         [-5.4036e-01,  7.3132e-01, -1.6402e+00,  ..., -9.6021e-01,
          -3.1959e-01, -1.3478e-01],
         [-1.1563e-01, -1.3103e+00, -1.6641e-01,  ...,  2.4234e-01,
           5.2333e-01, -6.6505e-01],
         ...,
         [-8.2093e-01, -4.8206e-01, -1.8664e+00,  ...,  4.1679e-01,
          -4.6277e-01, -1.6553e+00],
         [-8.2912e-01, -1.1884e+00,  6.3901e-01,  ..., -4.7592e-01,
          -1.6987e+00, -1.8877e-01],
         [-7.0875e-01,  1.2599e+00,  9.1240e-01,  ..., -1.2539e+00,
          -5.9523e-01,  1.4985e+00]],

        [[-5.9068e-01,  7.1095e-01, -3.9996e-01,  ...,  6.2801e-01,
          -2.0105e+00, -5.6415e-01],
         [-1.1552e+00,  1.1407e+00, -7.4496e-01,  ..., -4.6761e-01,
          -1.4825e+00, -7.3903e-01],
         [ 8.5622e-01, -4.8677e-01, -9.1908e-02,  ...,  6.2574e-01,
          -3.6997e-01, -3.7289e-01],
         ...,
         [-1.6343e+00,  7.1878e-01, -5.5704e-01,  ...,  8.7978e-01,
          -5.6424e-01,  1.6945e+00],
         [ 2.7184e+00,  3.5441e-01, -6.9928e-01,  ..., -1.8193e+00,
           6.1240e-01, -2.4699e-01],
         [ 1.0289e-03,  1.1286e-01, -6.8336e-01,  ...,  1.1965e-01,
          -9.4296e-01,  4.3327e-01]]], device='cuda:0',
       grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[-0.7420,  0.4708,  0.5240,  ..., -0.3303, -0.0436,  0.7666],
         [ 1.5596,  2.0375, -1.3140,  ..., -0.8111,  1.1519, -1.1593],
         [ 0.4230,  1.2629, -1.0116,  ..., -1.1400, -0.5016,  2.3799],
         ...,
         [-2.4240, -0.2691, -0.9205,  ..., -0.6358, -1.0464, -0.1461],
         [ 0.3377,  0.1516, -0.0889,  ...,  0.1093, -0.8262,  0.5564],
         [ 0.0218, -0.2019, -0.9030,  ...,  0.5910, -0.1472,  1.2935]],

        [[-0.0829,  1.0470,  0.1361,  ...,  0.6151,  0.9003,  1.0637],
         [-0.9655, -1.3017, -0.9288,  ...,  2.1021, -0.5744,  0.3137],
         [-1.1915, -0.6021,  0.3440,  ...,  0.0934, -0.3828,  0.2751],
         ...,
         [-2.0893, -0.7854, -0.1388,  ..., -1.7622, -1.4942, -1.4788],
         [ 0.2108, -0.3504, -0.2418,  ..., -0.8169,  0.6230,  0.7277],
         [ 1.2373, -0.8146, -1.0840,  ..., -0.0901,  1.0422,  0.4434]]],
       device='cuda:0', grad_fn=<SelectBackward>)
