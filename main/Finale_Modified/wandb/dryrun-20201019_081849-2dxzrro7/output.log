==============================================Features==============================================
Prediction = depth, Environment = unity
Available features :  ['x-0', 'y-1', 'z-2', 'u-3', 'v-4', 'd-5', 'eot-6', 'og-7', 'rad-8', 'f_sin-9', 'f_cos-10', 'g-11']
Selected features :  [6]
1. input_col =  [3, 4, 6]
2. input_startpos_col =  [3, 4, 5, 6]
3. gt_col =  [5, 6]
4. gt_startpos_col =  [0, 1, 2, 6]
5. gt_xyz_col =  [0, 1, 2, 6]
====================================================================================================
[#]Training : Trajectory Estimation
Mixed:   0%|                                                                                                                                                                                                                                    | 0/3 [00:00<?, ?it/s]Mixed:  67%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▋                                                                         | 2/3 [00:00<00:00, 13.35it/s]Mixed: 100%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 3/3 [00:00<00:00, 12.62it/s]
===============================Dataset shape===============================
Mixed : (16533,)
===========================================================================
Mixed:   0%|                                                                                                                                                                                                                                    | 0/1 [00:00<?, ?it/s]Mixed: 100%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 24.96it/s]
===============================Dataset shape===============================
Mixed : (1841,)
===========================================================================
======================================================Summary Batch (batch_size = 128)=========================================================================
Input batch [0] : batch=torch.Size([128, 914, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 914, 3]), initial position=torch.Size([128, 1, 4])
gt batch [0] : batch=torch.Size([128, 914, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 915, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [1] : batch=torch.Size([128, 801, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 801, 3]), initial position=torch.Size([128, 1, 4])
gt batch [1] : batch=torch.Size([128, 801, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 802, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [2] : batch=torch.Size([128, 939, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 939, 3]), initial position=torch.Size([128, 1, 4])
gt batch [2] : batch=torch.Size([128, 939, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 940, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [3] : batch=torch.Size([128, 906, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 906, 3]), initial position=torch.Size([128, 1, 4])
gt batch [3] : batch=torch.Size([128, 906, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 907, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [4] : batch=torch.Size([128, 895, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 895, 3]), initial position=torch.Size([128, 1, 4])
gt batch [4] : batch=torch.Size([128, 895, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 896, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [5] : batch=torch.Size([128, 861, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 861, 3]), initial position=torch.Size([128, 1, 4])
gt batch [5] : batch=torch.Size([128, 861, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 862, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [6] : batch=torch.Size([128, 843, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 843, 3]), initial position=torch.Size([128, 1, 4])
gt batch [6] : batch=torch.Size([128, 843, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 844, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [7] : batch=torch.Size([128, 943, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 943, 3]), initial position=torch.Size([128, 1, 4])
gt batch [7] : batch=torch.Size([128, 943, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 944, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [8] : batch=torch.Size([128, 858, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 858, 3]), initial position=torch.Size([128, 1, 4])
gt batch [8] : batch=torch.Size([128, 858, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 859, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [9] : batch=torch.Size([128, 900, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 900, 3]), initial position=torch.Size([128, 1, 4])
gt batch [9] : batch=torch.Size([128, 900, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 901, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [10] : batch=torch.Size([128, 881, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 881, 3]), initial position=torch.Size([128, 1, 4])
gt batch [10] : batch=torch.Size([128, 881, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 882, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [11] : batch=torch.Size([128, 796, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 796, 3]), initial position=torch.Size([128, 1, 4])
gt batch [11] : batch=torch.Size([128, 796, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 797, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [12] : batch=torch.Size([128, 952, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 952, 3]), initial position=torch.Size([128, 1, 4])
gt batch [12] : batch=torch.Size([128, 952, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 953, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [13] : batch=torch.Size([128, 780, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 780, 3]), initial position=torch.Size([128, 1, 4])
gt batch [13] : batch=torch.Size([128, 780, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 781, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [14] : batch=torch.Size([128, 955, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 955, 3]), initial position=torch.Size([128, 1, 4])
gt batch [14] : batch=torch.Size([128, 955, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 956, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [15] : batch=torch.Size([128, 765, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 765, 3]), initial position=torch.Size([128, 1, 4])
gt batch [15] : batch=torch.Size([128, 765, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 766, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [16] : batch=torch.Size([128, 931, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 931, 3]), initial position=torch.Size([128, 1, 4])
gt batch [16] : batch=torch.Size([128, 931, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 932, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [17] : batch=torch.Size([128, 882, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 882, 3]), initial position=torch.Size([128, 1, 4])
gt batch [17] : batch=torch.Size([128, 882, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 883, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [18] : batch=torch.Size([128, 834, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 834, 3]), initial position=torch.Size([128, 1, 4])
gt batch [18] : batch=torch.Size([128, 834, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 835, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [19] : batch=torch.Size([128, 956, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 956, 3]), initial position=torch.Size([128, 1, 4])
gt batch [19] : batch=torch.Size([128, 956, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 957, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [20] : batch=torch.Size([128, 875, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 875, 3]), initial position=torch.Size([128, 1, 4])
gt batch [20] : batch=torch.Size([128, 875, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 876, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [21] : batch=torch.Size([128, 1000, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 1000, 3]), initial position=torch.Size([128, 1, 4])
gt batch [21] : batch=torch.Size([128, 1000, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 1001, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [22] : batch=torch.Size([128, 835, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 835, 3]), initial position=torch.Size([128, 1, 4])
gt batch [22] : batch=torch.Size([128, 835, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 836, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [23] : batch=torch.Size([128, 795, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 795, 3]), initial position=torch.Size([128, 1, 4])
gt batch [23] : batch=torch.Size([128, 795, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 796, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [24] : batch=torch.Size([128, 841, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 841, 3]), initial position=torch.Size([128, 1, 4])
gt batch [24] : batch=torch.Size([128, 841, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 842, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [25] : batch=torch.Size([128, 665, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 665, 3]), initial position=torch.Size([128, 1, 4])
gt batch [25] : batch=torch.Size([128, 665, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 666, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [26] : batch=torch.Size([128, 872, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 872, 3]), initial position=torch.Size([128, 1, 4])
gt batch [26] : batch=torch.Size([128, 872, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 873, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [27] : batch=torch.Size([128, 813, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 813, 3]), initial position=torch.Size([128, 1, 4])
gt batch [27] : batch=torch.Size([128, 813, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 814, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [28] : batch=torch.Size([128, 856, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 856, 3]), initial position=torch.Size([128, 1, 4])
gt batch [28] : batch=torch.Size([128, 856, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 857, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [29] : batch=torch.Size([128, 752, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 752, 3]), initial position=torch.Size([128, 1, 4])
gt batch [29] : batch=torch.Size([128, 752, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 753, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [30] : batch=torch.Size([128, 963, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 963, 3]), initial position=torch.Size([128, 1, 4])
gt batch [30] : batch=torch.Size([128, 963, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 964, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [31] : batch=torch.Size([128, 868, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 868, 3]), initial position=torch.Size([128, 1, 4])
gt batch [31] : batch=torch.Size([128, 868, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 869, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [32] : batch=torch.Size([128, 869, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 869, 3]), initial position=torch.Size([128, 1, 4])
gt batch [32] : batch=torch.Size([128, 869, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 870, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [33] : batch=torch.Size([128, 915, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 915, 3]), initial position=torch.Size([128, 1, 4])
gt batch [33] : batch=torch.Size([128, 915, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 916, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [34] : batch=torch.Size([128, 945, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 945, 3]), initial position=torch.Size([128, 1, 4])
gt batch [34] : batch=torch.Size([128, 945, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 946, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [35] : batch=torch.Size([128, 911, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 911, 3]), initial position=torch.Size([128, 1, 4])
gt batch [35] : batch=torch.Size([128, 911, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 912, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [36] : batch=torch.Size([128, 948, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 948, 3]), initial position=torch.Size([128, 1, 4])
gt batch [36] : batch=torch.Size([128, 948, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 949, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [37] : batch=torch.Size([128, 839, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 839, 3]), initial position=torch.Size([128, 1, 4])
gt batch [37] : batch=torch.Size([128, 839, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 840, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [38] : batch=torch.Size([128, 982, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 982, 3]), initial position=torch.Size([128, 1, 4])
gt batch [38] : batch=torch.Size([128, 982, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 983, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [39] : batch=torch.Size([128, 814, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 814, 3]), initial position=torch.Size([128, 1, 4])
gt batch [39] : batch=torch.Size([128, 814, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 815, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [40] : batch=torch.Size([128, 919, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 919, 3]), initial position=torch.Size([128, 1, 4])
gt batch [40] : batch=torch.Size([128, 919, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 920, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [41] : batch=torch.Size([128, 1000, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 1000, 3]), initial position=torch.Size([128, 1, 4])
gt batch [41] : batch=torch.Size([128, 1000, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 1001, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [42] : batch=torch.Size([128, 956, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 956, 3]), initial position=torch.Size([128, 1, 4])
gt batch [42] : batch=torch.Size([128, 956, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 957, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [43] : batch=torch.Size([128, 903, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 903, 3]), initial position=torch.Size([128, 1, 4])
gt batch [43] : batch=torch.Size([128, 903, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 904, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [44] : batch=torch.Size([128, 796, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 796, 3]), initial position=torch.Size([128, 1, 4])
gt batch [44] : batch=torch.Size([128, 796, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 797, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [45] : batch=torch.Size([128, 731, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 731, 3]), initial position=torch.Size([128, 1, 4])
gt batch [45] : batch=torch.Size([128, 731, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 732, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [46] : batch=torch.Size([128, 869, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 869, 3]), initial position=torch.Size([128, 1, 4])
gt batch [46] : batch=torch.Size([128, 869, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 870, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [47] : batch=torch.Size([128, 915, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 915, 3]), initial position=torch.Size([128, 1, 4])
gt batch [47] : batch=torch.Size([128, 915, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 916, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [48] : batch=torch.Size([128, 822, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 822, 3]), initial position=torch.Size([128, 1, 4])
gt batch [48] : batch=torch.Size([128, 822, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 823, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [49] : batch=torch.Size([128, 906, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 906, 3]), initial position=torch.Size([128, 1, 4])
gt batch [49] : batch=torch.Size([128, 906, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 907, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [50] : batch=torch.Size([128, 840, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 840, 3]), initial position=torch.Size([128, 1, 4])
gt batch [50] : batch=torch.Size([128, 840, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 841, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [51] : batch=torch.Size([128, 761, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 761, 3]), initial position=torch.Size([128, 1, 4])
gt batch [51] : batch=torch.Size([128, 761, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 762, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [52] : batch=torch.Size([128, 918, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 918, 3]), initial position=torch.Size([128, 1, 4])
gt batch [52] : batch=torch.Size([128, 918, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 919, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [53] : batch=torch.Size([128, 811, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 811, 3]), initial position=torch.Size([128, 1, 4])
gt batch [53] : batch=torch.Size([128, 811, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 812, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [54] : batch=torch.Size([128, 864, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 864, 3]), initial position=torch.Size([128, 1, 4])
gt batch [54] : batch=torch.Size([128, 864, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 865, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [55] : batch=torch.Size([128, 884, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 884, 3]), initial position=torch.Size([128, 1, 4])
gt batch [55] : batch=torch.Size([128, 884, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 885, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [56] : batch=torch.Size([128, 969, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 969, 3]), initial position=torch.Size([128, 1, 4])
gt batch [56] : batch=torch.Size([128, 969, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 970, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [57] : batch=torch.Size([128, 917, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 917, 3]), initial position=torch.Size([128, 1, 4])
gt batch [57] : batch=torch.Size([128, 917, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 918, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [58] : batch=torch.Size([128, 814, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 814, 3]), initial position=torch.Size([128, 1, 4])
gt batch [58] : batch=torch.Size([128, 814, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 815, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [59] : batch=torch.Size([128, 914, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 914, 3]), initial position=torch.Size([128, 1, 4])
gt batch [59] : batch=torch.Size([128, 914, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 915, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [60] : batch=torch.Size([128, 836, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 836, 3]), initial position=torch.Size([128, 1, 4])
gt batch [60] : batch=torch.Size([128, 836, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 837, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [61] : batch=torch.Size([128, 832, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 832, 3]), initial position=torch.Size([128, 1, 4])
gt batch [61] : batch=torch.Size([128, 832, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 833, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [62] : batch=torch.Size([128, 852, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 852, 3]), initial position=torch.Size([128, 1, 4])
gt batch [62] : batch=torch.Size([128, 852, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 853, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [63] : batch=torch.Size([128, 823, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 823, 3]), initial position=torch.Size([128, 1, 4])
gt batch [63] : batch=torch.Size([128, 823, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 824, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [64] : batch=torch.Size([128, 851, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 851, 3]), initial position=torch.Size([128, 1, 4])
gt batch [64] : batch=torch.Size([128, 851, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 852, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [65] : batch=torch.Size([128, 858, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 858, 3]), initial position=torch.Size([128, 1, 4])
gt batch [65] : batch=torch.Size([128, 858, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 859, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [66] : batch=torch.Size([128, 829, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 829, 3]), initial position=torch.Size([128, 1, 4])
gt batch [66] : batch=torch.Size([128, 829, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 830, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [67] : batch=torch.Size([128, 1040, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 1040, 3]), initial position=torch.Size([128, 1, 4])
gt batch [67] : batch=torch.Size([128, 1040, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 1041, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [68] : batch=torch.Size([128, 932, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 932, 3]), initial position=torch.Size([128, 1, 4])
gt batch [68] : batch=torch.Size([128, 932, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 933, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [69] : batch=torch.Size([128, 818, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 818, 3]), initial position=torch.Size([128, 1, 4])
gt batch [69] : batch=torch.Size([128, 818, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 819, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [70] : batch=torch.Size([128, 970, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 970, 3]), initial position=torch.Size([128, 1, 4])
gt batch [70] : batch=torch.Size([128, 970, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 971, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [71] : batch=torch.Size([128, 776, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 776, 3]), initial position=torch.Size([128, 1, 4])
gt batch [71] : batch=torch.Size([128, 776, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 777, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [72] : batch=torch.Size([128, 814, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 814, 3]), initial position=torch.Size([128, 1, 4])
gt batch [72] : batch=torch.Size([128, 814, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 815, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [73] : batch=torch.Size([128, 894, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 894, 3]), initial position=torch.Size([128, 1, 4])
gt batch [73] : batch=torch.Size([128, 894, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 895, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [74] : batch=torch.Size([128, 822, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 822, 3]), initial position=torch.Size([128, 1, 4])
gt batch [74] : batch=torch.Size([128, 822, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 823, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [75] : batch=torch.Size([128, 756, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 756, 3]), initial position=torch.Size([128, 1, 4])
gt batch [75] : batch=torch.Size([128, 756, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 757, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [76] : batch=torch.Size([128, 829, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 829, 3]), initial position=torch.Size([128, 1, 4])
gt batch [76] : batch=torch.Size([128, 829, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 830, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [77] : batch=torch.Size([128, 945, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 945, 3]), initial position=torch.Size([128, 1, 4])
gt batch [77] : batch=torch.Size([128, 945, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 946, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [78] : batch=torch.Size([128, 843, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 843, 3]), initial position=torch.Size([128, 1, 4])
gt batch [78] : batch=torch.Size([128, 843, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 844, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [79] : batch=torch.Size([128, 966, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 966, 3]), initial position=torch.Size([128, 1, 4])
gt batch [79] : batch=torch.Size([128, 966, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 967, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [80] : batch=torch.Size([128, 825, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 825, 3]), initial position=torch.Size([128, 1, 4])
gt batch [80] : batch=torch.Size([128, 825, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 826, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [81] : batch=torch.Size([128, 815, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 815, 3]), initial position=torch.Size([128, 1, 4])
gt batch [81] : batch=torch.Size([128, 815, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 816, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [82] : batch=torch.Size([128, 868, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 868, 3]), initial position=torch.Size([128, 1, 4])
gt batch [82] : batch=torch.Size([128, 868, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 869, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [83] : batch=torch.Size([128, 809, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 809, 3]), initial position=torch.Size([128, 1, 4])
gt batch [83] : batch=torch.Size([128, 809, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 810, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [84] : batch=torch.Size([128, 772, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 772, 3]), initial position=torch.Size([128, 1, 4])
gt batch [84] : batch=torch.Size([128, 772, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 773, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [85] : batch=torch.Size([128, 945, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 945, 3]), initial position=torch.Size([128, 1, 4])
gt batch [85] : batch=torch.Size([128, 945, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 946, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [86] : batch=torch.Size([128, 875, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 875, 3]), initial position=torch.Size([128, 1, 4])
gt batch [86] : batch=torch.Size([128, 875, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 876, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [87] : batch=torch.Size([128, 915, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 915, 3]), initial position=torch.Size([128, 1, 4])
gt batch [87] : batch=torch.Size([128, 915, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 916, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [88] : batch=torch.Size([128, 878, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 878, 3]), initial position=torch.Size([128, 1, 4])
gt batch [88] : batch=torch.Size([128, 878, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 879, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [89] : batch=torch.Size([128, 811, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 811, 3]), initial position=torch.Size([128, 1, 4])
gt batch [89] : batch=torch.Size([128, 811, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 812, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [90] : batch=torch.Size([128, 795, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 795, 3]), initial position=torch.Size([128, 1, 4])
gt batch [90] : batch=torch.Size([128, 795, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 796, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [91] : batch=torch.Size([128, 748, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 748, 3]), initial position=torch.Size([128, 1, 4])
gt batch [91] : batch=torch.Size([128, 748, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 749, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [92] : batch=torch.Size([128, 928, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 928, 3]), initial position=torch.Size([128, 1, 4])
gt batch [92] : batch=torch.Size([128, 928, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 929, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [93] : batch=torch.Size([128, 875, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 875, 3]), initial position=torch.Size([128, 1, 4])
gt batch [93] : batch=torch.Size([128, 875, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 876, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [94] : batch=torch.Size([128, 884, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 884, 3]), initial position=torch.Size([128, 1, 4])
gt batch [94] : batch=torch.Size([128, 884, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 885, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [95] : batch=torch.Size([128, 768, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 768, 3]), initial position=torch.Size([128, 1, 4])
gt batch [95] : batch=torch.Size([128, 768, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 769, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [96] : batch=torch.Size([128, 852, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 852, 3]), initial position=torch.Size([128, 1, 4])
gt batch [96] : batch=torch.Size([128, 852, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 853, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [97] : batch=torch.Size([128, 844, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 844, 3]), initial position=torch.Size([128, 1, 4])
gt batch [97] : batch=torch.Size([128, 844, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 845, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [98] : batch=torch.Size([128, 995, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 995, 3]), initial position=torch.Size([128, 1, 4])
gt batch [98] : batch=torch.Size([128, 995, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 996, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [99] : batch=torch.Size([128, 1023, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 1023, 3]), initial position=torch.Size([128, 1, 4])
gt batch [99] : batch=torch.Size([128, 1023, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 1024, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [100] : batch=torch.Size([128, 862, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 862, 3]), initial position=torch.Size([128, 1, 4])
gt batch [100] : batch=torch.Size([128, 862, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 863, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [101] : batch=torch.Size([128, 749, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 749, 3]), initial position=torch.Size([128, 1, 4])
gt batch [101] : batch=torch.Size([128, 749, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 750, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [102] : batch=torch.Size([128, 874, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 874, 3]), initial position=torch.Size([128, 1, 4])
gt batch [102] : batch=torch.Size([128, 874, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 875, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [103] : batch=torch.Size([128, 840, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 840, 3]), initial position=torch.Size([128, 1, 4])
gt batch [103] : batch=torch.Size([128, 840, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 841, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [104] : batch=torch.Size([128, 679, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 679, 3]), initial position=torch.Size([128, 1, 4])
gt batch [104] : batch=torch.Size([128, 679, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 680, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [105] : batch=torch.Size([128, 836, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 836, 3]), initial position=torch.Size([128, 1, 4])
gt batch [105] : batch=torch.Size([128, 836, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 837, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [106] : batch=torch.Size([128, 845, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 845, 3]), initial position=torch.Size([128, 1, 4])
gt batch [106] : batch=torch.Size([128, 845, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 846, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [107] : batch=torch.Size([128, 786, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 786, 3]), initial position=torch.Size([128, 1, 4])
gt batch [107] : batch=torch.Size([128, 786, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 787, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [108] : batch=torch.Size([128, 837, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 837, 3]), initial position=torch.Size([128, 1, 4])
gt batch [108] : batch=torch.Size([128, 837, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 838, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [109] : batch=torch.Size([128, 793, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 793, 3]), initial position=torch.Size([128, 1, 4])
gt batch [109] : batch=torch.Size([128, 793, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 794, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [110] : batch=torch.Size([128, 961, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 961, 3]), initial position=torch.Size([128, 1, 4])
gt batch [110] : batch=torch.Size([128, 961, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 962, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [111] : batch=torch.Size([128, 976, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 976, 3]), initial position=torch.Size([128, 1, 4])
gt batch [111] : batch=torch.Size([128, 976, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 977, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [112] : batch=torch.Size([128, 790, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 790, 3]), initial position=torch.Size([128, 1, 4])
gt batch [112] : batch=torch.Size([128, 790, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 791, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [113] : batch=torch.Size([128, 979, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 979, 3]), initial position=torch.Size([128, 1, 4])
gt batch [113] : batch=torch.Size([128, 979, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 980, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [114] : batch=torch.Size([128, 935, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 935, 3]), initial position=torch.Size([128, 1, 4])
gt batch [114] : batch=torch.Size([128, 935, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 936, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [115] : batch=torch.Size([128, 805, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 805, 3]), initial position=torch.Size([128, 1, 4])
gt batch [115] : batch=torch.Size([128, 805, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 806, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [116] : batch=torch.Size([128, 775, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 775, 3]), initial position=torch.Size([128, 1, 4])
gt batch [116] : batch=torch.Size([128, 775, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 776, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [117] : batch=torch.Size([128, 830, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 830, 3]), initial position=torch.Size([128, 1, 4])
gt batch [117] : batch=torch.Size([128, 830, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 831, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [118] : batch=torch.Size([128, 862, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 862, 3]), initial position=torch.Size([128, 1, 4])
gt batch [118] : batch=torch.Size([128, 862, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 863, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [119] : batch=torch.Size([128, 745, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 745, 3]), initial position=torch.Size([128, 1, 4])
gt batch [119] : batch=torch.Size([128, 745, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 746, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [120] : batch=torch.Size([128, 901, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 901, 3]), initial position=torch.Size([128, 1, 4])
gt batch [120] : batch=torch.Size([128, 901, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 902, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [121] : batch=torch.Size([128, 820, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 820, 3]), initial position=torch.Size([128, 1, 4])
gt batch [121] : batch=torch.Size([128, 820, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 821, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [122] : batch=torch.Size([128, 900, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 900, 3]), initial position=torch.Size([128, 1, 4])
gt batch [122] : batch=torch.Size([128, 900, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 901, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [123] : batch=torch.Size([128, 811, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 811, 3]), initial position=torch.Size([128, 1, 4])
gt batch [123] : batch=torch.Size([128, 811, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 812, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [124] : batch=torch.Size([128, 912, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 912, 3]), initial position=torch.Size([128, 1, 4])
gt batch [124] : batch=torch.Size([128, 912, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 913, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [125] : batch=torch.Size([128, 822, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 822, 3]), initial position=torch.Size([128, 1, 4])
gt batch [125] : batch=torch.Size([128, 822, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 823, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [126] : batch=torch.Size([128, 772, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 772, 3]), initial position=torch.Size([128, 1, 4])
gt batch [126] : batch=torch.Size([128, 772, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 773, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [127] : batch=torch.Size([128, 849, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 849, 3]), initial position=torch.Size([128, 1, 4])
gt batch [127] : batch=torch.Size([128, 849, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 850, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [128] : batch=torch.Size([128, 860, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 860, 3]), initial position=torch.Size([128, 1, 4])
gt batch [128] : batch=torch.Size([128, 860, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 861, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
{'flag': {'input_size': 2, 'output_size': 1, 'hidden_dim': 32, 'n_layers': 1, 'n_stack': 4, 'recurrent_stacked': [2, 32, 32, 32, 32], 'fc_size': [64, 32, 16, 8, 4, 1]}, 'depth': {'input_size': 3, 'output_size': 2, 'hidden_dim': 32, 'n_layers': 1, 'n_stack': 4, 'recurrent_stacked': [3, 32, 32, 32, 32], 'fc_size': [64, 32, 16, 8, 4, 2]}}
===>No model checkpoint
[#] Define the Learning rate, Optimizer, Decay rate and Scheduler...
[#]Model Architecture
####### Model - EOT #######
BiLSTMResidualTrainableInit(
  (recurrent_blocks): ModuleList(
    (0): LSTM(2, 32, batch_first=True, bidirectional=True)
    (1): LSTM(64, 32, batch_first=True, bidirectional=True)
    (2): LSTM(64, 32, batch_first=True, bidirectional=True)
    (3): LSTM(64, 32, batch_first=True, bidirectional=True)
  )
  (fc_blocks): Sequential(
    (0): Sequential(
      (0): Linear(in_features=64, out_features=32, bias=True)
      (1): LeakyReLU(negative_slope=0.01)
    )
    (1): Sequential(
      (0): Linear(in_features=32, out_features=16, bias=True)
      (1): LeakyReLU(negative_slope=0.01)
    )
    (2): Sequential(
      (0): Linear(in_features=16, out_features=8, bias=True)
      (1): LeakyReLU(negative_slope=0.01)
    )
    (3): Sequential(
      (0): Linear(in_features=8, out_features=4, bias=True)
      (1): LeakyReLU(negative_slope=0.01)
    )
    (4): Sequential(
      (0): Linear(in_features=4, out_features=1, bias=True)
      (1): Sigmoid()
    )
  )
)
####### Model - Depth #######
BiLSTMResidualTrainableInit(
  (recurrent_blocks): ModuleList(
    (0): LSTM(3, 32, batch_first=True, bidirectional=True)
    (1): LSTM(64, 32, batch_first=True, bidirectional=True)
    (2): LSTM(64, 32, batch_first=True, bidirectional=True)
    (3): LSTM(64, 32, batch_first=True, bidirectional=True)
  )
  (fc_blocks): Sequential(
    (0): Sequential(
      (0): Linear(in_features=64, out_features=32, bias=True)
      (1): LeakyReLU(negative_slope=0.01)
    )
    (1): Sequential(
      (0): Linear(in_features=32, out_features=16, bias=True)
      (1): LeakyReLU(negative_slope=0.01)
    )
    (2): Sequential(
      (0): Linear(in_features=16, out_features=8, bias=True)
      (1): LeakyReLU(negative_slope=0.01)
    )
    (3): Sequential(
      (0): Linear(in_features=8, out_features=4, bias=True)
      (1): LeakyReLU(negative_slope=0.01)
    )
    (4): Sequential(
      (0): Linear(in_features=4, out_features=2, bias=True)
    )
  )
)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[Epoch : 1/100000]<<<<<<<<<<<<<<<<<<<<<<<<<<<<
[#]Learning rate (Depth & EOT) :  0.01
===> [Minibatch 1/129].........recurrent_blocks.0.weight_ih_l0 tensor([[ 1.3620e-01,  1.4990e-02, -5.2414e-02],
        [-4.0300e-02, -6.9661e-03,  1.3234e-01],
        [ 1.9979e-02,  5.6494e-02,  6.4505e-02],
        [-2.2926e-02, -6.6539e-02,  2.2714e-02],
        [-2.9934e-03, -4.9149e-02, -1.0339e-01],
        [ 8.1023e-02, -8.5818e-02,  1.1637e-01],
        [-8.7602e-02, -1.4464e-01,  1.3441e-01],
        [ 1.2013e-01,  1.5997e-01, -5.9056e-02],
        [-1.6880e-01, -9.2228e-02, -3.7488e-03],
        [ 1.4922e-01,  6.0642e-02,  8.6487e-02],
        [-1.0033e-01, -1.4316e-01,  1.7347e-02],
        [-5.9012e-02,  1.6184e-01, -8.3627e-02],
        [-1.5145e-01,  1.6774e-01,  1.2137e-01],
        [-1.5381e-01, -1.1518e-01,  1.6197e-01],
        [-1.2323e-01,  1.0916e-01, -1.1448e-01],
        [-1.0343e-01,  4.4877e-02,  1.6145e-01],
        [ 1.0217e-01, -1.1152e-01, -1.3961e-01],
        [ 4.3677e-02,  1.8653e-01, -4.0519e-02],
        [-3.5907e-02,  2.9734e-02, -6.1138e-02],
        [-1.6126e-01, -1.4317e-01, -5.6037e-02],
        [-4.0314e-02,  1.0894e-01,  1.2932e-01],
        [-2.7546e-03,  6.2875e-02,  1.6752e-01],
        [-6.1661e-02, -3.2163e-02, -1.6483e-01],
        [-6.1883e-03, -1.1641e-01, -3.9759e-02],
        [-1.1909e-01, -9.6205e-02,  6.3631e-05],
        [-1.8544e-01, -8.8609e-02, -1.0963e-01],
        [-4.6200e-02,  1.1397e-01,  1.3103e-01],
        [ 1.3297e-01, -1.7316e-01, -1.6544e-01],
        [ 6.7264e-03, -3.1753e-02,  6.0559e-02],
        [-8.7278e-02, -1.0234e-01,  1.3428e-01],
        [ 1.1906e-02, -7.0633e-02, -1.6699e-01],
        [ 4.3684e-02,  5.3872e-02, -7.1637e-02],
        [-1.4667e-01,  4.4091e-02, -1.3329e-01],
        [ 9.4164e-02,  5.6879e-02, -4.6312e-02],
        [-5.1135e-02,  1.4528e-01,  3.3704e-02],
        [ 1.5450e-01,  1.4673e-01, -9.8853e-02],
        [-1.0329e-01,  2.6454e-02,  5.7786e-02],
        [ 1.9523e-02, -7.7504e-02, -1.7568e-01],
        [-6.3867e-02, -1.4871e-01,  4.4092e-02],
        [ 1.4675e-01,  1.1952e-01,  1.4719e-01],
        [ 1.4565e-01, -5.4034e-02, -2.1675e-02],
        [ 4.4218e-02,  1.0027e-01, -1.3483e-01],
        [-7.2989e-02,  1.4959e-01,  5.9750e-02],
        [ 1.6339e-01,  1.4716e-01,  1.7653e-01],
        [-1.5465e-01, -4.3210e-03, -1.0493e-01],
        [-3.0684e-02, -8.3462e-02, -1.0445e-01],
        [-5.1341e-02,  1.3068e-02,  8.2573e-02],
        [-1.0718e-01,  5.5739e-02, -8.9567e-02],
        [ 9.9346e-02, -5.0085e-02, -2.7912e-02],
        [-5.1387e-02, -1.2209e-01,  6.6432e-02],
        [-1.6794e-01,  1.7942e-01,  2.3244e-02],
        [ 3.7744e-03, -1.1994e-01, -4.3816e-02],
        [-1.4377e-01, -1.4991e-02,  1.6055e-01],
        [ 9.4777e-03, -1.1189e-02,  4.5771e-02],
        [-1.5058e-01, -1.0882e-01,  1.2876e-01],
        [ 1.4144e-01,  1.2373e-01,  1.8085e-01],
        [-1.4999e-01,  4.0989e-02, -1.5705e-01],
        [ 8.4560e-02, -1.0456e-01, -1.7279e-01],
        [ 7.6667e-02,  1.4603e-01, -5.5764e-03],
        [ 1.4042e-02, -6.2108e-02,  1.3899e-01],
        [ 1.0407e-01,  1.0297e-01,  1.6894e-01],
        [-1.2632e-01, -1.3040e-01, -4.1916e-02],
        [-1.1973e-01,  6.5008e-02, -1.0662e-01],
        [ 7.4931e-03, -1.4178e-01, -7.0497e-02],
        [ 6.7134e-02,  1.5833e-01,  1.2940e-02],
        [-1.3872e-01,  1.3324e-01, -1.1679e-01],
        [-2.2593e-02, -1.7160e-01, -1.5473e-01],
        [ 9.9925e-02,  1.6089e-01, -5.0042e-02],
        [-1.1886e-01, -1.4986e-01, -4.2494e-02],
        [-1.6334e-02, -1.5492e-01,  8.1228e-02],
        [-2.7459e-02, -4.9053e-02, -4.4479e-02],
        [ 1.3114e-01,  5.3547e-02,  1.2597e-02],
        [-1.5110e-01,  1.8123e-01,  1.5772e-01],
        [ 1.4826e-02, -1.6288e-01,  1.2858e-02],
        [-1.2284e-01, -9.4539e-02, -1.4836e-01],
        [ 1.4125e-01,  1.1461e-01,  2.7771e-02],
        [ 8.7751e-02,  1.4063e-01, -1.6597e-01],
        [-1.4275e-01,  1.7761e-01,  4.8078e-02],
        [-1.5694e-01,  1.1460e-01, -5.8689e-02],
        [ 2.9865e-02,  8.2436e-02, -1.0722e-01],
        [-6.9379e-02,  3.9447e-03, -8.5003e-02],
        [ 1.4354e-01, -9.2390e-02,  1.1398e-01],
        [ 4.0388e-02,  1.5173e-01, -7.8613e-02],
        [ 4.1481e-02,  1.4454e-01,  1.0165e-01],
        [-1.7404e-01, -8.9592e-02,  1.0637e-02],
        [-1.8037e-01,  1.4041e-01,  2.3783e-02],
        [-1.4518e-01,  1.3711e-01, -1.0331e-01],
        [ 3.9190e-02, -1.3415e-01, -1.9597e-02],
        [ 1.7255e-02,  8.6795e-02, -3.6254e-02],
        [ 9.7104e-02, -1.1565e-01,  1.5217e-02],
        [-1.6512e-01,  1.6468e-01, -1.1353e-01],
        [-1.6962e-01,  5.4083e-02,  9.8911e-02],
        [ 2.0374e-02, -2.1782e-02,  9.7876e-02],
        [ 2.5396e-02, -1.7755e-01,  1.1887e-01],
        [-1.2969e-01, -6.8891e-03,  7.6000e-02],
        [-1.0882e-01, -1.1380e-02,  1.4519e-01],
        [-9.4934e-02, -5.5962e-02, -5.9616e-02],
        [-1.5860e-01, -1.4855e-01,  7.5947e-02],
        [ 1.2940e-01, -3.6977e-02, -1.8262e-01],
        [-8.6500e-02,  4.6815e-02,  1.4236e-01],
        [-1.3634e-01, -6.2699e-02, -1.8427e-01],
        [ 1.6534e-01,  8.7775e-02, -1.2049e-01],
        [-3.5836e-02,  1.6698e-01, -1.3294e-01],
        [ 2.9376e-02,  2.5244e-02, -7.1493e-02],
        [-7.1538e-02, -9.1401e-02,  1.2349e-01],
        [ 8.8182e-02,  3.1244e-02,  1.1404e-01],
        [-1.0835e-01,  4.2741e-02,  8.6418e-02],
        [ 1.5742e-01,  1.1646e-01,  2.1462e-02],
        [-8.1024e-02, -1.2476e-01, -9.1123e-02],
        [ 1.5438e-01, -1.3097e-01,  1.4201e-01],
        [ 1.8121e-02,  6.8976e-03, -8.1826e-02],
        [ 7.4267e-02,  8.9398e-02, -2.9948e-02],
        [ 1.7687e-01, -7.1242e-02,  1.6619e-01],
        [-1.4023e-01, -8.3418e-02, -5.3051e-02],
        [-5.3402e-02,  1.4667e-02, -5.9437e-02],
        [ 1.2668e-01,  1.3119e-01,  7.2963e-02],
        [ 8.2054e-02,  1.0513e-01, -1.3342e-01],
        [ 1.3048e-01, -1.0927e-01,  1.2231e-01],
        [-5.3144e-03, -1.2585e-01,  1.0412e-01],
        [-1.0516e-01, -7.7072e-02, -1.0032e-01],
        [ 7.5654e-02, -1.5703e-01, -7.6833e-02],
        [-5.1778e-02,  1.5100e-02,  6.2466e-02],
        [ 1.0083e-01, -1.0710e-01,  1.1142e-01],
        [-1.6045e-01, -1.7569e-01,  1.4134e-01],
        [ 1.4908e-01, -1.5462e-01, -1.1520e-01],
        [-2.5420e-02,  7.3737e-02,  4.5039e-02],
        [ 1.4699e-01, -1.2452e-01,  1.2219e-01],
        [ 6.6403e-02,  7.3484e-02, -7.3789e-02]], device='cuda:0') torch.Size([128, 3])
recurrent_blocks.0.weight_hh_l0 tensor([[ 0.0136,  0.1320, -0.1661,  ...,  0.0636,  0.0912,  0.1280],
        [ 0.0452, -0.0125,  0.1275,  ...,  0.1661,  0.0893, -0.1209],
        [ 0.0550, -0.1004, -0.0047,  ..., -0.1381, -0.1507, -0.0379],
        ...,
        [-0.1229,  0.0050, -0.0090,  ..., -0.0744,  0.0767, -0.0173],
        [ 0.0970, -0.0183, -0.1033,  ...,  0.0384, -0.0542,  0.1430],
        [-0.0082,  0.0861, -0.0403,  ..., -0.1239,  0.0425, -0.0874]],
       device='cuda:0') torch.Size([128, 32])
recurrent_blocks.0.bias_ih_l0 tensor([-0.0394,  0.0243, -0.1865,  0.0996,  0.1052,  0.1624, -0.1428, -0.0118,
         0.1117, -0.0127, -0.1663,  0.0829, -0.1524,  0.0429,  0.0782,  0.0608,
         0.0527,  0.0772, -0.0149,  0.0867, -0.0597, -0.0207, -0.1362,  0.1133,
        -0.1730,  0.1414,  0.0980,  0.0124,  0.0396,  0.0935, -0.1216, -0.0824,
         0.0361, -0.1334,  0.0403,  0.1208, -0.0294, -0.1287,  0.0620,  0.0946,
         0.0156,  0.0421,  0.0837,  0.1272, -0.1315,  0.0452, -0.0522, -0.1249,
         0.0677, -0.0057,  0.0913,  0.0013,  0.0505, -0.0208, -0.1090,  0.0475,
         0.1282, -0.0060,  0.1239, -0.1395, -0.1536,  0.0714,  0.0192,  0.0262,
        -0.0264,  0.0680, -0.0815,  0.1051,  0.1612,  0.0240,  0.1368,  0.0010,
        -0.0999,  0.0956,  0.1449,  0.1022,  0.0104,  0.0569, -0.0364, -0.0694,
         0.0780,  0.0533,  0.0824, -0.1182, -0.0181, -0.1683,  0.0890,  0.1195,
        -0.1262, -0.1227,  0.1638, -0.0523,  0.1760, -0.1446, -0.1530,  0.1056,
         0.0625,  0.1175,  0.0327,  0.0557, -0.0761,  0.0114, -0.1449,  0.0767,
        -0.0301,  0.0251,  0.1845,  0.1288,  0.0186,  0.0371, -0.1116,  0.0184,
        -0.0556, -0.0426,  0.0323, -0.1525,  0.0383,  0.0402,  0.0165, -0.0753,
        -0.1153,  0.1189,  0.0360, -0.0890,  0.1360, -0.0665,  0.1431, -0.1155],
       device='cuda:0') torch.Size([128])
recurrent_blocks.0.bias_hh_l0 tensor([ 0.0522, -0.0907, -0.0609,  0.0850, -0.1075,  0.1340,  0.0375,  0.0626,
        -0.1497, -0.0189,  0.1118, -0.0112,  0.0266, -0.1566, -0.1169, -0.0368,
         0.0447,  0.0854, -0.1646,  0.1008, -0.0279,  0.1481,  0.0106,  0.0883,
         0.0874, -0.1838, -0.0714,  0.1303, -0.0109,  0.0123, -0.0465, -0.1517,
        -0.1027,  0.1338, -0.1079, -0.1240,  0.0317,  0.0584, -0.1589,  0.0065,
         0.1224,  0.0308, -0.0521,  0.1454, -0.1333,  0.1185,  0.0368,  0.0045,
        -0.1199, -0.1660,  0.0303, -0.0993,  0.0724,  0.0204, -0.0948,  0.1452,
        -0.1714,  0.0865,  0.0258,  0.1121,  0.0482,  0.1266, -0.1111,  0.0410,
         0.0060,  0.1580, -0.1589,  0.0325,  0.0659, -0.0804, -0.1207,  0.1230,
         0.0743, -0.1739,  0.0812,  0.1189,  0.0307, -0.1562,  0.1843,  0.0169,
         0.0678,  0.1544,  0.1523, -0.1357,  0.0917,  0.1184, -0.1299,  0.0323,
         0.0373, -0.0877,  0.1542,  0.1453, -0.1087, -0.0415, -0.0325,  0.0385,
         0.0596, -0.1573,  0.1345,  0.1233, -0.0433, -0.1069, -0.0491,  0.1580,
         0.1654,  0.1818,  0.0525,  0.0180,  0.0294,  0.0011, -0.0475, -0.0602,
        -0.0314, -0.1602, -0.1344, -0.0046, -0.0790,  0.1212, -0.0842, -0.0657,
        -0.1838,  0.1118,  0.1215,  0.0084, -0.0856, -0.0653, -0.0927,  0.0289],
       device='cuda:0') torch.Size([128])
recurrent_blocks.0.weight_ih_l0_reverse tensor([[ 0.0826, -0.1578, -0.0329],
        [ 0.0810, -0.0417, -0.0649],
        [ 0.0104,  0.0560,  0.0381],
        [-0.1766, -0.0383,  0.1163],
        [ 0.1811,  0.1636, -0.0648],
        [-0.0912, -0.0062,  0.1454],
        [ 0.0006,  0.0592, -0.1422],
        [ 0.0866,  0.0679,  0.0767],
        [ 0.0971,  0.0154, -0.1508],
        [-0.0872,  0.1862, -0.1817],
        [-0.0365,  0.0337,  0.0425],
        [-0.1837,  0.0255, -0.1566],
        [ 0.1057,  0.1111, -0.0364],
        [-0.0065, -0.0101,  0.1083],
        [ 0.1062, -0.0982, -0.0066],
        [-0.0870, -0.0445, -0.0239],
        [-0.0972, -0.0037,  0.0944],
        [-0.0860, -0.0151, -0.0925],
        [-0.1638,  0.0263, -0.1068],
        [ 0.1362, -0.0407,  0.1300],
        [ 0.0079,  0.1369, -0.1542],
        [-0.0793, -0.0703, -0.0567],
        [-0.1486,  0.0792,  0.0412],
        [ 0.0308,  0.1248, -0.1284],
        [-0.1219,  0.0667, -0.0265],
        [-0.1575, -0.1751, -0.0244],
        [-0.0692,  0.0598, -0.1020],
        [-0.1610,  0.1445,  0.0325],
        [-0.0424,  0.1819,  0.1846],
        [ 0.0974,  0.0232, -0.1336],
        [-0.0327,  0.1612, -0.1487],
        [-0.1117, -0.1280, -0.0902],
        [-0.1464, -0.0617,  0.0683],
        [-0.1282,  0.0590,  0.1589],
        [-0.1340,  0.1793,  0.1109],
        [-0.0226, -0.0659, -0.1056],
        [ 0.1562,  0.1181,  0.1537],
        [-0.0503,  0.1197,  0.0818],
        [ 0.0362,  0.0240,  0.0474],
        [-0.1139, -0.0142,  0.0377],
        [ 0.0954,  0.0761,  0.0217],
        [ 0.1685, -0.0484, -0.0926],
        [-0.1491, -0.0511, -0.1442],
        [ 0.1229,  0.1602, -0.0485],
        [ 0.0231,  0.1750,  0.0090],
        [ 0.1829, -0.1484, -0.1226],
        [-0.1467,  0.1192, -0.1602],
        [-0.0036, -0.1798, -0.0426],
        [-0.1618, -0.1319, -0.1471],
        [-0.0814,  0.1611,  0.1504],
        [ 0.0349,  0.1334,  0.1037],
        [ 0.0841, -0.0565,  0.0479],
        [-0.0153, -0.0578,  0.0180],
        [ 0.0534, -0.1578,  0.1712],
        [-0.1441,  0.1233, -0.1587],
        [-0.0310, -0.0536,  0.1447],
        [ 0.0094,  0.0675,  0.1169],
        [ 0.0558, -0.0683,  0.1428],
        [-0.0158,  0.0786,  0.0542],
        [-0.1552,  0.0779, -0.0600],
        [-0.0821,  0.1271,  0.1188],
        [-0.1352, -0.0268, -0.1728],
        [-0.0369,  0.0591, -0.0422],
        [-0.1696,  0.1420,  0.1378],
        [ 0.1817, -0.0606, -0.1574],
        [ 0.0113, -0.1847, -0.0542],
        [-0.1130,  0.0623, -0.0893],
        [-0.1577, -0.1420, -0.1537],
        [-0.0619, -0.1253, -0.1456],
        [ 0.0271, -0.0196, -0.0365],
        [-0.0771, -0.1183, -0.1555],
        [-0.1486,  0.0931,  0.1210],
        [ 0.0209,  0.1580, -0.0730],
        [-0.1222, -0.1720, -0.0645],
        [-0.0243,  0.0333,  0.0105],
        [-0.0130, -0.0117,  0.0140],
        [-0.0162, -0.0165, -0.0061],
        [-0.0877, -0.0005,  0.0988],
        [-0.1853, -0.1721,  0.0724],
        [ 0.0876,  0.0460,  0.0396],
        [ 0.0666, -0.1577,  0.0837],
        [ 0.0473, -0.0542, -0.0604],
        [-0.0221, -0.1077,  0.1589],
        [ 0.1400,  0.1000, -0.0533],
        [ 0.1611,  0.1205, -0.1614],
        [ 0.0048, -0.1060,  0.1546],
        [ 0.0902,  0.0425,  0.0684],
        [-0.0871,  0.1263,  0.0975],
        [ 0.0514, -0.0573,  0.0291],
        [ 0.0673, -0.1477,  0.1405],
        [-0.1682, -0.1453, -0.0968],
        [-0.1189, -0.0257,  0.1596],
        [-0.1130,  0.1844,  0.1101],
        [-0.1501, -0.0676, -0.1027],
        [-0.1382,  0.0932,  0.1490],
        [-0.0778, -0.1325,  0.0850],
        [ 0.0034, -0.1325,  0.0929],
        [-0.0065, -0.0500,  0.0152],
        [-0.0590, -0.0481,  0.0307],
        [ 0.1513, -0.0180, -0.1178],
        [ 0.0356,  0.1579, -0.0851],
        [ 0.1358, -0.1590, -0.0308],
        [-0.0915,  0.0446,  0.1783],
        [ 0.1140,  0.1352,  0.0386],
        [-0.0196, -0.1529,  0.0344],
        [ 0.0886,  0.0102,  0.1046],
        [ 0.0960,  0.0433,  0.1587],
        [ 0.1038, -0.1013, -0.0656],
        [ 0.1390, -0.0559,  0.0747],
        [ 0.0508, -0.1364,  0.0899],
        [ 0.1082,  0.0065,  0.1357],
        [ 0.0138, -0.0598, -0.1602],
        [ 0.1386,  0.0528, -0.1488],
        [-0.1558, -0.0772,  0.0769],
        [ 0.0895,  0.0919,  0.1357],
        [ 0.1844, -0.1576, -0.0971],
        [ 0.1017,  0.0907, -0.1050],
        [-0.1495,  0.0325,  0.1419],
        [ 0.0502, -0.1719,  0.0349],
        [-0.1314, -0.0462,  0.0156],
        [ 0.1509, -0.0537, -0.1203],
        [-0.1182,  0.1186,  0.0459],
        [-0.0081, -0.0537, -0.0131],
        [-0.0605,  0.0025,  0.0327],
        [ 0.0267, -0.0016, -0.1523],
        [ 0.0868, -0.0207,  0.0551],
        [ 0.0438,  0.0158,  0.1134],
        [ 0.0128, -0.1019, -0.1190]], device='cuda:0') torch.Size([128, 3])
recurrent_blocks.0.weight_hh_l0_reverse tensor([[ 0.0365,  0.1480, -0.1675,  ..., -0.1016, -0.1077,  0.0065],
        [ 0.0097, -0.0327,  0.1762,  ..., -0.1400, -0.0241,  0.0058],
        [-0.1447,  0.0707,  0.1540,  ...,  0.1844, -0.0461,  0.0770],
        ...,
        [ 0.0673,  0.0744, -0.0787,  ..., -0.1250, -0.0037,  0.1121],
        [ 0.0555,  0.1796,  0.1744,  ..., -0.1363,  0.1361, -0.0301],
        [ 0.0451, -0.0550, -0.0475,  ..., -0.1241,  0.1824,  0.0341]],
       device='cuda:0') torch.Size([128, 32])
recurrent_blocks.0.bias_ih_l0_reverse tensor([ 0.1455, -0.0863, -0.0782,  0.1151, -0.0440,  0.0241,  0.0374, -0.1770,
        -0.0999, -0.0865,  0.1023,  0.1603,  0.1556,  0.0478, -0.0801,  0.0359,
        -0.0680, -0.0671,  0.1617, -0.1452, -0.1476,  0.1270, -0.1543, -0.1489,
         0.1389, -0.1259,  0.1412, -0.1058,  0.0767,  0.0490, -0.0446,  0.0676,
         0.1261,  0.1370, -0.0593,  0.0560,  0.0967, -0.0012,  0.0299, -0.1792,
         0.0889,  0.0485, -0.1288, -0.0647, -0.1531,  0.0915,  0.0621,  0.0469,
        -0.1171, -0.0862, -0.0698,  0.1607,  0.0493,  0.1483,  0.1332, -0.0720,
        -0.0186,  0.0767, -0.1157,  0.0424, -0.1563,  0.0317, -0.1689, -0.0700,
        -0.1413, -0.0936,  0.0384, -0.1141, -0.1451,  0.0859, -0.1486,  0.0268,
        -0.0062,  0.0672, -0.1310, -0.0656, -0.1831,  0.0183, -0.0302,  0.0979,
        -0.0203,  0.0102,  0.1037,  0.1362, -0.0504,  0.1024, -0.1580, -0.0055,
         0.0480, -0.0116, -0.0577, -0.0498,  0.0730,  0.0986, -0.0971,  0.0201,
        -0.0140,  0.1199,  0.1596, -0.1173,  0.1229, -0.1395,  0.1565,  0.1351,
        -0.0670, -0.0797,  0.1532, -0.0943,  0.1636,  0.0452, -0.1327, -0.0231,
         0.1111,  0.0220,  0.1257,  0.1204,  0.0037,  0.1449,  0.0597, -0.0442,
        -0.0799,  0.1256, -0.1010,  0.0952, -0.1104, -0.0442, -0.0802, -0.0603],
       device='cuda:0') torch.Size([128])
recurrent_blocks.0.bias_hh_l0_reverse tensor([ 0.1254,  0.0774,  0.0381, -0.1238, -0.1078, -0.0006, -0.0278,  0.0439,
        -0.0141,  0.0774, -0.0647,  0.1372, -0.1285, -0.1543, -0.1255, -0.1191,
        -0.1630, -0.1244,  0.1015, -0.1637,  0.0662, -0.1310, -0.1514,  0.1353,
        -0.0093, -0.1068,  0.0693,  0.0017,  0.0227,  0.1377, -0.0966,  0.0422,
        -0.0608,  0.1400,  0.0236,  0.1603,  0.0008,  0.0048,  0.0084, -0.1414,
         0.1314, -0.1597, -0.1538,  0.1052,  0.0899, -0.1102,  0.0421,  0.0047,
        -0.1534, -0.0736, -0.1542, -0.1248, -0.0800, -0.0343, -0.1001, -0.0112,
         0.0594, -0.0992,  0.1173, -0.1418, -0.1050,  0.1080,  0.0045,  0.1525,
        -0.0837, -0.1234,  0.0127,  0.0486, -0.0414,  0.0093,  0.1092, -0.1155,
        -0.1003, -0.0763, -0.0052,  0.1010, -0.1756,  0.1329,  0.1400,  0.0510,
        -0.0568, -0.1853, -0.1558, -0.0945,  0.0468, -0.0595,  0.0170, -0.0688,
        -0.0584, -0.1221, -0.0156,  0.1727,  0.0867, -0.0141,  0.0296, -0.0553,
         0.1228, -0.1160, -0.0388, -0.1739,  0.1453, -0.1387, -0.0964, -0.1098,
         0.1403,  0.0309, -0.0171, -0.1150,  0.0164, -0.0761, -0.1844,  0.1145,
         0.1172, -0.1134,  0.0866,  0.1355, -0.1270, -0.0068, -0.1654, -0.0030,
         0.0037, -0.0695, -0.0089, -0.1392,  0.0999,  0.1267,  0.0847, -0.0263],
       device='cuda:0') torch.Size([128])
recurrent_blocks.1.weight_ih_l0 tensor([[-0.1334,  0.0789,  0.0872,  ..., -0.0549,  0.1844, -0.1260],
        [-0.0274,  0.0074,  0.0306,  ...,  0.0390, -0.0993,  0.1347],
        [ 0.1612, -0.0971, -0.0244,  ..., -0.0032, -0.0305,  0.0599],
        ...,
        [ 0.1184,  0.0484,  0.0345,  ..., -0.0993,  0.0370,  0.1631],
        [-0.0442,  0.1862,  0.0555,  ..., -0.1715,  0.0005,  0.0323],
        [-0.1523,  0.1256, -0.0174,  ..., -0.0610, -0.0851, -0.0087]],
       device='cuda:0') torch.Size([128, 64])
recurrent_blocks.1.weight_hh_l0 tensor([[-0.1602,  0.1279, -0.1644,  ...,  0.0826,  0.0688, -0.0155],
        [ 0.0352,  0.1019, -0.0148,  ...,  0.1616, -0.1582,  0.0611],
        [ 0.1734, -0.1323, -0.0782,  ...,  0.0355,  0.0674, -0.1245],
        ...,
        [ 0.0880, -0.0081,  0.0253,  ...,  0.0369, -0.1117, -0.0876],
        [-0.0184,  0.1505, -0.0329,  ..., -0.0939, -0.1484,  0.0101],
        [ 0.1379, -0.0555, -0.0145,  ...,  0.0974, -0.1694,  0.0112]],
       device='cuda:0') torch.Size([128, 32])
recurrent_blocks.1.bias_ih_l0 tensor([ 0.0775,  0.1222,  0.0826, -0.0519,  0.1006, -0.0729, -0.0651, -0.0885,
         0.0812, -0.1567, -0.1094,  0.1372, -0.0072,  0.0305,  0.0281,  0.1822,
         0.1550,  0.1261, -0.1518,  0.1832, -0.0286, -0.0056, -0.0547, -0.0869,
         0.0297, -0.0606, -0.1539,  0.1233,  0.1287, -0.1673, -0.0666, -0.1514,
        -0.0209,  0.0382,  0.1026,  0.0227, -0.1427, -0.1426,  0.1489,  0.1642,
         0.0934, -0.0308,  0.0232, -0.0189,  0.0593, -0.1739, -0.0177,  0.0210,
         0.1177,  0.0803,  0.1091, -0.0996,  0.0110, -0.1273,  0.1175, -0.1192,
         0.0153,  0.0701, -0.1453, -0.0409,  0.0616,  0.1629,  0.0643, -0.0269,
        -0.0208,  0.1793,  0.0903,  0.0790, -0.0009,  0.0297,  0.1250, -0.1522,
         0.0181,  0.0779, -0.0542, -0.1198, -0.0271,  0.0976, -0.0826, -0.0866,
        -0.1449, -0.0277, -0.0758, -0.0051,  0.1368, -0.0045,  0.1045,  0.0178,
        -0.0510,  0.0287,  0.0122, -0.1017,  0.0167, -0.0456,  0.0726,  0.0785,
         0.0936, -0.0192,  0.1343, -0.0275, -0.0895, -0.0454,  0.0706, -0.1145,
        -0.1045, -0.1573,  0.0924, -0.0111, -0.0144,  0.0717,  0.0054,  0.0921,
        -0.1099,  0.1032, -0.0513,  0.0132,  0.1707, -0.0791,  0.1403, -0.0924,
         0.1051, -0.0540,  0.0764, -0.0946,  0.1338,  0.0334, -0.1325,  0.0532],
       device='cuda:0') torch.Size([128])
recurrent_blocks.1.bias_hh_l0 tensor([-0.0594,  0.1240,  0.0464,  0.1154,  0.0023,  0.1652, -0.0342,  0.1721,
        -0.0302, -0.0856, -0.0439,  0.0084, -0.0334, -0.0552, -0.1669,  0.1599,
         0.1771,  0.1137, -0.0070, -0.0813,  0.1711,  0.1218,  0.1420, -0.1230,
         0.0856,  0.1090,  0.0049, -0.1437,  0.0237, -0.1311, -0.0276, -0.1346,
         0.0407, -0.1817,  0.0499, -0.0616, -0.1093, -0.0337, -0.0824,  0.0653,
         0.0208, -0.1138,  0.1511,  0.0333, -0.0298,  0.1570,  0.1297, -0.0422,
        -0.0377,  0.0385, -0.0895,  0.0615, -0.0784,  0.0183,  0.0378,  0.1407,
         0.1032, -0.0422, -0.0728,  0.1628, -0.0312, -0.1225,  0.0661, -0.1518,
         0.0618, -0.1430,  0.1630,  0.1710, -0.1302, -0.0176, -0.1631,  0.1559,
         0.1335, -0.1139, -0.0631, -0.1470, -0.1115,  0.0337,  0.0598,  0.0611,
        -0.0921, -0.0547,  0.1220,  0.1300,  0.1713,  0.0226, -0.0919,  0.1642,
        -0.0976, -0.1233,  0.1542, -0.0131,  0.0551,  0.0512, -0.0639, -0.1465,
        -0.0239,  0.0688,  0.0234,  0.0994,  0.0733, -0.1045,  0.1207, -0.1163,
        -0.0782,  0.0304,  0.1635, -0.0577, -0.0322, -0.1114, -0.1463, -0.0139,
        -0.1622,  0.1591,  0.1300,  0.1704,  0.0881, -0.0593, -0.0887, -0.0954,
        -0.0523, -0.1504, -0.0637, -0.1273, -0.0735, -0.0749,  0.1202,  0.1153],
       device='cuda:0') torch.Size([128])
recurrent_blocks.1.weight_ih_l0_reverse tensor([[-0.0746,  0.0768, -0.0418,  ...,  0.1227, -0.1029,  0.1011],
        [ 0.1055, -0.0184,  0.0618,  ...,  0.1052, -0.0669,  0.0324],
        [-0.1837, -0.1239,  0.0249,  ..., -0.0808,  0.0333,  0.0169],
        ...,
        [-0.1071,  0.0313, -0.1599,  ..., -0.0731, -0.0493, -0.1343],
        [ 0.0852,  0.1556,  0.0720,  ..., -0.0767, -0.1443, -0.1242],
        [ 0.0494, -0.0038, -0.0325,  ..., -0.0368, -0.0879, -0.0936]],
       device='cuda:0') torch.Size([128, 64])
recurrent_blocks.1.weight_hh_l0_reverse tensor([[ 0.1207,  0.0368,  0.1178,  ...,  0.1057, -0.1839, -0.1445],
        [-0.0935, -0.0007, -0.0603,  ...,  0.1060, -0.0996,  0.0633],
        [-0.1147, -0.0478,  0.0395,  ...,  0.1454, -0.1843,  0.0236],
        ...,
        [ 0.0849, -0.1049,  0.0554,  ..., -0.0225,  0.0384, -0.1631],
        [-0.1171,  0.1057,  0.0332,  ...,  0.0536, -0.0430, -0.0141],
        [-0.0030, -0.1202,  0.1506,  ...,  0.0606,  0.1280,  0.0152]],
       device='cuda:0') torch.Size([128, 32])
recurrent_blocks.1.bias_ih_l0_reverse tensor([-0.1129,  0.1357,  0.0233, -0.1371,  0.1207, -0.0516,  0.1568,  0.1040,
         0.0795, -0.0319, -0.0086,  0.1787,  0.0355,  0.0300, -0.0419, -0.1782,
         0.1311, -0.0552,  0.0855,  0.0867,  0.0996, -0.0667,  0.1096, -0.1272,
        -0.1349, -0.0368,  0.1506, -0.0432,  0.0264, -0.0515, -0.0628, -0.1467,
         0.1240, -0.0109, -0.0729, -0.1717, -0.0643,  0.0819, -0.1417,  0.1801,
        -0.1215, -0.0635,  0.1702, -0.0965,  0.1674,  0.1094, -0.1172,  0.0445,
        -0.0692, -0.1091, -0.1806,  0.0367, -0.0950, -0.1510,  0.1520, -0.1186,
         0.0696,  0.0279,  0.1815, -0.0383,  0.0448,  0.0702,  0.0993,  0.1271,
        -0.0382,  0.0198,  0.1519, -0.1631, -0.0505, -0.0696, -0.0888,  0.0869,
        -0.1706,  0.1199,  0.0299, -0.1220, -0.1747, -0.1078,  0.0359,  0.0925,
         0.0211,  0.0303, -0.1371,  0.0217, -0.0534, -0.1449, -0.0544, -0.1573,
         0.0067,  0.0709,  0.0984,  0.1056, -0.1429, -0.1113, -0.0672, -0.0707,
         0.0894, -0.1279, -0.1018,  0.0065, -0.1647,  0.0718,  0.1586,  0.1237,
        -0.1422, -0.1145, -0.1079,  0.0838, -0.1613, -0.0965,  0.0077, -0.1215,
         0.1529, -0.0540, -0.1351,  0.1577,  0.1241, -0.1256,  0.1325,  0.1069,
        -0.1672,  0.1167,  0.0154, -0.1614,  0.0323, -0.0096, -0.1480,  0.1538],
       device='cuda:0') torch.Size([128])
recurrent_blocks.1.bias_hh_l0_reverse tensor([-0.0920,  0.0315, -0.0765,  0.0303, -0.1295,  0.0884, -0.0475, -0.0134,
         0.1501,  0.1371, -0.0809,  0.1009,  0.1586,  0.1009, -0.0150, -0.1005,
        -0.1421,  0.0022,  0.0343, -0.0598, -0.0312,  0.1285, -0.0848,  0.1860,
         0.0564, -0.0115,  0.0631, -0.0813, -0.1123,  0.1356, -0.1438, -0.1304,
        -0.0893,  0.0678, -0.1856,  0.1547,  0.0852, -0.1165, -0.0765,  0.0743,
         0.1045,  0.0144, -0.0978, -0.1631,  0.0219,  0.0526, -0.0531,  0.0509,
         0.1750, -0.1598,  0.0896, -0.0662,  0.0429,  0.0335,  0.0586, -0.1219,
        -0.1079, -0.0044, -0.0267, -0.0529, -0.0174,  0.1052,  0.0417,  0.1353,
        -0.0751, -0.0799, -0.1105, -0.0907,  0.0224,  0.1009,  0.0008, -0.0461,
         0.0099, -0.0982,  0.0555,  0.1480,  0.0002, -0.0068, -0.1775,  0.0988,
        -0.0077,  0.0629,  0.1632, -0.0737,  0.0797,  0.1218, -0.0100, -0.1097,
         0.0118,  0.0994,  0.1394, -0.0450, -0.0995, -0.1604,  0.1733,  0.1856,
        -0.1446, -0.0086, -0.0131, -0.0538, -0.0737,  0.0188,  0.1678, -0.1264,
        -0.0934,  0.0498, -0.0164, -0.1118,  0.1109,  0.1052, -0.1249, -0.1730,
         0.0499,  0.0672, -0.1415,  0.0658,  0.1399,  0.0573,  0.1370,  0.1843,
        -0.0069,  0.1286,  0.1839,  0.1294,  0.0993, -0.1456, -0.1096, -0.1400],
       device='cuda:0') torch.Size([128])
recurrent_blocks.2.weight_ih_l0 tensor([[-0.1150, -0.0911, -0.0349,  ..., -0.1488,  0.0322, -0.0369],
        [ 0.1221,  0.0268,  0.1833,  ...,  0.0510,  0.1132, -0.1761],
        [-0.0605,  0.1183,  0.0987,  ...,  0.0747,  0.0935,  0.1254],
        ...,
        [-0.1584, -0.0943,  0.1542,  ..., -0.0860, -0.1430, -0.1155],
        [-0.0966,  0.0395, -0.1220,  ...,  0.0272, -0.1069,  0.1703],
        [ 0.1050, -0.1531, -0.1061,  ...,  0.0322,  0.0739,  0.0882]],
       device='cuda:0') torch.Size([128, 64])
recurrent_blocks.2.weight_hh_l0 tensor([[-0.0767, -0.1226, -0.1549,  ..., -0.0301,  0.0119,  0.0832],
        [ 0.0965, -0.0410, -0.0580,  ..., -0.0849, -0.1596,  0.0483],
        [ 0.0004, -0.1568, -0.0972,  ...,  0.1438, -0.1584, -0.0563],
        ...,
        [ 0.0197,  0.1594, -0.0991,  ...,  0.1809, -0.0948, -0.0548],
        [-0.0225, -0.1080, -0.0576,  ..., -0.1070, -0.1167, -0.1010],
        [-0.0547,  0.0427, -0.1156,  ...,  0.0890, -0.1408,  0.1391]],
       device='cuda:0') torch.Size([128, 32])
recurrent_blocks.2.bias_ih_l0 tensor([-0.0140,  0.1512, -0.0804, -0.0407,  0.1453,  0.0569, -0.1764,  0.0451,
         0.0784, -0.0172,  0.0909,  0.0802, -0.1530, -0.0898,  0.0379, -0.1188,
        -0.0030, -0.0072,  0.1050, -0.1384,  0.0270, -0.0476, -0.1302, -0.0719,
        -0.1005, -0.1249,  0.1575, -0.1174,  0.0213, -0.1157, -0.0302, -0.0178,
         0.1608, -0.0454,  0.0176, -0.0423, -0.1053,  0.0277,  0.1622, -0.0871,
         0.0158,  0.1354, -0.0881, -0.0710,  0.1345,  0.0798,  0.0119,  0.0139,
         0.0373,  0.0692,  0.0023, -0.0726, -0.0513, -0.1074,  0.1272, -0.1055,
        -0.1409, -0.1543,  0.1415,  0.0393, -0.0489, -0.1321,  0.1661,  0.1494,
         0.0007,  0.0508, -0.1201,  0.0503, -0.0281,  0.1014, -0.1069,  0.0577,
         0.1758, -0.0443,  0.0083, -0.1050,  0.1127,  0.0790, -0.0137, -0.0283,
         0.0291,  0.0238,  0.0510, -0.0984,  0.0935,  0.0462, -0.1016, -0.1090,
         0.1595, -0.1294, -0.0857,  0.0195,  0.0852, -0.1579,  0.1455,  0.0338,
        -0.1456, -0.0788, -0.1131,  0.0594, -0.1522,  0.0193,  0.1517,  0.0099,
         0.1553,  0.1651, -0.1451,  0.0822,  0.0986,  0.0866, -0.0569,  0.1589,
        -0.0877, -0.0561,  0.1743,  0.0855,  0.1086, -0.0577, -0.0899, -0.1548,
        -0.1000,  0.0405, -0.1486,  0.0767,  0.1410, -0.1828, -0.0938,  0.1322],
       device='cuda:0') torch.Size([128])
recurrent_blocks.2.bias_hh_l0 tensor([-0.1736,  0.1624, -0.1278,  0.0688, -0.0914,  0.0760,  0.0273,  0.0567,
        -0.0931, -0.1080,  0.1206, -0.1233,  0.0508, -0.1635, -0.0500, -0.0661,
         0.1332,  0.1253,  0.0695, -0.1002, -0.0934,  0.0139, -0.1345,  0.1201,
         0.1061, -0.1073,  0.0164, -0.1217,  0.0227, -0.0756, -0.0674,  0.0377,
        -0.0284,  0.1003,  0.0660,  0.0607, -0.0171,  0.0180,  0.1410,  0.0734,
        -0.1146,  0.1421, -0.1523, -0.0981, -0.1165,  0.0730,  0.0546, -0.0175,
        -0.0835,  0.1254,  0.0900, -0.0259, -0.1001, -0.1780,  0.0664, -0.0634,
         0.0803, -0.1858,  0.0486, -0.0571,  0.1469,  0.0178, -0.0501, -0.0776,
         0.1215, -0.0187,  0.0221, -0.0285, -0.0782, -0.0831,  0.0797, -0.1219,
         0.1320, -0.0153, -0.1547,  0.1026,  0.1082, -0.0564, -0.0517, -0.0977,
         0.0635, -0.1460,  0.1020,  0.0772,  0.0995, -0.0132,  0.1153, -0.1704,
        -0.0856,  0.0158, -0.1126,  0.1701,  0.1546, -0.1303, -0.0629,  0.0180,
         0.1322,  0.0588, -0.1206, -0.0530, -0.1313,  0.0749,  0.1182,  0.0456,
        -0.1562,  0.0213,  0.0910, -0.1337,  0.1853,  0.0291,  0.1198,  0.1159,
        -0.1058,  0.0599, -0.0155,  0.1284, -0.1164,  0.0077,  0.1335,  0.0083,
        -0.0417,  0.1576, -0.1329, -0.1533,  0.1793,  0.1211,  0.1806,  0.1316],
       device='cuda:0') torch.Size([128])
recurrent_blocks.2.weight_ih_l0_reverse tensor([[-0.0438, -0.0791,  0.1357,  ...,  0.0869, -0.0005,  0.0080],
        [ 0.1072,  0.1176,  0.1170,  ..., -0.1440, -0.0695,  0.0008],
        [ 0.1400,  0.1001,  0.0665,  ...,  0.1461,  0.0722, -0.1643],
        ...,
        [-0.1574, -0.1023, -0.1519,  ...,  0.1192,  0.0669,  0.0733],
        [-0.1048, -0.0445,  0.0541,  ..., -0.1235,  0.0568, -0.0497],
        [-0.1254,  0.0006,  0.0400,  ...,  0.0649, -0.0116,  0.1249]],
       device='cuda:0') torch.Size([128, 64])
recurrent_blocks.2.weight_hh_l0_reverse tensor([[ 0.1178,  0.0209, -0.0169,  ..., -0.1117, -0.1786,  0.0383],
        [-0.1052,  0.0604,  0.0682,  ..., -0.0666,  0.0042,  0.0355],
        [-0.0407,  0.0716, -0.0499,  ..., -0.1651,  0.0976,  0.1057],
        ...,
        [ 0.0179, -0.0749,  0.0066,  ..., -0.1563,  0.0732,  0.1360],
        [ 0.1491,  0.0204,  0.1127,  ...,  0.0125,  0.1218, -0.0568],
        [-0.0264,  0.1865,  0.1106,  ..., -0.0744,  0.1123, -0.0757]],
       device='cuda:0') torch.Size([128, 32])
recurrent_blocks.2.bias_ih_l0_reverse tensor([-0.1814, -0.1529, -0.0707, -0.0933,  0.1156, -0.0096, -0.0524,  0.0436,
         0.0800,  0.0168,  0.0024, -0.0113, -0.1119,  0.0717, -0.0856, -0.0380,
        -0.0071,  0.1671, -0.0353, -0.0536, -0.0848,  0.0558,  0.0548, -0.0224,
        -0.0573, -0.1842,  0.0751, -0.1277, -0.0842, -0.0380, -0.1128, -0.0349,
         0.0989,  0.0808, -0.0707,  0.0652, -0.1830,  0.1031, -0.0078,  0.0900,
         0.1562,  0.1036,  0.1171, -0.0703, -0.1078,  0.1577, -0.0023,  0.0481,
         0.1651, -0.1300, -0.0790, -0.0333, -0.1203, -0.0403,  0.1424,  0.0961,
        -0.0199, -0.1565, -0.0742, -0.0548,  0.0103,  0.1735,  0.0569, -0.0225,
        -0.1259,  0.0367,  0.0902, -0.1387, -0.0019,  0.1853, -0.1005, -0.1121,
        -0.0553, -0.0492,  0.0473, -0.0940, -0.0245,  0.1626, -0.0746,  0.1520,
        -0.1379,  0.0711, -0.1269, -0.0244, -0.1572,  0.0212,  0.0778,  0.0700,
         0.0648,  0.1425,  0.0198,  0.1249,  0.0239,  0.0529,  0.0112,  0.1030,
         0.1255,  0.0120, -0.0185,  0.1172,  0.1552,  0.0876, -0.1596,  0.0510,
        -0.0529, -0.0344, -0.1820,  0.1498,  0.1159,  0.0940,  0.1093, -0.1422,
         0.1274,  0.1586, -0.0980,  0.1694,  0.0311,  0.1590, -0.0182,  0.0515,
        -0.1207, -0.0284, -0.0120,  0.1571, -0.0120,  0.1587,  0.0229, -0.0109],
       device='cuda:0') torch.Size([128])
recurrent_blocks.2.bias_hh_l0_reverse tensor([ 0.1399,  0.0118, -0.1216,  0.1002,  0.0777,  0.1468,  0.0345,  0.0170,
         0.0647,  0.1026,  0.0380, -0.1660, -0.0018, -0.0836, -0.1627, -0.0390,
        -0.0437,  0.0680,  0.0386,  0.0501, -0.1391,  0.0287,  0.1354, -0.1698,
        -0.1810,  0.1255,  0.1440,  0.1490,  0.1201,  0.1566,  0.0733, -0.0061,
         0.1130,  0.0430,  0.0998,  0.1514, -0.0282, -0.0445, -0.0846, -0.1031,
        -0.0346, -0.0085,  0.0669, -0.0123, -0.0835, -0.0785, -0.1522, -0.1139,
         0.1621,  0.1344, -0.0969, -0.0135, -0.0328,  0.1700,  0.0958,  0.1606,
         0.0143, -0.0614,  0.1625, -0.0907,  0.1623, -0.0270,  0.1546,  0.1808,
         0.0503, -0.0211,  0.1457, -0.1549, -0.0008, -0.0396, -0.0860,  0.1531,
        -0.1468,  0.0448, -0.1508,  0.1463, -0.0074,  0.0584, -0.0091,  0.1586,
         0.0558,  0.0440, -0.0930, -0.1041, -0.1052,  0.0034,  0.1368,  0.1096,
         0.1077, -0.1060, -0.0831,  0.0736, -0.1092,  0.1455,  0.0823,  0.0986,
        -0.0621,  0.1457, -0.1646, -0.1512,  0.1504, -0.0973, -0.0703,  0.0370,
        -0.0226, -0.0563,  0.0094,  0.1828,  0.1823,  0.1569,  0.1106, -0.1260,
        -0.1304,  0.1451,  0.0523,  0.0533, -0.1254, -0.1328, -0.0250,  0.1242,
         0.1020, -0.0581, -0.1226, -0.1216,  0.1143, -0.1190, -0.1422, -0.0209],
       device='cuda:0') torch.Size([128])
recurrent_blocks.3.weight_ih_l0 tensor([[-0.0695,  0.1101, -0.1191,  ..., -0.0599, -0.1149,  0.0644],
        [ 0.0190,  0.0409, -0.1278,  ..., -0.0788,  0.0658,  0.0312],
        [-0.0009,  0.0169,  0.0900,  ..., -0.0456,  0.1233,  0.1101],
        ...,
        [ 0.0658, -0.1571,  0.1831,  ..., -0.1331, -0.0954,  0.1444],
        [ 0.0546, -0.1756, -0.1467,  ...,  0.1523, -0.0648,  0.1430],
        [-0.0289, -0.1598,  0.0853,  ..., -0.0458, -0.0998, -0.1065]],
       device='cuda:0') torch.Size([128, 64])
recurrent_blocks.3.weight_hh_l0 tensor([[-0.0510,  0.0814, -0.1722,  ..., -0.0088,  0.0493,  0.1268],
        [ 0.0787, -0.0462, -0.1450,  ..., -0.0196, -0.1250, -0.0992],
        [-0.0287, -0.0314, -0.1128,  ..., -0.1732, -0.0484,  0.0705],
        ...,
        [-0.1173,  0.0227,  0.0568,  ..., -0.1369, -0.0527, -0.0291],
        [ 0.0981, -0.1215, -0.1249,  ..., -0.1714,  0.0621, -0.1709],
        [-0.1414, -0.0437,  0.1563,  ...,  0.0238, -0.0529,  0.1585]],
       device='cuda:0') torch.Size([128, 32])
recurrent_blocks.3.bias_ih_l0 tensor([-0.0176, -0.0490,  0.0850, -0.1820, -0.0333,  0.1552,  0.1472, -0.0901,
         0.1066, -0.1186,  0.0098, -0.1381,  0.0874,  0.0216,  0.1157, -0.1098,
         0.1155,  0.1137,  0.0884, -0.0663, -0.0921,  0.1417,  0.0336, -0.1457,
        -0.0601, -0.1401, -0.0441,  0.1494, -0.0691, -0.1705, -0.0849, -0.1216,
        -0.0032, -0.1190,  0.1249, -0.0336,  0.1171, -0.0121, -0.0573, -0.1617,
        -0.1384, -0.0939,  0.1188,  0.1161,  0.1864, -0.0309, -0.0063,  0.0901,
        -0.1306, -0.0426,  0.1064,  0.1506,  0.0455,  0.0887, -0.0321,  0.1554,
         0.1031,  0.0942,  0.1368, -0.1448, -0.0818,  0.0456, -0.0954, -0.0116,
         0.1144, -0.0611,  0.1171,  0.0298,  0.1594,  0.0955, -0.1661,  0.1234,
        -0.0530,  0.0223, -0.0424, -0.1125,  0.1671, -0.0522, -0.1193,  0.0087,
         0.1364,  0.0947, -0.0063, -0.1426, -0.0738, -0.0624, -0.0499, -0.1156,
        -0.1366, -0.1315,  0.0555,  0.1195,  0.1140,  0.1399,  0.0756, -0.1244,
         0.0141, -0.0003, -0.1057,  0.0857, -0.0119, -0.0731, -0.0513, -0.0277,
        -0.1350, -0.0005, -0.1422, -0.1182, -0.0030,  0.0998, -0.1350,  0.0591,
        -0.1848,  0.0816, -0.0056,  0.0697,  0.1217,  0.1075,  0.0807,  0.1603,
         0.0757,  0.1631, -0.0024,  0.1651, -0.1782,  0.1103,  0.0908, -0.0513],
       device='cuda:0') torch.Size([128])
recurrent_blocks.3.bias_hh_l0 tensor([-1.6490e-01,  3.1635e-02,  1.3766e-01,  1.2842e-01,  8.2106e-02,
        -9.0113e-02,  1.4134e-01,  3.4716e-02,  7.8114e-02,  8.1340e-02,
         7.8417e-02,  7.6959e-02, -1.3637e-01,  4.8100e-02,  1.6543e-01,
         1.6084e-01,  8.3089e-02,  1.2808e-01,  1.1366e-02,  6.6574e-02,
         4.7483e-02, -1.0744e-01,  6.3604e-02, -1.6612e-01, -9.7764e-02,
        -1.9020e-02,  1.3330e-01, -8.9944e-02,  5.7318e-02, -1.5403e-01,
         9.5667e-02, -7.9141e-02, -1.8554e-01, -1.4056e-01,  1.2884e-01,
        -1.7339e-01,  2.9862e-02,  1.5402e-01,  1.8158e-01, -1.7253e-01,
         1.7728e-01,  7.6831e-02, -1.2292e-01,  1.1356e-04, -1.4548e-01,
         1.4580e-01,  2.9024e-03,  9.6605e-02,  1.5410e-01,  5.4687e-02,
         3.1655e-02, -1.6620e-01, -2.4786e-02, -8.0897e-02, -1.1300e-01,
         1.8050e-01,  4.9566e-02, -4.1859e-02, -1.5452e-01,  1.1745e-01,
        -1.1403e-01,  6.9365e-02,  1.3081e-01, -1.0316e-01, -4.7063e-02,
        -1.1298e-01,  1.3470e-02,  5.6131e-02, -8.1188e-02,  2.3620e-03,
         5.5788e-02,  7.4193e-02, -1.6181e-01, -1.4773e-01, -7.0525e-02,
         9.6214e-02,  3.0739e-02, -8.4086e-03, -1.0660e-01,  8.0393e-02,
         1.4668e-01, -4.1764e-02, -5.3460e-02,  1.1065e-01, -5.6224e-02,
        -6.4248e-02,  7.9379e-02,  9.7626e-03, -4.8584e-02, -1.4426e-02,
        -8.7341e-02,  3.0215e-02,  1.1909e-01, -1.5352e-01,  8.3862e-02,
        -1.8657e-01,  1.2487e-01,  1.6094e-01, -1.4118e-01,  1.4192e-01,
        -8.2327e-02, -2.5822e-03,  1.4334e-01, -1.8588e-01,  3.9229e-02,
         1.1595e-01, -5.6680e-02, -8.5402e-02, -1.6672e-01,  4.4274e-03,
         1.1253e-01, -1.5381e-01, -1.4063e-01,  3.9034e-02,  1.7289e-01,
        -1.1618e-01,  1.4461e-01,  1.4333e-01, -1.2494e-01, -1.8100e-02,
         6.2104e-03,  1.6057e-01, -1.1792e-01,  4.4730e-02, -1.3855e-01,
         8.9289e-02, -8.9387e-02, -1.3146e-01], device='cuda:0') torch.Size([128])
recurrent_blocks.3.weight_ih_l0_reverse tensor([[ 0.1315, -0.0139,  0.0754,  ...,  0.0820,  0.1601, -0.0068],
        [ 0.0196, -0.0433, -0.0822,  ...,  0.0275, -0.1618, -0.0890],
        [ 0.1207, -0.0995, -0.0603,  ...,  0.0654, -0.0158, -0.0619],
        ...,
        [ 0.1552,  0.1394,  0.0538,  ..., -0.0041,  0.0131,  0.0508],
        [-0.0972,  0.1092, -0.1570,  ..., -0.0942,  0.0410, -0.1067],
        [-0.1114, -0.0235, -0.1636,  ..., -0.0025,  0.0660, -0.0534]],
       device='cuda:0') torch.Size([128, 64])
recurrent_blocks.3.weight_hh_l0_reverse tensor([[ 0.1468,  0.1017,  0.0394,  ...,  0.1528, -0.1038, -0.0718],
        [-0.0951, -0.0638,  0.0568,  ...,  0.0028, -0.0951, -0.0506],
        [-0.0386,  0.1843, -0.0130,  ...,  0.0987,  0.1369, -0.0365],
        ...,
        [ 0.0512, -0.0187,  0.0276,  ..., -0.0780,  0.1819,  0.1575],
        [-0.0436,  0.1332,  0.0111,  ...,  0.0658, -0.0244,  0.1545],
        [-0.0447, -0.0437, -0.0651,  ...,  0.0797, -0.0224, -0.0340]],
       device='cuda:0') torch.Size([128, 32])
recurrent_blocks.3.bias_ih_l0_reverse tensor([-0.0155,  0.1224,  0.0850, -0.0884,  0.1297,  0.0482,  0.1200,  0.0701,
         0.0863, -0.0115, -0.0728, -0.0829,  0.0742,  0.0664,  0.0308,  0.0902,
         0.0285, -0.1693,  0.0075,  0.0947,  0.0027,  0.0411, -0.0432, -0.0567,
         0.0384, -0.1374,  0.0879,  0.1693, -0.1590,  0.0839,  0.0041, -0.0079,
         0.0851,  0.0378,  0.1560, -0.0813, -0.0629, -0.1038, -0.0180, -0.1582,
        -0.1655, -0.0006, -0.0313,  0.1088, -0.1583,  0.1277, -0.1045, -0.0250,
        -0.0762,  0.0926, -0.0751,  0.0848,  0.0542,  0.0587, -0.1252,  0.1000,
         0.1271, -0.0564,  0.0069,  0.0896, -0.0008,  0.1001, -0.0866, -0.1133,
        -0.1586, -0.1563,  0.1794, -0.0615, -0.1223, -0.1158, -0.0581, -0.0582,
         0.1631,  0.0301, -0.1520, -0.0072, -0.0514, -0.1128,  0.0187, -0.1854,
        -0.0643,  0.1848,  0.1138,  0.0221,  0.0847, -0.1445,  0.1299, -0.1793,
         0.0134,  0.0065, -0.1189,  0.1116,  0.1468,  0.0341, -0.1414, -0.1119,
         0.1160, -0.1047, -0.0250, -0.0553,  0.1617, -0.1488,  0.0112, -0.1399,
        -0.0875,  0.1217,  0.1510,  0.0777, -0.1261,  0.0904,  0.0735, -0.0955,
        -0.1856, -0.0921,  0.1471, -0.1576, -0.0829,  0.1069,  0.0077, -0.0760,
        -0.0316, -0.0849, -0.0770,  0.0992,  0.1149, -0.1787,  0.0578, -0.0781],
       device='cuda:0') torch.Size([128])
recurrent_blocks.3.bias_hh_l0_reverse tensor([-0.0240, -0.1117, -0.0657, -0.0487, -0.0426, -0.1447,  0.1369,  0.1254,
         0.1111, -0.1557,  0.0494, -0.0201, -0.0754, -0.1023,  0.0823, -0.0658,
         0.1648, -0.1165,  0.1115,  0.1046,  0.0981,  0.1321,  0.1199, -0.0987,
        -0.0256,  0.0918,  0.0253, -0.0685, -0.1117, -0.0316,  0.0827,  0.1164,
        -0.1004, -0.1480,  0.1588, -0.0005, -0.0357, -0.0058,  0.0789, -0.0282,
         0.0080,  0.1387,  0.0242,  0.1321,  0.0660, -0.1456,  0.0010, -0.0727,
        -0.0273, -0.1127, -0.1431,  0.0935, -0.1168,  0.1512, -0.1373,  0.0814,
        -0.1838, -0.0041, -0.0220,  0.0976, -0.0352,  0.1245,  0.0880, -0.0230,
         0.1257,  0.0962, -0.1458,  0.0558, -0.1865, -0.0511, -0.1557,  0.1648,
        -0.0504,  0.1338,  0.1574, -0.1113,  0.1436, -0.1502, -0.1831, -0.0738,
         0.1131, -0.0188,  0.1059,  0.0018,  0.0958, -0.1553, -0.1280,  0.0833,
         0.0536, -0.1378,  0.1628, -0.0343, -0.1657,  0.0425, -0.1196, -0.1114,
        -0.0226,  0.0591, -0.1147, -0.0927, -0.1512,  0.1269,  0.0846,  0.0311,
        -0.0623, -0.0173, -0.0940, -0.1591, -0.0472, -0.0368,  0.1170, -0.0351,
         0.1344,  0.0602, -0.0763,  0.1035,  0.0814,  0.1138,  0.0912, -0.1360,
         0.1255, -0.0338, -0.0491,  0.1147,  0.1446,  0.0573,  0.0288, -0.1466],
       device='cuda:0') torch.Size([128])
fc_blocks.0.0.weight tensor([[ 0.0693,  0.0583, -0.0605,  ..., -0.1349, -0.0233, -0.0142],
        [-0.0038,  0.0292, -0.0605,  ...,  0.0732, -0.0852, -0.0332],
        [ 0.0405,  0.0450, -0.0320,  ..., -0.1167,  0.0732,  0.0470],
        ...,
        [-0.0569,  0.0334,  0.0515,  ...,  0.1227, -0.0160,  0.0921],
        [-0.1139, -0.0198, -0.0747,  ..., -0.0060,  0.0793, -0.0857],
        [ 0.0410,  0.1022, -0.0885,  ...,  0.0630,  0.1155,  0.0443]],
       device='cuda:0') torch.Size([32, 64])
fc_blocks.0.0.bias tensor([ 0.0413,  0.0695,  0.1001, -0.0808, -0.1102,  0.0253,  0.0021,  0.0646,
        -0.0231,  0.0454, -0.0363, -0.0118, -0.1097, -0.0082, -0.0611,  0.0008,
         0.0222,  0.0526,  0.0006, -0.0138,  0.0767, -0.0099, -0.1065, -0.1245,
         0.1302, -0.0434,  0.0063,  0.1133, -0.0325, -0.0316,  0.0979, -0.0425],
       device='cuda:0') torch.Size([32])
fc_blocks.1.0.weight tensor([[-5.2397e-02,  8.6994e-02,  6.5380e-02,  1.4294e-01,  1.3125e-01,
          5.4162e-02, -5.0927e-02, -4.4288e-02,  1.2751e-01,  1.1218e-01,
          1.5581e-01, -3.6269e-02, -1.5107e-01, -7.8725e-02, -1.3702e-01,
         -1.0579e-01, -1.4536e-01,  1.2996e-01, -1.3346e-01, -7.1729e-02,
          2.4936e-02,  1.5876e-01,  5.4743e-02,  1.0813e-01,  8.0661e-02,
          1.2393e-01,  5.6250e-02,  9.1515e-02, -3.8847e-02, -3.2322e-02,
         -1.3921e-01, -1.6110e-02],
        [-4.7204e-02,  1.3493e-01,  9.1173e-02,  1.0676e-01, -3.0218e-02,
          1.5838e-01, -9.1703e-02,  5.6065e-02, -7.2096e-03, -1.4862e-01,
         -7.8072e-02, -6.6266e-02,  6.3334e-02, -4.3413e-03, -5.6672e-02,
         -7.1037e-02, -5.1103e-02,  1.1080e-01,  4.8444e-02, -1.6026e-01,
         -3.9091e-02, -1.3117e-01,  1.6895e-01, -1.5899e-01, -1.1183e-01,
          1.1649e-01,  8.5538e-02, -1.5103e-01,  5.2833e-02,  1.2500e-01,
         -1.3109e-01,  1.3137e-01],
        [ 1.2272e-01, -1.7819e-01, -4.1134e-02, -1.5531e-01, -1.4376e-01,
          1.5045e-02, -7.2656e-02, -8.0437e-02,  4.9352e-02,  1.5601e-01,
          7.9809e-02, -6.8251e-02, -3.0795e-02,  1.5947e-01, -1.0380e-01,
         -1.7307e-01, -4.7606e-02,  1.3415e-01,  1.6519e-01, -7.5059e-02,
          4.3037e-02,  1.2138e-01,  3.8604e-02,  1.4515e-01,  3.4427e-02,
          7.4348e-02, -5.4929e-02, -1.3778e-01, -1.6008e-01,  4.1507e-02,
          1.2741e-01, -1.0005e-01],
        [ 1.3169e-01,  5.8866e-02,  6.2276e-02,  2.7364e-02,  1.6528e-03,
          3.2417e-02,  1.8135e-01,  1.2163e-01, -7.0804e-02, -1.9408e-02,
          3.0448e-02, -8.1530e-02, -8.2208e-02,  9.7000e-03, -9.7831e-02,
          1.3353e-01,  1.6717e-01,  7.3677e-02, -6.4880e-02,  9.1897e-02,
         -1.4167e-01,  7.6709e-02,  7.9402e-02,  3.9224e-02,  3.3536e-02,
          1.0993e-01,  1.0546e-01,  2.5933e-02,  1.8208e-02, -5.5774e-02,
         -1.8446e-02,  1.2531e-01],
        [-1.3688e-01, -2.9028e-02,  4.6163e-02, -8.5038e-02, -1.3972e-01,
         -8.0385e-02, -2.7297e-02, -9.8796e-02, -4.3451e-02,  9.5949e-02,
          1.1777e-01,  5.2353e-02,  6.8895e-03,  1.5228e-01, -1.8493e-01,
          1.7967e-01, -2.6541e-03, -1.6260e-01, -1.1226e-01, -1.0015e-01,
          3.8467e-02,  3.8762e-02, -1.1831e-01,  3.4090e-02,  2.3967e-02,
          1.0864e-01, -1.7539e-01,  2.8025e-02,  1.7390e-01,  4.6590e-02,
          8.5223e-02,  9.8427e-02],
        [-7.3155e-02, -8.8672e-03,  8.5757e-02,  1.0587e-01,  8.3703e-02,
         -1.0054e-02,  1.1907e-01, -1.1690e-01,  1.2970e-01, -2.6243e-03,
          1.6122e-01,  5.3857e-02, -1.1045e-01, -2.9951e-02,  1.7625e-01,
          5.7531e-02,  3.7032e-02, -1.3895e-01,  2.6043e-03, -4.8513e-02,
          1.0918e-01,  2.8148e-02, -1.2411e-01,  3.2114e-03, -4.8081e-02,
         -6.5901e-02, -1.0446e-01, -3.9739e-02,  1.0977e-01,  1.4267e-01,
          2.6113e-02, -1.5185e-01],
        [-9.4931e-02, -1.6774e-01,  6.2271e-03,  2.3412e-02,  6.3429e-02,
          4.5319e-02, -1.0525e-01,  4.6684e-02,  1.1670e-01, -1.5161e-01,
         -5.6614e-02, -1.2594e-01, -1.8169e-01, -6.4224e-05,  5.2391e-02,
          1.4196e-02, -9.5521e-02,  1.2830e-01,  1.1762e-01,  1.0027e-01,
          8.9750e-02, -1.1189e-01,  1.4150e-01,  5.3174e-03, -1.7792e-02,
         -3.0081e-02,  6.8171e-02, -7.3349e-02,  1.6243e-01, -1.5027e-01,
          1.9004e-02,  1.0949e-01],
        [ 1.5863e-01, -1.3304e-01, -7.7513e-02,  9.5818e-02, -8.6986e-02,
         -4.1403e-02, -2.4690e-02,  1.5701e-02, -1.6524e-02, -1.3709e-03,
          1.3555e-01,  6.5664e-02, -9.6938e-02,  8.0682e-02, -5.0786e-02,
          4.5403e-02,  8.0068e-02,  1.4392e-01, -1.1806e-01,  7.9477e-03,
          1.7179e-01,  1.7677e-02, -1.1235e-02,  1.7955e-01,  7.6693e-02,
         -1.3042e-01,  1.5121e-01,  1.2149e-01, -1.3386e-01,  1.0225e-01,
          9.4944e-02, -4.7469e-02],
        [-1.3881e-01, -4.7741e-02,  1.0590e-01, -2.1934e-02,  1.7281e-01,
          1.4463e-01,  7.1571e-02, -5.9761e-02,  7.2987e-02,  8.8556e-02,
          1.4894e-01,  1.5311e-01,  1.4778e-01,  3.9914e-02,  1.3731e-01,
          2.9642e-02, -1.6324e-02,  4.6638e-02, -4.1004e-02, -5.7677e-03,
          1.4163e-01,  1.3779e-01, -1.7727e-01,  1.4406e-01,  1.5614e-01,
          2.2898e-02,  6.4377e-02,  1.0465e-01,  1.4543e-01,  1.5986e-01,
         -3.9847e-02,  3.6952e-02],
        [-3.3822e-02,  1.1720e-01, -7.1470e-02,  1.5764e-01,  1.5059e-01,
          1.6664e-01, -1.5231e-01, -4.8718e-02,  6.4424e-02,  4.4977e-03,
          9.8838e-02,  2.5885e-02,  2.5693e-02, -6.1986e-02,  1.9087e-02,
         -2.0247e-02,  1.2700e-01, -9.6263e-02,  6.5172e-02,  5.8682e-02,
          4.0618e-02, -6.2538e-02,  7.9722e-02, -6.0486e-02, -1.2393e-01,
          1.8412e-02,  7.2983e-02,  2.4358e-02,  1.5360e-01, -8.3343e-02,
          1.3532e-01,  7.1867e-02],
        [-1.3004e-01, -9.2077e-02,  7.6085e-02, -1.5644e-01,  1.2131e-01,
          6.6117e-02, -1.4377e-01,  1.2712e-01,  1.7789e-01, -5.4063e-02,
          7.4717e-02, -1.2579e-01, -8.4591e-02,  1.1538e-01, -8.5153e-02,
          9.5332e-02,  1.8627e-01,  8.3594e-02,  6.8189e-02,  1.0335e-01,
          1.5126e-01, -9.1590e-02, -2.4997e-02, -7.9974e-02,  1.4263e-01,
          8.8948e-02, -1.2630e-01, -1.4306e-01,  1.8395e-02, -1.3849e-02,
         -1.6550e-01,  4.1525e-02],
        [ 8.4461e-02,  2.0955e-02,  2.4146e-02, -5.4314e-02,  7.3339e-02,
         -1.3867e-01,  8.9043e-02,  1.7254e-01,  1.3177e-01,  1.2501e-01,
          4.7653e-02, -3.4556e-02,  1.6842e-02,  1.1892e-02, -1.6014e-02,
         -1.5976e-01, -1.1888e-01,  7.5284e-02,  8.7359e-02, -8.7862e-02,
          8.6883e-02,  6.0180e-02,  1.7695e-01, -2.7961e-02, -5.1281e-02,
          1.7631e-01,  4.8902e-02,  1.5390e-01, -1.3653e-01, -1.2641e-01,
          1.8409e-01,  1.2289e-01],
        [-1.1345e-01,  1.5266e-01, -8.0979e-02,  1.6613e-01, -1.2158e-01,
          1.2797e-01,  7.5482e-02,  1.1356e-01,  1.1632e-01, -1.1070e-01,
         -9.5809e-02, -8.7113e-02,  1.5090e-01,  5.0123e-02,  1.6115e-01,
         -7.8065e-02, -9.7287e-02,  1.3530e-01, -9.3947e-02, -1.5424e-01,
          7.6068e-02,  1.0069e-01, -1.5077e-01, -1.0378e-01,  5.8742e-02,
         -1.3021e-02,  1.3792e-01, -7.5167e-02,  9.2554e-02,  1.4776e-01,
          3.4701e-02,  1.2901e-01],
        [-3.9096e-02,  1.4004e-01,  1.4107e-01, -1.7501e-01, -3.6987e-02,
          1.0362e-01, -1.3748e-01,  8.9865e-02, -5.4606e-02, -1.0801e-01,
          1.4360e-01,  1.5988e-02,  9.5378e-02,  9.6810e-02,  1.1902e-01,
         -1.6992e-01, -1.5481e-01,  1.6652e-01,  2.3524e-02,  3.6075e-02,
          9.0981e-02, -7.9965e-02, -2.6678e-02,  1.1157e-01,  1.1151e-02,
          1.0558e-01,  5.5167e-02,  1.2106e-05,  2.3429e-03,  9.4436e-02,
         -6.9013e-02, -1.0217e-01],
        [-9.0606e-02, -1.3831e-01, -6.8154e-02,  5.3518e-02,  1.9340e-02,
         -3.0593e-02,  1.6627e-01,  1.0803e-02,  1.5152e-02, -1.7688e-01,
         -1.1758e-01, -1.5911e-01, -1.3228e-02, -3.1627e-02, -7.8077e-02,
          4.3603e-03,  1.0481e-01, -4.3449e-02,  9.5034e-02,  1.3906e-01,
          4.5303e-02, -1.4118e-02, -1.0131e-01, -1.4339e-01, -8.8634e-02,
         -3.0947e-02, -1.4194e-01,  5.5859e-02, -2.9638e-02, -5.9362e-02,
          1.7444e-02, -1.2619e-01],
        [-1.6579e-01, -3.4462e-02, -1.6201e-01,  8.8579e-03,  1.5552e-01,
         -2.0797e-03,  7.2145e-02,  1.5122e-01,  1.0694e-01, -2.1788e-02,
         -1.6279e-01,  1.4885e-01,  1.0814e-01, -1.0442e-01, -3.1018e-02,
          1.0740e-01,  1.5447e-01,  1.3135e-01,  1.0068e-01,  1.5203e-01,
         -9.1586e-02,  1.5970e-01,  1.2445e-01,  3.5146e-02, -1.3392e-01,
          1.2716e-01,  5.1582e-02,  8.8194e-02, -1.0013e-01, -1.1860e-01,
          1.3518e-01, -6.5229e-02]], device='cuda:0') torch.Size([16, 32])
fc_blocks.1.0.bias tensor([ 0.1532,  0.0599, -0.0872,  0.1205, -0.0481, -0.0278, -0.0244, -0.1050,
        -0.0717,  0.0513, -0.0199,  0.1351, -0.0275,  0.0484,  0.0937, -0.1389],
       device='cuda:0') torch.Size([16])
fc_blocks.2.0.weight tensor([[-0.0902,  0.1183, -0.1755,  0.1050,  0.1337,  0.1604, -0.0529,  0.0325,
         -0.0862, -0.0758,  0.1476,  0.0719,  0.0558, -0.1161, -0.1925, -0.2252],
        [-0.2378,  0.1042, -0.0515, -0.1913, -0.0752,  0.0249, -0.0397, -0.0464,
          0.1341, -0.1957, -0.0732, -0.2039, -0.1456, -0.2060, -0.1309, -0.2459],
        [ 0.0583, -0.0522,  0.1998, -0.0613,  0.2564,  0.0809, -0.1632,  0.2531,
         -0.2348,  0.0249, -0.1763, -0.0846,  0.0467, -0.0044,  0.0217,  0.1443],
        [ 0.0429, -0.1444,  0.1187, -0.1769, -0.1362,  0.0554, -0.2034,  0.2067,
         -0.0762, -0.0255,  0.0172, -0.0969,  0.2263,  0.1023,  0.1089,  0.2142],
        [-0.2284, -0.2353,  0.1061,  0.0509,  0.0466,  0.2425,  0.1647, -0.2394,
          0.0900,  0.1955, -0.0419,  0.1941, -0.0664, -0.0507,  0.1721, -0.2078],
        [ 0.0384,  0.0300,  0.2542, -0.0483, -0.0153,  0.1523,  0.0270, -0.1646,
          0.2172, -0.2109,  0.0908,  0.0727, -0.1585, -0.1357,  0.2147,  0.1181],
        [ 0.0846,  0.0109, -0.2459,  0.0055,  0.1578,  0.0090,  0.0283, -0.1286,
          0.1640, -0.1847,  0.1624, -0.1335, -0.1677, -0.1573,  0.1847, -0.2275],
        [-0.2541, -0.1973, -0.2489,  0.0901, -0.0188,  0.2519, -0.2096,  0.0513,
          0.0456,  0.1610,  0.1361,  0.1783, -0.2161, -0.0313, -0.1449, -0.0497]],
       device='cuda:0') torch.Size([8, 16])
fc_blocks.2.0.bias tensor([ 0.2158, -0.0919, -0.2599, -0.1442, -0.2280, -0.1125, -0.1146, -0.1054],
       device='cuda:0') torch.Size([8])
fc_blocks.3.0.weight tensor([[ 0.1810,  0.3302,  0.1793,  0.0567, -0.1066,  0.1984,  0.1375, -0.2218],
        [-0.1403, -0.0194,  0.2112, -0.1165,  0.1679,  0.1070,  0.2149,  0.0938],
        [ 0.0936,  0.0661,  0.0447, -0.1269, -0.0774,  0.1492,  0.0869, -0.0965],
        [ 0.1105,  0.3081, -0.0911,  0.2755,  0.1350,  0.0260,  0.2213,  0.2514]],
       device='cuda:0') torch.Size([4, 8])
fc_blocks.3.0.bias tensor([ 0.2028,  0.0496,  0.3398, -0.3489], device='cuda:0') torch.Size([4])
fc_blocks.4.0.weight tensor([[-0.2743,  0.0054,  0.1675, -0.4935],
        [ 0.4370, -0.2403, -0.0011, -0.4493]], device='cuda:0') torch.Size([2, 4])
fc_blocks.4.0.bias tensor([-0.3739, -0.4758], device='cuda:0') torch.Size([2])
Train Loss : 4471.606, Val Loss : 20372.879
======> Trajectory Loss : 4333.619, Gravity Loss : 0.001, EndOfTrajectory Loss : 1.380, BelowGroundPenalize Loss : 0.000
Opening in existing browser session.
[1019/151857.604154:ERROR:nacl_helper_linux.cc(308)] NaCl helper process running without a sandbox!
Most likely you need to configure your SUID sandbox correctly
Opening in existing browser session.
[1019/151857.908765:ERROR:nacl_helper_linux.cc(308)] NaCl helper process running without a sandbox!
Most likely you need to configure your SUID sandbox correctly
Opening in existing browser session.
[1019/151858.224470:ERROR:nacl_helper_linux.cc(308)] NaCl helper process running without a sandbox!
Most likely you need to configure your SUID sandbox correctly
===> [Minibatch 2/129].........recurrent_blocks.0.weight_ih_l0 tensor([[ 1.2842e-01,  5.1576e-03, -5.6093e-02],
        [-4.9653e-02,  3.0416e-03,  1.4219e-01],
        [ 2.0659e-02,  5.8593e-02,  6.8558e-02],
        [-1.4011e-02, -6.4955e-02,  2.0366e-02],
        [ 5.5871e-03, -4.7726e-02, -1.1277e-01],
        [ 7.1232e-02, -8.9907e-02,  1.2159e-01],
        [-7.8615e-02, -1.3692e-01,  1.3217e-01],
        [ 1.1460e-01,  1.5478e-01, -6.4014e-02],
        [-1.6290e-01, -1.0215e-01, -1.0190e-02],
        [ 1.5740e-01,  6.6395e-02,  8.6962e-02],
        [-1.0545e-01, -1.5188e-01,  2.1024e-02],
        [-5.3525e-02,  1.6619e-01, -7.6775e-02],
        [-1.4942e-01,  1.6962e-01,  1.1426e-01],
        [-1.6050e-01, -1.0727e-01,  1.5423e-01],
        [-1.3221e-01,  1.0069e-01, -1.0609e-01],
        [-1.1197e-01,  3.6205e-02,  1.6998e-01],
        [ 9.9545e-02, -1.1602e-01, -1.3799e-01],
        [ 5.1781e-02,  1.8469e-01, -4.3714e-02],
        [-3.5628e-02,  2.3444e-02, -6.7715e-02],
        [-1.6902e-01, -1.4751e-01, -5.8876e-02],
        [-4.8196e-02,  1.0018e-01,  1.3734e-01],
        [ 6.8001e-03,  6.6829e-02,  1.7738e-01],
        [-5.1892e-02, -3.8239e-02, -1.5727e-01],
        [-1.9455e-03, -1.1221e-01, -4.6832e-02],
        [-1.2909e-01, -1.0369e-01,  6.3412e-03],
        [-1.8924e-01, -9.8170e-02, -1.0556e-01],
        [-3.6356e-02,  1.0789e-01,  1.2150e-01],
        [ 1.3733e-01, -1.7337e-01, -1.7266e-01],
        [ 1.5340e-02, -3.9612e-02,  6.8091e-02],
        [-9.6160e-02, -9.6284e-02,  1.2709e-01],
        [ 9.5885e-03, -8.0198e-02, -1.6849e-01],
        [ 3.5627e-02,  4.5321e-02, -6.6633e-02],
        [-1.5424e-01,  3.4118e-02, -1.3671e-01],
        [ 8.5274e-02,  6.6876e-02, -3.6525e-02],
        [-4.9753e-02,  1.4488e-01,  3.7497e-02],
        [ 1.6347e-01,  1.4845e-01, -1.0130e-01],
        [-9.4890e-02,  2.7490e-02,  4.8509e-02],
        [ 9.9250e-03, -8.2472e-02, -1.7065e-01],
        [-5.5648e-02, -1.4091e-01,  3.9870e-02],
        [ 1.4134e-01,  1.1388e-01,  1.4210e-01],
        [ 1.5166e-01, -6.2343e-02, -2.8063e-02],
        [ 4.9985e-02,  1.0681e-01, -1.3457e-01],
        [-7.8059e-02,  1.4097e-01,  6.3208e-02],
        [ 1.6845e-01,  1.5160e-01,  1.8332e-01],
        [-1.5175e-01, -1.5951e-03, -1.1264e-01],
        [-3.7416e-02, -7.5624e-02, -1.1222e-01],
        [-6.0105e-02,  3.2927e-03,  9.1225e-02],
        [-1.1696e-01,  4.6738e-02, -8.1086e-02],
        [ 9.6435e-02, -5.4783e-02, -2.6557e-02],
        [-4.7311e-02, -1.2431e-01,  6.2962e-02],
        [-1.6502e-01,  1.7323e-01,  1.6638e-02],
        [-1.4103e-03, -1.2417e-01, -4.6640e-02],
        [-1.5171e-01, -2.3882e-02,  1.6851e-01],
        [ 1.9112e-02, -2.4879e-03,  5.5574e-02],
        [-1.4090e-01, -1.1476e-01,  1.3593e-01],
        [ 1.4475e-01,  1.2916e-01,  1.7383e-01],
        [-1.5950e-01,  3.3430e-02, -1.5071e-01],
        [ 7.8727e-02, -1.1345e-01, -1.6876e-01],
        [ 8.6636e-02,  1.3969e-01, -1.5165e-02],
        [ 1.8276e-02, -5.8663e-02,  1.3175e-01],
        [ 1.1248e-01,  9.6565e-02,  1.7649e-01],
        [-1.3526e-01, -1.2333e-01, -4.9191e-02],
        [-1.2156e-01,  5.5890e-02, -1.0828e-01],
        [ 7.8842e-05, -1.5007e-01, -6.5136e-02],
        [ 6.8809e-02,  1.5257e-01,  2.9752e-03],
        [-1.4642e-01,  1.2394e-01, -1.0681e-01],
        [-1.5187e-02, -1.8157e-01, -1.5874e-01],
        [ 1.0160e-01,  1.5216e-01, -5.1555e-02],
        [-1.0932e-01, -1.4754e-01, -5.2311e-02],
        [-2.4724e-02, -1.6147e-01,  8.7435e-02],
        [-3.2213e-02, -3.9209e-02, -5.2082e-02],
        [ 1.2390e-01,  5.4679e-02,  8.6594e-03],
        [-1.4827e-01,  1.9052e-01,  1.5019e-01],
        [ 6.5094e-03, -1.5399e-01,  1.1078e-02],
        [-1.1283e-01, -1.0347e-01, -1.4384e-01],
        [ 1.3682e-01,  1.0759e-01,  3.5123e-02],
        [ 8.4883e-02,  1.4122e-01, -1.6576e-01],
        [-1.5105e-01,  1.7050e-01,  5.5860e-02],
        [-1.5413e-01,  1.0671e-01, -5.0259e-02],
        [ 2.3960e-02,  9.1293e-02, -1.1610e-01],
        [-6.7465e-02, -2.0629e-03, -8.1909e-02],
        [ 1.5343e-01, -9.6464e-02,  1.1140e-01],
        [ 4.5267e-02,  1.6044e-01, -8.5015e-02],
        [ 4.7477e-02,  1.5215e-01,  1.0360e-01],
        [-1.6692e-01, -8.7614e-02,  1.8745e-02],
        [-1.8957e-01,  1.4983e-01,  1.4000e-02],
        [-1.3650e-01,  1.4623e-01, -1.1186e-01],
        [ 4.2823e-02, -1.2613e-01, -2.5071e-02],
        [ 2.5795e-02,  9.3684e-02, -4.2996e-02],
        [ 9.9140e-02, -1.0835e-01,  1.0476e-02],
        [-1.7414e-01,  1.5920e-01, -1.2283e-01],
        [-1.6977e-01,  5.8695e-02,  9.1395e-02],
        [ 2.6703e-02, -3.1283e-02,  1.0721e-01],
        [ 3.5368e-02, -1.7207e-01,  1.2379e-01],
        [-1.1975e-01, -6.9680e-04,  7.3687e-02],
        [-1.0188e-01, -1.8840e-02,  1.5459e-01],
        [-1.0073e-01, -6.5065e-02, -6.3564e-02],
        [-1.6713e-01, -1.3858e-01,  8.5760e-02],
        [ 1.3287e-01, -4.4116e-02, -1.7876e-01],
        [-7.7746e-02,  5.0107e-02,  1.4002e-01],
        [-1.2795e-01, -6.1571e-02, -1.9354e-01],
        [ 1.5541e-01,  8.2825e-02, -1.1526e-01],
        [-2.7463e-02,  1.7505e-01, -1.3663e-01],
        [ 2.3803e-02,  1.9590e-02, -7.6603e-02],
        [-6.5758e-02, -1.0065e-01,  1.1720e-01],
        [ 9.3659e-02,  3.9347e-02,  1.1469e-01],
        [-1.1353e-01,  3.3900e-02,  9.0057e-02],
        [ 1.6150e-01,  1.2170e-01,  2.8209e-02],
        [-7.9158e-02, -1.2236e-01, -9.7351e-02],
        [ 1.4766e-01, -1.2316e-01,  1.3427e-01],
        [ 9.8231e-03, -3.1108e-03, -7.3562e-02],
        [ 6.4348e-02,  8.0364e-02, -2.1423e-02],
        [ 1.7525e-01, -7.5405e-02,  1.6766e-01],
        [-1.3953e-01, -8.6740e-02, -5.6385e-02],
        [-5.5007e-02,  9.4737e-03, -6.6027e-02],
        [ 1.2429e-01,  1.2678e-01,  7.0448e-02],
        [ 7.4111e-02,  9.5977e-02, -1.2537e-01],
        [ 1.3998e-01, -9.9593e-02,  1.3211e-01],
        [ 4.4518e-03, -1.3099e-01,  1.1162e-01],
        [-9.9797e-02, -7.2692e-02, -1.0727e-01],
        [ 6.5932e-02, -1.6457e-01, -7.0479e-02],
        [-5.7576e-02,  5.5403e-03,  6.6611e-02],
        [ 1.1076e-01, -1.0788e-01,  1.0188e-01],
        [-1.5626e-01, -1.7558e-01,  1.3406e-01],
        [ 1.5791e-01, -1.6125e-01, -1.0767e-01],
        [-3.4226e-02,  8.0814e-02,  3.7646e-02],
        [ 1.4487e-01, -1.3418e-01,  1.2077e-01],
        [ 5.9535e-02,  6.4868e-02, -6.8763e-02]], device='cuda:0') torch.Size([128, 3])
recurrent_blocks.0.weight_hh_l0 tensor([[ 0.0042,  0.1294, -0.1611,  ...,  0.0697,  0.0973,  0.1323],
        [ 0.0497, -0.0031,  0.1175,  ...,  0.1561,  0.0796, -0.1116],
        [ 0.0483, -0.0952, -0.0082,  ..., -0.1398, -0.1515, -0.0323],
        ...,
        [-0.1223, -0.0006, -0.0028,  ..., -0.0697,  0.0845, -0.0258],
        [ 0.0904, -0.0183, -0.1007,  ...,  0.0429, -0.0511,  0.1461],
        [-0.0170,  0.0879, -0.0427,  ..., -0.1268,  0.0356, -0.0808]],
       device='cuda:0') torch.Size([128, 32])
recurrent_blocks.0.bias_ih_l0 tensor([-0.0432,  0.0342, -0.1825,  0.0973,  0.0958,  0.1676, -0.1452, -0.0168,
         0.1053, -0.0121, -0.1626,  0.0897, -0.1595,  0.0352,  0.0866,  0.0694,
         0.0543,  0.0740, -0.0214,  0.0838, -0.0516, -0.0108, -0.1286,  0.1062,
        -0.1668,  0.1454,  0.0884,  0.0052,  0.0472,  0.0863, -0.1232, -0.0773,
         0.0326, -0.1236,  0.0441,  0.1185, -0.0386, -0.1238,  0.0577,  0.0895,
         0.0092,  0.0424,  0.0872,  0.1340, -0.1392,  0.0374, -0.0436, -0.1164,
         0.0690, -0.0092,  0.0847, -0.0016,  0.0584, -0.0109, -0.1019,  0.0404,
         0.1346, -0.0020,  0.1143, -0.1467, -0.1460,  0.0641,  0.0175,  0.0316,
        -0.0364,  0.0780, -0.0854,  0.1037,  0.1514,  0.0302,  0.1292, -0.0030,
        -0.1075,  0.0937,  0.1495,  0.1096,  0.0107,  0.0647, -0.0280, -0.0783,
         0.0811,  0.0506,  0.0760, -0.1162, -0.0100, -0.1780,  0.0805,  0.1141,
        -0.1329, -0.1274,  0.1545, -0.0598,  0.1853, -0.1396, -0.1553,  0.1150,
         0.0585,  0.1273,  0.0365,  0.0534, -0.0853,  0.0166, -0.1486,  0.0715,
        -0.0363,  0.0259,  0.1882,  0.1356,  0.0124,  0.0293, -0.1033,  0.0269,
        -0.0542, -0.0460,  0.0257, -0.1551,  0.0464,  0.0500,  0.0240, -0.0823,
        -0.1089,  0.1230,  0.0265, -0.0963,  0.1436, -0.0739,  0.1416, -0.1104],
       device='cuda:0') torch.Size([128])
recurrent_blocks.0.bias_hh_l0 tensor([ 0.0484, -0.0808, -0.0569,  0.0828, -0.1168,  0.1392,  0.0352,  0.0576,
        -0.1561, -0.0183,  0.1155, -0.0044,  0.0195, -0.1643, -0.1085, -0.0283,
         0.0462,  0.0821, -0.1712,  0.0979, -0.0199,  0.1580,  0.0181,  0.0813,
         0.0937, -0.1798, -0.0810,  0.1231, -0.0034,  0.0051, -0.0481, -0.1467,
        -0.1061,  0.1436, -0.1042, -0.1264,  0.0224,  0.0634, -0.1632,  0.0014,
         0.1160,  0.0312, -0.0486,  0.1522, -0.1410,  0.1108,  0.0454,  0.0130,
        -0.1187, -0.1696,  0.0237, -0.1022,  0.0803,  0.0303, -0.0876,  0.1382,
        -0.1651,  0.0905,  0.0162,  0.1048,  0.0558,  0.1193, -0.1129,  0.0464,
        -0.0040,  0.1680, -0.1629,  0.0310,  0.0561, -0.0743, -0.1283,  0.1190,
         0.0668, -0.1757,  0.0857,  0.1262,  0.0310, -0.1484,  0.1927,  0.0080,
         0.0708,  0.1517,  0.1460, -0.1337,  0.0998,  0.1086, -0.1384,  0.0269,
         0.0305, -0.0923,  0.1449,  0.1378, -0.0994, -0.0366, -0.0347,  0.0479,
         0.0556, -0.1475,  0.1383,  0.1210, -0.0525, -0.1017, -0.0529,  0.1529,
         0.1591,  0.1825,  0.0562,  0.0247,  0.0232, -0.0067, -0.0393, -0.0517,
        -0.0300, -0.1636, -0.1410, -0.0071, -0.0709,  0.1310, -0.0767, -0.0727,
        -0.1774,  0.1159,  0.1119,  0.0011, -0.0780, -0.0727, -0.0942,  0.0339],
       device='cuda:0') torch.Size([128])
recurrent_blocks.0.weight_ih_l0_reverse tensor([[ 0.0882, -0.1530, -0.0405],
        [ 0.0730, -0.0433, -0.0726],
        [ 0.0076,  0.0647,  0.0325],
        [-0.1838, -0.0463,  0.1087],
        [ 0.1823,  0.1657, -0.0690],
        [-0.0925, -0.0136,  0.1554],
        [ 0.0088,  0.0688, -0.1348],
        [ 0.0810,  0.0599,  0.0793],
        [ 0.1067,  0.0058, -0.1565],
        [-0.0772,  0.1960, -0.1914],
        [-0.0452,  0.0391,  0.0376],
        [-0.1845,  0.0292, -0.1663],
        [ 0.1157,  0.1185, -0.0295],
        [-0.0071, -0.0054,  0.1052],
        [ 0.1050, -0.0978, -0.0055],
        [-0.0910, -0.0532, -0.0275],
        [-0.0957, -0.0073,  0.0853],
        [-0.0934, -0.0133, -0.0980],
        [-0.1656,  0.0267, -0.1112],
        [ 0.1347, -0.0489,  0.1296],
        [ 0.0085,  0.1390, -0.1578],
        [-0.0868, -0.0801, -0.0468],
        [-0.1387,  0.0859,  0.0336],
        [ 0.0261,  0.1322, -0.1347],
        [-0.1311,  0.0592, -0.0297],
        [-0.1561, -0.1838, -0.0159],
        [-0.0768,  0.0542, -0.1098],
        [-0.1650,  0.1347,  0.0326],
        [-0.0439,  0.1798,  0.1901],
        [ 0.0998,  0.0269, -0.1436],
        [-0.0413,  0.1600, -0.1585],
        [-0.1205, -0.1379, -0.0967],
        [-0.1402, -0.0566,  0.0608],
        [-0.1348,  0.0603,  0.1512],
        [-0.1362,  0.1873,  0.1059],
        [-0.0299, -0.0740, -0.1131],
        [ 0.1562,  0.1211,  0.1496],
        [-0.0513,  0.1139,  0.0918],
        [ 0.0444,  0.0334,  0.0551],
        [-0.1191, -0.0236,  0.0401],
        [ 0.1052,  0.0665,  0.0149],
        [ 0.1784, -0.0386, -0.1016],
        [-0.1578, -0.0455, -0.1491],
        [ 0.1220,  0.1633, -0.0583],
        [ 0.0331,  0.1845,  0.0161],
        [ 0.1814, -0.1427, -0.1258],
        [-0.1478,  0.1200, -0.1591],
        [-0.0074, -0.1892, -0.0461],
        [-0.1589, -0.1350, -0.1565],
        [-0.0869,  0.1623,  0.1450],
        [ 0.0327,  0.1356,  0.0989],
        [ 0.0823, -0.0632,  0.0455],
        [-0.0147, -0.0560,  0.0142],
        [ 0.0460, -0.1673,  0.1812],
        [-0.1341,  0.1297, -0.1665],
        [-0.0352, -0.0443,  0.1381],
        [ 0.0004,  0.0603,  0.1134],
        [ 0.0580, -0.0767,  0.1516],
        [-0.0235,  0.0728,  0.0465],
        [-0.1585,  0.0682, -0.0603],
        [-0.0821,  0.1248,  0.1242],
        [-0.1332, -0.0232, -0.1828],
        [-0.0456,  0.0504, -0.0521],
        [-0.1782,  0.1321,  0.1315],
        [ 0.1856, -0.0563, -0.1500],
        [ 0.0053, -0.1906, -0.0460],
        [-0.1032,  0.0524, -0.0855],
        [-0.1673, -0.1464, -0.1454],
        [-0.0692, -0.1309, -0.1415],
        [ 0.0192, -0.0288, -0.0265],
        [-0.0673, -0.1088, -0.1654],
        [-0.1444,  0.0870,  0.1274],
        [ 0.0249,  0.1669, -0.0656],
        [-0.1233, -0.1820, -0.0740],
        [-0.0156,  0.0312,  0.0132],
        [-0.0166, -0.0210,  0.0200],
        [-0.0262, -0.0230, -0.0130],
        [-0.0918,  0.0084,  0.0974],
        [-0.1953, -0.1657,  0.0753],
        [ 0.0974,  0.0494,  0.0367],
        [ 0.0574, -0.1626,  0.0892],
        [ 0.0518, -0.0584, -0.0554],
        [-0.0278, -0.1153,  0.1604],
        [ 0.1363,  0.1054, -0.0623],
        [ 0.1536,  0.1136, -0.1612],
        [ 0.0143, -0.1138,  0.1635],
        [ 0.0852,  0.0361,  0.0759],
        [-0.0926,  0.1179,  0.1054],
        [ 0.0508, -0.0576,  0.0191],
        [ 0.0771, -0.1381,  0.1314],
        [-0.1685, -0.1511, -0.0891],
        [-0.1106, -0.0305,  0.1616],
        [-0.1044,  0.1869,  0.1161],
        [-0.1443, -0.0577, -0.1054],
        [-0.1469,  0.0904,  0.1585],
        [-0.0780, -0.1425,  0.0943],
        [ 0.0089, -0.1272,  0.0854],
        [-0.0155, -0.0504,  0.0076],
        [-0.0640, -0.0402,  0.0252],
        [ 0.1440, -0.0262, -0.1253],
        [ 0.0355,  0.1596, -0.0892],
        [ 0.1319, -0.1660, -0.0208],
        [-0.0835,  0.0539,  0.1865],
        [ 0.1092,  0.1252,  0.0407],
        [-0.0097, -0.1626,  0.0282],
        [ 0.0985,  0.0201,  0.0950],
        [ 0.0874,  0.0487,  0.1538],
        [ 0.1043, -0.0976, -0.0752],
        [ 0.1490, -0.0469,  0.0817],
        [ 0.0506, -0.1322,  0.0868],
        [ 0.1075,  0.0080,  0.1366],
        [ 0.0100, -0.0691, -0.1638],
        [ 0.1401,  0.0501, -0.1578],
        [-0.1634, -0.0756,  0.0715],
        [ 0.0874,  0.0930,  0.1320],
        [ 0.1835, -0.1662, -0.0989],
        [ 0.1026,  0.0927, -0.1086],
        [-0.1570,  0.0229,  0.1518],
        [ 0.0602, -0.1659,  0.0271],
        [-0.1344, -0.0379,  0.0093],
        [ 0.1418, -0.0611, -0.1231],
        [-0.1167,  0.1267,  0.0545],
        [-0.0158, -0.0595, -0.0209],
        [-0.0643, -0.0070,  0.0326],
        [ 0.0265, -0.0055, -0.1470],
        [ 0.0893, -0.0172,  0.0451],
        [ 0.0353,  0.0080,  0.1036],
        [ 0.0041, -0.1119, -0.1250]], device='cuda:0') torch.Size([128, 3])
recurrent_blocks.0.weight_hh_l0_reverse tensor([[ 0.0439,  0.1555, -0.1771,  ..., -0.0961, -0.1003,  0.0141],
        [ 0.0173, -0.0254,  0.1690,  ..., -0.1489, -0.0162,  0.0108],
        [-0.1412,  0.0755,  0.1533,  ...,  0.1850, -0.0378,  0.0767],
        ...,
        [ 0.0764,  0.0841, -0.0835,  ..., -0.1264, -0.0019,  0.1103],
        [ 0.0654,  0.1895,  0.1720,  ..., -0.1263,  0.1454, -0.0201],
        [ 0.0502, -0.0471, -0.0387,  ..., -0.1151,  0.1901,  0.0433]],
       device='cuda:0') torch.Size([128, 32])
recurrent_blocks.0.bias_ih_l0_reverse tensor([ 1.3795e-01, -9.3957e-02, -8.3790e-02,  1.0762e-01, -4.8126e-02,
         3.4139e-02,  4.4798e-02, -1.7447e-01, -1.0560e-01, -9.6218e-02,
         9.7350e-02,  1.5057e-01,  1.6249e-01,  4.4685e-02, -7.9054e-02,
         3.2305e-02, -7.7125e-02, -7.2490e-02,  1.5729e-01, -1.4543e-01,
        -1.5105e-01,  1.3681e-01, -1.6194e-01, -1.5525e-01,  1.3565e-01,
        -1.1742e-01,  1.3346e-01, -1.0557e-01,  8.2300e-02,  3.9035e-02,
        -5.4348e-02,  6.1028e-02,  1.1853e-01,  1.2923e-01, -6.4274e-02,
         4.8524e-02,  9.2684e-02,  8.7484e-03,  3.7670e-02, -1.7689e-01,
         8.2128e-02,  3.9510e-02, -1.3375e-01, -7.4478e-02, -1.4609e-01,
         8.8259e-02,  6.3029e-02,  4.3297e-02, -1.2648e-01, -9.1642e-02,
        -7.4574e-02,  1.5843e-01,  4.5537e-02,  1.5822e-01,  1.2542e-01,
        -7.8548e-02, -2.2153e-02,  8.5454e-02, -1.2344e-01,  4.2254e-02,
        -1.5093e-01,  2.1745e-02, -1.7869e-01, -7.6258e-02, -1.3385e-01,
        -8.5450e-02,  4.2368e-02, -1.0578e-01, -1.4106e-01,  9.5908e-02,
        -1.5845e-01,  3.3143e-02,  1.1317e-03,  5.7653e-02, -1.2823e-01,
        -5.9631e-02, -1.8990e-01,  1.6811e-02, -2.7333e-02,  9.4965e-02,
        -1.4892e-02,  1.5110e-02,  1.0520e-01,  1.2728e-01, -5.0283e-02,
         1.1122e-01, -1.5055e-01,  2.3826e-03,  3.8018e-02, -2.0658e-02,
        -4.9917e-02, -4.7663e-02,  7.9058e-02,  9.6035e-02, -8.7614e-02,
         2.9306e-02, -2.1478e-02,  1.1233e-01,  1.5421e-01, -1.2482e-01,
         1.1892e-01, -1.2947e-01,  1.6473e-01,  1.3716e-01, -7.3242e-02,
        -8.9359e-02,  1.4828e-01, -1.0399e-01,  1.7055e-01,  4.2089e-02,
        -1.3189e-01, -2.6760e-02,  1.0207e-01,  1.6584e-02,  1.2197e-01,
         1.1860e-01,  1.8133e-04,  1.5480e-01,  5.1914e-02, -5.0477e-02,
        -8.2779e-02,  1.3425e-01, -1.0878e-01,  9.5225e-02, -1.0510e-01,
        -5.4202e-02, -8.9970e-02, -6.6350e-02], device='cuda:0') torch.Size([128])
recurrent_blocks.0.bias_hh_l0_reverse tensor([ 0.1179,  0.0697,  0.0324, -0.1314, -0.1119,  0.0094, -0.0204,  0.0465,
        -0.0198,  0.0677, -0.0697,  0.1274, -0.1216, -0.1574, -0.1245, -0.1227,
        -0.1722, -0.1298,  0.0971, -0.1640,  0.0627, -0.1212, -0.1590,  0.1289,
        -0.0126, -0.0982,  0.0615,  0.0019,  0.0283,  0.1277, -0.1063,  0.0356,
        -0.0683,  0.1323,  0.0187,  0.1528, -0.0031,  0.0148,  0.0161, -0.1391,
         0.1246, -0.1687, -0.1587,  0.0954,  0.0969, -0.1134,  0.0430,  0.0010,
        -0.1628, -0.0790, -0.1590, -0.1270, -0.0837, -0.0245, -0.1079, -0.0178,
         0.0559, -0.0904,  0.1097, -0.1420, -0.0996,  0.0980, -0.0053,  0.1462,
        -0.0763, -0.1152,  0.0166,  0.0570, -0.0374,  0.0193,  0.0993, -0.1092,
        -0.0929, -0.0858, -0.0025,  0.1070, -0.1824,  0.1314,  0.1429,  0.0481,
        -0.0513, -0.1804, -0.1544, -0.1035,  0.0469, -0.0506,  0.0245, -0.0609,
        -0.0684, -0.1311, -0.0078,  0.1748,  0.0928, -0.0167,  0.0391, -0.0461,
         0.1153, -0.1236, -0.0442, -0.1814,  0.1412, -0.1287, -0.0882, -0.1078,
         0.1341,  0.0213, -0.0220, -0.1246,  0.0234, -0.0792, -0.1836,  0.1108,
         0.1081, -0.1188,  0.0829,  0.1337, -0.1305,  0.0031, -0.1732, -0.0094,
         0.0008, -0.0608, -0.0166, -0.1391,  0.1052,  0.1167,  0.0749, -0.0324],
       device='cuda:0') torch.Size([128])
recurrent_blocks.1.weight_ih_l0 tensor([[-0.1394,  0.0702,  0.0951,  ..., -0.0506,  0.1910, -0.1195],
        [-0.0346,  0.0082,  0.0312,  ...,  0.0324, -0.1048,  0.1435],
        [ 0.1711, -0.1022, -0.0212,  ..., -0.0128, -0.0289,  0.0542],
        ...,
        [ 0.1158,  0.0422,  0.0409,  ..., -0.0952,  0.0446,  0.1671],
        [-0.0350,  0.1805,  0.0590,  ..., -0.1803,  0.0007,  0.0255],
        [-0.1620,  0.1270, -0.0146,  ..., -0.0516, -0.0799,  0.0006]],
       device='cuda:0') torch.Size([128, 64])
recurrent_blocks.1.weight_hh_l0 tensor([[-0.1679,  0.1345, -0.1734,  ...,  0.0892,  0.0591, -0.0113],
        [ 0.0334,  0.1118, -0.0116,  ...,  0.1700, -0.1510,  0.0697],
        [ 0.1719, -0.1421, -0.0836,  ...,  0.0288,  0.0606, -0.1336],
        ...,
        [ 0.0814, -0.0020,  0.0184,  ...,  0.0438, -0.1192, -0.0816],
        [-0.0209,  0.1419, -0.0389,  ..., -0.1010, -0.1543,  0.0008],
        [ 0.1338, -0.0458, -0.0121,  ...,  0.1021, -0.1654,  0.0204]],
       device='cuda:0') torch.Size([128, 32])
recurrent_blocks.1.bias_ih_l0 tensor([ 0.0693,  0.1234,  0.0789, -0.0574,  0.1022, -0.0736, -0.0552, -0.0901,
         0.0759, -0.1664, -0.1162,  0.1312, -0.0143,  0.0342,  0.0223,  0.1909,
         0.1512,  0.1224, -0.1419,  0.1846, -0.0207, -0.0122, -0.0460, -0.0950,
         0.0342, -0.0697, -0.1639,  0.1309,  0.1213, -0.1743, -0.0711, -0.1518,
        -0.0289,  0.0389,  0.0985,  0.0172, -0.1418, -0.1438,  0.1588,  0.1621,
         0.0880, -0.0406,  0.0163, -0.0250,  0.0523, -0.1705, -0.0234,  0.0295,
         0.1136,  0.0765,  0.1190, -0.0984,  0.0189, -0.1340,  0.1261, -0.1274,
         0.0197,  0.0612, -0.1553, -0.0332,  0.0542,  0.1561,  0.0595, -0.0268,
        -0.0295,  0.1886,  0.0886,  0.0753, -0.0103,  0.0341,  0.1152, -0.1528,
         0.0125,  0.0776, -0.0505, -0.1157, -0.0193,  0.1042, -0.0746, -0.0961,
        -0.1431, -0.0283, -0.0661, -0.0008,  0.1448, -0.0080,  0.0958,  0.0097,
        -0.0562,  0.0246,  0.0031, -0.1101,  0.0241, -0.0371,  0.0742,  0.0882,
         0.0855, -0.0183,  0.1303, -0.0331, -0.0881, -0.0464,  0.0805, -0.1163,
        -0.1097, -0.1670,  0.0855, -0.0170, -0.0215,  0.0752, -0.0004,  0.1007,
        -0.1139,  0.0995, -0.0414,  0.0146,  0.1786, -0.0858,  0.1489, -0.1005,
         0.1096, -0.0631,  0.0664, -0.0870,  0.1264,  0.0264, -0.1371,  0.0534],
       device='cuda:0') torch.Size([128])
recurrent_blocks.1.bias_hh_l0 tensor([-0.0676,  0.1252,  0.0427,  0.1099,  0.0038,  0.1645, -0.0243,  0.1705,
        -0.0355, -0.0953, -0.0507,  0.0025, -0.0405, -0.0516, -0.1727,  0.1685,
         0.1733,  0.1099,  0.0029, -0.0799,  0.1790,  0.1151,  0.1507, -0.1312,
         0.0900,  0.0999, -0.0051, -0.1360,  0.0163, -0.1381, -0.0321, -0.1349,
         0.0327, -0.1810,  0.0458, -0.0672, -0.1084, -0.0350, -0.0725,  0.0633,
         0.0153, -0.1235,  0.1442,  0.0272, -0.0368,  0.1604,  0.1239, -0.0337,
        -0.0418,  0.0347, -0.0797,  0.0627, -0.0705,  0.0117,  0.0463,  0.1324,
         0.1076, -0.0511, -0.0828,  0.1705, -0.0386, -0.1294,  0.0612, -0.1517,
         0.0532, -0.1336,  0.1613,  0.1673, -0.1396, -0.0132, -0.1729,  0.1554,
         0.1280, -0.1142, -0.0594, -0.1430, -0.1038,  0.0403,  0.0677,  0.0516,
        -0.0903, -0.0553,  0.1317,  0.1343,  0.1793,  0.0190, -0.1006,  0.1561,
        -0.1028, -0.1274,  0.1452, -0.0215,  0.0625,  0.0598, -0.0622, -0.1368,
        -0.0320,  0.0697,  0.0194,  0.0939,  0.0747, -0.1056,  0.1306, -0.1181,
        -0.0834,  0.0208,  0.1566, -0.0637, -0.0393, -0.1078, -0.1520, -0.0053,
        -0.1662,  0.1554,  0.1398,  0.1718,  0.0960, -0.0660, -0.0801, -0.1035,
        -0.0479, -0.1595, -0.0737, -0.1196, -0.0809, -0.0819,  0.1155,  0.1155],
       device='cuda:0') torch.Size([128])
recurrent_blocks.1.weight_ih_l0_reverse tensor([[-0.0647,  0.0841, -0.0493,  ...,  0.1195, -0.1108,  0.0915],
        [ 0.0993, -0.0244,  0.0680,  ...,  0.1117, -0.0604,  0.0387],
        [-0.1916, -0.1335,  0.0349,  ..., -0.0809,  0.0426,  0.0252],
        ...,
        [-0.1165,  0.0365, -0.1635,  ..., -0.0631, -0.0518, -0.1285],
        [ 0.0863,  0.1641,  0.0629,  ..., -0.0734, -0.1535, -0.1334],
        [ 0.0522,  0.0016, -0.0392,  ..., -0.0459, -0.0972, -0.0993]],
       device='cuda:0') torch.Size([128, 64])
recurrent_blocks.1.weight_hh_l0_reverse tensor([[ 0.1276,  0.0421,  0.1251,  ...,  0.0986, -0.1768, -0.1370],
        [-0.0875, -0.0073, -0.0534,  ...,  0.1121, -0.1059,  0.0570],
        [-0.1167, -0.0523,  0.0363,  ...,  0.1554, -0.1939,  0.0149],
        ...,
        [ 0.0933, -0.1138,  0.0636,  ..., -0.0259,  0.0432, -0.1572],
        [-0.1103,  0.1063,  0.0400,  ...,  0.0445, -0.0344, -0.0058],
        [-0.0024, -0.1130,  0.1522,  ...,  0.0532,  0.1357,  0.0233]],
       device='cuda:0') torch.Size([128, 32])
recurrent_blocks.1.bias_ih_l0_reverse tensor([-0.1057,  0.1294,  0.0134, -0.1422,  0.1160, -0.0456,  0.1665,  0.0967,
         0.0768, -0.0350, -0.0008,  0.1885,  0.0378,  0.0304, -0.0469, -0.1817,
         0.1261, -0.0515,  0.0761,  0.0812,  0.0962, -0.0691,  0.1008, -0.1300,
        -0.1352, -0.0465,  0.1597, -0.0345,  0.0220, -0.0469, -0.0540, -0.1394,
         0.1312, -0.0172, -0.0827, -0.1770, -0.0692,  0.0876, -0.1321,  0.1729,
        -0.1247, -0.0669,  0.1780, -0.0867,  0.1691,  0.1093, -0.1225,  0.0408,
        -0.0744, -0.1055, -0.1901,  0.0310, -0.0988, -0.1542,  0.1434, -0.1220,
         0.0688,  0.0182,  0.1905, -0.0296,  0.0403,  0.0744,  0.1081,  0.1344,
        -0.0300,  0.0122,  0.1555, -0.1585, -0.0496, -0.0627, -0.0988,  0.0924,
        -0.1707,  0.1107,  0.0373, -0.1120, -0.1781, -0.1144,  0.0393,  0.0939,
         0.0211,  0.0354, -0.1363,  0.0239, -0.0536, -0.1349, -0.0450, -0.1557,
         0.0056,  0.0621,  0.1082,  0.1147, -0.1391, -0.1162, -0.0582, -0.0636,
         0.0966, -0.1342, -0.1116,  0.0013, -0.1694,  0.0779,  0.1683,  0.1165,
        -0.1450, -0.1176, -0.0998,  0.0936, -0.1596, -0.0961,  0.0026, -0.1251,
         0.1478, -0.0503, -0.1444,  0.1521,  0.1205, -0.1285,  0.1237,  0.1039,
        -0.1676,  0.1070,  0.0245, -0.1527,  0.0279, -0.0053, -0.1392,  0.1612],
       device='cuda:0') torch.Size([128])
recurrent_blocks.1.bias_hh_l0_reverse tensor([-0.0849,  0.0252, -0.0864,  0.0251, -0.1342,  0.0944, -0.0378, -0.0207,
         0.1473,  0.1340, -0.0731,  0.1107,  0.1609,  0.1014, -0.0200, -0.1040,
        -0.1471,  0.0058,  0.0250, -0.0653, -0.0346,  0.1262, -0.0936,  0.1832,
         0.0561, -0.0212,  0.0721, -0.0726, -0.1166,  0.1401, -0.1350, -0.1231,
        -0.0821,  0.0614, -0.1955,  0.1494,  0.0803, -0.1108, -0.0669,  0.0672,
         0.1012,  0.0111, -0.0901, -0.1533,  0.0236,  0.0526, -0.0583,  0.0472,
         0.1698, -0.1562,  0.0801, -0.0719,  0.0391,  0.0303,  0.0500, -0.1253,
        -0.1087, -0.0140, -0.0176, -0.0442, -0.0219,  0.1094,  0.0504,  0.1426,
        -0.0670, -0.0875, -0.1068, -0.0860,  0.0232,  0.1078, -0.0092, -0.0406,
         0.0098, -0.1074,  0.0629,  0.1580, -0.0031, -0.0134, -0.1741,  0.1002,
        -0.0077,  0.0681,  0.1641, -0.0714,  0.0795,  0.1318, -0.0006, -0.1081,
         0.0107,  0.0906,  0.1491, -0.0360, -0.0956, -0.1653,  0.1822,  0.1927,
        -0.1374, -0.0149, -0.0229, -0.0590, -0.0784,  0.0249,  0.1775, -0.1336,
        -0.0962,  0.0466, -0.0083, -0.1019,  0.1126,  0.1056, -0.1300, -0.1767,
         0.0447,  0.0709, -0.1508,  0.0602,  0.1363,  0.0544,  0.1282,  0.1813,
        -0.0073,  0.1190,  0.1929,  0.1381,  0.0949, -0.1413, -0.1008, -0.1327],
       device='cuda:0') torch.Size([128])
recurrent_blocks.2.weight_ih_l0 tensor([[-0.1225, -0.1006, -0.0325,  ..., -0.1414,  0.0234, -0.0465],
        [ 0.1172,  0.0281,  0.1931,  ...,  0.0552,  0.1105, -0.1760],
        [-0.0647,  0.1229,  0.1076,  ...,  0.0778,  0.0964,  0.1299],
        ...,
        [-0.1634, -0.0930,  0.1641,  ..., -0.0812, -0.1438, -0.1137],
        [-0.1006,  0.0325, -0.1297,  ...,  0.0330, -0.1139,  0.1632],
        [ 0.0976, -0.1624, -0.1037,  ...,  0.0395,  0.0656,  0.0794]],
       device='cuda:0') torch.Size([128, 64])
recurrent_blocks.2.weight_hh_l0 tensor([[-0.0836, -0.1162, -0.1480,  ..., -0.0222,  0.0020,  0.0768],
        [ 0.0901, -0.0337, -0.0521,  ..., -0.0813, -0.1549,  0.0414],
        [-0.0044, -0.1496, -0.0927,  ...,  0.1452, -0.1519, -0.0638],
        ...,
        [ 0.0133,  0.1665, -0.0931,  ...,  0.1845, -0.0896, -0.0619],
        [-0.0268, -0.1178, -0.0530,  ..., -0.1009, -0.1240, -0.0911],
        [-0.0614,  0.0493, -0.1086,  ...,  0.0968, -0.1507,  0.1325]],
       device='cuda:0') torch.Size([128, 32])
recurrent_blocks.2.bias_ih_l0 tensor([-0.0220,  0.1475, -0.0806, -0.0478,  0.1480,  0.0526, -0.1836,  0.0394,
         0.0743, -0.0245,  0.0858,  0.0730, -0.1510, -0.0861,  0.0339, -0.1180,
         0.0026, -0.0148,  0.1024, -0.1417,  0.0252, -0.0537, -0.1285, -0.0763,
        -0.0937, -0.1184,  0.1674, -0.1242,  0.0297, -0.1192, -0.0367, -0.0254,
         0.1529, -0.0495,  0.0168, -0.0495, -0.1023,  0.0230,  0.1551, -0.0929,
         0.0116,  0.1282, -0.0935, -0.0782,  0.1363,  0.0833,  0.0071,  0.0143,
         0.0426,  0.0616, -0.0006, -0.0765, -0.0535, -0.1136,  0.1284, -0.1097,
        -0.1344, -0.1481,  0.1514,  0.0325, -0.0406, -0.1356,  0.1596,  0.1418,
        -0.0089,  0.0604, -0.1241,  0.0440, -0.0316,  0.1069, -0.1137,  0.0537,
         0.1725, -0.0459,  0.0129, -0.0972,  0.1151,  0.0840, -0.0109, -0.0328,
         0.0358,  0.0190,  0.0497, -0.1002,  0.0966,  0.0388, -0.1103, -0.1080,
         0.1496, -0.1361, -0.0957,  0.0140,  0.0939, -0.1555,  0.1447,  0.0342,
        -0.1536, -0.0826, -0.1136,  0.0523, -0.1497,  0.0149,  0.1445,  0.0041,
         0.1511,  0.1578, -0.1503,  0.0750,  0.1002,  0.0905, -0.0614,  0.1591,
        -0.0822, -0.0637,  0.1716,  0.0818,  0.1066, -0.0639, -0.0886, -0.1592,
        -0.0933,  0.0470, -0.1387,  0.0700,  0.1493, -0.1862, -0.1003,  0.1245],
       device='cuda:0') torch.Size([128])
recurrent_blocks.2.bias_hh_l0 tensor([-0.1816,  0.1587, -0.1280,  0.0617, -0.0887,  0.0717,  0.0201,  0.0509,
        -0.0972, -0.1153,  0.1155, -0.1306,  0.0528, -0.1598, -0.0540, -0.0652,
         0.1388,  0.1177,  0.0668, -0.1035, -0.0953,  0.0078, -0.1328,  0.1157,
         0.1129, -0.1008,  0.0263, -0.1285,  0.0311, -0.0791, -0.0739,  0.0301,
        -0.0364,  0.0963,  0.0652,  0.0536, -0.0141,  0.0133,  0.1339,  0.0676,
        -0.1189,  0.1348, -0.1577, -0.1053, -0.1148,  0.0766,  0.0499, -0.0171,
        -0.0782,  0.1177,  0.0871, -0.0297, -0.1023, -0.1842,  0.0676, -0.0676,
         0.0869, -0.1795,  0.0585, -0.0639,  0.1552,  0.0144, -0.0566, -0.0851,
         0.1119, -0.0091,  0.0181, -0.0349, -0.0816, -0.0776,  0.0729, -0.1259,
         0.1286, -0.0169, -0.1501,  0.1104,  0.1106, -0.0514, -0.0489, -0.1022,
         0.0702, -0.1508,  0.1008,  0.0754,  0.1026, -0.0206,  0.1065, -0.1694,
        -0.0955,  0.0092, -0.1225,  0.1645,  0.1632, -0.1280, -0.0637,  0.0184,
         0.1242,  0.0549, -0.1211, -0.0601, -0.1287,  0.0705,  0.1110,  0.0398,
        -0.1604,  0.0141,  0.0858, -0.1408,  0.1869,  0.0329,  0.1154,  0.1162,
        -0.1002,  0.0522, -0.0183,  0.1248, -0.1184,  0.0015,  0.1348,  0.0039,
        -0.0350,  0.1641, -0.1229, -0.1600,  0.1877,  0.1176,  0.1741,  0.1239],
       device='cuda:0') torch.Size([128])
recurrent_blocks.2.weight_ih_l0_reverse tensor([[-0.0508, -0.0878,  0.1389,  ...,  0.0937, -0.0087, -0.0004],
        [ 0.1005,  0.1085,  0.1197,  ..., -0.1366, -0.0778, -0.0091],
        [ 0.1454,  0.1000,  0.0571,  ...,  0.1412,  0.0751, -0.1663],
        ...,
        [-0.1571, -0.1084, -0.1603,  ...,  0.1204,  0.0616,  0.0670],
        [-0.0951, -0.0366,  0.0611,  ..., -0.1327,  0.0650, -0.0419],
        [-0.1189,  0.0100,  0.0455,  ...,  0.0554, -0.0017,  0.1335]],
       device='cuda:0') torch.Size([128, 64])
recurrent_blocks.2.weight_hh_l0_reverse tensor([[ 0.1239,  0.0145, -0.0246,  ..., -0.1206, -0.1865,  0.0304],
        [-0.0998,  0.0535,  0.0602,  ..., -0.0764, -0.0046,  0.0263],
        [-0.0493,  0.0789, -0.0486,  ..., -0.1655,  0.0988,  0.1070],
        ...,
        [ 0.0081, -0.0653,  0.0014,  ..., -0.1619,  0.0676,  0.1307],
        [ 0.1544,  0.0183,  0.1208,  ...,  0.0204,  0.1300, -0.0486],
        [-0.0300,  0.1900,  0.1204,  ..., -0.0650,  0.1221, -0.0661]],
       device='cuda:0') torch.Size([128, 32])
recurrent_blocks.2.bias_ih_l0_reverse tensor([-1.8881e-01, -1.6078e-01, -6.6960e-02, -9.8704e-02,  1.1449e-01,
         1.3980e-04, -4.3576e-02,  5.1079e-02,  7.3316e-02,  1.0334e-02,
         3.8179e-03, -3.0247e-03, -1.1120e-01,  6.5615e-02, -9.2044e-02,
        -3.5713e-02, -7.0610e-03,  1.7624e-01, -4.0662e-02, -5.6737e-02,
        -8.4974e-02,  6.3283e-02,  5.9173e-02, -2.8056e-02, -6.6941e-02,
        -1.9211e-01,  8.1383e-02, -1.3560e-01, -9.0614e-02, -4.1624e-02,
        -1.0404e-01, -2.5027e-02,  9.1495e-02,  7.3008e-02, -6.6891e-02,
         5.9584e-02, -1.8492e-01,  1.1288e-01,  8.6506e-04,  9.7488e-02,
         1.4931e-01,  9.7018e-02,  1.1694e-01, -6.1987e-02, -1.0819e-01,
         1.5161e-01, -8.7449e-03,  5.0037e-02,  1.6617e-01, -1.2091e-01,
        -8.4704e-02, -3.6584e-02, -1.2096e-01, -3.2786e-02,  1.4629e-01,
         9.0328e-02, -2.9548e-02, -1.6432e-01, -6.7778e-02, -6.3367e-02,
         3.8186e-03,  1.6957e-01,  6.5479e-02, -1.2526e-02, -1.1994e-01,
         3.4737e-02,  9.5588e-02, -1.3343e-01,  2.9847e-03,  1.9472e-01,
        -1.0945e-01, -1.0452e-01, -4.9114e-02, -5.9008e-02,  5.6618e-02,
        -8.4855e-02, -2.8340e-02,  1.5944e-01, -6.9138e-02,  1.5446e-01,
        -1.4736e-01,  8.0735e-02, -1.2471e-01, -2.2004e-02, -1.5842e-01,
         3.1236e-02,  8.2429e-02,  6.4909e-02,  5.5464e-02,  1.3785e-01,
         2.9724e-02,  1.3202e-01,  2.9639e-02,  5.3024e-02,  2.0342e-02,
         1.1203e-01,  1.1803e-01,  4.1266e-03, -1.4880e-02,  1.1168e-01,
         1.5364e-01,  9.7365e-02, -1.5080e-01,  5.8455e-02, -5.9686e-02,
        -4.0972e-02, -1.8123e-01,  1.5820e-01,  1.1637e-01,  8.7937e-02,
         1.0281e-01, -1.4032e-01,  1.2814e-01,  1.6770e-01, -1.0378e-01,
         1.6633e-01,  3.0226e-02,  1.6648e-01, -1.3883e-02,  4.5956e-02,
        -1.3033e-01, -3.6269e-02, -5.8018e-03,  1.4808e-01, -1.8477e-02,
         1.5522e-01,  3.1547e-02, -8.5573e-04], device='cuda:0') torch.Size([128])
recurrent_blocks.2.bias_hh_l0_reverse tensor([ 0.1325,  0.0039, -0.1178,  0.0948,  0.0766,  0.1565,  0.0434,  0.0245,
         0.0581,  0.0961,  0.0394, -0.1577, -0.0011, -0.0897, -0.1692, -0.0367,
        -0.0437,  0.0772,  0.0333,  0.0470, -0.1393,  0.0362,  0.1398, -0.1755,
        -0.1906,  0.1176,  0.1503,  0.1411,  0.1137,  0.1530,  0.0821,  0.0038,
         0.1056,  0.0352,  0.1036,  0.1458, -0.0301, -0.0347, -0.0759, -0.0956,
        -0.0415, -0.0151,  0.0667, -0.0040, -0.0839, -0.0847, -0.1586, -0.1120,
         0.1631,  0.1434, -0.1025, -0.0168, -0.0335,  0.1776,  0.0997,  0.1548,
         0.0047, -0.0692,  0.1690, -0.0993,  0.1558, -0.0309,  0.1631,  0.1908,
         0.0562, -0.0230,  0.1511, -0.1497,  0.0041, -0.0301, -0.0950,  0.1607,
        -0.1406,  0.0349, -0.1415,  0.1555, -0.0112,  0.0553, -0.0037,  0.1610,
         0.0464,  0.0537, -0.0908, -0.1018, -0.1065,  0.0134,  0.1414,  0.1045,
         0.0983, -0.1107, -0.0731,  0.0808, -0.1034,  0.1457,  0.0915,  0.1076,
        -0.0696,  0.1378, -0.1610, -0.1568,  0.1488, -0.0875, -0.0615,  0.0445,
        -0.0294, -0.0629,  0.0102,  0.1912,  0.1827,  0.1508,  0.1040, -0.1241,
        -0.1296,  0.1543,  0.0466,  0.0502, -0.1263, -0.1253, -0.0208,  0.1186,
         0.0924, -0.0660, -0.1164, -0.1307,  0.1078, -0.1226, -0.1336, -0.0109],
       device='cuda:0') torch.Size([128])
recurrent_blocks.3.weight_ih_l0 tensor([[-0.0742,  0.1175, -0.1109,  ..., -0.0560, -0.1121,  0.0687],
        [ 0.0171,  0.0490, -0.1182,  ..., -0.0737,  0.0710,  0.0365],
        [-0.0056,  0.0094,  0.0809,  ..., -0.0446,  0.1163,  0.1030],
        ...,
        [ 0.0596, -0.1475,  0.1905,  ..., -0.1268, -0.0983,  0.1425],
        [ 0.0592, -0.1848, -0.1553,  ...,  0.1455, -0.0674,  0.1409],
        [-0.0339, -0.1673,  0.0764,  ..., -0.0434, -0.1069, -0.1137]],
       device='cuda:0') torch.Size([128, 64])
recurrent_blocks.3.weight_hh_l0 tensor([[-0.0541,  0.0914, -0.1669,  ..., -0.0079,  0.0553,  0.1216],
        [ 0.0787, -0.0362, -0.1384,  ..., -0.0218, -0.1186, -0.1054],
        [-0.0345, -0.0395, -0.1201,  ..., -0.1668, -0.0557,  0.0777],
        ...,
        [-0.1231,  0.0307,  0.0577,  ..., -0.1319, -0.0529, -0.0291],
        [ 0.1015, -0.1310, -0.1307,  ..., -0.1730,  0.0577, -0.1664],
        [-0.1474, -0.0518,  0.1490,  ...,  0.0304, -0.0602,  0.1658]],
       device='cuda:0') torch.Size([128, 32])
recurrent_blocks.3.bias_ih_l0 tensor([-0.0179, -0.0460,  0.0783, -0.1904, -0.0406,  0.1592,  0.1534, -0.0991,
         0.1141, -0.1136,  0.0067, -0.1361,  0.0930,  0.0147,  0.1127, -0.1130,
         0.1137,  0.1058,  0.0968, -0.0763, -0.0841,  0.1517,  0.0374, -0.1522,
        -0.0514, -0.1322, -0.0353,  0.1423, -0.0625, -0.1752, -0.0842, -0.1283,
        -0.0042, -0.1164,  0.1181, -0.0420,  0.1100, -0.0085, -0.0512, -0.1705,
        -0.1308, -0.0893,  0.1155,  0.1181,  0.1919, -0.0377, -0.0100,  0.0866,
        -0.1334, -0.0504,  0.1148,  0.1408,  0.0535,  0.0987, -0.0281,  0.1487,
         0.1117,  0.1022,  0.1455, -0.1520, -0.0759,  0.0410, -0.0944, -0.0183,
         0.1168, -0.0513,  0.1131,  0.0218,  0.1495,  0.1008, -0.1728,  0.1155,
        -0.0610,  0.0177, -0.0388, -0.1056,  0.1730, -0.0498, -0.1165,  0.0082,
         0.1423,  0.0942,  0.0018, -0.1395, -0.0652, -0.0723, -0.0594, -0.1104,
        -0.1466, -0.1391,  0.0464,  0.1126,  0.1224,  0.1444,  0.0810, -0.1195,
         0.0140,  0.0030, -0.1126,  0.0774, -0.0191, -0.0694, -0.0452, -0.0369,
        -0.1275,  0.0045, -0.1455, -0.1160,  0.0027,  0.0929, -0.1388,  0.0553,
        -0.1869,  0.0739,  0.0027,  0.0597,  0.1298,  0.1174,  0.0845,  0.1539,
         0.0843,  0.1711,  0.0065,  0.1580, -0.1717,  0.1056,  0.0918, -0.0580],
       device='cuda:0') torch.Size([128])
recurrent_blocks.3.bias_hh_l0 tensor([-0.1651,  0.0347,  0.1310,  0.1201,  0.0749, -0.0862,  0.1476,  0.0257,
         0.0856,  0.0863,  0.0753,  0.0789, -0.1307,  0.0412,  0.1625,  0.1577,
         0.0812,  0.1202,  0.0197,  0.0566,  0.0555, -0.0975,  0.0674, -0.1726,
        -0.0891, -0.0110,  0.1421, -0.0970,  0.0639, -0.1587,  0.0964, -0.0858,
        -0.1866, -0.1380,  0.1220, -0.1818,  0.0228,  0.1577,  0.1877, -0.1813,
         0.1848,  0.0814, -0.1262,  0.0021, -0.1400,  0.1389, -0.0008,  0.0931,
         0.1513,  0.0469,  0.0400, -0.1761, -0.0168, -0.0709, -0.1090,  0.1738,
         0.0581, -0.0339, -0.1458,  0.1103, -0.1082,  0.0647,  0.1319, -0.1099,
        -0.0447, -0.1031,  0.0094,  0.0482, -0.0911,  0.0077,  0.0491,  0.0663,
        -0.1698, -0.1523, -0.0668,  0.1031,  0.0366, -0.0060, -0.1037,  0.0799,
         0.1526, -0.0423, -0.0454,  0.1138, -0.0477, -0.0741,  0.0699,  0.0150,
        -0.0585, -0.0220, -0.0965,  0.0234,  0.1275, -0.1489,  0.0892, -0.1816,
         0.1248,  0.1642, -0.1480,  0.1336, -0.0895,  0.0011,  0.1494, -0.1951,
         0.0467,  0.1209, -0.0599, -0.0833, -0.1610, -0.0024,  0.1088, -0.1576,
        -0.1427,  0.0314,  0.1811, -0.1262,  0.1527,  0.1532, -0.1211, -0.0245,
         0.0148,  0.1686, -0.1090,  0.0377, -0.1321,  0.0846, -0.0885, -0.1382],
       device='cuda:0') torch.Size([128])
recurrent_blocks.3.weight_ih_l0_reverse tensor([[ 0.1411, -0.0093,  0.0781,  ...,  0.0891,  0.1693,  0.0024],
        [ 0.0130, -0.0335, -0.0753,  ...,  0.0338, -0.1672, -0.0943],
        [ 0.1262, -0.1082, -0.0683,  ...,  0.0591, -0.0162, -0.0636],
        ...,
        [ 0.1460,  0.1320,  0.0487,  ...,  0.0058,  0.0053,  0.0430],
        [-0.1072,  0.1020, -0.1580,  ..., -0.0850,  0.0326, -0.1149],
        [-0.1197, -0.0293, -0.1595,  ...,  0.0051,  0.0562, -0.0632]],
       device='cuda:0') torch.Size([128, 64])
recurrent_blocks.3.weight_hh_l0_reverse tensor([[ 0.1450,  0.1073,  0.0491,  ...,  0.1608, -0.1137, -0.0784],
        [-0.0932, -0.0700,  0.0513,  ...,  0.0125, -0.0889, -0.0440],
        [-0.0422,  0.1900, -0.0144,  ...,  0.0911,  0.1325, -0.0418],
        ...,
        [ 0.0430, -0.0285,  0.0201,  ..., -0.0847,  0.1905,  0.1666],
        [-0.0498,  0.1241,  0.0025,  ...,  0.0587, -0.0146,  0.1645],
        [-0.0497, -0.0519, -0.0746,  ...,  0.0737, -0.0131, -0.0252]],
       device='cuda:0') torch.Size([128, 32])
recurrent_blocks.3.bias_ih_l0_reverse tensor([-0.0059,  0.1163,  0.0873, -0.0883,  0.1267,  0.0398,  0.1284,  0.0631,
         0.0856, -0.0207, -0.0821, -0.0863,  0.0823,  0.0704,  0.0236,  0.0832,
         0.0208, -0.1620,  0.0128,  0.0847,  0.0111,  0.0319, -0.0453, -0.0621,
         0.0310, -0.1421,  0.0783,  0.1778, -0.1643,  0.0759, -0.0050, -0.0178,
         0.0947,  0.0318,  0.1583, -0.0818, -0.0661, -0.1122, -0.0097, -0.1653,
        -0.1642, -0.0098, -0.0409,  0.1051, -0.1500,  0.1318, -0.1118, -0.0321,
        -0.0837,  0.0999, -0.0700,  0.0747,  0.0626,  0.0497, -0.1281,  0.0944,
         0.1198, -0.0609, -0.0025,  0.0980, -0.0062,  0.0919, -0.0958, -0.1232,
        -0.1491, -0.1621,  0.1847, -0.0577, -0.1217, -0.1059, -0.0663, -0.0521,
         0.1704,  0.0214, -0.1453, -0.0048, -0.0586, -0.1162,  0.0237, -0.1786,
        -0.0704,  0.1928,  0.1192,  0.0162,  0.0931, -0.1351,  0.1300, -0.1828,
         0.0055,  0.0020, -0.1091,  0.1202,  0.1468,  0.0357, -0.1329, -0.1026,
         0.1256, -0.1107, -0.0232, -0.0562,  0.1584, -0.1572,  0.0196, -0.1471,
        -0.0877,  0.1126,  0.1414,  0.0743, -0.1179,  0.0945,  0.0663, -0.1026,
        -0.1932, -0.0849,  0.1521, -0.1675, -0.0743,  0.0977,  0.0051, -0.0815,
        -0.0389, -0.0897, -0.0868,  0.1078,  0.1095, -0.1868,  0.0487, -0.0880],
       device='cuda:0') torch.Size([128])
recurrent_blocks.3.bias_hh_l0_reverse tensor([-0.0144, -0.1178, -0.0634, -0.0486, -0.0457, -0.1532,  0.1453,  0.1183,
         0.1104, -0.1649,  0.0401, -0.0235, -0.0673, -0.0982,  0.0751, -0.0728,
         0.1571, -0.1092,  0.1167,  0.0946,  0.1066,  0.1229,  0.1177, -0.1041,
        -0.0330,  0.0871,  0.0157, -0.0601, -0.1170, -0.0396,  0.0736,  0.1065,
        -0.0908, -0.1540,  0.1611, -0.0010, -0.0390, -0.0142,  0.0872, -0.0353,
         0.0093,  0.1294,  0.0147,  0.1284,  0.0743, -0.1415, -0.0063, -0.0798,
        -0.0349, -0.1055, -0.1379,  0.0835, -0.1084,  0.1422, -0.1402,  0.0759,
        -0.1911, -0.0086, -0.0314,  0.1061, -0.0406,  0.1163,  0.0788, -0.0329,
         0.1352,  0.0904, -0.1405,  0.0596, -0.1859, -0.0413, -0.1639,  0.1710,
        -0.0431,  0.1250,  0.1641, -0.1088,  0.1363, -0.1536, -0.1781, -0.0670,
         0.1070, -0.0108,  0.1112, -0.0041,  0.1041, -0.1458, -0.1279,  0.0797,
         0.0458, -0.1423,  0.1726, -0.0258, -0.1657,  0.0441, -0.1111, -0.1021,
        -0.0130,  0.0530, -0.1129, -0.0937, -0.1545,  0.1184,  0.0930,  0.0240,
        -0.0624, -0.0264, -0.1036, -0.1625, -0.0390, -0.0327,  0.1098, -0.0422,
         0.1268,  0.0674, -0.0713,  0.0936,  0.0900,  0.1046,  0.0885, -0.1415,
         0.1182, -0.0386, -0.0588,  0.1233,  0.1392,  0.0492,  0.0197, -0.1565],
       device='cuda:0') torch.Size([128])
fc_blocks.0.0.weight tensor([[ 0.0789,  0.0652, -0.0533,  ..., -0.1314, -0.0159, -0.0065],
        [ 0.0062,  0.0355, -0.0536,  ...,  0.0733, -0.0778, -0.0253],
        [ 0.0480,  0.0524, -0.0246,  ..., -0.1093,  0.0807,  0.0544],
        ...,
        [-0.0626,  0.0426,  0.0614,  ...,  0.1311, -0.0095,  0.0894],
        [-0.1216, -0.0160, -0.0771,  ..., -0.0009,  0.0709, -0.0953],
        [ 0.0487,  0.1096, -0.0811,  ...,  0.0703,  0.1230,  0.0517]],
       device='cuda:0') torch.Size([32, 64])
fc_blocks.0.0.bias tensor([ 0.0499,  0.0789,  0.1075, -0.0906, -0.1185,  0.0186, -0.0054,  0.0743,
        -0.0298,  0.0387, -0.0430, -0.0187, -0.1198, -0.0148, -0.0583,  0.0060,
         0.0247,  0.0499, -0.0061, -0.0225,  0.0700, -0.0167, -0.0965, -0.1329,
         0.1384, -0.0500,  0.0161,  0.1056, -0.0385, -0.0364,  0.0894, -0.0350],
       device='cuda:0') torch.Size([32])
fc_blocks.1.0.weight tensor([[-0.0605,  0.0772,  0.0577,  0.1487,  0.1407,  0.0482, -0.0609, -0.0528,
          0.1208,  0.1056,  0.1491, -0.0426, -0.1427, -0.0853, -0.1274, -0.1132,
         -0.1546,  0.1200, -0.1397, -0.0812,  0.0183,  0.1523,  0.0460,  0.1003,
          0.0707,  0.1174,  0.0663,  0.0847, -0.0443, -0.0319, -0.1369, -0.0235],
        [-0.0392,  0.1427,  0.0987,  0.1036, -0.0364,  0.1538, -0.0841,  0.0635,
         -0.0014, -0.1474, -0.0732, -0.0672,  0.0575, -0.0026, -0.0641, -0.0636,
         -0.0436,  0.1186,  0.0439, -0.1525, -0.0349, -0.1334,  0.1765, -0.1515,
         -0.1042,  0.1181,  0.0784, -0.1458,  0.0524,  0.1240, -0.1347,  0.1388],
        [ 0.1160, -0.1849, -0.0507, -0.1480, -0.1369,  0.0084, -0.0795, -0.0876,
          0.0427,  0.1493,  0.0731, -0.0749, -0.0238,  0.1528, -0.0970, -0.1813,
         -0.0545,  0.1274,  0.1585, -0.0818,  0.0363,  0.1147,  0.0315,  0.1367,
          0.0276,  0.0676, -0.0481, -0.1445, -0.1668,  0.0350,  0.1208, -0.1002],
        [ 0.1401,  0.0688,  0.0699,  0.0217, -0.0074,  0.0381,  0.1913,  0.1299,
         -0.0641, -0.0128,  0.0371, -0.0752, -0.0903,  0.0163, -0.1076,  0.1410,
          0.1761,  0.0837, -0.0587,  0.1017, -0.1351,  0.0831,  0.0879,  0.0470,
          0.0434,  0.1164,  0.0956,  0.0328,  0.0235, -0.0569, -0.0209,  0.1327],
        [-0.1292, -0.0220,  0.0389, -0.0922, -0.1494, -0.0737, -0.0173, -0.0902,
         -0.0368,  0.1019,  0.1251,  0.0594, -0.0028,  0.1592, -0.1798,  0.1873,
          0.0070, -0.1526, -0.1062, -0.0908,  0.0450,  0.0452, -0.1096,  0.0387,
          0.0334,  0.1151, -0.1834,  0.0337,  0.1782,  0.0480,  0.0809,  0.1084],
        [-0.0644,  0.0011,  0.0944,  0.1014,  0.0909, -0.0031,  0.1290, -0.1085,
          0.1365,  0.0039,  0.1685,  0.0611, -0.1193, -0.0229,  0.1862,  0.0653,
          0.0462, -0.1290,  0.0087, -0.0391,  0.1158,  0.0345, -0.1153,  0.0115,
         -0.0381, -0.0596, -0.0963, -0.0328,  0.1188,  0.1496,  0.0259, -0.1446],
        [-0.1033, -0.1776, -0.0033,  0.0331,  0.0546,  0.0386, -0.1152,  0.0385,
          0.1099, -0.1579, -0.0629, -0.1298, -0.1795, -0.0052,  0.0604,  0.0067,
         -0.1040,  0.1190,  0.1120,  0.0903,  0.0832, -0.1181,  0.1333, -0.0027,
         -0.0271, -0.0367,  0.0616, -0.0800,  0.1552, -0.1573,  0.0208,  0.1007],
        [ 0.1678, -0.1231, -0.0681,  0.0932, -0.0771, -0.0340, -0.0275,  0.0136,
         -0.0099,  0.0055,  0.1423,  0.0645, -0.0976,  0.0847, -0.0566,  0.0529,
          0.0900,  0.1536, -0.1116,  0.0149,  0.1786,  0.0243, -0.0021,  0.1875,
          0.0867, -0.1239,  0.1609,  0.1271, -0.1261,  0.1107,  0.0946, -0.0390],
        [-0.1455, -0.0546,  0.0960, -0.0276,  0.1781,  0.1379,  0.0648, -0.0669,
          0.0663,  0.0819,  0.1422,  0.1463,  0.1556,  0.0332,  0.1419,  0.0213,
         -0.0233,  0.0398, -0.0477, -0.0125,  0.1349,  0.1311, -0.1844,  0.1341,
          0.1493,  0.0162,  0.0703,  0.0980,  0.1384,  0.1529, -0.0467,  0.0320],
        [-0.0419,  0.1074, -0.0791,  0.1636,  0.1600,  0.1607, -0.1623, -0.0572,
          0.0577, -0.0021,  0.0922,  0.0196,  0.0341, -0.0686,  0.0287, -0.0277,
          0.1178, -0.1062,  0.0589,  0.0492,  0.0340, -0.0690,  0.0710, -0.0683,
         -0.1339,  0.0119,  0.0830,  0.0176,  0.1482, -0.0829,  0.1381,  0.0645],
        [-0.1216, -0.0821,  0.0837, -0.1621,  0.1121,  0.0718, -0.1338,  0.1354,
          0.1846, -0.0475,  0.0814, -0.1196, -0.0927,  0.1220, -0.0949,  0.1028,
          0.1953,  0.0936,  0.0744,  0.1131,  0.1579, -0.0852, -0.0164, -0.0723,
          0.1525,  0.0955, -0.1362, -0.1362,  0.0233, -0.0154, -0.1681,  0.0489],
        [ 0.0930,  0.0309,  0.0318, -0.0599,  0.0643, -0.1330,  0.0989,  0.1808,
          0.1384,  0.1316,  0.0543, -0.0283,  0.0088,  0.0185, -0.0259, -0.1523,
         -0.1100,  0.0853,  0.0935, -0.0780,  0.0935,  0.0665,  0.1854, -0.0202,
         -0.0414,  0.1828,  0.0391,  0.1607, -0.1313, -0.1277,  0.1818,  0.1303],
        [-0.1049,  0.1620, -0.0720,  0.1721, -0.1130,  0.1356,  0.0768,  0.1180,
          0.1231, -0.1039, -0.0890, -0.0969,  0.1573,  0.0556,  0.1711, -0.0705,
         -0.0873,  0.1424, -0.0876, -0.1479,  0.0825,  0.1073, -0.1411, -0.0940,
          0.0686, -0.0065,  0.1478, -0.0709,  0.1024,  0.1549,  0.0410,  0.1388],
        [-0.0459,  0.1328,  0.1328, -0.1780, -0.0308,  0.0969, -0.1443,  0.0813,
         -0.0613, -0.1147,  0.1369,  0.0092,  0.1046,  0.0901,  0.1252, -0.1775,
         -0.1629,  0.1592,  0.0169,  0.0291,  0.0843, -0.0866, -0.0353,  0.1028,
          0.0037,  0.0989,  0.0613, -0.0067, -0.0047,  0.0877, -0.0754, -0.1091],
        [-0.0988, -0.1482, -0.0758,  0.0591,  0.0288, -0.0364,  0.1563,  0.0024,
          0.0085, -0.1835, -0.1242, -0.1653, -0.0050, -0.0382, -0.0683, -0.0031,
          0.0957, -0.0534,  0.0888,  0.1295,  0.0387, -0.0205, -0.1100, -0.1511,
         -0.0986, -0.0375, -0.1319,  0.0491, -0.0347, -0.0582,  0.0197, -0.1336],
        [-0.1735, -0.0420, -0.1695,  0.0162,  0.1623,  0.0041,  0.0647,  0.1438,
          0.1052, -0.0199, -0.1625,  0.1573,  0.1155, -0.0968, -0.0240,  0.1000,
          0.1470,  0.1239,  0.1063,  0.1445, -0.0910,  0.1644,  0.1170,  0.0276,
         -0.1414,  0.1325,  0.0587,  0.0782, -0.0927, -0.1124,  0.1425, -0.0727]],
       device='cuda:0') torch.Size([16, 32])
fc_blocks.1.0.bias tensor([ 0.1432,  0.0676, -0.0940,  0.1305, -0.0385, -0.0178, -0.0339, -0.0952,
        -0.0785,  0.0413, -0.0099,  0.1451, -0.0183,  0.0411,  0.0837, -0.1464],
       device='cuda:0') torch.Size([16])
fc_blocks.2.0.weight tensor([[-0.0815,  0.1258, -0.1693,  0.1146,  0.1237,  0.1509, -0.0630,  0.0242,
         -0.0795, -0.0662,  0.1566,  0.0817,  0.0466, -0.1094, -0.1825, -0.2180],
        [-0.2292,  0.1114, -0.0451, -0.1817, -0.0851,  0.0155, -0.0496, -0.0537,
          0.1408, -0.1861, -0.0641, -0.1942, -0.1556, -0.1993, -0.1210, -0.2391],
        [ 0.0499, -0.0603,  0.1938, -0.0712,  0.2661,  0.0907, -0.1729,  0.2462,
         -0.2416,  0.0159, -0.1856, -0.0942,  0.0371, -0.0114,  0.0117,  0.1364],
        [ 0.0507, -0.1376,  0.1252, -0.1669, -0.1460,  0.0456, -0.2132,  0.1995,
         -0.0696, -0.0168,  0.0270, -0.0882,  0.2164,  0.1089,  0.1187,  0.2042],
        [-0.2371, -0.2428,  0.0999,  0.0413,  0.0565,  0.2520,  0.1746, -0.2434,
          0.0834,  0.1860, -0.0509,  0.1843, -0.0587, -0.0575,  0.1621, -0.2152],
        [ 0.0471,  0.0373,  0.2605, -0.0388, -0.0252,  0.1430,  0.0172, -0.1718,
          0.2238, -0.2012,  0.0998,  0.0825, -0.1684, -0.1290,  0.2246,  0.1250],
        [ 0.0763,  0.0031, -0.2521, -0.0043,  0.1677,  0.0188,  0.0188, -0.1353,
          0.1573, -0.1938,  0.1531, -0.1431, -0.1768, -0.1642,  0.1747, -0.2352],
        [-0.2629, -0.2047, -0.2551,  0.0806, -0.0089,  0.2612, -0.1997,  0.0590,
          0.0390,  0.1514,  0.1271,  0.1685, -0.2066, -0.0381, -0.1548, -0.0569]],
       device='cuda:0') torch.Size([8, 16])
fc_blocks.2.0.bias tensor([ 0.2258, -0.0819, -0.2698, -0.1347, -0.2380, -0.1024, -0.1245, -0.1154],
       device='cuda:0') torch.Size([8])
fc_blocks.3.0.weight tensor([[ 0.1907,  0.3202,  0.1693,  0.0467, -0.1166,  0.1884,  0.1275, -0.2316],
        [-0.1502, -0.0096,  0.2212, -0.1065,  0.1779,  0.1168,  0.2248,  0.1034],
        [ 0.1034,  0.0561,  0.0347, -0.1369, -0.0874,  0.1392,  0.0769, -0.1064],
        [ 0.1006,  0.3180, -0.0811,  0.2855,  0.1450,  0.0359,  0.2313,  0.2611]],
       device='cuda:0') torch.Size([4, 8])
fc_blocks.3.0.bias tensor([ 0.2128,  0.0396,  0.3498, -0.3589], device='cuda:0') torch.Size([4])
fc_blocks.4.0.weight tensor([[-0.2643,  0.0142,  0.1775, -0.5035],
        [ 0.4470, -0.2315,  0.0089, -0.4593]], device='cuda:0') torch.Size([2, 4])
fc_blocks.4.0.bias tensor([-0.3639, -0.4658], device='cuda:0') torch.Size([2])
Train Loss : 3977.043, Val Loss : 17842.039
======> Trajectory Loss : 3839.625, Gravity Loss : 0.001, EndOfTrajectory Loss : 1.374, BelowGroundPenalize Loss : 0.000
===> [Minibatch 3/129].........recurrent_blocks.0.weight_ih_l0 tensor([[ 1.3234e-01,  8.5793e-03, -6.3051e-02],
        [-5.7482e-02, -6.6600e-04,  1.5159e-01],
        [ 2.2424e-02,  6.0728e-02,  7.0528e-02],
        [-6.4353e-03, -6.6404e-02,  2.3593e-02],
        [ 4.5914e-03, -5.1752e-02, -1.1157e-01],
        [ 6.1711e-02, -9.5023e-02,  1.2901e-01],
        [-7.2818e-02, -1.3612e-01,  1.3822e-01],
        [ 1.1092e-01,  1.5027e-01, -6.6992e-02],
        [-1.6502e-01, -9.9546e-02, -1.8195e-02],
        [ 1.5896e-01,  6.8421e-02,  8.8927e-02],
        [-1.1203e-01, -1.6039e-01,  2.7602e-02],
        [-4.6363e-02,  1.6355e-01, -6.8556e-02],
        [-1.4815e-01,  1.7010e-01,  1.0817e-01],
        [-1.6608e-01, -1.0073e-01,  1.4776e-01],
        [-1.4109e-01,  9.2276e-02, -9.8702e-02],
        [-1.2054e-01,  2.7099e-02,  1.7913e-01],
        [ 9.3037e-02, -1.2235e-01, -1.3258e-01],
        [ 5.9642e-02,  1.7938e-01, -4.2154e-02],
        [-3.9817e-02,  1.8082e-02, -6.8851e-02],
        [-1.7756e-01, -1.5352e-01, -5.5304e-02],
        [-5.4317e-02,  9.4985e-02,  1.4275e-01],
        [ 1.6292e-02,  6.2493e-02,  1.8732e-01],
        [-4.2178e-02, -4.5880e-02, -1.4872e-01],
        [ 1.9918e-03, -1.1149e-01, -4.7791e-02],
        [-1.3809e-01, -1.1230e-01,  1.4334e-02],
        [-1.9610e-01, -1.0642e-01, -9.8549e-02],
        [-3.7247e-02,  1.0360e-01,  1.1593e-01],
        [ 1.3745e-01, -1.7502e-01, -1.7676e-01],
        [ 2.4563e-02, -4.7595e-02,  7.6236e-02],
        [-1.0536e-01, -9.0944e-02,  1.2693e-01],
        [ 1.2575e-02, -8.9652e-02, -1.6630e-01],
        [ 2.8047e-02,  3.6588e-02, -5.9897e-02],
        [-1.5102e-01,  3.8059e-02, -1.4355e-01],
        [ 7.7661e-02,  6.1651e-02, -2.7258e-02],
        [-4.7477e-02,  1.4600e-01,  3.9299e-02],
        [ 1.7152e-01,  1.4599e-01, -9.8100e-02],
        [-9.5428e-02,  2.3514e-02,  4.9339e-02],
        [ 2.0338e-04, -8.8994e-02, -1.6327e-01],
        [-5.1062e-02, -1.3840e-01,  4.5488e-02],
        [ 1.3752e-01,  1.0888e-01,  1.3892e-01],
        [ 1.4986e-01, -5.7764e-02, -3.6080e-02],
        [ 5.1330e-02,  1.0768e-01, -1.3280e-01],
        [-8.5087e-02,  1.3308e-01,  6.9787e-02],
        [ 1.7524e-01,  1.4886e-01,  1.9149e-01],
        [-1.4987e-01, -2.7172e-04, -1.1930e-01],
        [-4.2976e-02, -6.9009e-02, -1.1868e-01],
        [-6.8602e-02, -5.4683e-03,  9.8614e-02],
        [-1.2518e-01,  3.7470e-02, -7.1984e-02],
        [ 8.9836e-02, -6.1131e-02, -2.1350e-02],
        [-4.0208e-02, -1.2990e-01,  6.4087e-02],
        [-1.6866e-01,  1.6698e-01,  1.5326e-02],
        [-8.9500e-03, -1.3083e-01, -4.3315e-02],
        [-1.5775e-01, -2.9313e-02,  1.7392e-01],
        [ 2.8739e-02, -2.5088e-03,  6.5481e-02],
        [-1.3117e-01, -1.2239e-01,  1.4430e-01],
        [ 1.4806e-01,  1.3129e-01,  1.7269e-01],
        [-1.6917e-01,  2.4792e-02, -1.4270e-01],
        [ 7.0910e-02, -1.2160e-01, -1.6176e-01],
        [ 8.5583e-02,  1.3298e-01, -2.0959e-02],
        [ 1.8382e-02, -5.7453e-02,  1.2751e-01],
        [ 1.2151e-01,  8.9318e-02,  1.8460e-01],
        [-1.4410e-01, -1.1652e-01, -4.9641e-02],
        [-1.1794e-01,  4.6628e-02, -1.0632e-01],
        [-7.3246e-03, -1.5844e-01, -5.8390e-02],
        [ 6.6424e-02,  1.4489e-01,  2.8096e-03],
        [-1.5494e-01,  1.1450e-01, -9.7020e-02],
        [-1.1458e-02, -1.9152e-01, -1.6076e-01],
        [ 9.8588e-02,  1.4360e-01, -4.7614e-02],
        [-1.1369e-01, -1.5306e-01, -5.0120e-02],
        [-3.3776e-02, -1.6909e-01,  9.5227e-02],
        [-2.7504e-02, -2.9588e-02, -6.0722e-02],
        [ 1.1606e-01,  4.9456e-02,  7.4139e-03],
        [-1.4965e-01,  1.8534e-01,  1.4808e-01],
        [-5.2553e-05, -1.4620e-01,  8.1453e-03],
        [-1.1005e-01, -1.1253e-01, -1.3747e-01],
        [ 1.2958e-01,  9.9315e-02,  4.3626e-02],
        [ 7.9010e-02,  1.4459e-01, -1.6668e-01],
        [-1.5693e-01,  1.6298e-01,  6.2241e-02],
        [-1.5069e-01,  9.8502e-02, -4.1437e-02],
        [ 1.9812e-02,  1.0026e-01, -1.2544e-01],
        [-6.3598e-02, -9.8736e-03, -7.5814e-02],
        [ 1.4873e-01, -1.0355e-01,  1.1426e-01],
        [ 4.3813e-02,  1.5458e-01, -8.5193e-02],
        [ 5.4508e-02,  1.5972e-01,  9.9190e-02],
        [-1.6126e-01, -8.4890e-02,  2.4667e-02],
        [-1.9319e-01,  1.5912e-01,  4.4060e-03],
        [-1.2759e-01,  1.5541e-01, -1.2069e-01],
        [ 4.7360e-02, -1.2393e-01, -2.5018e-02],
        [ 3.4858e-02,  1.0154e-01, -5.1202e-02],
        [ 1.0273e-01, -9.9825e-02,  3.2159e-03],
        [-1.7987e-01,  1.5174e-01, -1.2666e-01],
        [-1.7146e-01,  5.9402e-02,  8.7459e-02],
        [ 2.9283e-02, -3.9646e-02,  1.1679e-01],
        [ 4.3710e-02, -1.6442e-01,  1.1957e-01],
        [-1.0977e-01,  7.1485e-03,  6.8324e-02],
        [-9.6619e-02, -2.5955e-02,  1.6239e-01],
        [-9.9211e-02, -6.2177e-02, -7.0583e-02],
        [-1.7458e-01, -1.4271e-01,  9.5096e-02],
        [ 1.3724e-01, -4.8588e-02, -1.7694e-01],
        [-6.9800e-02,  4.8928e-02,  1.4325e-01],
        [-1.2824e-01, -6.5093e-02, -1.9251e-01],
        [ 1.4628e-01,  7.6324e-02, -1.0782e-01],
        [-2.2625e-02,  1.7753e-01, -1.3085e-01],
        [ 1.9835e-02,  1.4644e-02, -7.9827e-02],
        [-6.8388e-02, -9.6820e-02,  1.0933e-01],
        [ 9.4142e-02,  4.0635e-02,  1.1665e-01],
        [-1.2031e-01,  2.5406e-02,  9.6675e-02],
        [ 1.6733e-01,  1.1842e-01,  3.6397e-02],
        [-7.8026e-02, -1.2140e-01, -1.0284e-01],
        [ 1.4199e-01, -1.1660e-01,  1.2780e-01],
        [ 1.8789e-03, -1.2828e-02, -6.6218e-02],
        [ 5.5724e-02,  7.1003e-02, -1.2297e-02],
        [ 1.6923e-01, -8.1449e-02,  1.7297e-01],
        [-1.3389e-01, -9.3163e-02, -5.4985e-02],
        [-6.0611e-02,  2.4358e-03, -6.7328e-02],
        [ 1.1775e-01,  1.2033e-01,  7.4046e-02],
        [ 6.8061e-02,  9.0852e-02, -1.1995e-01],
        [ 1.4965e-01, -9.6625e-02,  1.4202e-01],
        [ 1.4062e-02, -1.3809e-01,  1.2015e-01],
        [-9.5337e-02, -7.1383e-02, -1.0821e-01],
        [ 5.6106e-02, -1.7320e-01, -6.2462e-02],
        [-6.5341e-02, -3.0650e-03,  7.3661e-02],
        [ 1.0970e-01, -1.1268e-01,  9.6194e-02],
        [-1.5636e-01, -1.7637e-01,  1.2979e-01],
        [ 1.6725e-01, -1.6859e-01, -9.9541e-02],
        [-4.3410e-02,  8.6683e-02,  3.7078e-02],
        [ 1.4825e-01, -1.4351e-01,  1.2294e-01],
        [ 5.2229e-02,  5.6314e-02, -6.2033e-02]], device='cuda:0') torch.Size([128, 3])
recurrent_blocks.0.weight_hh_l0 tensor([[ 0.0078,  0.1227, -0.1537,  ...,  0.0759,  0.1044,  0.1265],
        [ 0.0443,  0.0058,  0.1081,  ...,  0.1461,  0.0698, -0.1031],
        [ 0.0456, -0.0927, -0.0096,  ..., -0.1404, -0.1513, -0.0298],
        ...,
        [-0.1250,  0.0026, -0.0029,  ..., -0.0688,  0.0896, -0.0227],
        [ 0.0839, -0.0146, -0.1017,  ...,  0.0461, -0.0520,  0.1524],
        [-0.0241,  0.0944, -0.0492,  ..., -0.1335,  0.0288, -0.0741]],
       device='cuda:0') torch.Size([128, 32])
recurrent_blocks.0.bias_ih_l0 tensor([-0.0501,  0.0436, -0.1805,  0.1005,  0.0969,  0.1750, -0.1391, -0.0198,
         0.0973, -0.0102, -0.1560,  0.0979, -0.1656,  0.0287,  0.0940,  0.0786,
         0.0596,  0.0754, -0.0226,  0.0872, -0.0462, -0.0009, -0.1201,  0.1052,
        -0.1588,  0.1523,  0.0828,  0.0010,  0.0553,  0.0860, -0.1211, -0.0706,
         0.0258, -0.1143,  0.0458,  0.1216, -0.0380, -0.1164,  0.0633,  0.0863,
         0.0012,  0.0442,  0.0938,  0.1422, -0.1458,  0.0310, -0.0362, -0.1073,
         0.0741, -0.0083,  0.0833,  0.0016,  0.0639, -0.0010, -0.0935,  0.0392,
         0.1426,  0.0049,  0.1084, -0.1510, -0.1379,  0.0635,  0.0193,  0.0384,
        -0.0367,  0.0878, -0.0874,  0.1076,  0.1535,  0.0380,  0.1206, -0.0043,
        -0.1096,  0.0908,  0.1558,  0.1181,  0.0099,  0.0710, -0.0191, -0.0876,
         0.0871,  0.0533,  0.0758, -0.1205, -0.0040, -0.1876,  0.0717,  0.1141,
        -0.1411, -0.1347,  0.1505, -0.0638,  0.1950, -0.1437, -0.1605,  0.1228,
         0.0515,  0.1367,  0.0383,  0.0566, -0.0844,  0.0240, -0.1429,  0.0683,
        -0.0442,  0.0278,  0.1948,  0.1438,  0.0069,  0.0229, -0.0959,  0.0360,
        -0.0490, -0.0447,  0.0244, -0.1516,  0.0518,  0.0600,  0.0326, -0.0833,
        -0.1009,  0.1300,  0.0207, -0.1006,  0.1517, -0.0747,  0.1437, -0.1037],
       device='cuda:0') torch.Size([128])
recurrent_blocks.0.bias_hh_l0 tensor([ 0.0415, -0.0714, -0.0549,  0.0859, -0.1158,  0.1466,  0.0412,  0.0545,
        -0.1641, -0.0163,  0.1221,  0.0039,  0.0134, -0.1708, -0.1011, -0.0191,
         0.0516,  0.0835, -0.1724,  0.1014, -0.0145,  0.1679,  0.0267,  0.0802,
         0.1017, -0.1728, -0.0866,  0.1190,  0.0048,  0.0048, -0.0460, -0.1399,
        -0.1130,  0.1529, -0.1024, -0.1232,  0.0231,  0.0707, -0.1576, -0.0018,
         0.1080,  0.0330, -0.0421,  0.1604, -0.1477,  0.1043,  0.0528,  0.0221,
        -0.1135, -0.1686,  0.0223, -0.0990,  0.0858,  0.0402, -0.0792,  0.1370,
        -0.1570,  0.0975,  0.0104,  0.1006,  0.0639,  0.1187, -0.1110,  0.0532,
        -0.0043,  0.1779, -0.1649,  0.0349,  0.0582, -0.0665, -0.1369,  0.1176,
         0.0646, -0.1787,  0.0921,  0.1347,  0.0302, -0.1420,  0.2016, -0.0013,
         0.0769,  0.1545,  0.1457, -0.1380,  0.1057,  0.0991, -0.1472,  0.0269,
         0.0224, -0.0996,  0.1410,  0.1338, -0.0898, -0.0407, -0.0400,  0.0557,
         0.0486, -0.1381,  0.1401,  0.1242, -0.0516, -0.0943, -0.0471,  0.1496,
         0.1513,  0.1845,  0.0628,  0.0329,  0.0177, -0.0131, -0.0319, -0.0425,
        -0.0248, -0.1623, -0.1424, -0.0037, -0.0655,  0.1409, -0.0682, -0.0737,
        -0.1694,  0.1229,  0.1062, -0.0032, -0.0699, -0.0734, -0.0921,  0.0407],
       device='cuda:0') torch.Size([128])
recurrent_blocks.0.weight_ih_l0_reverse tensor([[ 0.0842, -0.1558, -0.0421],
        [ 0.0644, -0.0440, -0.0724],
        [ 0.0015,  0.0639,  0.0360],
        [-0.1868, -0.0533,  0.1038],
        [ 0.1850,  0.1661, -0.0701],
        [-0.0943, -0.0215,  0.1654],
        [ 0.0168,  0.0737, -0.1271],
        [ 0.0733,  0.0511,  0.0860],
        [ 0.1026, -0.0040, -0.1508],
        [-0.0701,  0.2037, -0.1995],
        [-0.0540,  0.0461,  0.0331],
        [-0.1796,  0.0355, -0.1754],
        [ 0.1221,  0.1174, -0.0217],
        [-0.0109, -0.0034,  0.1045],
        [ 0.1071, -0.0984, -0.0078],
        [-0.0921, -0.0620, -0.0288],
        [-0.0990, -0.0077,  0.0761],
        [-0.0899, -0.0091, -0.1037],
        [-0.1680,  0.0279, -0.1122],
        [ 0.1293, -0.0578,  0.1359],
        [ 0.0038,  0.1401, -0.1552],
        [-0.0952, -0.0900, -0.0382],
        [-0.1287,  0.0934,  0.0251],
        [ 0.0258,  0.1329, -0.1410],
        [-0.1389,  0.0535, -0.0309],
        [-0.1610, -0.1915, -0.0080],
        [-0.0797,  0.0503, -0.1142],
        [-0.1720,  0.1256,  0.0388],
        [-0.0406,  0.1769,  0.1930],
        [ 0.1051,  0.0300, -0.1537],
        [-0.0493,  0.1630, -0.1661],
        [-0.1298, -0.1467, -0.0953],
        [-0.1436, -0.0572,  0.0589],
        [-0.1428,  0.0592,  0.1512],
        [-0.1423,  0.1868,  0.1097],
        [-0.0325, -0.0809, -0.1182],
        [ 0.1575,  0.1216,  0.1485],
        [-0.0538,  0.1065,  0.1018],
        [ 0.0523,  0.0357,  0.0630],
        [-0.1267, -0.0332,  0.0467],
        [ 0.1056,  0.0568,  0.0203],
        [ 0.1856, -0.0305, -0.1093],
        [-0.1665, -0.0386, -0.1535],
        [ 0.1271,  0.1693, -0.0674],
        [ 0.0400,  0.1847,  0.0241],
        [ 0.1769, -0.1395, -0.1267],
        [-0.1456,  0.1190, -0.1615],
        [-0.0080, -0.1985, -0.0476],
        [-0.1606, -0.1346, -0.1654],
        [-0.0831,  0.1662,  0.1392],
        [ 0.0301,  0.1393,  0.0976],
        [ 0.0774, -0.0706,  0.0508],
        [-0.0194, -0.0545,  0.0165],
        [ 0.0374, -0.1770,  0.1897],
        [-0.1242,  0.1368, -0.1750],
        [-0.0349, -0.0487,  0.1313],
        [-0.0073,  0.0547,  0.1117],
        [ 0.0536, -0.0857,  0.1596],
        [-0.0264,  0.0676,  0.0420],
        [-0.1653,  0.0594, -0.0542],
        [-0.0777,  0.1221,  0.1268],
        [-0.1281, -0.0202, -0.1928],
        [-0.0537,  0.0464, -0.0597],
        [-0.1874,  0.1234,  0.1338],
        [ 0.1877, -0.0491, -0.1498],
        [ 0.0074, -0.1877, -0.0470],
        [-0.1011,  0.0447, -0.0796],
        [-0.1674, -0.1436, -0.1429],
        [-0.0755, -0.1294, -0.1408],
        [ 0.0107, -0.0384, -0.0165],
        [-0.0576, -0.0992, -0.1753],
        [-0.1483,  0.0790,  0.1354],
        [ 0.0320,  0.1762, -0.0701],
        [-0.1217, -0.1909, -0.0805],
        [-0.0064,  0.0278,  0.0157],
        [-0.0235, -0.0297,  0.0277],
        [-0.0320, -0.0212, -0.0205],
        [-0.0905,  0.0035,  0.0984],
        [-0.1989, -0.1577,  0.0756],
        [ 0.1074,  0.0460,  0.0364],
        [ 0.0507, -0.1591,  0.0907],
        [ 0.0527, -0.0642, -0.0497],
        [-0.0340, -0.1239,  0.1630],
        [ 0.1307,  0.1130, -0.0706],
        [ 0.1539,  0.1189, -0.1643],
        [ 0.0168, -0.1226,  0.1728],
        [ 0.0791,  0.0282,  0.0844],
        [-0.0944,  0.1100,  0.1107],
        [ 0.0508, -0.0540,  0.0106],
        [ 0.0869, -0.1294,  0.1219],
        [-0.1623, -0.1492, -0.0878],
        [-0.1156, -0.0379,  0.1680],
        [-0.0952,  0.1842,  0.1200],
        [-0.1367, -0.0488, -0.1104],
        [-0.1559,  0.0853,  0.1665],
        [-0.0842, -0.1523,  0.1038],
        [ 0.0051, -0.1286,  0.0835],
        [-0.0248, -0.0544,  0.0075],
        [-0.0715, -0.0386,  0.0291],
        [ 0.1417, -0.0333, -0.1305],
        [ 0.0372,  0.1592, -0.0903],
        [ 0.1264, -0.1737, -0.0108],
        [-0.0757,  0.0569,  0.1944],
        [ 0.1018,  0.1160,  0.0473],
        [-0.0061, -0.1707,  0.0338],
        [ 0.1057,  0.0282,  0.0872],
        [ 0.0785,  0.0556,  0.1493],
        [ 0.1103, -0.0913, -0.0842],
        [ 0.1554, -0.0476,  0.0896],
        [ 0.0471, -0.1308,  0.0861],
        [ 0.1101,  0.0086,  0.1342],
        [ 0.0092, -0.0785, -0.1651],
        [ 0.1371,  0.0506, -0.1667],
        [-0.1600, -0.0715,  0.0658],
        [ 0.0846,  0.0948,  0.1313],
        [ 0.1787, -0.1745, -0.0931],
        [ 0.0978,  0.0941, -0.1061],
        [-0.1653,  0.0131,  0.1604],
        [ 0.0701, -0.1590,  0.0186],
        [-0.1342, -0.0425,  0.0028],
        [ 0.1337, -0.0665, -0.1239],
        [-0.1214,  0.1284,  0.0625],
        [-0.0188, -0.0651, -0.0256],
        [-0.0712, -0.0161,  0.0388],
        [ 0.0312, -0.0088, -0.1444],
        [ 0.0947, -0.0143,  0.0351],
        [ 0.0272,  0.0065,  0.0960],
        [-0.0051, -0.1209, -0.1225]], device='cuda:0') torch.Size([128, 3])
recurrent_blocks.0.weight_hh_l0_reverse tensor([[ 0.0465,  0.1581, -0.1730,  ..., -0.0887, -0.0939,  0.0227],
        [ 0.0177, -0.0251,  0.1712,  ..., -0.1455, -0.0093,  0.0183],
        [-0.1448,  0.0722,  0.1586,  ...,  0.1898, -0.0290,  0.0824],
        ...,
        [ 0.0859,  0.0939, -0.0909,  ..., -0.1305, -0.0043,  0.1053],
        [ 0.0727,  0.1969,  0.1777,  ..., -0.1176,  0.1538, -0.0109],
        [ 0.0456, -0.0466, -0.0304,  ..., -0.1056,  0.1986,  0.0528]],
       device='cuda:0') torch.Size([128, 32])
recurrent_blocks.0.bias_ih_l0_reverse tensor([ 0.1362, -0.0939, -0.0803,  0.1027, -0.0492,  0.0442,  0.0525, -0.1678,
        -0.0999, -0.1043,  0.0929,  0.1414,  0.1703,  0.0439, -0.0813,  0.0309,
        -0.0863, -0.0782,  0.1562, -0.1392, -0.1486,  0.1455, -0.1704, -0.1616,
         0.1343, -0.1095,  0.1290, -0.0994,  0.0852,  0.0290, -0.0620,  0.0623,
         0.1166,  0.1292, -0.0605,  0.0434,  0.0916,  0.0187,  0.0455, -0.1703,
         0.0875,  0.0318, -0.1381, -0.0836, -0.1381,  0.0872,  0.0607,  0.0418,
        -0.1354, -0.0974, -0.0760,  0.1637,  0.0478,  0.1668,  0.1169, -0.0853,
        -0.0239,  0.0935, -0.1281,  0.0484, -0.1482,  0.0117, -0.1863, -0.0742,
        -0.1335, -0.0863,  0.0482, -0.1032, -0.1404,  0.1059, -0.1684,  0.0410,
        -0.0033,  0.0511, -0.1256, -0.0520, -0.1974,  0.0177, -0.0271,  0.0945,
        -0.0133,  0.0207,  0.1077,  0.1189, -0.0534,  0.1205, -0.1420,  0.0077,
         0.0296, -0.0301, -0.0485, -0.0412,  0.0829,  0.0911, -0.0796,  0.0388,
        -0.0234,  0.1122,  0.1581, -0.1300,  0.1178, -0.1195,  0.1727,  0.1437,
        -0.0677, -0.0972,  0.1438, -0.1130,  0.1785,  0.0413, -0.1343, -0.0282,
         0.0932,  0.0109,  0.1212,  0.1244,  0.0026,  0.1635,  0.0434, -0.0569,
        -0.0837,  0.1423, -0.1135,  0.1014, -0.1024, -0.0642, -0.0976, -0.0640],
       device='cuda:0') torch.Size([128])
recurrent_blocks.0.bias_hh_l0_reverse tensor([ 1.1609e-01,  6.9740e-02,  3.5892e-02, -1.3628e-01, -1.1294e-01,
         1.9418e-02, -1.2692e-02,  5.3140e-02, -1.4090e-02,  5.9637e-02,
        -7.4145e-02,  1.1823e-01, -1.1375e-01, -1.5821e-01, -1.2672e-01,
        -1.2411e-01, -1.8133e-01, -1.3546e-01,  9.5957e-02, -1.5773e-01,
         6.5196e-02, -1.1253e-01, -1.6748e-01,  1.2263e-01, -1.3908e-02,
        -9.0281e-02,  5.7058e-02,  8.1264e-03,  3.1210e-02,  1.1766e-01,
        -1.1399e-01,  3.6923e-02, -7.0258e-02,  1.3220e-01,  2.2426e-02,
         1.4777e-01, -4.2456e-03,  2.4772e-02,  2.3999e-02, -1.3248e-01,
         1.2995e-01, -1.7645e-01, -1.6313e-01,  8.6300e-02,  1.0485e-01,
        -1.1446e-01,  4.0714e-02, -4.6669e-04, -1.7178e-01, -8.4751e-02,
        -1.6043e-01, -1.2178e-01, -8.1437e-02, -1.5872e-02, -1.1636e-01,
        -2.4483e-02,  5.4156e-02, -8.2389e-02,  1.0504e-01, -1.3590e-01,
        -9.6893e-02,  8.7995e-02, -1.2914e-02,  1.4835e-01, -7.5951e-02,
        -1.1610e-01,  2.2499e-02,  5.9525e-02, -3.6702e-02,  2.9316e-02,
         8.9400e-02, -1.0126e-01, -9.7378e-02, -9.2328e-02,  1.3695e-04,
         1.1460e-01, -1.8994e-01,  1.3234e-01,  1.4314e-01,  4.7613e-02,
        -4.9762e-02, -1.7480e-01, -1.5188e-01, -1.1182e-01,  4.3792e-02,
        -4.1319e-02,  3.3053e-02, -5.5525e-02, -7.6859e-02, -1.4058e-01,
        -6.3901e-03,  1.8129e-01,  9.6648e-02, -2.1649e-02,  4.7143e-02,
        -3.6598e-02,  1.1333e-01, -1.2370e-01, -4.0332e-02, -1.8664e-01,
         1.4016e-01, -1.1866e-01, -8.0221e-02, -1.0118e-01,  1.3971e-01,
         1.3471e-02, -2.6443e-02, -1.3361e-01,  3.1292e-02, -7.9991e-02,
        -1.8601e-01,  1.0935e-01,  9.9283e-02, -1.2446e-01,  8.2064e-02,
         1.3958e-01, -1.2806e-01,  1.1769e-02, -1.8167e-01, -1.5819e-02,
        -1.5319e-04, -5.2799e-02, -2.1362e-02, -1.3297e-01,  1.0788e-01,
         1.0671e-01,  6.7285e-02, -2.9970e-02], device='cuda:0') torch.Size([128])
recurrent_blocks.1.weight_ih_l0 tensor([[-0.1453,  0.0653,  0.1005,  ..., -0.0453,  0.1973, -0.1129],
        [-0.0423,  0.0145,  0.0253,  ...,  0.0366, -0.1122,  0.1509],
        [ 0.1790, -0.1061, -0.0187,  ..., -0.0204, -0.0279,  0.0495],
        ...,
        [ 0.1212,  0.0350,  0.0485,  ..., -0.0997,  0.0530,  0.1628],
        [-0.0261,  0.1741,  0.0634,  ..., -0.1877,  0.0016,  0.0187],
        [-0.1703,  0.1335, -0.0204,  ..., -0.0424, -0.0758,  0.0087]],
       device='cuda:0') torch.Size([128, 64])
recurrent_blocks.1.weight_hh_l0 tensor([[-0.1737,  0.1405, -0.1792,  ...,  0.0951,  0.0525, -0.0072],
        [ 0.0320,  0.1199, -0.0047,  ...,  0.1775, -0.1429,  0.0771],
        [ 0.1707, -0.1496, -0.0878,  ...,  0.0237,  0.0555, -0.1408],
        ...,
        [ 0.0757, -0.0073,  0.0110,  ...,  0.0384, -0.1261, -0.0876],
        [-0.0228,  0.1327, -0.0453,  ..., -0.1094, -0.1605, -0.0087],
        [ 0.1326, -0.0387, -0.0055,  ...,  0.1089, -0.1586,  0.0274]],
       device='cuda:0') torch.Size([128, 32])
recurrent_blocks.1.bias_ih_l0 tensor([ 6.3733e-02,  1.2960e-01,  7.6028e-02, -5.6868e-02,  9.6352e-02,
        -6.7628e-02, -4.6035e-02, -9.1123e-02,  7.4623e-02, -1.6724e-01,
        -1.2198e-01,  1.2625e-01, -1.9717e-02,  3.9488e-02,  2.1456e-02,
         1.9974e-01,  1.4500e-01,  1.1658e-01, -1.3356e-01,  1.8175e-01,
        -1.2824e-02, -2.0426e-02, -3.7180e-02, -1.0284e-01,  4.1436e-02,
        -7.1060e-02, -1.7270e-01,  1.3125e-01,  1.1506e-01, -1.8208e-01,
        -7.6360e-02, -1.4558e-01, -3.4502e-02,  4.4943e-02,  9.5389e-02,
         1.7308e-02, -1.4777e-01, -1.3793e-01,  1.6787e-01,  1.6077e-01,
         8.6526e-02, -4.1702e-02,  1.0571e-02, -2.9963e-02,  4.6876e-02,
        -1.6527e-01, -2.4614e-02,  3.8251e-02,  1.0715e-01,  7.0703e-02,
         1.2722e-01, -1.0138e-01,  2.6873e-02, -1.4212e-01,  1.3499e-01,
        -1.3518e-01,  2.6946e-02,  5.9505e-02, -1.6396e-01, -3.3272e-02,
         4.8057e-02,  1.4818e-01,  5.4089e-02, -2.0561e-02, -2.7198e-02,
         1.9827e-01,  8.7184e-02,  7.6452e-02, -1.1003e-02,  4.1231e-02,
         1.0542e-01, -1.5348e-01,  1.4699e-02,  7.4158e-02, -4.6857e-02,
        -1.0990e-01, -1.0711e-02,  1.1054e-01, -6.6943e-02, -1.0584e-01,
        -1.3863e-01, -2.6204e-02, -5.6517e-02,  1.4529e-04,  1.5255e-01,
        -7.9312e-03,  8.7513e-02,  1.5984e-03, -6.3630e-02,  1.7554e-02,
        -2.0107e-04, -1.1296e-01,  3.2372e-02, -3.8157e-02,  7.4312e-02,
         9.7589e-02,  7.9951e-02, -1.2163e-02,  1.2719e-01, -3.2629e-02,
        -9.3951e-02, -4.0514e-02,  8.9731e-02, -1.1743e-01, -1.1106e-01,
        -1.6755e-01,  7.9690e-02, -2.1966e-02, -2.6903e-02,  8.0449e-02,
        -1.3396e-03,  1.0944e-01, -1.2029e-01,  9.3830e-02, -3.3096e-02,
         1.1872e-02,  1.8656e-01, -9.3956e-02,  1.5780e-01, -1.0827e-01,
         1.1682e-01, -6.4272e-02,  5.7612e-02, -8.6747e-02,  1.2022e-01,
         1.8672e-02, -1.4241e-01,  5.9706e-02], device='cuda:0') torch.Size([128])
recurrent_blocks.1.bias_hh_l0 tensor([-0.0732,  0.1314,  0.0398,  0.1104, -0.0020,  0.1705, -0.0151,  0.1694,
        -0.0368, -0.0961, -0.0565, -0.0025, -0.0460, -0.0462, -0.1735,  0.1774,
         0.1671,  0.1041,  0.0113, -0.0827,  0.1869,  0.1069,  0.1595, -0.1390,
         0.0973,  0.0985, -0.0139, -0.1357,  0.0100, -0.1459, -0.0373, -0.1287,
         0.0271, -0.1749,  0.0427, -0.0670, -0.1143, -0.0291, -0.0635,  0.0619,
         0.0139, -0.1247,  0.1385,  0.0222, -0.0422,  0.1656,  0.1228, -0.0249,
        -0.0482,  0.0289, -0.0714,  0.0597, -0.0625,  0.0036,  0.0552,  0.1247,
         0.1149, -0.0528, -0.0914,  0.1704, -0.0448, -0.1373,  0.0559, -0.1454,
         0.0555, -0.1240,  0.1599,  0.1685, -0.1403, -0.0061, -0.1827,  0.1547,
         0.1302, -0.1176, -0.0557, -0.1371, -0.0952,  0.0467,  0.0754,  0.0419,
        -0.0858, -0.0532,  0.1412,  0.1352,  0.1870,  0.0191, -0.1088,  0.1480,
        -0.1103, -0.1344,  0.1419, -0.0243,  0.0708,  0.0587, -0.0621, -0.1274,
        -0.0376,  0.0759,  0.0163,  0.0943,  0.0688, -0.0997,  0.1398, -0.1192,
        -0.0848,  0.0202,  0.1508, -0.0686, -0.0447, -0.1026, -0.1530,  0.0034,
        -0.1726,  0.1497,  0.1482,  0.1691,  0.1039, -0.0741, -0.0712, -0.1113,
        -0.0406, -0.1607, -0.0825, -0.1194, -0.0871, -0.0897,  0.1102,  0.1218],
       device='cuda:0') torch.Size([128])
recurrent_blocks.1.weight_ih_l0_reverse tensor([[-0.0570,  0.0799, -0.0454,  ...,  0.1127, -0.1094,  0.0833],
        [ 0.0921, -0.0235,  0.0698,  ...,  0.1191, -0.0547,  0.0459],
        [-0.2003, -0.1312,  0.0336,  ..., -0.0768,  0.0403,  0.0341],
        ...,
        [-0.1255,  0.0438, -0.1696,  ..., -0.0531, -0.0538, -0.1207],
        [ 0.0804,  0.1733,  0.0535,  ..., -0.0667, -0.1620, -0.1294],
        [ 0.0466,  0.0086, -0.0468,  ..., -0.0428, -0.1060, -0.0946]],
       device='cuda:0') torch.Size([128, 64])
recurrent_blocks.1.weight_hh_l0_reverse tensor([[ 0.1222,  0.0487,  0.1207,  ...,  0.1033, -0.1816, -0.1415],
        [-0.0800, -0.0140, -0.0453,  ...,  0.1132, -0.1053,  0.0587],
        [-0.1107, -0.0596,  0.0415,  ...,  0.1528, -0.1903,  0.0187],
        ...,
        [ 0.1021, -0.1232,  0.0725,  ..., -0.0319,  0.0504, -0.1495],
        [-0.1024,  0.1006,  0.0484,  ...,  0.0351, -0.0254,  0.0031],
        [ 0.0040, -0.1164,  0.1586,  ...,  0.0454,  0.1429,  0.0304]],
       device='cuda:0') torch.Size([128, 32])
recurrent_blocks.1.bias_ih_l0_reverse tensor([-0.1098,  0.1280,  0.0155, -0.1442,  0.1119, -0.0377,  0.1759,  0.0904,
         0.0817, -0.0410,  0.0063,  0.1968,  0.0441,  0.0358, -0.0486, -0.1829,
         0.1274, -0.0447,  0.0699,  0.0799,  0.0948, -0.0651,  0.1016, -0.1325,
        -0.1345, -0.0556,  0.1607, -0.0268,  0.0213, -0.0405, -0.0446, -0.1315,
         0.1270, -0.0192, -0.0811, -0.1793, -0.0735,  0.0954, -0.1228,  0.1666,
        -0.1199, -0.0729,  0.1850, -0.0786,  0.1753,  0.1142, -0.1245,  0.0393,
        -0.0734, -0.0987, -0.1966,  0.0295, -0.1005, -0.1512,  0.1431, -0.1250,
         0.0691,  0.0091,  0.1910, -0.0221,  0.0392,  0.0807,  0.1174,  0.1422,
        -0.0308,  0.0038,  0.1610, -0.1578, -0.0498, -0.0550, -0.1088,  0.0998,
        -0.1764,  0.1051,  0.0452, -0.1029, -0.1844, -0.1200,  0.0399,  0.0967,
         0.0175,  0.0426, -0.1370,  0.0219, -0.0519, -0.1252, -0.0355, -0.1542,
         0.0041,  0.0593,  0.1113,  0.1228, -0.1392, -0.1225, -0.0489, -0.0552,
         0.0924, -0.1357, -0.1094, -0.0008, -0.1736,  0.0858,  0.1776,  0.1101,
        -0.1400, -0.1236, -0.0927,  0.1018, -0.1533, -0.0907,  0.0008, -0.1265,
         0.1490, -0.0434, -0.1507,  0.1509,  0.1190, -0.1249,  0.1246,  0.1012,
        -0.1670,  0.0979,  0.0249, -0.1451,  0.0270,  0.0011, -0.1298,  0.1690],
       device='cuda:0') torch.Size([128])
recurrent_blocks.1.bias_hh_l0_reverse tensor([-0.0889,  0.0238, -0.0843,  0.0231, -0.1383,  0.1023, -0.0283, -0.0270,
         0.1523,  0.1281, -0.0660,  0.1190,  0.1672,  0.1068, -0.0217, -0.1052,
        -0.1458,  0.0127,  0.0188, -0.0665, -0.0359,  0.1301, -0.0928,  0.1807,
         0.0569, -0.0303,  0.0731, -0.0650, -0.1173,  0.1466, -0.1256, -0.1152,
        -0.0863,  0.0594, -0.1938,  0.1472,  0.0760, -0.1030, -0.0576,  0.0608,
         0.1061,  0.0051, -0.0830, -0.1452,  0.0298,  0.0574, -0.0604,  0.0457,
         0.1708, -0.1494,  0.0736, -0.0734,  0.0374,  0.0334,  0.0497, -0.1282,
        -0.1084, -0.0231, -0.0172, -0.0366, -0.0230,  0.1157,  0.0597,  0.1504,
        -0.0677, -0.0959, -0.1014, -0.0854,  0.0230,  0.1155, -0.0192, -0.0331,
         0.0041, -0.1130,  0.0709,  0.1671, -0.0095, -0.0190, -0.1736,  0.1030,
        -0.0114,  0.0753,  0.1634, -0.0734,  0.0812,  0.1415,  0.0089, -0.1066,
         0.0091,  0.0877,  0.1523, -0.0278, -0.0958, -0.1716,  0.1916,  0.2011,
        -0.1416, -0.0164, -0.0207, -0.0611, -0.0825,  0.0328,  0.1869, -0.1400,
        -0.0912,  0.0406, -0.0012, -0.0937,  0.1188,  0.1109, -0.1318, -0.1780,
         0.0459,  0.0778, -0.1571,  0.0589,  0.1348,  0.0580,  0.1291,  0.1786,
        -0.0066,  0.1099,  0.1933,  0.1457,  0.0940, -0.1349, -0.0914, -0.1249],
       device='cuda:0') torch.Size([128])
recurrent_blocks.2.weight_ih_l0 tensor([[-0.1276, -0.1098, -0.0350,  ..., -0.1338,  0.0142, -0.0558],
        [ 0.1127,  0.0337,  0.2029,  ...,  0.0564,  0.1130, -0.1714],
        [-0.0683,  0.1277,  0.1152,  ...,  0.0797,  0.0999,  0.1346],
        ...,
        [-0.1682, -0.0869,  0.1740,  ..., -0.0805, -0.1384, -0.1072],
        [-0.1055,  0.0312, -0.1341,  ...,  0.0343, -0.1141,  0.1614],
        [ 0.0915, -0.1628, -0.0989,  ...,  0.0441,  0.0643,  0.0787]],
       device='cuda:0') torch.Size([128, 64])
recurrent_blocks.2.weight_hh_l0 tensor([[-0.0880, -0.1132, -0.1412,  ..., -0.0144, -0.0076,  0.0714],
        [ 0.0845, -0.0263, -0.0493,  ..., -0.0804, -0.1482,  0.0366],
        [-0.0082, -0.1434, -0.0897,  ...,  0.1459, -0.1461, -0.0695],
        ...,
        [ 0.0071,  0.1745, -0.0916,  ...,  0.1840, -0.0821, -0.0666],
        [-0.0318, -0.1156, -0.0531,  ..., -0.0989, -0.1276, -0.0815],
        [-0.0669,  0.0555, -0.1041,  ...,  0.1016, -0.1525,  0.1276]],
       device='cuda:0') torch.Size([128, 32])
recurrent_blocks.2.bias_ih_l0 tensor([-0.0302,  0.1469, -0.0801, -0.0531,  0.1447,  0.0577, -0.1805,  0.0345,
         0.0772, -0.0263,  0.0818,  0.0698, -0.1449, -0.0844,  0.0307, -0.1125,
         0.0102, -0.0210,  0.1037, -0.1403,  0.0225, -0.0616, -0.1234, -0.0823,
        -0.0855, -0.1106,  0.1736, -0.1293,  0.0388, -0.1180, -0.0390, -0.0299,
         0.1448, -0.0506,  0.0167, -0.0548, -0.1056,  0.0277,  0.1581, -0.0978,
         0.0143,  0.1263, -0.0978, -0.0819,  0.1423,  0.0848,  0.0034,  0.0195,
         0.0501,  0.0555,  0.0003, -0.0759, -0.0565, -0.1215,  0.1332, -0.1154,
        -0.1263, -0.1403,  0.1574,  0.0274, -0.0315, -0.1342,  0.1572,  0.1372,
        -0.0094,  0.0686, -0.1276,  0.0401, -0.0296,  0.1143, -0.1210,  0.0507,
         0.1757, -0.0491,  0.0166, -0.0887,  0.1215,  0.0875, -0.0088, -0.0394,
         0.0437,  0.0153,  0.0529, -0.1048,  0.0974,  0.0367, -0.1179, -0.1046,
         0.1399, -0.1443, -0.1023,  0.0101,  0.1029, -0.1582,  0.1465,  0.0377,
        -0.1619, -0.0835, -0.1134,  0.0469, -0.1532,  0.0200,  0.1479, -0.0009,
         0.1541,  0.1562, -0.1544,  0.0714,  0.1062,  0.0923, -0.0649,  0.1641,
        -0.0745, -0.0699,  0.1725,  0.0827,  0.1038, -0.0719, -0.0837, -0.1652,
        -0.0852,  0.0548, -0.1327,  0.0650,  0.1584, -0.1849, -0.1028,  0.1201],
       device='cuda:0') torch.Size([128])
recurrent_blocks.2.bias_hh_l0 tensor([-1.8983e-01,  1.5809e-01, -1.2754e-01,  5.6371e-02, -9.1957e-02,
         7.6851e-02,  2.3180e-02,  4.6018e-02, -9.4294e-02, -1.1707e-01,
         1.1145e-01, -1.3376e-01,  5.8822e-02, -1.5810e-01, -5.7190e-02,
        -5.9771e-02,  1.4648e-01,  1.1151e-01,  6.8130e-02, -1.0220e-01,
        -9.7961e-02, -1.7923e-04, -1.2771e-01,  1.0977e-01,  1.2115e-01,
        -9.2992e-02,  3.2510e-02, -1.3357e-01,  4.0142e-02, -7.7950e-02,
        -7.6246e-02,  2.5568e-02, -4.4378e-02,  9.5060e-02,  6.5038e-02,
         4.8172e-02, -1.7330e-02,  1.8040e-02,  1.3689e-01,  6.2756e-02,
        -1.1622e-01,  1.3290e-01, -1.6201e-01, -1.0895e-01, -1.0872e-01,
         7.8036e-02,  4.6148e-02, -1.1891e-02, -7.0648e-02,  1.1165e-01,
         8.7982e-02, -2.9101e-02, -1.0528e-01, -1.9214e-01,  7.2478e-02,
        -7.3278e-02,  9.4987e-02, -1.7178e-01,  6.4389e-02, -6.9013e-02,
         1.6425e-01,  1.5769e-02, -5.9069e-02, -8.9750e-02,  1.1146e-01,
        -8.6750e-04,  1.4577e-02, -3.8746e-02, -7.9624e-02, -7.0160e-02,
         6.5623e-02, -1.2890e-01,  1.3182e-01, -2.0124e-02, -1.4639e-01,
         1.1893e-01,  1.1696e-01, -4.7911e-02, -4.6806e-02, -1.0878e-01,
         7.8035e-02, -1.5450e-01,  1.0394e-01,  7.0783e-02,  1.0338e-01,
        -2.2660e-02,  9.8930e-02, -1.6594e-01, -1.0519e-01,  1.0015e-03,
        -1.2918e-01,  1.6069e-01,  1.7228e-01, -1.3059e-01, -6.1971e-02,
         2.1997e-02,  1.1598e-01,  5.4100e-02, -1.2093e-01, -6.5512e-02,
        -1.3222e-01,  7.5559e-02,  1.1445e-01,  3.4812e-02, -1.5747e-01,
         1.2430e-02,  8.1725e-02, -1.4441e-01,  1.9293e-01,  3.4713e-02,
         1.1181e-01,  1.2121e-01, -9.2600e-02,  4.6104e-02, -1.7364e-02,
         1.2558e-01, -1.2114e-01, -6.4389e-03,  1.3972e-01, -2.0760e-03,
        -2.6868e-02,  1.7192e-01, -1.1687e-01, -1.6502e-01,  1.9674e-01,
         1.1897e-01,  1.7169e-01,  1.1951e-01], device='cuda:0') torch.Size([128])
recurrent_blocks.2.weight_ih_l0_reverse tensor([[-0.0563, -0.0955,  0.1410,  ...,  0.0994, -0.0156, -0.0076],
        [ 0.0953,  0.1017,  0.1219,  ..., -0.1310, -0.0841, -0.0165],
        [ 0.1476,  0.1061,  0.0585,  ...,  0.1342,  0.0818, -0.1604],
        ...,
        [-0.1564, -0.1148, -0.1677,  ...,  0.1224,  0.0557,  0.0606],
        [-0.0927, -0.0280,  0.0692,  ..., -0.1421,  0.0736, -0.0333],
        [-0.1234,  0.0168,  0.0525,  ...,  0.0480,  0.0050,  0.1403]],
       device='cuda:0') torch.Size([128, 64])
recurrent_blocks.2.weight_hh_l0_reverse tensor([[ 0.1283,  0.0096, -0.0312,  ..., -0.1278, -0.1934,  0.0237],
        [-0.0955,  0.0482,  0.0541,  ..., -0.0837, -0.0113,  0.0193],
        [-0.0485,  0.0834, -0.0424,  ..., -0.1599,  0.1051,  0.1134],
        ...,
        [-0.0006, -0.0576, -0.0039,  ..., -0.1671,  0.0616,  0.1251],
        [ 0.1621,  0.0144,  0.1297,  ...,  0.0292,  0.1387, -0.0399],
        [-0.0238,  0.1866,  0.1273,  ..., -0.0578,  0.1290, -0.0592]],
       device='cuda:0') torch.Size([128, 32])
recurrent_blocks.2.bias_ih_l0_reverse tensor([-0.1948, -0.1668, -0.0602, -0.1017,  0.1084,  0.0093, -0.0342,  0.0597,
         0.0765,  0.0057,  0.0103,  0.0042, -0.1067,  0.0605, -0.0956, -0.0339,
        -0.0008,  0.1853, -0.0423, -0.0536, -0.0832,  0.0719,  0.0662, -0.0320,
        -0.0738, -0.1954,  0.0804, -0.1296, -0.0949, -0.0455, -0.0947, -0.0174,
         0.0856,  0.0670, -0.0602,  0.0562, -0.1912,  0.1222,  0.0101,  0.1061,
         0.1524,  0.0922,  0.1232, -0.0549, -0.1042,  0.1466, -0.0123,  0.0516,
         0.1726, -0.1121, -0.0867, -0.0340, -0.1195, -0.0242,  0.1531,  0.0862,
        -0.0366, -0.1681, -0.0690, -0.0575, -0.0007,  0.1655,  0.0747, -0.0051,
        -0.1156,  0.0330,  0.1021, -0.1309,  0.0021,  0.2028, -0.1185, -0.0965,
        -0.0536, -0.0669,  0.0662, -0.0767, -0.0339,  0.1554, -0.0675,  0.1564,
        -0.1570,  0.0905, -0.1256, -0.0256, -0.1617,  0.0406,  0.0889,  0.0620,
         0.0494,  0.1331,  0.0327,  0.1404,  0.0327,  0.0521,  0.0298,  0.1203,
         0.1120, -0.0020, -0.0081,  0.1085,  0.1475,  0.1067, -0.1415,  0.0671,
        -0.0564, -0.0457, -0.1748,  0.1654,  0.1207,  0.0828,  0.0992, -0.1388,
         0.1345,  0.1764, -0.1058,  0.1693,  0.0317,  0.1750, -0.0069,  0.0421,
        -0.1373, -0.0396, -0.0072,  0.1540, -0.0228,  0.1515,  0.0408,  0.0065],
       device='cuda:0') torch.Size([128])
recurrent_blocks.2.bias_hh_l0_reverse tensor([ 0.1266, -0.0021, -0.1111,  0.0918,  0.0706,  0.1657,  0.0527,  0.0331,
         0.0613,  0.0915,  0.0459, -0.1505,  0.0034, -0.0948, -0.1728, -0.0348,
        -0.0375,  0.0862,  0.0316,  0.0501, -0.1375,  0.0448,  0.1468, -0.1794,
        -0.1975,  0.1142,  0.1493,  0.1471,  0.1094,  0.1491,  0.0914,  0.0114,
         0.0997,  0.0293,  0.1103,  0.1424, -0.0364, -0.0254, -0.0667, -0.0870,
        -0.0384, -0.0199,  0.0730,  0.0031, -0.0798, -0.0897, -0.1622, -0.1104,
         0.1695,  0.1522, -0.1045, -0.0142, -0.0321,  0.1861,  0.1066,  0.1506,
        -0.0023, -0.0730,  0.1678, -0.0935,  0.1513, -0.0350,  0.1723,  0.1982,
         0.0606, -0.0248,  0.1576, -0.1472,  0.0032, -0.0220, -0.1040,  0.1687,
        -0.1452,  0.0270, -0.1319,  0.1636, -0.0168,  0.0512, -0.0020,  0.1629,
         0.0368,  0.0635, -0.0916, -0.1054, -0.1097,  0.0228,  0.1479,  0.1015,
         0.0923, -0.1155, -0.0702,  0.0892, -0.1003,  0.1448,  0.1010,  0.1159,
        -0.0756,  0.1317, -0.1542, -0.1600,  0.1427, -0.0782, -0.0522,  0.0531,
        -0.0262, -0.0676,  0.0166,  0.1984,  0.1871,  0.1457,  0.1005, -0.1226,
        -0.1232,  0.1630,  0.0446,  0.0532, -0.1248, -0.1168, -0.0137,  0.1148,
         0.0854, -0.0693, -0.1178, -0.1248,  0.1035, -0.1263, -0.1244, -0.0036],
       device='cuda:0') torch.Size([128])
recurrent_blocks.3.weight_ih_l0 tensor([[-0.0815,  0.1244, -0.1075,  ..., -0.0600, -0.1055,  0.0754],
        [ 0.0145,  0.0578, -0.1111,  ..., -0.0723,  0.0780,  0.0433],
        [-0.0095,  0.0042,  0.0738,  ..., -0.0447,  0.1115,  0.0980],
        ...,
        [ 0.0527, -0.1404,  0.1954,  ..., -0.1263, -0.0926,  0.1484],
        [ 0.0618, -0.1840, -0.1623,  ...,  0.1387, -0.0643,  0.1436],
        [-0.0379, -0.1727,  0.0694,  ..., -0.0417, -0.1120, -0.1189]],
       device='cuda:0') torch.Size([128, 64])
recurrent_blocks.3.weight_hh_l0 tensor([[-0.0487,  0.0994, -0.1598,  ..., -0.0140,  0.0622,  0.1192],
        [ 0.0812, -0.0267, -0.1315,  ..., -0.0268, -0.1117, -0.1102],
        [-0.0385, -0.0454, -0.1254,  ..., -0.1625, -0.0610,  0.0833],
        ...,
        [-0.1215,  0.0395,  0.0641,  ..., -0.1362, -0.0467, -0.0282],
        [ 0.1064, -0.1352, -0.1315,  ..., -0.1777,  0.0581, -0.1625],
        [-0.1517, -0.0580,  0.1435,  ...,  0.0352, -0.0655,  0.1714]],
       device='cuda:0') torch.Size([128, 32])
recurrent_blocks.3.bias_ih_l0 tensor([-0.0117, -0.0415,  0.0735, -0.1966, -0.0484,  0.1658,  0.1614, -0.1075,
         0.1198, -0.1077,  0.0053, -0.1297,  0.1008,  0.0097,  0.1105, -0.1166,
         0.1174,  0.0994,  0.1054, -0.0836, -0.0754,  0.1591,  0.0425, -0.1581,
        -0.0422, -0.1237, -0.0272,  0.1365, -0.0559, -0.1721, -0.0810, -0.1333,
         0.0018, -0.1121,  0.1131, -0.0483,  0.1020, -0.0019, -0.0433, -0.1784,
        -0.1252, -0.0833,  0.1139,  0.1245,  0.1995, -0.0428, -0.0127,  0.0828,
        -0.1304, -0.0567,  0.1231,  0.1334,  0.0619,  0.1060, -0.0227,  0.1428,
         0.1209,  0.1108,  0.1538, -0.1577, -0.0694,  0.0438, -0.0913, -0.0233,
         0.1234, -0.0416,  0.1104,  0.0161,  0.1449,  0.1075, -0.1799,  0.1085,
        -0.0670,  0.0108, -0.0373, -0.0974,  0.1807, -0.0482, -0.1143,  0.0070,
         0.1498,  0.0926,  0.0106, -0.1368, -0.0565, -0.0795, -0.0674, -0.1041,
        -0.1560, -0.1478,  0.0386,  0.1070,  0.1312,  0.1436,  0.0859, -0.1134,
         0.0202,  0.0077, -0.1176,  0.0711, -0.0268, -0.0628, -0.0375, -0.0456,
        -0.1219,  0.0103, -0.1471, -0.1096,  0.0104,  0.0880, -0.1416,  0.0512,
        -0.1830,  0.0677,  0.0111,  0.0523,  0.1383,  0.1247,  0.0896,  0.1481,
         0.0935,  0.1795,  0.0148,  0.1523, -0.1651,  0.1088,  0.0949, -0.0631],
       device='cuda:0') torch.Size([128])
recurrent_blocks.3.bias_hh_l0 tensor([-0.1589,  0.0391,  0.1262,  0.1138,  0.0670, -0.0795,  0.1555,  0.0172,
         0.0913,  0.0923,  0.0739,  0.0854, -0.1229,  0.0362,  0.1603,  0.1540,
         0.0850,  0.1137,  0.0283,  0.0492,  0.0643, -0.0901,  0.0725, -0.1785,
        -0.0799, -0.0026,  0.1502, -0.1028,  0.0705, -0.1556,  0.0996, -0.0908,
        -0.1806, -0.1337,  0.1171, -0.1881,  0.0148,  0.1643,  0.1956, -0.1892,
         0.1904,  0.0874, -0.1278,  0.0085, -0.1324,  0.1339, -0.0036,  0.0893,
         0.1542,  0.0406,  0.0484, -0.1835, -0.0084, -0.0636, -0.1036,  0.1679,
         0.0673, -0.0253, -0.1375,  0.1046, -0.1016,  0.0675,  0.1349, -0.1149,
        -0.0381, -0.0935,  0.0067,  0.0424, -0.0957,  0.0144,  0.0420,  0.0593,
        -0.1758, -0.1592, -0.0654,  0.1113,  0.0444, -0.0045, -0.1016,  0.0787,
         0.1601, -0.0439, -0.0365,  0.1165, -0.0389, -0.0814,  0.0618,  0.0213,
        -0.0679, -0.0307, -0.1043,  0.0178,  0.1363, -0.1497,  0.0942, -0.1756,
         0.1310,  0.1689, -0.1530,  0.1274, -0.0972,  0.0077,  0.1571, -0.2038,
         0.0523,  0.1268, -0.0615, -0.0768, -0.1533, -0.0073,  0.1060, -0.1616,
        -0.1388,  0.0252,  0.1896, -0.1336,  0.1612,  0.1605, -0.1161, -0.0303,
         0.0240,  0.1769, -0.1007,  0.0319, -0.1255,  0.0878, -0.0853, -0.1432],
       device='cuda:0') torch.Size([128])
recurrent_blocks.3.weight_ih_l0_reverse tensor([[ 0.1489, -0.0154,  0.0841,  ...,  0.0964,  0.1636, -0.0030],
        [ 0.0076, -0.0252, -0.0701,  ...,  0.0381, -0.1669, -0.0934],
        [ 0.1292, -0.1050, -0.0749,  ...,  0.0526, -0.0109, -0.0591],
        ...,
        [ 0.1410,  0.1236,  0.0453,  ...,  0.0156, -0.0032,  0.0347],
        [-0.1153,  0.0975, -0.1589,  ..., -0.0786,  0.0269, -0.1204],
        [-0.1263, -0.0327, -0.1564,  ...,  0.0109,  0.0496, -0.0700]],
       device='cuda:0') torch.Size([128, 64])
recurrent_blocks.3.weight_hh_l0_reverse tensor([[ 0.1385,  0.1140,  0.0444,  ...,  0.1692, -0.1237, -0.0853],
        [-0.0868, -0.0755,  0.0496,  ...,  0.0122, -0.0839, -0.0386],
        [-0.0360,  0.1917, -0.0114,  ...,  0.0831,  0.1298, -0.0448],
        ...,
        [ 0.0352, -0.0276,  0.0129,  ..., -0.0883,  0.1963,  0.1714],
        [-0.0503,  0.1160, -0.0037,  ...,  0.0530, -0.0069,  0.1725],
        [-0.0470, -0.0585, -0.0818,  ...,  0.0687, -0.0058, -0.0183]],
       device='cuda:0') torch.Size([128, 32])
recurrent_blocks.3.bias_ih_l0_reverse tensor([-0.0111,  0.1132,  0.0922, -0.0872,  0.1288,  0.0421,  0.1369,  0.0564,
         0.0906, -0.0278, -0.0909, -0.0811,  0.0902,  0.0751,  0.0153,  0.0778,
         0.0189, -0.1535,  0.0168,  0.0897,  0.0199,  0.0252, -0.0422, -0.0643,
         0.0246, -0.1409,  0.0708,  0.1860, -0.1661,  0.0678, -0.0114, -0.0251,
         0.0894,  0.0284,  0.1632, -0.0811, -0.0650, -0.1101, -0.0009, -0.1718,
        -0.1586, -0.0170, -0.0496,  0.1101, -0.1422,  0.1366, -0.1199, -0.0376,
        -0.0863,  0.1084, -0.0660,  0.0793,  0.0712,  0.0430, -0.1260,  0.0919,
         0.1136, -0.0601, -0.0101,  0.1063, -0.0084,  0.0838, -0.1025, -0.1305,
        -0.1468, -0.1681,  0.1906, -0.0542, -0.1253, -0.0969, -0.0747, -0.0462,
         0.1672,  0.0140, -0.1376,  0.0019, -0.0667, -0.1225,  0.0257, -0.1734,
        -0.0766,  0.2015,  0.1233,  0.0098,  0.1021, -0.1259,  0.1343, -0.1835,
         0.0043, -0.0026, -0.1097,  0.1286,  0.1441,  0.0392, -0.1252, -0.0948,
         0.1204, -0.1140, -0.0185, -0.0559,  0.1601, -0.1538,  0.0286, -0.1537,
        -0.0827,  0.1056,  0.1325,  0.0795, -0.1101,  0.0993,  0.0581, -0.1081,
        -0.1952, -0.0764,  0.1560, -0.1624, -0.0655,  0.0910,  0.0073, -0.0837,
        -0.0453, -0.0882, -0.0942,  0.1162,  0.1077, -0.1950,  0.0422, -0.0953],
       device='cuda:0') torch.Size([128])
recurrent_blocks.3.bias_hh_l0_reverse tensor([-0.0196, -0.1209, -0.0586, -0.0475, -0.0436, -0.1509,  0.1538,  0.1117,
         0.1154, -0.1720,  0.0313, -0.0184, -0.0594, -0.0935,  0.0668, -0.0782,
         0.1552, -0.1007,  0.1208,  0.0997,  0.1154,  0.1162,  0.1208, -0.1063,
        -0.0394,  0.0884,  0.0083, -0.0518, -0.1188, -0.0477,  0.0672,  0.0992,
        -0.0961, -0.1574,  0.1660, -0.0003, -0.0378, -0.0121,  0.0960, -0.0418,
         0.0150,  0.1222,  0.0060,  0.1334,  0.0821, -0.1366, -0.0144, -0.0853,
        -0.0375, -0.0970, -0.1340,  0.0881, -0.0998,  0.1355, -0.1381,  0.0733,
        -0.1973, -0.0078, -0.0390,  0.1143, -0.0428,  0.1082,  0.0721, -0.0402,
         0.1375,  0.0844, -0.1347,  0.0631, -0.1896, -0.0323, -0.1724,  0.1769,
        -0.0463,  0.1176,  0.1719, -0.1022,  0.1283, -0.1599, -0.1761, -0.0617,
         0.1008, -0.0021,  0.1154, -0.0105,  0.1132, -0.1366, -0.1235,  0.0790,
         0.0446, -0.1469,  0.1720, -0.0173, -0.1684,  0.0477, -0.1034, -0.0943,
        -0.0182,  0.0497, -0.1082, -0.0933, -0.1529,  0.1219,  0.1020,  0.0173,
        -0.0574, -0.0335, -0.1125, -0.1573, -0.0312, -0.0279,  0.1016, -0.0477,
         0.1248,  0.0759, -0.0674,  0.0987,  0.0988,  0.0979,  0.0907, -0.1437,
         0.1118, -0.0371, -0.0663,  0.1317,  0.1374,  0.0410,  0.0133, -0.1638],
       device='cuda:0') torch.Size([128])
fc_blocks.0.0.weight tensor([[ 0.0866,  0.0717, -0.0472,  ..., -0.1297, -0.0085,  0.0008],
        [ 0.0146,  0.0431, -0.0467,  ...,  0.0705, -0.0692, -0.0167],
        [ 0.0542,  0.0600, -0.0179,  ..., -0.1068,  0.0888,  0.0621],
        ...,
        [-0.0669,  0.0504,  0.0697,  ...,  0.1373, -0.0021,  0.0884],
        [-0.1276, -0.0137, -0.0795,  ...,  0.0034,  0.0625, -0.1034],
        [ 0.0558,  0.1181, -0.0735,  ...,  0.0705,  0.1316,  0.0603]],
       device='cuda:0') torch.Size([32, 64])
fc_blocks.0.0.bias tensor([ 0.0574,  0.0879,  0.1145, -0.0985, -0.1253,  0.0134, -0.0110,  0.0842,
        -0.0349,  0.0331, -0.0481, -0.0243, -0.1272, -0.0195, -0.0637,  0.0128,
         0.0309,  0.0517, -0.0113, -0.0291,  0.0648, -0.0220, -0.0865, -0.1396,
         0.1457, -0.0550,  0.0234,  0.0997, -0.0430, -0.0398,  0.0825, -0.0268],
       device='cuda:0') torch.Size([32])
fc_blocks.1.0.weight tensor([[-6.9394e-02,  6.7455e-02,  5.0533e-02,  1.5627e-01,  1.5006e-01,
          4.4388e-02, -6.8545e-02, -6.1903e-02,  1.1571e-01,  1.0046e-01,
          1.4401e-01, -4.7113e-02, -1.3366e-01, -9.0513e-02, -1.1813e-01,
         -1.2184e-01, -1.6357e-01,  1.1002e-01, -1.4430e-01, -8.8485e-02,
          1.3225e-02,  1.4754e-01,  3.6940e-02,  9.4435e-02,  6.0740e-02,
          1.1248e-01,  7.5936e-02,  7.9541e-02, -4.7138e-02, -2.8488e-02,
         -1.3109e-01, -3.0371e-02],
        [-3.2108e-02,  1.5080e-01,  1.0572e-01,  9.7282e-02, -4.3849e-02,
          1.4662e-01, -7.8498e-02,  7.2156e-02,  3.3599e-04, -1.4539e-01,
         -7.2112e-02, -7.2445e-02,  4.9695e-02,  1.7525e-03, -7.1918e-02,
         -5.5024e-02, -3.5495e-02,  1.2709e-01,  3.6917e-02, -1.4673e-01,
         -3.4070e-02, -1.3903e-01,  1.8484e-01, -1.4590e-01, -9.5792e-02,
          1.1509e-01,  7.0209e-02, -1.4677e-01,  4.7277e-02,  1.1959e-01,
         -1.4160e-01,  1.4564e-01],
        [ 1.1070e-01, -1.9029e-01, -5.8843e-02, -1.4182e-01, -1.3156e-01,
          3.1881e-03, -8.4704e-02, -9.3518e-02,  3.7473e-02,  1.4413e-01,
          6.7931e-02, -8.0120e-02, -1.8262e-02,  1.4759e-01, -9.1616e-02,
         -1.9035e-01, -5.9987e-02,  1.2203e-01,  1.5332e-01, -8.7017e-02,
          3.1159e-02,  1.0951e-01,  2.5563e-02,  1.3029e-01,  2.2239e-02,
          6.2473e-02, -4.2858e-02, -1.4966e-01, -1.7191e-01,  3.0161e-02,
          1.1593e-01, -1.0656e-01],
        [ 1.4866e-01,  7.8248e-02,  7.6980e-02,  1.3988e-02, -1.6815e-02,
          4.1420e-02,  1.9878e-01,  1.3895e-01, -5.9041e-02, -7.7124e-03,
          4.2216e-02, -7.0922e-02, -9.9284e-02,  2.1513e-02, -1.1640e-01,
          1.4956e-01,  1.8516e-01,  9.3402e-02, -5.4393e-02,  1.0911e-01,
         -1.3002e-01,  8.7690e-02,  9.6673e-02,  5.2746e-02,  5.3007e-02,
          1.2122e-01,  8.5686e-02,  3.7925e-02,  2.5501e-02, -6.1507e-02,
         -2.7146e-02,  1.3951e-01],
        [-1.2101e-01, -1.4088e-02,  4.4334e-02, -1.0021e-01, -1.5916e-01,
         -6.9480e-02, -9.6850e-03, -8.1099e-02, -3.1888e-02,  1.0789e-01,
          1.3068e-01,  6.4399e-02, -1.2589e-02,  1.6500e-01, -1.7796e-01,
          1.9494e-01,  1.6740e-02, -1.4269e-01, -1.0198e-01, -8.3855e-02,
          4.9865e-02,  4.9881e-02, -1.0084e-01,  4.3860e-02,  4.2156e-02,
          1.1969e-01, -1.8203e-01,  3.7869e-02,  1.7735e-01,  4.3046e-02,
          7.3905e-02,  1.1487e-01],
        [-5.5273e-02,  1.1021e-02,  1.0200e-01,  9.4689e-02,  9.4130e-02,
          1.6355e-03,  1.3658e-01, -9.9328e-02,  1.4155e-01,  8.8947e-03,
          1.7406e-01,  6.6411e-02, -1.2838e-01, -1.7410e-02,  1.9377e-01,
          7.3961e-02,  5.4980e-02, -1.1900e-01,  1.2947e-02, -3.1956e-02,
          1.2077e-01,  3.9208e-02, -1.0631e-01,  1.7409e-02, -2.8156e-02,
         -5.4912e-02, -9.3412e-02, -2.7604e-02,  1.2488e-01,  1.5345e-01,
          2.0040e-02, -1.3773e-01],
        [-1.0977e-01, -1.8412e-01, -9.7137e-03,  3.9794e-02,  6.0285e-02,
          4.4160e-02, -1.1829e-01,  3.1899e-02,  1.0814e-01, -1.6071e-01,
         -6.4105e-02, -1.2512e-01, -1.7312e-01, -1.2518e-02,  6.7441e-02,
          2.1014e-04, -1.1080e-01,  1.1240e-01,  1.1725e-01,  8.7376e-02,
          8.2670e-02, -1.1419e-01,  1.2677e-01, -5.9912e-03, -3.3667e-02,
         -3.3855e-02,  6.7742e-02, -7.8186e-02,  1.5922e-01, -1.5167e-01,
          2.7189e-02,  9.4303e-02],
        [ 1.7434e-01, -1.1654e-01, -6.1677e-02,  8.6752e-02, -8.2608e-02,
         -3.8967e-02, -3.3268e-02,  1.9956e-02, -6.7386e-03,  1.1027e-02,
          1.4608e-01,  6.0239e-02, -1.0396e-01,  8.9620e-02, -6.3706e-02,
          5.9402e-02,  9.6744e-02,  1.6023e-01, -1.1542e-01,  1.6000e-02,
          1.8146e-01,  2.3145e-02,  4.3320e-03,  1.9143e-01,  9.3247e-02,
         -1.2493e-01,  1.5575e-01,  1.2826e-01, -1.3041e-01,  1.0501e-01,
          8.8213e-02, -3.2578e-02],
        [-1.5083e-01, -5.9926e-02,  8.6145e-02, -3.1516e-02,  1.8173e-01,
          1.3269e-01,  5.9512e-02, -7.2788e-02,  6.1112e-02,  7.6681e-02,
          1.3705e-01,  1.4111e-01,  1.6210e-01,  2.8019e-02,  1.4525e-01,
          1.2300e-02, -2.8811e-02,  3.4461e-02, -5.2857e-02, -1.7742e-02,
          1.2976e-01,  1.2592e-01, -1.9022e-01,  1.2604e-01,  1.4383e-01,
          1.1024e-02,  7.4606e-02,  9.2797e-02,  1.3291e-01,  1.4746e-01,
         -5.1765e-02,  2.4852e-02],
        [-4.8506e-02,  9.9588e-02, -8.5950e-02,  1.6848e-01,  1.6721e-01,
          1.5611e-01, -1.7006e-01, -6.3954e-02,  5.2591e-02, -7.2121e-03,
          8.7000e-02,  1.4644e-02,  4.0838e-02, -7.3754e-02,  3.6353e-02,
         -3.3641e-02,  1.1052e-01, -1.1421e-01,  5.4020e-02,  4.1864e-02,
          2.8852e-02, -7.3953e-02,  6.3846e-02, -7.4376e-02, -1.4186e-01,
          6.8111e-03,  9.0045e-02,  1.2409e-02,  1.4398e-01, -8.2486e-02,
          1.4048e-01,  5.7055e-02],
        [-1.1306e-01, -7.2659e-02,  9.0746e-02, -1.6974e-01,  1.0272e-01,
          7.5192e-02, -1.2631e-01,  1.4447e-01,  1.8965e-01, -4.2386e-02,
          8.6483e-02, -1.1537e-01, -1.0160e-01,  1.2714e-01, -1.0409e-01,
          1.1137e-01,  2.0429e-01,  1.0337e-01,  7.8737e-02,  1.2050e-01,
          1.6292e-01, -8.0580e-02, -7.6564e-03, -6.6672e-02,  1.6217e-01,
          1.0027e-01, -1.4605e-01, -1.3108e-01,  2.5027e-02, -2.0133e-02,
         -1.7436e-01,  5.5724e-02],
        [ 1.0143e-01,  4.0275e-02,  3.8836e-02, -6.7543e-02,  5.5000e-02,
         -1.2989e-01,  1.0640e-01,  1.8979e-01,  1.4352e-01,  1.3670e-01,
          5.9411e-02, -2.3986e-02, -1.2182e-04,  2.3713e-02, -3.4515e-02,
         -1.4374e-01, -1.0096e-01,  9.4921e-02,  9.7742e-02, -7.0555e-02,
          9.8520e-02,  7.1092e-02,  1.9411e-01, -1.4473e-02, -3.1941e-02,
          1.8756e-01,  2.9208e-02,  1.6590e-01, -1.2941e-01, -1.3241e-01,
          1.7556e-01,  1.3708e-01],
        [-9.8462e-02,  1.6851e-01, -6.5567e-02,  1.6866e-01, -1.1762e-01,
          1.3141e-01,  7.0677e-02,  1.2441e-01,  1.2577e-01, -9.7889e-02,
         -8.7586e-02, -1.0455e-01,  1.5254e-01,  6.3142e-02,  1.6611e-01,
         -6.4037e-02, -8.0786e-02,  1.4891e-01, -9.1891e-02, -1.4830e-01,
          8.4697e-02,  1.0495e-01, -1.3467e-01, -9.3986e-02,  7.5109e-02,
         -8.2706e-03,  1.4240e-01, -7.3142e-02,  9.8841e-02,  1.5404e-01,
          3.6156e-02,  1.4524e-01],
        [-5.3985e-02,  1.2447e-01,  1.2601e-01, -1.7306e-01, -2.3339e-02,
          9.2133e-02, -1.4942e-01,  7.3103e-02, -6.6470e-02, -1.1988e-01,
          1.3172e-01,  4.0418e-03,  1.1315e-01,  8.4853e-02,  1.3314e-01,
         -1.8464e-01, -1.7153e-01,  1.5079e-01,  1.1875e-02,  2.3774e-02,
          7.9146e-02, -9.1703e-02, -4.3187e-02,  9.6322e-02, -4.8746e-03,
          9.3817e-02,  6.7888e-02, -1.1780e-02, -9.4440e-03,  8.5358e-02,
         -7.4024e-02, -1.1559e-01],
        [-1.0527e-01, -1.5585e-01, -8.2079e-02,  6.3476e-02,  3.6172e-02,
         -4.0955e-02,  1.4856e-01, -4.1838e-03,  3.3273e-03, -1.8856e-01,
         -1.2940e-01, -1.7007e-01,  1.5037e-03, -4.3316e-02, -6.0627e-02,
         -8.9240e-03,  8.8548e-02, -6.1251e-02,  8.3929e-02,  1.2207e-01,
          3.3549e-02, -2.5494e-02, -1.1682e-01, -1.5711e-01, -1.0640e-01,
         -4.2515e-02, -1.2420e-01,  4.3799e-02, -3.8531e-02, -5.7196e-02,
          2.1485e-02, -1.3993e-01],
        [-1.8006e-01, -4.8027e-02, -1.7600e-01,  2.2010e-02,  1.6759e-01,
          8.8855e-03,  5.9017e-02,  1.3800e-01,  1.0401e-01, -1.8457e-02,
         -1.6221e-01,  1.6399e-01,  1.2122e-01, -9.0886e-02, -1.8529e-02,
          9.4122e-02,  1.4121e-01,  1.1797e-01,  1.1065e-01,  1.3865e-01,
         -9.0497e-02,  1.6810e-01,  1.1110e-01,  2.1807e-02, -1.4731e-01,
          1.3665e-01,  6.4237e-02,  7.0727e-02, -8.6825e-02, -1.0757e-01,
          1.4821e-01, -7.9356e-02]], device='cuda:0') torch.Size([16, 32])
fc_blocks.1.0.bias tensor([ 1.3353e-01,  7.6148e-02, -9.9280e-02,  1.4043e-01, -2.8657e-02,
        -8.2316e-03, -4.0676e-02, -8.8388e-02, -8.3798e-02,  3.3459e-02,
         5.1788e-06,  1.5499e-01, -1.1633e-02,  3.3813e-02,  7.5911e-02,
        -1.5220e-01], device='cuda:0') torch.Size([16])
fc_blocks.2.0.weight tensor([[-0.0730,  0.1334, -0.1648,  0.1243,  0.1143,  0.1419, -0.0570,  0.0306,
         -0.0745, -0.0588,  0.1660,  0.0916,  0.0529, -0.1040, -0.1749, -0.2126],
        [-0.2206,  0.1186, -0.0407, -0.1722, -0.0949,  0.0071, -0.0439, -0.0474,
          0.1458, -0.1788, -0.0549, -0.1847, -0.1493, -0.1940, -0.1133, -0.2344],
        [ 0.0507, -0.0544,  0.1873, -0.0668,  0.2623,  0.0856, -0.1670,  0.2524,
         -0.2470,  0.0090, -0.1809, -0.0901,  0.0434, -0.0165,  0.0037,  0.1299],
        [ 0.0540, -0.1435,  0.1306, -0.1690, -0.1545,  0.0497, -0.2202,  0.1929,
         -0.0644, -0.0100,  0.0244, -0.0896,  0.2098,  0.1136,  0.1264,  0.1989],
        [-0.2452, -0.2507,  0.0953,  0.0315,  0.0650,  0.2614,  0.1686, -0.2498,
          0.0783,  0.1786, -0.0604,  0.1744, -0.0651, -0.0629,  0.1545, -0.2208],
        [ 0.0564,  0.0441,  0.2644, -0.0303, -0.0350,  0.1354,  0.0233, -0.1654,
          0.2288, -0.1938,  0.1081,  0.0910, -0.1621, -0.1234,  0.2321,  0.1296],
        [ 0.0756,  0.0089, -0.2580, -0.0007,  0.1680,  0.0140,  0.0250, -0.1290,
          0.1519, -0.2009,  0.1572, -0.1396, -0.1705, -0.1692,  0.1668, -0.2416],
        [-0.2716, -0.2121, -0.2595,  0.0710,  0.0008,  0.2699, -0.2056,  0.0526,
          0.0340,  0.1439,  0.1178,  0.1588, -0.2129, -0.0435, -0.1624, -0.0620]],
       device='cuda:0') torch.Size([8, 16])
fc_blocks.2.0.bias tensor([ 0.2356, -0.0719, -0.2677, -0.1327, -0.2475, -0.0927, -0.1237, -0.1254],
       device='cuda:0') torch.Size([8])
fc_blocks.3.0.weight tensor([[ 0.2002,  0.3102,  0.1594,  0.0368, -0.1265,  0.1785,  0.1178, -0.2414],
        [-0.1580, -0.0019,  0.2290, -0.0987,  0.1857,  0.1244,  0.2325,  0.1108],
        [ 0.1129,  0.0461,  0.0248, -0.1468, -0.0973,  0.1293,  0.0670, -0.1163],
        [ 0.0910,  0.3280, -0.0711,  0.2955,  0.1550,  0.0457,  0.2413,  0.2708]],
       device='cuda:0') torch.Size([4, 8])
fc_blocks.3.0.bias tensor([ 0.2228,  0.0319,  0.3598, -0.3689], device='cuda:0') torch.Size([4])
fc_blocks.4.0.weight tensor([[-0.2543,  0.0209,  0.1875, -0.5135],
        [ 0.4570, -0.2248,  0.0189, -0.4693]], device='cuda:0') torch.Size([2, 4])
fc_blocks.4.0.bias tensor([-0.3539, -0.4558], device='cuda:0') torch.Size([2])
Train Loss : 3348.671, Val Loss : 14910.279
======> Trajectory Loss : 3212.323, Gravity Loss : 0.001, EndOfTrajectory Loss : 1.363, BelowGroundPenalize Loss : 0.000
===> [Minibatch 4/129].........recurrent_blocks.0.weight_ih_l0 tensor([[ 1.3897e-01,  1.4933e-02, -7.1168e-02],
        [-6.4738e-02, -7.1784e-03,  1.5976e-01],
        [ 2.3804e-02,  6.1819e-02,  7.3049e-02],
        [-7.8597e-03, -6.8987e-02,  2.9977e-02],
        [-8.3893e-04, -5.8227e-02, -1.0637e-01],
        [ 5.4728e-02, -1.0208e-01,  1.3675e-01],
        [-7.6156e-02, -1.3957e-01,  1.4533e-01],
        [ 1.0741e-01,  1.4738e-01, -6.7953e-02],
        [-1.6913e-01, -9.4453e-02, -2.6474e-02],
        [ 1.5412e-01,  6.7096e-02,  9.4469e-02],
        [-1.1970e-01, -1.6940e-01,  3.5018e-02],
        [-4.4653e-02,  1.5900e-01, -6.0384e-02],
        [-1.4780e-01,  1.6863e-01,  1.0163e-01],
        [-1.6856e-01, -9.7044e-02,  1.4261e-01],
        [-1.4830e-01,  8.4815e-02, -9.1807e-02],
        [-1.2719e-01,  1.7999e-02,  1.8697e-01],
        [ 8.5532e-02, -1.3009e-01, -1.2529e-01],
        [ 5.9025e-02,  1.7225e-01, -3.7080e-02],
        [-4.6334e-02,  1.7037e-02, -6.5129e-02],
        [-1.8481e-01, -1.6114e-01, -4.8853e-02],
        [-6.1945e-02,  8.9164e-02,  1.4971e-01],
        [ 2.5953e-02,  5.5696e-02,  1.9569e-01],
        [-3.2333e-02, -5.4322e-02, -1.4131e-01],
        [ 1.4884e-03, -1.1510e-01, -4.2363e-02],
        [-1.4463e-01, -1.2141e-01,  2.2098e-02],
        [-2.0326e-01, -1.1500e-01, -9.0874e-02],
        [-4.2603e-02,  1.0073e-01,  1.1395e-01],
        [ 1.3310e-01, -1.8012e-01, -1.7686e-01],
        [ 2.0973e-02, -5.5691e-02,  8.3755e-02],
        [-1.1368e-01, -8.5992e-02,  1.3210e-01],
        [ 1.7593e-02, -9.9202e-02, -1.6072e-01],
        [ 2.1034e-02,  2.8218e-02, -5.2886e-02],
        [-1.4475e-01,  4.4671e-02, -1.5163e-01],
        [ 7.0489e-02,  5.4719e-02, -1.9244e-02],
        [-4.5865e-02,  1.4600e-01,  4.1690e-02],
        [ 1.7083e-01,  1.4161e-01, -9.1725e-02],
        [-1.0062e-01,  1.7161e-02,  5.4320e-02],
        [-6.3965e-03, -9.6819e-02, -1.5556e-01],
        [-5.5089e-02, -1.4106e-01,  5.2455e-02],
        [ 1.3407e-01,  1.0516e-01,  1.3764e-01],
        [ 1.4635e-01, -5.1557e-02, -4.4304e-02],
        [ 4.6677e-02,  1.0398e-01, -1.2733e-01],
        [-9.2731e-02,  1.2480e-01,  7.7113e-02],
        [ 1.7711e-01,  1.4417e-01,  1.9955e-01],
        [-1.4882e-01, -8.6698e-04, -1.2634e-01],
        [-4.5369e-02, -6.4858e-02, -1.2387e-01],
        [-7.5703e-02, -1.2997e-02,  1.0545e-01],
        [-1.3201e-01,  2.8344e-02, -6.4362e-02],
        [ 8.2309e-02, -6.8827e-02, -1.4152e-02],
        [-4.0146e-02, -1.3712e-01,  6.8780e-02],
        [-1.7510e-01,  1.6549e-01,  1.8938e-02],
        [-1.6065e-02, -1.3880e-01, -3.6994e-02],
        [-1.6524e-01, -3.4356e-02,  1.8084e-01],
        [ 3.8534e-02, -7.4908e-03,  7.3618e-02],
        [-1.2144e-01, -1.3075e-01,  1.5156e-01],
        [ 1.4793e-01,  1.2956e-01,  1.7807e-01],
        [-1.7602e-01,  1.5854e-02, -1.3507e-01],
        [ 6.3546e-02, -1.3001e-01, -1.5413e-01],
        [ 8.0115e-02,  1.2649e-01, -2.3418e-02],
        [ 1.4208e-02, -6.1050e-02,  1.2702e-01],
        [ 1.1900e-01,  8.1611e-02,  1.9204e-01],
        [-1.5219e-01, -1.0985e-01, -4.4595e-02],
        [-1.1244e-01,  3.7902e-02, -1.0092e-01],
        [-1.4272e-02, -1.6657e-01, -5.1421e-02],
        [ 6.0437e-02,  1.3633e-01,  6.8714e-03],
        [-1.6182e-01,  1.0503e-01, -8.8078e-02],
        [-1.0880e-02, -1.9868e-01, -1.6317e-01],
        [ 9.2410e-02,  1.3496e-01, -4.0968e-02],
        [-1.2012e-01, -1.6004e-01, -4.4444e-02],
        [-4.0496e-02, -1.7761e-01,  1.0350e-01],
        [-2.0852e-02, -1.9906e-02, -6.9732e-02],
        [ 1.0805e-01,  4.2465e-02,  9.3147e-03],
        [-1.5553e-01,  1.7818e-01,  1.4962e-01],
        [-1.4416e-04, -1.3851e-01,  2.2691e-03],
        [-1.1512e-01, -1.2183e-01, -1.2975e-01],
        [ 1.2287e-01,  9.0387e-02,  5.2159e-02],
        [ 8.4630e-02,  1.4933e-01, -1.7000e-01],
        [-1.5542e-01,  1.6065e-01,  6.6226e-02],
        [-1.5622e-01,  9.0017e-02, -3.3513e-02],
        [ 2.4072e-02,  1.0945e-01, -1.3414e-01],
        [-6.7988e-02, -1.8313e-02, -6.8162e-02],
        [ 1.4215e-01, -1.1176e-01,  1.2032e-01],
        [ 3.7908e-02,  1.4713e-01, -8.0748e-02],
        [ 6.1815e-02,  1.6822e-01,  9.2354e-02],
        [-1.6546e-01, -8.8046e-02,  3.2225e-02],
        [-1.8786e-01,  1.6807e-01, -4.5513e-03],
        [-1.2050e-01,  1.6414e-01, -1.2931e-01],
        [ 4.2905e-02, -1.2771e-01, -1.9310e-02],
        [ 4.2045e-02,  1.1022e-01, -5.9621e-02],
        [ 1.0912e-01, -9.0742e-02, -4.8795e-03],
        [-1.8671e-01,  1.4333e-01, -1.2533e-01],
        [-1.7721e-01,  5.6583e-02,  8.8127e-02],
        [ 2.4080e-02, -4.8418e-02,  1.2565e-01],
        [ 5.0894e-02, -1.5591e-01,  1.1282e-01],
        [-1.0139e-01,  1.5785e-02,  6.1049e-02],
        [-1.0047e-01, -3.4109e-02,  1.6997e-01],
        [-9.3863e-02, -5.6111e-02, -7.8752e-02],
        [-1.8172e-01, -1.4940e-01,  1.0314e-01],
        [ 1.4046e-01, -5.4076e-02, -1.7455e-01],
        [-6.9373e-02,  4.5036e-02,  1.4964e-01],
        [-1.3330e-01, -7.1079e-02, -1.8744e-01],
        [ 1.3956e-01,  6.8450e-02, -1.0010e-01],
        [-2.6522e-02,  1.7464e-01, -1.2383e-01],
        [ 1.6316e-02,  1.0826e-02, -8.1189e-02],
        [-7.2672e-02, -9.1220e-02,  1.0127e-01],
        [ 8.9136e-02,  3.6995e-02,  1.2212e-01],
        [-1.2800e-01,  1.6400e-02,  1.0407e-01],
        [ 1.6740e-01,  1.1272e-01,  4.4441e-02],
        [-7.7506e-02, -1.2188e-01, -1.0893e-01],
        [ 1.4006e-01, -1.1282e-01,  1.2262e-01],
        [-5.2304e-03, -2.0818e-02, -5.9386e-02],
        [ 4.8809e-02,  6.1953e-02, -4.6327e-03],
        [ 1.6190e-01, -8.9027e-02,  1.8021e-01],
        [-1.3276e-01, -1.0098e-01, -5.0042e-02],
        [-6.7477e-02, -2.9227e-03, -6.3685e-02],
        [ 1.1066e-01,  1.1247e-01,  8.0509e-02],
        [ 6.0637e-02,  8.5099e-02, -1.1301e-01],
        [ 1.5947e-01, -9.8855e-02,  1.5020e-01],
        [ 2.3824e-02, -1.4631e-01,  1.2756e-01],
        [-9.4839e-02, -7.3378e-02, -1.0278e-01],
        [ 4.9311e-02, -1.8209e-01, -5.4783e-02],
        [-7.2794e-02, -1.1777e-02,  8.1338e-02],
        [ 1.0425e-01, -1.1870e-01,  9.4049e-02],
        [-1.6066e-01, -1.8088e-01,  1.2927e-01],
        [ 1.6296e-01, -1.7626e-01, -9.2065e-02],
        [-5.1791e-02,  9.0983e-02,  4.2063e-02],
        [ 1.5350e-01, -1.5285e-01,  1.2848e-01],
        [ 4.5267e-02,  4.8299e-02, -5.5049e-02]], device='cuda:0') torch.Size([128, 3])
recurrent_blocks.0.weight_hh_l0 tensor([[ 0.0141,  0.1149, -0.1453,  ...,  0.0836,  0.1123,  0.1191],
        [ 0.0373,  0.0134,  0.1000,  ...,  0.1378,  0.0617, -0.0957],
        [ 0.0422, -0.0892, -0.0119,  ..., -0.1415, -0.1520, -0.0262],
        ...,
        [-0.1310,  0.0089, -0.0081,  ..., -0.0731,  0.0878, -0.0164],
        [ 0.0767, -0.0081, -0.1067,  ...,  0.0449, -0.0563,  0.1595],
        [-0.0314,  0.1011, -0.0561,  ..., -0.1402,  0.0221, -0.0673]],
       device='cuda:0') torch.Size([128, 32])
recurrent_blocks.0.bias_ih_l0 tensor([-0.0583,  0.0519, -0.1780,  0.1069,  0.1020,  0.1828, -0.1320, -0.0209,
         0.0890, -0.0047, -0.1486,  0.1062, -0.1721,  0.0236,  0.1009,  0.0864,
         0.0669,  0.0803, -0.0190,  0.0936, -0.0392,  0.0075, -0.1126,  0.1106,
        -0.1510,  0.1600,  0.0807,  0.0008,  0.0629,  0.0911, -0.1156, -0.0636,
         0.0177, -0.1062,  0.0482,  0.1280, -0.0331, -0.1086,  0.0703,  0.0849,
        -0.0070,  0.0496,  0.1011,  0.1503, -0.1528,  0.0258, -0.0293, -0.0996,
         0.0813, -0.0037,  0.0868,  0.0078,  0.0708,  0.0072, -0.0862,  0.0446,
         0.1502,  0.0126,  0.1058, -0.1516, -0.1304,  0.0685,  0.0246,  0.0453,
        -0.0328,  0.0968, -0.0898,  0.1143,  0.1591,  0.0463,  0.1116, -0.0026,
        -0.1082,  0.0850,  0.1635,  0.1267,  0.0067,  0.0751, -0.0112, -0.0964,
         0.0947,  0.0593,  0.0801, -0.1273,  0.0035, -0.1966,  0.0630,  0.1198,
        -0.1495, -0.1428,  0.1517, -0.0633,  0.2039, -0.1505, -0.1677,  0.1305,
         0.0433,  0.1448,  0.0406,  0.0630, -0.0795,  0.0318, -0.1358,  0.0668,
        -0.0522,  0.0333,  0.2022,  0.1519,  0.0009,  0.0177, -0.0891,  0.0438,
        -0.0418, -0.0399,  0.0279, -0.1452,  0.0588,  0.0682,  0.0400, -0.0779,
        -0.0932,  0.1377,  0.0184, -0.1013,  0.1592, -0.0698,  0.1491, -0.0967],
       device='cuda:0') torch.Size([128])
recurrent_blocks.0.bias_hh_l0 tensor([ 0.0333, -0.0632, -0.0525,  0.0923, -0.1107,  0.1544,  0.0483,  0.0535,
        -0.1724, -0.0108,  0.1295,  0.0121,  0.0069, -0.1760, -0.0942, -0.0112,
         0.0588,  0.0885, -0.1688,  0.1077, -0.0075,  0.1763,  0.0341,  0.0856,
         0.1095, -0.1651, -0.0887,  0.1187,  0.0124,  0.0099, -0.0406, -0.1329,
        -0.1211,  0.1609, -0.1001, -0.1169,  0.0280,  0.0785, -0.1506, -0.0032,
         0.0999,  0.0384, -0.0347,  0.1685, -0.1547,  0.0991,  0.0597,  0.0298,
        -0.1064, -0.1640,  0.0258, -0.0927,  0.0927,  0.0484, -0.0719,  0.1423,
        -0.1494,  0.1051,  0.0078,  0.0999,  0.0714,  0.1236, -0.1057,  0.0602,
        -0.0004,  0.1869, -0.1672,  0.0416,  0.0638, -0.0582, -0.1459,  0.1193,
         0.0660, -0.1845,  0.0998,  0.1433,  0.0270, -0.1380,  0.2096, -0.0101,
         0.0845,  0.1604,  0.1501, -0.1447,  0.1133,  0.0901, -0.1559,  0.0326,
         0.0139, -0.1077,  0.1421,  0.1344, -0.0809, -0.0474, -0.0472,  0.0634,
         0.0404, -0.1301,  0.1425,  0.1306, -0.0467, -0.0865, -0.0401,  0.1481,
         0.1433,  0.1899,  0.0702,  0.0410,  0.0117, -0.0183, -0.0250, -0.0348,
        -0.0176, -0.1575, -0.1388,  0.0027, -0.0585,  0.1491, -0.0608, -0.0683,
        -0.1617,  0.1306,  0.1039, -0.0038, -0.0624, -0.0685, -0.0867,  0.0477],
       device='cuda:0') torch.Size([128])
recurrent_blocks.0.weight_ih_l0_reverse tensor([[ 0.0776, -0.1616, -0.0383],
        [ 0.0567, -0.0412, -0.0673],
        [-0.0056,  0.0586,  0.0424],
        [-0.1856, -0.0577,  0.0996],
        [ 0.1884,  0.1656, -0.0664],
        [-0.1003, -0.0297,  0.1735],
        [ 0.0227,  0.0758, -0.1199],
        [ 0.0654,  0.0430,  0.0926],
        [ 0.0964, -0.0130, -0.1438],
        [-0.0660,  0.2099, -0.2082],
        [-0.0631,  0.0517,  0.0330],
        [-0.1730,  0.0428, -0.1847],
        [ 0.1186,  0.1118, -0.0137],
        [-0.0173, -0.0070,  0.1092],
        [ 0.1092, -0.0972, -0.0095],
        [-0.0887, -0.0683, -0.0253],
        [-0.1014, -0.0072,  0.0686],
        [-0.0950, -0.0068, -0.1038],
        [-0.1730,  0.0288, -0.1076],
        [ 0.1222, -0.0669,  0.1427],
        [-0.0030,  0.1363, -0.1491],
        [-0.1023, -0.0998, -0.0303],
        [-0.1193,  0.1012,  0.0162],
        [ 0.0312,  0.1351, -0.1487],
        [-0.1473,  0.0486, -0.0267],
        [-0.1674, -0.1995, -0.0016],
        [-0.0798,  0.0490, -0.1164],
        [-0.1794,  0.1165,  0.0462],
        [-0.0433,  0.1737,  0.1988],
        [ 0.1118,  0.0336, -0.1637],
        [-0.0538,  0.1651, -0.1732],
        [-0.1383, -0.1557, -0.0894],
        [-0.1500, -0.0614,  0.0625],
        [-0.1502,  0.0569,  0.1563],
        [-0.1493,  0.1818,  0.1161],
        [-0.0308, -0.0842, -0.1227],
        [ 0.1596,  0.1188,  0.1521],
        [-0.0599,  0.0989,  0.1097],
        [ 0.0581,  0.0336,  0.0702],
        [-0.1344, -0.0425,  0.0534],
        [ 0.0998,  0.0473,  0.0272],
        [ 0.1901, -0.0229, -0.1180],
        [-0.1754, -0.0329, -0.1539],
        [ 0.1338,  0.1765, -0.0765],
        [ 0.0377,  0.1795,  0.0320],
        [ 0.1702, -0.1424, -0.1222],
        [-0.1434,  0.1201, -0.1631],
        [-0.0038, -0.2012, -0.0442],
        [-0.1614, -0.1335, -0.1728],
        [-0.0881,  0.1680,  0.1389],
        [ 0.0250,  0.1442,  0.1020],
        [ 0.0703, -0.0790,  0.0575],
        [-0.0262, -0.0579,  0.0226],
        [ 0.0304, -0.1866,  0.1975],
        [-0.1145,  0.1439, -0.1839],
        [-0.0294, -0.0492,  0.1235],
        [-0.0156,  0.0498,  0.1155],
        [ 0.0473, -0.0931,  0.1660],
        [-0.0266,  0.0647,  0.0393],
        [-0.1728,  0.0510, -0.0468],
        [-0.0803,  0.1174,  0.1326],
        [-0.1216, -0.0168, -0.2029],
        [-0.0585,  0.0438, -0.0667],
        [-0.1956,  0.1147,  0.1399],
        [ 0.1938, -0.0409, -0.1544],
        [ 0.0134, -0.1815, -0.0525],
        [-0.1064,  0.0362, -0.0720],
        [-0.1618, -0.1380, -0.1453],
        [-0.0722, -0.1245, -0.1452],
        [ 0.0033, -0.0480, -0.0077],
        [-0.0506, -0.0894, -0.1844],
        [-0.1544,  0.0703,  0.1437],
        [ 0.0389,  0.1858, -0.0769],
        [-0.1237, -0.1999, -0.0834],
        [ 0.0025,  0.0261,  0.0133],
        [-0.0312, -0.0389,  0.0362],
        [-0.0283, -0.0154, -0.0286],
        [-0.0952, -0.0035,  0.1038],
        [-0.1987, -0.1513,  0.0761],
        [ 0.1028,  0.0396,  0.0414],
        [ 0.0475, -0.1552,  0.0914],
        [ 0.0585, -0.0674, -0.0505],
        [-0.0415, -0.1330,  0.1683],
        [ 0.1304,  0.1214, -0.0788],
        [ 0.1596,  0.1261, -0.1704],
        [ 0.0117, -0.1318,  0.1816],
        [ 0.0721,  0.0195,  0.0934],
        [-0.0901,  0.1073,  0.1094],
        [ 0.0556, -0.0484,  0.0017],
        [ 0.0937, -0.1215,  0.1144],
        [-0.1547, -0.1447, -0.0901],
        [-0.1222, -0.0462,  0.1757],
        [-0.0932,  0.1781,  0.1261],
        [-0.1290, -0.0395, -0.1169],
        [-0.1561,  0.0831,  0.1718],
        [-0.0911, -0.1623,  0.1129],
        [-0.0014, -0.1334,  0.0871],
        [-0.0328, -0.0604,  0.0126],
        [-0.0790, -0.0423,  0.0356],
        [ 0.1439, -0.0364, -0.1355],
        [ 0.0397,  0.1555, -0.0867],
        [ 0.1199, -0.1814, -0.0028],
        [-0.0698,  0.0556,  0.2017],
        [ 0.0940,  0.1074,  0.0539],
        [-0.0116, -0.1794,  0.0408],
        [ 0.1101,  0.0356,  0.0789],
        [ 0.0696,  0.0612,  0.1492],
        [ 0.1176, -0.0837, -0.0933],
        [ 0.1522, -0.0532,  0.0975],
        [ 0.0408, -0.1350,  0.0908],
        [ 0.1128,  0.0109,  0.1322],
        [ 0.0132, -0.0838, -0.1617],
        [ 0.1352,  0.0518, -0.1740],
        [-0.1652, -0.0692,  0.0656],
        [ 0.0789,  0.0958,  0.1359],
        [ 0.1717, -0.1831, -0.0864],
        [ 0.0910,  0.0903, -0.0999],
        [-0.1723,  0.0034,  0.1682],
        [ 0.0798, -0.1518,  0.0096],
        [-0.1287, -0.0439, -0.0050],
        [ 0.1252, -0.0713, -0.1195],
        [-0.1278,  0.1230,  0.0690],
        [-0.0192, -0.0686, -0.0284],
        [-0.0788, -0.0247,  0.0462],
        [ 0.0286, -0.0144, -0.1388],
        [ 0.1016, -0.0110,  0.0250],
        [ 0.0228,  0.0059,  0.0889],
        [-0.0133, -0.1295, -0.1163]], device='cuda:0') torch.Size([128, 3])
recurrent_blocks.0.weight_hh_l0_reverse tensor([[ 0.0436,  0.1550, -0.1666,  ..., -0.0806, -0.0861,  0.0302],
        [ 0.0127, -0.0302,  0.1773,  ..., -0.1391, -0.0016,  0.0251],
        [-0.1512,  0.0659,  0.1652,  ...,  0.1968, -0.0215,  0.0890],
        ...,
        [ 0.0956,  0.1038, -0.0993,  ..., -0.1359, -0.0090,  0.0983],
        [ 0.0799,  0.2041,  0.1776,  ..., -0.1135,  0.1601, -0.0051],
        [ 0.0391, -0.0521, -0.0234,  ..., -0.0969,  0.2065,  0.0604]],
       device='cuda:0') torch.Size([128, 32])
recurrent_blocks.0.bias_ih_l0_reverse tensor([ 0.1398, -0.0888, -0.0740,  0.0985, -0.0456,  0.0523,  0.0597, -0.1611,
        -0.0929, -0.1129,  0.0926,  0.1321,  0.1783,  0.0484, -0.0830,  0.0342,
        -0.0938, -0.0783,  0.1607, -0.1323, -0.1425,  0.1534, -0.1792, -0.1692,
         0.1384, -0.1030,  0.1267, -0.0920,  0.0910,  0.0189, -0.0690,  0.0682,
         0.1200,  0.1342, -0.0541,  0.0389,  0.0951,  0.0267,  0.0528, -0.1636,
         0.0944,  0.0232, -0.1386, -0.0928, -0.1302,  0.0917,  0.0591,  0.0450,
        -0.1428, -0.0978, -0.0718,  0.1704,  0.0538,  0.1746,  0.1081, -0.0931,
        -0.0202,  0.0999, -0.1307,  0.0557, -0.1425,  0.0017, -0.1933, -0.0681,
        -0.1380, -0.0917,  0.0557, -0.1054, -0.1447,  0.1147, -0.1775,  0.0494,
        -0.0101,  0.0481, -0.1279, -0.0435, -0.2055,  0.0230, -0.0265,  0.0995,
        -0.0126,  0.0200,  0.1128,  0.1107, -0.0594,  0.1293, -0.1330,  0.0067,
         0.0208, -0.0377, -0.0506, -0.0335,  0.0891,  0.0847, -0.0742,  0.0480,
        -0.0200,  0.1172,  0.1645, -0.1349,  0.1213, -0.1114,  0.1799,  0.1504,
        -0.0606, -0.1054,  0.1435, -0.1221,  0.1864,  0.0459, -0.1362, -0.0249,
         0.0859,  0.0107,  0.1257,  0.1312,  0.0087,  0.1714,  0.0345, -0.0647,
        -0.0795,  0.1487, -0.1163,  0.1088, -0.0968, -0.0743, -0.1046, -0.0578],
       device='cuda:0') torch.Size([128])
recurrent_blocks.0.bias_hh_l0_reverse tensor([ 0.1197,  0.0749,  0.0422, -0.1405, -0.1094,  0.0275, -0.0055,  0.0598,
        -0.0071,  0.0510, -0.0744,  0.1090, -0.1058, -0.1536, -0.1285, -0.1208,
        -0.1889, -0.1356,  0.1005, -0.1509,  0.0713, -0.1046, -0.1763,  0.1150,
        -0.0098, -0.0838,  0.0547,  0.0155,  0.0370,  0.1076, -0.1210,  0.0428,
        -0.0669,  0.1373,  0.0288,  0.1433, -0.0008,  0.0328,  0.0312, -0.1258,
         0.1369, -0.1850, -0.1636,  0.0771,  0.1128, -0.1100,  0.0390,  0.0027,
        -0.1792, -0.0852, -0.1562, -0.1151, -0.0754, -0.0080, -0.1252, -0.0323,
         0.0578, -0.0760,  0.1024, -0.1286, -0.0911,  0.0779, -0.0199,  0.1544,
        -0.0804, -0.1215,  0.0300,  0.0573, -0.0411,  0.0382,  0.0802, -0.0929,
        -0.1041, -0.0953, -0.0021,  0.1231, -0.1980,  0.1376,  0.1437,  0.0526,
        -0.0490, -0.1755, -0.1468, -0.1201,  0.0377, -0.0325,  0.0420, -0.0566,
        -0.0857, -0.1481, -0.0085,  0.1890,  0.1028, -0.0280,  0.0525, -0.0274,
         0.1168, -0.1187, -0.0339, -0.1916,  0.1437, -0.1106, -0.0730, -0.0945,
         0.1467,  0.0052, -0.0267, -0.1428,  0.0392, -0.0754, -0.1879,  0.1126,
         0.0919, -0.1247,  0.0866,  0.1463, -0.1220,  0.0197, -0.1906, -0.0236,
         0.0041, -0.0464, -0.0242, -0.1256,  0.1135,  0.0967,  0.0602, -0.0239],
       device='cuda:0') torch.Size([128])
recurrent_blocks.1.weight_ih_l0 tensor([[-0.1526,  0.0676,  0.1018,  ..., -0.0383,  0.2048, -0.1050],
        [-0.0501,  0.0214,  0.0184,  ...,  0.0431, -0.1107,  0.1575],
        [ 0.1792, -0.1058, -0.0191,  ..., -0.0246, -0.0259,  0.0529],
        ...,
        [ 0.1285,  0.0275,  0.0565,  ..., -0.1065,  0.0522,  0.1563],
        [-0.0216,  0.1732,  0.0641,  ..., -0.1935,  0.0024,  0.0178],
        [-0.1780,  0.1402, -0.0272,  ..., -0.0342, -0.0695,  0.0156]],
       device='cuda:0') torch.Size([128, 64])
recurrent_blocks.1.weight_hh_l0 tensor([[-0.1776,  0.1479, -0.1793,  ...,  0.1025,  0.0518, -0.0006],
        [ 0.0356,  0.1268,  0.0028,  ...,  0.1849, -0.1346,  0.0837],
        [ 0.1702, -0.1468, -0.0892,  ...,  0.0259,  0.0527, -0.1385],
        ...,
        [ 0.0685, -0.0141,  0.0030,  ...,  0.0313, -0.1341, -0.0944],
        [-0.0239,  0.1346, -0.0480,  ..., -0.1094, -0.1638, -0.0081],
        [ 0.1377, -0.0320,  0.0016,  ...,  0.1158, -0.1511,  0.0340]],
       device='cuda:0') torch.Size([128, 32])
recurrent_blocks.1.bias_ih_l0 tensor([ 6.2576e-02,  1.3678e-01,  7.5801e-02, -5.1944e-02,  9.1202e-02,
        -6.1116e-02, -3.7592e-02, -8.8423e-02,  7.6530e-02, -1.6268e-01,
        -1.2705e-01,  1.2398e-01, -2.2919e-02,  4.6729e-02,  2.6447e-02,
         2.0809e-01,  1.4001e-01,  1.1157e-01, -1.2570e-01,  1.8469e-01,
        -4.2248e-03, -2.5920e-02, -2.8893e-02, -1.0469e-01,  4.9341e-02,
        -6.5780e-02, -1.8197e-01,  1.2896e-01,  1.1403e-01, -1.9022e-01,
        -7.7849e-02, -1.3859e-01, -3.5947e-02,  5.2042e-02,  9.4739e-02,
         2.1806e-02, -1.5301e-01, -1.3147e-01,  1.7611e-01,  1.6316e-01,
         8.8257e-02, -3.7335e-02,  5.6284e-03, -3.2433e-02,  4.3498e-02,
        -1.5810e-01, -1.9812e-02,  4.6320e-02,  1.0200e-01,  6.5747e-02,
         1.3488e-01, -9.8776e-02,  3.5397e-02, -1.4774e-01,  1.4303e-01,
        -1.3768e-01,  3.4741e-02,  6.4621e-02, -1.7302e-01, -3.5866e-02,
         4.6647e-02,  1.3988e-01,  5.2157e-02, -1.3610e-02, -2.1319e-02,
         2.0788e-01,  8.7832e-02,  8.1195e-02, -1.1272e-02,  4.9195e-02,
         9.5819e-02, -1.5805e-01,  1.9994e-02,  6.8538e-02, -4.2085e-02,
        -1.0329e-01, -2.3120e-03,  1.1760e-01, -5.8405e-02, -1.1550e-01,
        -1.3504e-01, -2.4206e-02, -4.7401e-02,  4.0879e-03,  1.6112e-01,
        -8.5936e-03,  7.8585e-02,  5.1819e-03, -7.2025e-02,  9.3945e-03,
         1.5070e-04, -1.1358e-01,  4.1234e-02, -4.3242e-02,  7.6408e-02,
         1.0663e-01,  7.8917e-02, -5.0282e-03,  1.2663e-01, -2.7843e-02,
        -9.9147e-02, -3.4027e-02,  9.8180e-02, -1.1504e-01, -1.0920e-01,
        -1.6285e-01,  7.4579e-02, -2.4347e-02, -3.0111e-02,  8.7644e-02,
         3.6338e-03,  1.1740e-01, -1.2542e-01,  8.8921e-02, -2.5349e-02,
         1.4626e-02,  1.9511e-01, -9.9542e-02,  1.6595e-01, -1.1021e-01,
         1.2460e-01, -5.8931e-02,  4.8346e-02, -8.9161e-02,  1.1934e-01,
         1.0583e-02, -1.4410e-01,  6.6703e-02], device='cuda:0') torch.Size([128])
recurrent_blocks.1.bias_hh_l0 tensor([-0.0743,  0.1386,  0.0396,  0.1154, -0.0071,  0.1770, -0.0067,  0.1721,
        -0.0349, -0.0915, -0.0616, -0.0048, -0.0492, -0.0390, -0.1686,  0.1858,
         0.1621,  0.0991,  0.0191, -0.0798,  0.1955,  0.1014,  0.1678, -0.1408,
         0.1052,  0.1038, -0.0232, -0.1380,  0.0090, -0.1540, -0.0388, -0.1217,
         0.0257, -0.1678,  0.0420, -0.0625, -0.1196, -0.0226, -0.0553,  0.0643,
         0.0156, -0.1203,  0.1336,  0.0198, -0.0456,  0.1728,  0.1276, -0.0169,
        -0.0534,  0.0240, -0.0638,  0.0623, -0.0540, -0.0021,  0.0633,  0.1222,
         0.1227, -0.0477, -0.1005,  0.1678, -0.0462, -0.1456,  0.0539, -0.1385,
         0.0613, -0.1144,  0.1606,  0.1732, -0.1406,  0.0019, -0.1923,  0.1501,
         0.1355, -0.1232, -0.0510, -0.1305, -0.0868,  0.0537,  0.0839,  0.0322,
        -0.0822, -0.0512,  0.1504,  0.1392,  0.1956,  0.0185, -0.1178,  0.1516,
        -0.1187, -0.1426,  0.1422, -0.0249,  0.0796,  0.0536, -0.0600, -0.1184,
        -0.0386,  0.0830,  0.0158,  0.0991,  0.0636, -0.0932,  0.1483, -0.1168,
        -0.0829,  0.0249,  0.1457, -0.0710, -0.0479, -0.0954, -0.1480,  0.0114,
        -0.1777,  0.1448,  0.1559,  0.1718,  0.1125, -0.0797, -0.0630, -0.1132,
        -0.0328, -0.1553, -0.0918, -0.1218, -0.0880, -0.0978,  0.1085,  0.1288],
       device='cuda:0') torch.Size([128])
recurrent_blocks.1.weight_ih_l0_reverse tensor([[-0.0486,  0.0732, -0.0388,  ...,  0.1048, -0.1128,  0.0758],
        [ 0.0843, -0.0176,  0.0649,  ...,  0.1273, -0.0472,  0.0530],
        [-0.2083, -0.1252,  0.0277,  ..., -0.0703,  0.0455,  0.0409],
        ...,
        [-0.1345,  0.0520, -0.1772,  ..., -0.0435, -0.0506, -0.1132],
        [ 0.0732,  0.1811,  0.0451,  ..., -0.0592, -0.1609, -0.1232],
        [ 0.0395,  0.0155, -0.0542,  ..., -0.0365, -0.1022, -0.0883]],
       device='cuda:0') torch.Size([128, 64])
recurrent_blocks.1.weight_hh_l0_reverse tensor([[ 0.1149,  0.0557,  0.1139,  ...,  0.1101, -0.1884, -0.1483],
        [-0.0733, -0.0210, -0.0388,  ...,  0.1079, -0.0995,  0.0646],
        [-0.1038, -0.0661,  0.0479,  ...,  0.1467, -0.1840,  0.0250],
        ...,
        [ 0.1111, -0.1313,  0.0811,  ..., -0.0396,  0.0584, -0.1412],
        [-0.0946,  0.0940,  0.0557,  ...,  0.0270, -0.0178,  0.0108],
        [ 0.0111, -0.1226,  0.1652,  ...,  0.0382,  0.1498,  0.0373]],
       device='cuda:0') torch.Size([128, 32])
recurrent_blocks.1.bias_ih_l0_reverse tensor([-0.1165,  0.1330,  0.0216, -0.1430,  0.1057, -0.0299,  0.1842,  0.0923,
         0.0886, -0.0482,  0.0137,  0.2050,  0.0516,  0.0313, -0.0482, -0.1797,
         0.1330, -0.0371,  0.0661,  0.0846,  0.0957, -0.0585,  0.1074, -0.1296,
        -0.1385, -0.0644,  0.1653, -0.0190,  0.0240, -0.0326, -0.0356, -0.1238,
         0.1202, -0.0148, -0.0751, -0.1786, -0.0797,  0.1030, -0.1149,  0.1684,
        -0.1131, -0.0800,  0.1924, -0.0707,  0.1826,  0.1095, -0.1244,  0.0423,
        -0.0679, -0.0912, -0.2009,  0.0338, -0.1002, -0.1449,  0.1486, -0.1222,
         0.0649,  0.0005,  0.1955, -0.0144,  0.0416,  0.0884,  0.1260,  0.1498,
        -0.0356, -0.0051,  0.1682, -0.1609, -0.0531, -0.0464, -0.1183,  0.1082,
        -0.1837,  0.1011,  0.0535, -0.0936, -0.1922, -0.1230,  0.0387,  0.1028,
         0.0113,  0.0507, -0.1387,  0.0164, -0.0491, -0.1153, -0.0257, -0.1574,
         0.0053,  0.0579,  0.1165,  0.1314, -0.1426, -0.1298, -0.0393, -0.0465,
         0.0857, -0.1308, -0.1034,  0.0003, -0.1799,  0.0935,  0.1858,  0.1122,
        -0.1332, -0.1309, -0.0853,  0.1098, -0.1461, -0.0953,  0.0012, -0.1234,
         0.1545, -0.0358, -0.1547,  0.1555,  0.1196, -0.1185,  0.1304,  0.1038,
        -0.1710,  0.0890,  0.0295, -0.1374,  0.0296,  0.0089, -0.1212,  0.1764],
       device='cuda:0') torch.Size([128])
recurrent_blocks.1.bias_hh_l0_reverse tensor([-0.0956,  0.0288, -0.0782,  0.0244, -0.1445,  0.1101, -0.0201, -0.0251,
         0.1591,  0.1209, -0.0586,  0.1273,  0.1747,  0.1023, -0.0212, -0.1019,
        -0.1402,  0.0203,  0.0150, -0.0618, -0.0351,  0.1367, -0.0870,  0.1836,
         0.0529, -0.0391,  0.0777, -0.0571, -0.1146,  0.1544, -0.1166, -0.1075,
        -0.0931,  0.0639, -0.1879,  0.1479,  0.0698, -0.0954, -0.0497,  0.0626,
         0.1128, -0.0020, -0.0757, -0.1373,  0.0371,  0.0528, -0.0603,  0.0487,
         0.1762, -0.1419,  0.0692, -0.0691,  0.0376,  0.0397,  0.0552, -0.1255,
        -0.1126, -0.0317, -0.0127, -0.0289, -0.0206,  0.1234,  0.0684,  0.1580,
        -0.0725, -0.1047, -0.0941, -0.0885,  0.0198,  0.1241, -0.0288, -0.0248,
        -0.0032, -0.1170,  0.0792,  0.1763, -0.0172, -0.0220, -0.1748,  0.1091,
        -0.0175,  0.0834,  0.1616, -0.0790,  0.0840,  0.1514,  0.0186, -0.1098,
         0.0103,  0.0863,  0.1575, -0.0192, -0.0991, -0.1789,  0.2011,  0.2098,
        -0.1483, -0.0115, -0.0146, -0.0600, -0.0888,  0.0406,  0.1950, -0.1378,
        -0.0844,  0.0333,  0.0062, -0.0858,  0.1261,  0.1064, -0.1314, -0.1749,
         0.0515,  0.0854, -0.1611,  0.0635,  0.1355,  0.0644,  0.1349,  0.1812,
        -0.0106,  0.1010,  0.1979,  0.1534,  0.0965, -0.1271, -0.0828, -0.1174],
       device='cuda:0') torch.Size([128])
recurrent_blocks.2.weight_ih_l0 tensor([[-0.1321, -0.1193, -0.0366,  ..., -0.1266,  0.0047, -0.0653],
        [ 0.1070,  0.0400,  0.2122,  ...,  0.0513,  0.1190, -0.1652],
        [-0.0713,  0.1330,  0.1216,  ...,  0.0807,  0.1043,  0.1396],
        ...,
        [-0.1731, -0.0798,  0.1838,  ..., -0.0848, -0.1316, -0.1001],
        [-0.1122,  0.0364, -0.1356,  ...,  0.0297, -0.1085,  0.1663],
        [ 0.0850, -0.1571, -0.0919,  ...,  0.0418,  0.0699,  0.0843]],
       device='cuda:0') torch.Size([128, 64])
recurrent_blocks.2.weight_hh_l0 tensor([[-0.0913, -0.1125, -0.1349,  ..., -0.0066, -0.0170,  0.0663],
        [ 0.0786, -0.0191, -0.0535,  ..., -0.0856, -0.1411,  0.0399],
        [-0.0114, -0.1374, -0.0878,  ...,  0.1459, -0.1409, -0.0737],
        ...,
        [ 0.0009,  0.1825, -0.0954,  ...,  0.1789, -0.0739, -0.0646],
        [-0.0375, -0.1096, -0.0584,  ..., -0.1031, -0.1259, -0.0744],
        [-0.0719,  0.0629, -0.1058,  ...,  0.0992, -0.1473,  0.1288]],
       device='cuda:0') torch.Size([128, 32])
recurrent_blocks.2.bias_ih_l0 tensor([-0.0380,  0.1520, -0.0793, -0.0577,  0.1480,  0.0646, -0.1741,  0.0386,
         0.0826, -0.0223,  0.0781,  0.0737, -0.1373, -0.0824,  0.0334, -0.1056,
         0.0183, -0.0212,  0.1076, -0.1388,  0.0203, -0.0703, -0.1167, -0.0895,
        -0.0774, -0.1023,  0.1807, -0.1329,  0.0482, -0.1131, -0.0357, -0.0280,
         0.1374, -0.0459,  0.0170, -0.0594, -0.1024,  0.0345,  0.1644, -0.0942,
         0.0195,  0.1303, -0.1016, -0.0784,  0.1499,  0.0867,  0.0059,  0.0263,
         0.0580,  0.0545,  0.0037, -0.0750, -0.0590, -0.1300,  0.1398, -0.1220,
        -0.1185, -0.1322,  0.1646,  0.0237, -0.0221, -0.1288,  0.1606,  0.1383,
        -0.0063,  0.0772, -0.1307,  0.0384, -0.0330,  0.1227, -0.1290,  0.0460,
         0.1804, -0.0546,  0.0206, -0.0797,  0.1292,  0.0905, -0.0056, -0.0474,
         0.0522,  0.0117,  0.0586, -0.1088,  0.0979,  0.0370, -0.1259, -0.0990,
         0.1302, -0.1531, -0.1091,  0.0084,  0.1118, -0.1641,  0.1521,  0.0433,
        -0.1697, -0.0784, -0.1129,  0.0423, -0.1499,  0.0269,  0.1543,  0.0032,
         0.1596,  0.1605, -0.1581,  0.0751,  0.1138,  0.0944, -0.0618,  0.1709,
        -0.0667, -0.0700,  0.1758,  0.0838,  0.1014, -0.0806, -0.0771, -0.1723,
        -0.0773,  0.0629, -0.1253,  0.0613,  0.1675, -0.1797, -0.0995,  0.1225],
       device='cuda:0') torch.Size([128])
recurrent_blocks.2.bias_hh_l0 tensor([-0.1976,  0.1632, -0.1267,  0.0518, -0.0886,  0.0838,  0.0295,  0.0501,
        -0.0889, -0.1131,  0.1078, -0.1298,  0.0665, -0.1561, -0.0545, -0.0528,
         0.1545,  0.1113,  0.0720, -0.1006, -0.1002, -0.0089, -0.1210,  0.1026,
         0.1292, -0.0847,  0.0396, -0.1372,  0.0496, -0.0730, -0.0729,  0.0275,
        -0.0518,  0.0998,  0.0653,  0.0436, -0.0142,  0.0248,  0.1432,  0.0664,
        -0.1110,  0.1369, -0.1658, -0.1055, -0.1011,  0.0800,  0.0487, -0.0051,
        -0.0628,  0.1107,  0.0914, -0.0282, -0.1078, -0.2007,  0.0791, -0.0799,
         0.1028, -0.1636,  0.0716, -0.0728,  0.1736,  0.0212, -0.0557, -0.0887,
         0.1145,  0.0077,  0.0115, -0.0405, -0.0831, -0.0618,  0.0576, -0.1336,
         0.1365, -0.0256, -0.1424,  0.1279,  0.1247, -0.0449, -0.0436, -0.1167,
         0.0865, -0.1581,  0.1097,  0.0668,  0.1039, -0.0224,  0.0910, -0.1604,
        -0.1149, -0.0078, -0.1360,  0.1590,  0.1811, -0.1365, -0.0563,  0.0275,
         0.1081,  0.0591, -0.1204, -0.0701, -0.1290,  0.0824,  0.1209,  0.0389,
        -0.1519,  0.0168,  0.0780, -0.1408,  0.2005,  0.0368,  0.1150,  0.1280,
        -0.0848,  0.0460, -0.0141,  0.1267, -0.1235, -0.0151,  0.1463, -0.0092,
        -0.0190,  0.1800, -0.1096, -0.1687,  0.2059,  0.1242,  0.1750,  0.1219],
       device='cuda:0') torch.Size([128])
recurrent_blocks.2.weight_ih_l0_reverse tensor([[-0.0606, -0.1039,  0.1414,  ...,  0.1051, -0.0237, -0.0159],
        [ 0.0907,  0.1050,  0.1249,  ..., -0.1290, -0.0809, -0.0127],
        [ 0.1467,  0.1129,  0.0634,  ...,  0.1266,  0.0886, -0.1537],
        ...,
        [-0.1558, -0.1199, -0.1737,  ...,  0.1238,  0.0511,  0.0555],
        [-0.0950, -0.0204,  0.0780,  ..., -0.1503,  0.0809, -0.0257],
        [-0.1303,  0.0237,  0.0607,  ...,  0.0408,  0.0118,  0.1473]],
       device='cuda:0') torch.Size([128, 64])
recurrent_blocks.2.weight_hh_l0_reverse tensor([[ 0.1306,  0.0061, -0.0388,  ..., -0.1347, -0.2015,  0.0158],
        [-0.0895,  0.0431,  0.0560,  ..., -0.0862, -0.0078,  0.0212],
        [-0.0427,  0.0816, -0.0355,  ..., -0.1526,  0.1118,  0.1202],
        ...,
        [-0.0073, -0.0512, -0.0080,  ..., -0.1715,  0.0570,  0.1206],
        [ 0.1697,  0.0079,  0.1376,  ...,  0.0385,  0.1460, -0.0321],
        [-0.0169,  0.1803,  0.1343,  ..., -0.0496,  0.1358, -0.0521]],
       device='cuda:0') torch.Size([128, 32])
recurrent_blocks.2.bias_ih_l0_reverse tensor([-0.2007, -0.1690, -0.0527, -0.1027,  0.1012,  0.0177, -0.0253,  0.0687,
         0.0829,  0.0028,  0.0171,  0.0121, -0.1001,  0.0569, -0.0970, -0.0280,
         0.0061,  0.1944, -0.0403, -0.0473, -0.0786,  0.0806,  0.0738, -0.0351,
        -0.0802, -0.1907,  0.0799, -0.1223, -0.0978, -0.0485, -0.0852, -0.0093,
         0.0799,  0.0641, -0.0526,  0.0547, -0.1987,  0.1307,  0.0186,  0.1148,
         0.1588,  0.0888,  0.1299, -0.0472, -0.0977,  0.1428, -0.0137,  0.0573,
         0.1795, -0.1034, -0.0850, -0.0278, -0.1153, -0.0157,  0.1606,  0.0828,
        -0.0429, -0.1641, -0.0697, -0.0503, -0.0039,  0.1622,  0.0840,  0.0026,
        -0.1124,  0.0288,  0.1099, -0.1310, -0.0031,  0.2097, -0.1280, -0.0885,
        -0.0605, -0.0737,  0.0755, -0.0679, -0.0413,  0.1514, -0.0685,  0.1619,
        -0.1666,  0.1004, -0.1295, -0.0321, -0.1676,  0.0494,  0.0968,  0.0590,
         0.0477,  0.1265,  0.0356,  0.1494,  0.0342,  0.0516,  0.0392,  0.1290,
         0.1059, -0.0043, -0.0007,  0.1073,  0.1401,  0.1156, -0.1327,  0.0752,
        -0.0501, -0.0486, -0.1681,  0.1731,  0.1273,  0.0791,  0.0980, -0.1332,
         0.1414,  0.1846, -0.1040,  0.1755,  0.0362,  0.1830,  0.0006,  0.0390,
        -0.1437, -0.0349, -0.0079,  0.1612, -0.0257,  0.1485,  0.0495,  0.0139],
       device='cuda:0') torch.Size([128])
recurrent_blocks.2.bias_hh_l0_reverse tensor([ 0.1207, -0.0043, -0.1036,  0.0909,  0.0633,  0.1741,  0.0616,  0.0421,
         0.0676,  0.0886,  0.0526, -0.1426,  0.0100, -0.0985, -0.1742, -0.0289,
        -0.0305,  0.0954,  0.0337,  0.0564, -0.1329,  0.0535,  0.1544, -0.1825,
        -0.2039,  0.1189,  0.1488,  0.1543,  0.1065,  0.1461,  0.1009,  0.0195,
         0.0941,  0.0264,  0.1179,  0.1409, -0.0438, -0.0169, -0.0582, -0.0783,
        -0.0320, -0.0233,  0.0797,  0.0108, -0.0734, -0.0935, -0.1636, -0.1047,
         0.1765,  0.1610, -0.1029, -0.0080, -0.0278,  0.1946,  0.1140,  0.1473,
        -0.0087, -0.0690,  0.1671, -0.0863,  0.1481, -0.0383,  0.1816,  0.2059,
         0.0638, -0.0290,  0.1654, -0.1472, -0.0020, -0.0152, -0.1135,  0.1767,
        -0.1520,  0.0202, -0.1227,  0.1724, -0.0242,  0.0472, -0.0030,  0.1684,
         0.0272,  0.0733, -0.0956, -0.1118, -0.1156,  0.0316,  0.1558,  0.0986,
         0.0906, -0.1221, -0.0672,  0.0982, -0.0989,  0.1442,  0.1104,  0.1247,
        -0.0818,  0.1293, -0.1468, -0.1611,  0.1353, -0.0693, -0.0433,  0.0612,
        -0.0199, -0.0705,  0.0233,  0.2061,  0.1937,  0.1420,  0.0993, -0.1169,
        -0.1163,  0.1711,  0.0464,  0.0594, -0.1203, -0.1088, -0.0063,  0.1117,
         0.0790, -0.0646, -0.1185, -0.1175,  0.1006, -0.1293, -0.1157,  0.0039],
       device='cuda:0') torch.Size([128])
recurrent_blocks.3.weight_ih_l0 tensor([[-0.0898,  0.1314, -0.1127,  ..., -0.0663, -0.0987,  0.0824],
        [ 0.0098,  0.0648, -0.1138,  ..., -0.0777,  0.0846,  0.0502],
        [-0.0131,  0.0033,  0.0667,  ..., -0.0488,  0.1108,  0.0963],
        ...,
        [ 0.0449, -0.1335,  0.1918,  ..., -0.1318, -0.0860,  0.1551],
        [ 0.0620, -0.1782, -0.1704,  ...,  0.1312, -0.0581,  0.1498],
        [-0.0428, -0.1695,  0.0612,  ..., -0.0469, -0.1086, -0.1165]],
       device='cuda:0') torch.Size([128, 64])
recurrent_blocks.3.weight_hh_l0 tensor([[-0.0421,  0.1062, -0.1520,  ..., -0.0207,  0.0691,  0.1247],
        [ 0.0873, -0.0196, -0.1235,  ..., -0.0332, -0.1046, -0.1073],
        [-0.0388, -0.0473, -0.1291,  ..., -0.1627, -0.0637,  0.0885],
        ...,
        [-0.1155,  0.0464,  0.0715,  ..., -0.1425, -0.0400, -0.0223],
        [ 0.1132, -0.1306, -0.1272,  ..., -0.1843,  0.0637, -0.1559],
        [-0.1482, -0.0554,  0.1416,  ...,  0.0314, -0.0642,  0.1779]],
       device='cuda:0') torch.Size([128, 32])
recurrent_blocks.3.bias_ih_l0 tensor([-0.0045, -0.0347,  0.0707, -0.2022, -0.0559,  0.1735,  0.1694, -0.1149,
         0.1249, -0.1005,  0.0049, -0.1225,  0.1092,  0.0052,  0.1079, -0.1226,
         0.1240,  0.0942,  0.1145, -0.0860, -0.0667,  0.1649,  0.0491, -0.1597,
        -0.0335, -0.1171, -0.0184,  0.1325, -0.0484, -0.1657, -0.0747, -0.1338,
         0.0088, -0.1054,  0.1098, -0.0538,  0.0947,  0.0055, -0.0349, -0.1851,
        -0.1198, -0.0765,  0.1134,  0.1315,  0.2075, -0.0472, -0.0156,  0.0770,
        -0.1241, -0.0618,  0.1318,  0.1288,  0.0709,  0.1116, -0.0162,  0.1402,
         0.1302,  0.1171,  0.1622, -0.1618, -0.0622,  0.0501, -0.0852, -0.0248,
         0.1313, -0.0321,  0.1093,  0.0112,  0.1414,  0.1154, -0.1861,  0.1019,
        -0.0721,  0.0027, -0.0374, -0.0886,  0.1889, -0.0465, -0.1122,  0.0038,
         0.1582,  0.0906,  0.0192, -0.1337, -0.0490, -0.0852, -0.0758, -0.0978,
        -0.1641, -0.1563,  0.0308,  0.1036,  0.1400,  0.1394,  0.0915, -0.1073,
         0.0274,  0.0145, -0.1211,  0.0655, -0.0342, -0.0554, -0.0294, -0.0531,
        -0.1158,  0.0174, -0.1477, -0.1026,  0.0180,  0.0835, -0.1446,  0.0451,
        -0.1765,  0.0627,  0.0192,  0.0501,  0.1469,  0.1305,  0.0959,  0.1464,
         0.1023,  0.1860,  0.0228,  0.1484, -0.1581,  0.1152,  0.1012, -0.0632],
       device='cuda:0') torch.Size([128])
recurrent_blocks.3.bias_hh_l0 tensor([-0.1517,  0.0459,  0.1234,  0.1082,  0.0596, -0.0719,  0.1636,  0.0099,
         0.0964,  0.0995,  0.0736,  0.0926, -0.1145,  0.0318,  0.1576,  0.1481,
         0.0916,  0.1086,  0.0375,  0.0469,  0.0729, -0.0843,  0.0792, -0.1801,
        -0.0711,  0.0040,  0.1590, -0.1068,  0.0780, -0.1492,  0.1059, -0.0913,
        -0.1735, -0.1269,  0.1138, -0.1936,  0.0075,  0.1717,  0.2040, -0.1958,
         0.1959,  0.0943, -0.1283,  0.0155, -0.1244,  0.1295, -0.0065,  0.0835,
         0.1605,  0.0355,  0.0570, -0.1880,  0.0006, -0.0580, -0.0971,  0.1654,
         0.0767, -0.0190, -0.1291,  0.1005, -0.0945,  0.0738,  0.1411, -0.1164,
        -0.0302, -0.0840,  0.0056,  0.0375, -0.0992,  0.0223,  0.0358,  0.0527,
        -0.1809, -0.1673, -0.0655,  0.1201,  0.0526, -0.0028, -0.0995,  0.0755,
         0.1685, -0.0459, -0.0280,  0.1196, -0.0314, -0.0871,  0.0534,  0.0276,
        -0.0761, -0.0392, -0.1121,  0.0143,  0.1451, -0.1540,  0.0998, -0.1694,
         0.1382,  0.1758, -0.1566,  0.1217, -0.1046,  0.0151,  0.1652, -0.2113,
         0.0585,  0.1339, -0.0621, -0.0698, -0.1457, -0.0118,  0.1030, -0.1678,
        -0.1323,  0.0202,  0.1977, -0.1357,  0.1698,  0.1663, -0.1098, -0.0320,
         0.0328,  0.1835, -0.0927,  0.0280, -0.1185,  0.0941, -0.0790, -0.1433],
       device='cuda:0') torch.Size([128])
recurrent_blocks.3.weight_ih_l0_reverse tensor([[ 0.1569, -0.0231,  0.0910,  ...,  0.1043,  0.1561, -0.0104],
        [ 0.0018, -0.0189, -0.0712,  ...,  0.0345, -0.1611, -0.0875],
        [ 0.1300, -0.0988, -0.0828,  ...,  0.0450, -0.0043, -0.0525],
        ...,
        [ 0.1372,  0.1149,  0.0445,  ...,  0.0253, -0.0121,  0.0261],
        [-0.1234,  0.1019, -0.1638,  ..., -0.0826,  0.0311, -0.1168],
        [-0.1324, -0.0282, -0.1561,  ...,  0.0110,  0.0531, -0.0677]],
       device='cuda:0') torch.Size([128, 64])
recurrent_blocks.3.weight_hh_l0_reverse tensor([[ 0.1314,  0.1218,  0.0374,  ...,  0.1770, -0.1325, -0.0928],
        [-0.0800, -0.0826,  0.0550,  ...,  0.0067, -0.0769, -0.0314],
        [-0.0285,  0.1868, -0.0050,  ...,  0.0748,  0.1323, -0.0411],
        ...,
        [ 0.0274, -0.0226,  0.0057,  ..., -0.0907,  0.1995,  0.1725],
        [-0.0447,  0.1089, -0.0018,  ...,  0.0472,  0.0017,  0.1806],
        [-0.0409, -0.0664, -0.0815,  ...,  0.0639,  0.0019, -0.0103]],
       device='cuda:0') torch.Size([128, 32])
recurrent_blocks.3.bias_ih_l0_reverse tensor([-0.0181,  0.1173,  0.0992, -0.0848,  0.1347,  0.0470,  0.1449,  0.0491,
         0.0965, -0.0322, -0.0878, -0.0742,  0.0986,  0.0811,  0.0067,  0.0795,
         0.0238, -0.1460,  0.0147,  0.0968,  0.0292,  0.0233, -0.0360, -0.0622,
         0.0169, -0.1354,  0.0623,  0.1945, -0.1620,  0.0602, -0.0096, -0.0273,
         0.0825,  0.0313,  0.1702, -0.0793, -0.0600, -0.1051,  0.0078, -0.1787,
        -0.1526, -0.0216, -0.0480,  0.1169, -0.1344,  0.1431, -0.1281, -0.0374,
        -0.0820,  0.1155, -0.0694,  0.0861,  0.0800,  0.0399, -0.1199,  0.0938,
         0.1067, -0.0547, -0.0185,  0.1145, -0.0048,  0.0762, -0.1035, -0.1340,
        -0.1481, -0.1755,  0.1975, -0.0509, -0.1314, -0.0892, -0.0823, -0.0398,
         0.1609,  0.0073, -0.1290,  0.0098, -0.0748, -0.1303,  0.0268, -0.1673,
        -0.0837,  0.2107,  0.1239,  0.0032,  0.1111, -0.1172,  0.1410, -0.1832,
         0.0074, -0.0075, -0.1123,  0.1377,  0.1397,  0.0438, -0.1176, -0.0876,
         0.1133, -0.1105, -0.0115, -0.0540,  0.1658, -0.1476,  0.0372, -0.1613,
        -0.0768,  0.1018,  0.1355,  0.0864, -0.1027,  0.1056,  0.0494, -0.1071,
        -0.1903, -0.0690,  0.1533, -0.1556, -0.0573,  0.0894,  0.0134, -0.0811,
        -0.0529, -0.0823, -0.1027,  0.1247,  0.1120, -0.2027,  0.0428, -0.0973],
       device='cuda:0') torch.Size([128])
recurrent_blocks.3.bias_hh_l0_reverse tensor([-2.6553e-02, -1.1685e-01, -5.1547e-02, -4.5142e-02, -3.7691e-02,
        -1.4596e-01,  1.6174e-01,  1.0433e-01,  1.2135e-01, -1.7645e-01,
         3.4402e-02, -1.1445e-02, -5.1019e-02, -8.7494e-02,  5.8188e-02,
        -7.6491e-02,  1.6004e-01, -9.3228e-02,  1.1861e-01,  1.0670e-01,
         1.2461e-01,  1.1428e-01,  1.2708e-01, -1.0427e-01, -4.7073e-02,
         9.3872e-02, -1.7871e-04, -4.3394e-02, -1.1467e-01, -5.5321e-02,
         6.8951e-02,  9.6966e-02, -1.0300e-01, -1.5451e-01,  1.7308e-01,
         1.4464e-03, -3.2876e-02, -7.0846e-03,  1.0473e-01, -4.8642e-02,
         2.0884e-02,  1.1768e-01,  7.5967e-03,  1.4021e-01,  8.9888e-02,
        -1.3018e-01, -2.2587e-02, -8.5107e-02, -3.3186e-02, -8.9807e-02,
        -1.3737e-01,  9.4868e-02, -9.0995e-02,  1.3237e-01, -1.3201e-01,
         7.5270e-02, -2.0421e-01, -2.4298e-03, -4.7369e-02,  1.2254e-01,
        -3.9163e-02,  1.0066e-01,  7.1078e-02, -4.3674e-02,  1.3625e-01,
         7.7010e-02, -1.2770e-01,  6.6412e-02, -1.9563e-01, -2.4529e-02,
        -1.7988e-01,  1.8329e-01, -5.2634e-02,  1.1093e-01,  1.8048e-01,
        -9.4267e-02,  1.2018e-01, -1.6763e-01, -1.7496e-01, -5.5668e-02,
         9.3670e-02,  7.0866e-03,  1.1597e-01, -1.7120e-02,  1.2214e-01,
        -1.2787e-01, -1.1684e-01,  7.9323e-02,  4.7592e-02, -1.5184e-01,
         1.6946e-01, -8.2366e-03, -1.7279e-01,  5.2248e-02, -9.5780e-02,
        -8.7085e-02, -2.5285e-02,  5.3271e-02, -1.0122e-01, -9.1467e-02,
        -1.4717e-01,  1.2802e-01,  1.1057e-01,  9.7545e-03, -5.1518e-02,
        -3.7229e-02, -1.0948e-01, -1.5044e-01, -2.3760e-02, -2.1611e-02,
         9.2925e-02, -4.6767e-02,  1.2970e-01,  8.3295e-02, -7.0058e-02,
         1.0555e-01,  1.0697e-01,  9.6308e-02,  9.6828e-02, -1.4105e-01,
         1.0423e-01, -3.1192e-02, -7.4733e-02,  1.4018e-01,  1.4171e-01,
         3.3307e-02,  1.3829e-02, -1.6580e-01], device='cuda:0') torch.Size([128])
fc_blocks.0.0.weight tensor([[ 0.0929,  0.0772, -0.0422,  ..., -0.1278, -0.0024,  0.0068],
        [ 0.0234,  0.0506, -0.0393,  ...,  0.0643, -0.0620, -0.0089],
        [ 0.0615,  0.0685, -0.0117,  ..., -0.1099,  0.0971,  0.0707],
        ...,
        [-0.0700,  0.0587,  0.0771,  ...,  0.1411,  0.0059,  0.0901],
        [-0.1331, -0.0145, -0.0821,  ...,  0.0083,  0.0542, -0.1120],
        [ 0.0641,  0.1268, -0.0661,  ...,  0.0659,  0.1400,  0.0691]],
       device='cuda:0') torch.Size([32, 64])
fc_blocks.0.0.bias tensor([ 0.0635,  0.0972,  0.1221, -0.1049, -0.1317,  0.0093, -0.0156,  0.0941,
        -0.0390,  0.0284, -0.0523, -0.0292, -0.1333, -0.0231, -0.0709,  0.0203,
         0.0381,  0.0571, -0.0156, -0.0346,  0.0606, -0.0263, -0.0765, -0.1452,
         0.1531, -0.0589,  0.0316,  0.0948, -0.0465, -0.0420,  0.0762, -0.0180],
       device='cuda:0') torch.Size([32])
fc_blocks.1.0.weight tensor([[-7.8141e-02,  5.7954e-02,  4.2961e-02,  1.6365e-01,  1.5836e-01,
          4.1452e-02, -7.4765e-02, -7.0616e-02,  1.1153e-01,  9.6255e-02,
          1.3983e-01, -5.0683e-02, -1.2528e-01, -9.4780e-02, -1.0901e-01,
         -1.3031e-01, -1.7155e-01,  1.0053e-01, -1.4795e-01, -9.4400e-02,
          9.0859e-03,  1.4369e-01,  2.8027e-02,  8.9716e-02,  5.1551e-02,
          1.0851e-01,  8.3393e-02,  7.5342e-02, -4.8920e-02, -2.5040e-02,
         -1.2503e-01, -3.7906e-02],
        [-2.4974e-02,  1.5810e-01,  1.1292e-01,  8.9882e-02, -5.2010e-02,
          1.3897e-01, -7.4100e-02,  8.0085e-02, -3.1629e-03, -1.4552e-01,
         -7.6377e-02, -7.9325e-02,  4.1633e-02,  5.3453e-03, -7.9246e-02,
         -4.7352e-02, -2.6870e-02,  1.3479e-01,  2.9097e-02, -1.4263e-01,
         -3.7336e-02, -1.4632e-01,  1.9241e-01, -1.4284e-01, -8.7718e-02,
          1.0888e-01,  6.1502e-02, -1.5244e-01,  4.0407e-02,  1.1275e-01,
         -1.4907e-01,  1.5263e-01],
        [ 1.0616e-01, -1.9489e-01, -6.7165e-02, -1.3593e-01, -1.2707e-01,
         -1.0301e-03, -8.9005e-02, -9.9045e-02,  3.3231e-02,  1.3989e-01,
          6.3690e-02, -8.4349e-02, -1.3435e-02,  1.4335e-01, -8.7005e-02,
         -1.9922e-01, -6.4581e-02,  1.1746e-01,  1.4908e-01, -9.1286e-02,
          2.6918e-02,  1.0527e-01,  1.9746e-02,  1.2519e-01,  1.7655e-02,
          5.8236e-02, -3.8507e-02, -1.5390e-01, -1.7609e-01,  2.6347e-02,
          1.1215e-01, -1.1401e-01],
        [ 1.5664e-01,  8.6376e-02,  8.4509e-02,  5.8324e-03, -2.6196e-02,
          4.1864e-02,  2.0484e-01,  1.4746e-01, -5.5025e-02, -3.5560e-03,
          4.6228e-02, -6.8901e-02, -1.0822e-01,  2.5815e-02, -1.2438e-01,
          1.5769e-01,  1.9452e-01,  1.0202e-01, -5.1739e-02,  1.1492e-01,
         -1.2604e-01,  9.0879e-02,  1.0474e-01,  5.6376e-02,  6.2044e-02,
          1.2475e-01,  7.6146e-02,  4.1795e-02,  2.3092e-02, -6.8266e-02,
         -3.4696e-02,  1.4678e-01],
        [-1.1314e-01, -6.4091e-03,  5.1399e-02, -1.0845e-01, -1.6870e-01,
         -6.8245e-02, -3.5987e-03, -7.2858e-02, -2.8301e-02,  1.1282e-01,
          1.3503e-01,  6.7150e-02, -2.2195e-02,  1.7011e-01, -1.8149e-01,
          2.0269e-01,  2.6181e-02, -1.3432e-01, -9.9486e-02, -7.8640e-02,
          5.3488e-02,  5.3082e-02, -9.2952e-02,  4.7680e-02,  5.0657e-02,
          1.2291e-01, -1.8765e-01,  4.0625e-02,  1.7226e-01,  3.6028e-02,
          6.5924e-02,  1.2203e-01],
        [-4.6208e-02,  2.0344e-02,  1.1021e-01,  8.6724e-02,  9.5282e-02,
          4.7734e-03,  1.4273e-01, -9.0054e-02,  1.4559e-01,  1.2946e-02,
          1.7851e-01,  7.0220e-02, -1.3762e-01, -1.2871e-02,  1.9914e-01,
          8.2977e-02,  6.4051e-02, -1.0936e-01,  1.6028e-02, -2.6298e-02,
          1.2476e-01,  4.2796e-02, -9.7423e-02,  2.1629e-02, -1.8224e-02,
         -5.1304e-02, -9.2963e-02, -2.3523e-02,  1.2895e-01,  1.5533e-01,
          1.2599e-02, -1.3002e-01],
        [-1.1744e-01, -1.9171e-01, -1.7423e-02,  4.7683e-02,  6.7733e-02,
          5.1545e-02, -1.1879e-01,  2.4124e-02,  1.1077e-01, -1.6039e-01,
         -6.1275e-02, -1.1817e-01, -1.6530e-01, -1.9127e-02,  7.5361e-02,
         -7.4335e-03, -1.1879e-01,  1.0462e-01,  1.2445e-01,  8.9753e-02,
          8.5513e-02, -1.0769e-01,  1.1906e-01, -3.8733e-03, -4.1545e-02,
         -2.8074e-02,  7.4928e-02, -7.2554e-02,  1.6588e-01, -1.4427e-01,
          3.4960e-02,  8.6721e-02],
        [ 1.8169e-01, -1.0931e-01, -5.4275e-02,  7.9277e-02, -8.9812e-02,
         -4.5972e-02, -3.9354e-02,  2.7283e-02, -7.8098e-03,  1.4668e-02,
          1.4589e-01,  5.3454e-02, -1.1155e-01,  9.4780e-02, -7.1241e-02,
          6.6703e-02,  1.0437e-01,  1.6762e-01, -1.2203e-01,  1.1894e-02,
          1.8054e-01,  1.7838e-02,  1.1639e-02,  1.8881e-01,  1.0090e-01,
         -1.2999e-01,  1.4932e-01,  1.2441e-01, -1.3713e-01,  9.7616e-02,
          8.0748e-02, -2.5350e-02],
        [-1.5541e-01, -6.4599e-02,  7.7279e-02, -3.4184e-02,  1.8475e-01,
          1.2845e-01,  5.5209e-02, -7.8387e-02,  5.6876e-02,  7.2437e-02,
          1.3281e-01,  1.3684e-01,  1.6813e-01,  2.3770e-02,  1.4829e-01,
          3.5648e-03, -3.3459e-02,  2.9855e-02, -5.7082e-02, -2.2013e-02,
          1.2552e-01,  1.2169e-01, -1.9604e-01,  1.1944e-01,  1.3918e-01,
          6.7880e-03,  7.8023e-02,  8.8571e-02,  1.2846e-01,  1.4307e-01,
         -5.5690e-02,  1.7576e-02],
        [-5.4176e-02,  9.2899e-02, -9.2657e-02,  1.7261e-01,  1.7312e-01,
          1.5237e-01, -1.7639e-01, -6.9668e-02,  4.8367e-02, -1.1395e-02,
          8.2776e-02,  1.0635e-02,  4.6463e-02, -7.7984e-02,  4.2909e-02,
         -3.8734e-02,  1.0452e-01, -1.2093e-01,  5.0049e-02,  3.5863e-02,
          2.4653e-02, -7.8021e-02,  5.7715e-02, -7.9324e-02, -1.4851e-01,
          2.6740e-03,  9.5747e-02,  8.1476e-03,  1.4059e-01, -8.2094e-02,
          1.4262e-01,  4.9276e-02],
        [-1.0498e-01, -6.4407e-02,  9.8338e-02, -1.7795e-01,  9.3244e-02,
          7.5900e-02, -1.2024e-01,  1.5309e-01,  1.9368e-01, -3.8235e-02,
          9.0513e-02, -1.1329e-01, -1.1061e-01,  1.3142e-01, -1.1235e-01,
          1.1960e-01,  2.1368e-01,  1.1212e-01,  8.1519e-02,  1.2631e-01,
          1.6692e-01, -7.7312e-02,  5.1371e-04, -6.3040e-02,  1.7134e-01,
          1.0384e-01, -1.5546e-01, -1.2718e-01,  2.2502e-02, -2.6972e-02,
         -1.8196e-01,  6.3051e-02],
        [ 1.0966e-01,  4.8700e-02,  4.6598e-02, -7.5886e-02,  4.5481e-02,
         -1.2932e-01,  1.1248e-01,  1.9858e-01,  1.4755e-01,  1.4086e-01,
          6.3436e-02, -2.1792e-02, -9.2642e-03,  2.8050e-02, -4.2782e-02,
         -1.3530e-01, -9.1559e-02,  1.0382e-01,  1.0043e-01, -6.4677e-02,
          1.0250e-01,  7.4309e-02,  2.0245e-01, -1.0650e-02, -2.2641e-02,
          1.9110e-01,  1.9922e-02,  1.6980e-01, -1.3147e-01, -1.3910e-01,
          1.6791e-01,  1.4456e-01],
        [-9.1783e-02,  1.7511e-01, -5.8854e-02,  1.6234e-01, -1.2415e-01,
          1.2496e-01,  6.3130e-02,  1.3111e-01,  1.2222e-01, -9.5995e-02,
         -9.2626e-02, -1.1139e-01,  1.4594e-01,  6.7031e-02,  1.5966e-01,
         -5.7418e-02, -7.3907e-02,  1.5564e-01, -9.8426e-02, -1.5392e-01,
          8.1001e-02,  9.8842e-02, -1.2799e-01, -9.9750e-02,  8.2046e-02,
         -1.4219e-02,  1.3511e-01, -7.9227e-02,  9.2578e-02,  1.4840e-01,
          2.9602e-02,  1.5185e-01],
        [-6.0870e-02,  1.1733e-01,  1.2009e-01, -1.6872e-01, -1.7609e-02,
          8.8227e-02, -1.5359e-01,  6.6070e-02, -7.0691e-02, -1.2413e-01,
          1.2750e-01, -1.4644e-04,  1.2044e-01,  8.0525e-02,  1.3982e-01,
         -1.9087e-01, -1.7879e-01,  1.4366e-01,  7.8021e-03,  1.9410e-02,
          7.4937e-02, -9.5840e-02, -4.9993e-02,  9.0969e-02, -1.2086e-02,
          8.9659e-02,  7.1717e-02, -1.5962e-02, -1.3319e-02,  8.3387e-02,
         -7.2663e-02, -1.2131e-01],
        [-1.1077e-01, -1.6234e-01, -8.8014e-02,  6.7174e-02,  4.2255e-02,
         -4.4638e-02,  1.4223e-01, -9.6841e-03, -8.9410e-04, -1.9273e-01,
         -1.3362e-01, -1.7397e-01,  6.8798e-03, -4.7491e-02, -5.4139e-02,
         -1.3850e-02,  8.2685e-02, -6.7780e-02,  7.9970e-02,  1.1601e-01,
          2.9353e-02, -2.9553e-02, -1.2261e-01, -1.6200e-01, -1.1288e-01,
         -4.6642e-02, -1.1784e-01,  3.9496e-02, -4.1667e-02, -5.6351e-02,
          2.3078e-02, -1.4653e-01],
        [-1.8656e-01, -5.3404e-02, -1.8267e-01,  2.6902e-02,  1.7200e-01,
          1.3001e-02,  5.4334e-02,  1.3308e-01,  1.0317e-01, -1.7254e-02,
         -1.6184e-01,  1.6956e-01,  1.2604e-01, -8.6084e-02, -1.3652e-02,
          8.9128e-02,  1.3640e-01,  1.1289e-01,  1.1436e-01,  1.3387e-01,
         -8.9976e-02,  1.7126e-01,  1.0600e-01,  1.7057e-02, -1.5234e-01,
          1.4023e-01,  6.8812e-02,  6.5046e-02, -8.1843e-02, -1.0352e-01,
          1.5310e-01, -8.6644e-02]], device='cuda:0') torch.Size([16, 32])
fc_blocks.1.0.bias tensor([ 0.1253,  0.0853, -0.1036,  0.1503, -0.0188,  0.0008, -0.0485, -0.0804,
        -0.0882,  0.0270,  0.0099,  0.1648, -0.0041,  0.0278,  0.0695, -0.1570],
       device='cuda:0') torch.Size([16])
fc_blocks.2.0.weight tensor([[-0.0661,  0.1408, -0.1620,  0.1332,  0.1048,  0.1333, -0.0496,  0.0372,
         -0.0705, -0.0527,  0.1746,  0.1005,  0.0596, -0.0997, -0.1689, -0.2085],
        [-0.2135,  0.1261, -0.0379, -0.1634, -0.1048, -0.0013, -0.0366, -0.0407,
          0.1497, -0.1728, -0.0464, -0.1759, -0.1425, -0.1898, -0.1074, -0.2312],
        [ 0.0514, -0.0472,  0.1795, -0.0600,  0.2560,  0.0785, -0.1595,  0.2591,
         -0.2521,  0.0033, -0.1740, -0.0834,  0.0502, -0.0208, -0.0036,  0.1241],
        [ 0.0567, -0.1504,  0.1358, -0.1750, -0.1636,  0.0564, -0.2281,  0.1864,
         -0.0600, -0.0044,  0.0182, -0.0954,  0.2030,  0.1175,  0.1330,  0.1982],
        [-0.2519, -0.2582,  0.0924,  0.0224,  0.0729,  0.2701,  0.1612, -0.2564,
          0.0742,  0.1725, -0.0692,  0.1653, -0.0718, -0.0673,  0.1484, -0.2250],
        [ 0.0640,  0.0515,  0.2657, -0.0221, -0.0448,  0.1274,  0.0308, -0.1587,
          0.2323, -0.1878,  0.1161,  0.0992, -0.1552, -0.1190,  0.2376,  0.1323],
        [ 0.0751,  0.0160, -0.2647,  0.0058,  0.1644,  0.0070,  0.0326, -0.1223,
          0.1471, -0.2067,  0.1638, -0.1332, -0.1636, -0.1734,  0.1598, -0.2473],
        [-0.2787, -0.2181, -0.2554,  0.0649,  0.0084,  0.2760, -0.2121,  0.0468,
          0.0333,  0.1387,  0.1118,  0.1527, -0.2188, -0.0466, -0.1640, -0.0604]],
       device='cuda:0') torch.Size([8, 16])
fc_blocks.2.0.bias tensor([ 0.2454, -0.0619, -0.2626, -0.1348, -0.2570, -0.0829, -0.1197, -0.1321],
       device='cuda:0') torch.Size([8])
fc_blocks.3.0.weight tensor([[ 0.2092,  0.3004,  0.1496,  0.0272, -0.1362,  0.1691,  0.1082, -0.2497],
        [-0.1644,  0.0044,  0.2354, -0.0923,  0.1921,  0.1306,  0.2389,  0.1169],
        [ 0.1219,  0.0363,  0.0150, -0.1564, -0.1070,  0.1200,  0.0574, -0.1232],
        [ 0.0816,  0.3380, -0.0611,  0.3053,  0.1649,  0.0547,  0.2511,  0.2780]],
       device='cuda:0') torch.Size([4, 8])
fc_blocks.3.0.bias tensor([ 0.2329,  0.0255,  0.3699, -0.3789], device='cuda:0') torch.Size([4])
fc_blocks.4.0.weight tensor([[-0.2442,  0.0263,  0.1976, -0.5234],
        [ 0.4671, -0.2194,  0.0290, -0.4792]], device='cuda:0') torch.Size([2, 4])
fc_blocks.4.0.bias tensor([-0.3439, -0.4458], device='cuda:0') torch.Size([2])
Train Loss : 2792.144, Val Loss : 10749.358
======> Trajectory Loss : 2657.654, Gravity Loss : 0.001, EndOfTrajectory Loss : 1.345, BelowGroundPenalize Loss : 0.000
===> [Minibatch 5/129].........recurrent_blocks.0.weight_ih_l0 tensor([[ 0.1447,  0.0210, -0.0779],
        [-0.0724, -0.0143,  0.1677],
        [ 0.0259,  0.0595,  0.0786],
        [-0.0051, -0.0748,  0.0375],
        [-0.0067, -0.0659, -0.0995],
        [ 0.0485, -0.1095,  0.1450],
        [-0.0780, -0.1457,  0.1534],
        [ 0.1066,  0.1446, -0.0667],
        [-0.1665, -0.0971, -0.0256],
        [ 0.1474,  0.0699,  0.1013],
        [-0.1266, -0.1773,  0.0428],
        [-0.0393,  0.1526, -0.0520],
        [-0.1474,  0.1654,  0.0950],
        [-0.1664, -0.0971,  0.1391],
        [-0.1564,  0.0770, -0.0843],
        [-0.1305,  0.0103,  0.1947],
        [ 0.0784, -0.1378, -0.1175],
        [ 0.0638,  0.1646, -0.0302],
        [-0.0522,  0.0142, -0.0589],
        [-0.1897, -0.1686, -0.0413],
        [-0.0703,  0.0825,  0.1567],
        [ 0.0338,  0.0494,  0.2031],
        [-0.0253, -0.0610, -0.1343],
        [ 0.0067, -0.1213, -0.0355],
        [-0.1465, -0.1296,  0.0302],
        [-0.2094, -0.1232, -0.0829],
        [-0.0497,  0.1048,  0.1133],
        [ 0.1269, -0.1831, -0.1750],
        [ 0.0247, -0.0628,  0.0913],
        [-0.1223, -0.0791,  0.1390],
        [ 0.0244, -0.1061, -0.1539],
        [ 0.0138,  0.0204, -0.0452],
        [-0.1393,  0.0514, -0.1582],
        [ 0.0627,  0.0475, -0.0114],
        [-0.0452,  0.1433,  0.0472],
        [ 0.1749,  0.1351, -0.0843],
        [-0.1063,  0.0095,  0.0611],
        [-0.0116, -0.1044, -0.1474],
        [-0.0578, -0.1469,  0.0605],
        [ 0.1330,  0.1017,  0.1385],
        [ 0.1491, -0.0533, -0.0437],
        [ 0.0400,  0.1035, -0.1206],
        [-0.1007,  0.1174,  0.0848],
        [ 0.1826,  0.1376,  0.2078],
        [-0.1478, -0.0031, -0.1336],
        [-0.0433, -0.0642, -0.1275],
        [-0.0838, -0.0210,  0.1129],
        [-0.1394,  0.0206, -0.0569],
        [ 0.0770, -0.0762, -0.0065],
        [-0.0350, -0.1447,  0.0755],
        [-0.1821,  0.1641,  0.0251],
        [-0.0208, -0.1465, -0.0295],
        [-0.1734, -0.0411,  0.1878],
        [ 0.0459, -0.0134,  0.0807],
        [-0.1146, -0.1373,  0.1585],
        [ 0.1533,  0.1239,  0.1848],
        [-0.1814,  0.0077, -0.1271],
        [ 0.0569, -0.1379, -0.1462],
        [ 0.0730,  0.1272, -0.0246],
        [ 0.0081, -0.0641,  0.1283],
        [ 0.1237,  0.0748,  0.1995],
        [-0.1605, -0.1020, -0.0378],
        [-0.1054,  0.0312, -0.0942],
        [-0.0216, -0.1741, -0.0438],
        [ 0.0574,  0.1276,  0.0088],
        [-0.1624,  0.0968, -0.0794],
        [-0.0160, -0.1946, -0.1685],
        [ 0.0887,  0.1268, -0.0331],
        [-0.1247, -0.1681, -0.0372],
        [-0.0445, -0.1866,  0.1123],
        [-0.0156, -0.0101, -0.0790],
        [ 0.1041,  0.0349,  0.0134],
        [-0.1619,  0.1760,  0.1486],
        [-0.0046, -0.1315, -0.0049],
        [-0.1160, -0.1308, -0.1215],
        [ 0.1167,  0.0818,  0.0611],
        [ 0.0893,  0.1553, -0.1744],
        [-0.1558,  0.1622,  0.0680],
        [-0.1544,  0.0824, -0.0254],
        [ 0.0247,  0.1185, -0.1427],
        [-0.0659, -0.0269, -0.0598],
        [ 0.1366, -0.1205,  0.1278],
        [ 0.0332,  0.1392, -0.0742],
        [ 0.0647,  0.1767,  0.0845],
        [-0.1626, -0.0941,  0.0398],
        [-0.1821,  0.1766, -0.0131],
        [-0.1133,  0.1722, -0.1375],
        [ 0.0389, -0.1340, -0.0121],
        [ 0.0477,  0.1191, -0.0684],
        [ 0.1104, -0.0821, -0.0134],
        [-0.1863,  0.1348, -0.1208],
        [-0.1791,  0.0506,  0.0921],
        [ 0.0225, -0.0568,  0.1344],
        [ 0.0575, -0.1474,  0.1051],
        [-0.0949,  0.0242,  0.0531],
        [-0.0994, -0.0421,  0.1781],
        [-0.0890, -0.0496, -0.0854],
        [-0.1897, -0.1568,  0.1109],
        [ 0.1398, -0.0611, -0.1690],
        [-0.0646,  0.0387,  0.1571],
        [-0.1388, -0.0785, -0.1806],
        [ 0.1337,  0.0606, -0.0920],
        [-0.0292,  0.1687, -0.1158],
        [ 0.0148,  0.0073, -0.0805],
        [-0.0704, -0.0940,  0.1025],
        [ 0.0823,  0.0348,  0.1289],
        [-0.1353,  0.0087,  0.1118],
        [ 0.1718,  0.1055,  0.0526],
        [-0.0768, -0.1243, -0.1154],
        [ 0.1428, -0.1129,  0.1191],
        [-0.0133, -0.0294, -0.0520],
        [ 0.0410,  0.0542,  0.0029],
        [ 0.1548, -0.0966,  0.1880],
        [-0.1273, -0.1085, -0.0432],
        [-0.0743, -0.0090, -0.0575],
        [ 0.1045,  0.1045,  0.0881],
        [ 0.0525,  0.0782, -0.1060],
        [ 0.1668, -0.1045,  0.1573],
        [ 0.0308, -0.1528,  0.1346],
        [-0.0894, -0.0791, -0.0960],
        [ 0.0444, -0.1903, -0.0468],
        [-0.0805, -0.0202,  0.0893],
        [ 0.0971, -0.1188,  0.0934],
        [-0.1669, -0.1831,  0.1305],
        [ 0.1658, -0.1832, -0.0845],
        [-0.0604,  0.0971,  0.0489],
        [ 0.1605, -0.1598,  0.1353],
        [ 0.0378,  0.0405, -0.0473]], device='cuda:0') torch.Size([128, 3])
recurrent_blocks.0.weight_hh_l0 tensor([[ 0.0198,  0.1086, -0.1388,  ...,  0.0890,  0.1195,  0.1128],
        [ 0.0293,  0.0208,  0.0922,  ...,  0.1304,  0.0547, -0.0883],
        [ 0.0374, -0.0830, -0.0174,  ..., -0.1466, -0.1571, -0.0200],
        ...,
        [-0.1376,  0.0159, -0.0149,  ..., -0.0795,  0.0822, -0.0094],
        [ 0.0685, -0.0013, -0.1134,  ...,  0.0395, -0.0626,  0.1661],
        [-0.0394,  0.1085, -0.0636,  ..., -0.1474,  0.0153, -0.0599]],
       device='cuda:0') torch.Size([128, 32])
recurrent_blocks.0.bias_ih_l0 tensor([-0.0650,  0.0599, -0.1725,  0.1144,  0.1088,  0.1910, -0.1239, -0.0198,
         0.0899,  0.0021, -0.1408,  0.1146, -0.1787,  0.0200,  0.1084,  0.0941,
         0.0747,  0.0872, -0.0129,  0.1011, -0.0322,  0.0149, -0.1056,  0.1174,
        -0.1429,  0.1680,  0.0799,  0.0025,  0.0704,  0.0979, -0.1088, -0.0558,
         0.0111, -0.0984,  0.0537,  0.1354, -0.0264, -0.1005,  0.0783,  0.0857,
        -0.0064,  0.0563,  0.1088,  0.1585, -0.1600,  0.0221, -0.0219, -0.0921,
         0.0889,  0.0029,  0.0929,  0.0153,  0.0777,  0.0143, -0.0793,  0.0513,
         0.1582,  0.0205,  0.1046, -0.1505, -0.1230,  0.0752,  0.0313,  0.0530,
        -0.0310,  0.1056, -0.0950,  0.1221,  0.1662,  0.0551,  0.1024,  0.0013,
        -0.1093,  0.0778,  0.1718,  0.1356,  0.0025,  0.0769, -0.0030, -0.1049,
         0.1030,  0.0667,  0.0866, -0.1351,  0.0112, -0.2052,  0.0548,  0.1270,
        -0.1584, -0.1513,  0.1561, -0.0595,  0.2126, -0.1582, -0.1757,  0.1386,
         0.0366,  0.1526,  0.0461,  0.0704, -0.0728,  0.0399, -0.1278,  0.0674,
        -0.0511,  0.0400,  0.2099,  0.1601, -0.0055,  0.0141, -0.0817,  0.0513,
        -0.0341, -0.0332,  0.0340, -0.1376,  0.0658,  0.0753,  0.0470, -0.0711,
        -0.0852,  0.1457,  0.0177, -0.1001,  0.1668, -0.0630,  0.1559, -0.0890],
       device='cuda:0') torch.Size([128])
recurrent_blocks.0.bias_hh_l0 tensor([ 0.0266, -0.0552, -0.0469,  0.0998, -0.1039,  0.1626,  0.0564,  0.0546,
        -0.1715, -0.0040,  0.1373,  0.0205,  0.0003, -0.1795, -0.0867, -0.0035,
         0.0666,  0.0953, -0.1626,  0.1153, -0.0005,  0.1837,  0.0412,  0.0924,
         0.1175, -0.1572, -0.0895,  0.1204,  0.0199,  0.0167, -0.0338, -0.1252,
        -0.1277,  0.1688, -0.0946, -0.1094,  0.0347,  0.0866, -0.1426, -0.0025,
         0.1004,  0.0451, -0.0270,  0.1767, -0.1618,  0.0954,  0.0671,  0.0373,
        -0.0987, -0.1574,  0.0319, -0.0853,  0.0997,  0.0555, -0.0650,  0.1491,
        -0.1414,  0.1130,  0.0065,  0.1010,  0.0788,  0.1304, -0.0990,  0.0678,
         0.0014,  0.1956, -0.1725,  0.0494,  0.0709, -0.0493, -0.1552,  0.1233,
         0.0649, -0.1916,  0.1080,  0.1523,  0.0228, -0.1362,  0.2177, -0.0186,
         0.0928,  0.1678,  0.1565, -0.1526,  0.1209,  0.0815, -0.1641,  0.0398,
         0.0051, -0.1162,  0.1465,  0.1382, -0.0721, -0.0552, -0.0552,  0.0715,
         0.0337, -0.1223,  0.1480,  0.1380, -0.0400, -0.0784, -0.0321,  0.1487,
         0.1444,  0.1967,  0.0779,  0.0492,  0.0054, -0.0219, -0.0176, -0.0273,
        -0.0099, -0.1508, -0.1327,  0.0103, -0.0515,  0.1563, -0.0537, -0.0615,
        -0.1537,  0.1386,  0.1031, -0.0027, -0.0548, -0.0618, -0.0799,  0.0554],
       device='cuda:0') torch.Size([128])
recurrent_blocks.0.weight_ih_l0_reverse tensor([[ 0.0699, -0.1666, -0.0323],
        [ 0.0483, -0.0355, -0.0603],
        [-0.0138,  0.0518,  0.0497],
        [-0.1825, -0.0609,  0.0971],
        [ 0.1946,  0.1632, -0.0601],
        [-0.1010, -0.0366,  0.1811],
        [ 0.0300,  0.0733, -0.1124],
        [ 0.0571,  0.0466,  0.1001],
        [ 0.0935, -0.0201, -0.1365],
        [-0.0654,  0.2123, -0.2167],
        [-0.0703,  0.0544,  0.0371],
        [-0.1675,  0.0485, -0.1917],
        [ 0.1166,  0.1049, -0.0056],
        [-0.0246, -0.0133,  0.1159],
        [ 0.1080, -0.0956, -0.0068],
        [-0.0825, -0.0745, -0.0191],
        [-0.0994, -0.0078,  0.0633],
        [-0.1010, -0.0044, -0.1001],
        [-0.1797,  0.0259, -0.1010],
        [ 0.1141, -0.0741,  0.1500],
        [-0.0104,  0.1309, -0.1417],
        [-0.1081, -0.1080, -0.0223],
        [-0.1104,  0.1089,  0.0091],
        [ 0.0340,  0.1389, -0.1545],
        [-0.1559,  0.0449, -0.0204],
        [-0.1745, -0.1951,  0.0054],
        [-0.0781,  0.0487, -0.1158],
        [-0.1874,  0.1072,  0.0544],
        [-0.0491,  0.1737,  0.2057],
        [ 0.1167,  0.0370, -0.1720],
        [-0.0570,  0.1659, -0.1786],
        [-0.1474, -0.1635, -0.0823],
        [-0.1576, -0.0660,  0.0683],
        [-0.1585,  0.0561,  0.1633],
        [-0.1574,  0.1765,  0.1235],
        [-0.0274, -0.0866, -0.1256],
        [ 0.1653,  0.1136,  0.1583],
        [-0.0615,  0.0922,  0.1172],
        [ 0.0655,  0.0282,  0.0777],
        [-0.1426, -0.0408,  0.0608],
        [ 0.0999,  0.0408,  0.0344],
        [ 0.1908, -0.0177, -0.1262],
        [-0.1834, -0.0297, -0.1500],
        [ 0.1395,  0.1826, -0.0835],
        [ 0.0372,  0.1727,  0.0400],
        [ 0.1629, -0.1484, -0.1155],
        [-0.1445,  0.1226, -0.1605],
        [ 0.0026, -0.2069, -0.0380],
        [-0.1595, -0.1337, -0.1784],
        [-0.0941,  0.1699,  0.1421],
        [ 0.0181,  0.1479,  0.1085],
        [ 0.0623, -0.0856,  0.0646],
        [-0.0335, -0.0626,  0.0300],
        [ 0.0244, -0.1946,  0.2054],
        [-0.1056,  0.1507, -0.1909],
        [-0.0265, -0.0471,  0.1172],
        [-0.0242,  0.0475,  0.1217],
        [ 0.0402, -0.0894,  0.1729],
        [-0.0253,  0.0624,  0.0394],
        [-0.1810,  0.0422, -0.0387],
        [-0.0861,  0.1137,  0.1394],
        [-0.1168, -0.0134, -0.2113],
        [-0.0621,  0.0406, -0.0723],
        [-0.2044,  0.1068,  0.1470],
        [ 0.1936, -0.0324, -0.1610],
        [ 0.0178, -0.1741, -0.0596],
        [-0.1111,  0.0277, -0.0638],
        [-0.1567, -0.1308, -0.1494],
        [-0.0720, -0.1178, -0.1519],
        [ 0.0011, -0.0565,  0.0006],
        [-0.0458, -0.0805, -0.1934],
        [-0.1585,  0.0618,  0.1523],
        [ 0.0393,  0.1941, -0.0844],
        [-0.1202, -0.2079, -0.0821],
        [ 0.0092,  0.0264,  0.0077],
        [-0.0372, -0.0472,  0.0442],
        [-0.0252, -0.0083, -0.0370],
        [-0.0934, -0.0112,  0.1108],
        [-0.1963, -0.1511,  0.0797],
        [ 0.0986,  0.0325,  0.0483],
        [ 0.0455, -0.1527,  0.0928],
        [ 0.0620, -0.0666, -0.0550],
        [-0.0471, -0.1418,  0.1753],
        [ 0.1255,  0.1294, -0.0871],
        [ 0.1632,  0.1342, -0.1777],
        [ 0.0077, -0.1410,  0.1904],
        [ 0.0670,  0.0107,  0.1024],
        [-0.0866,  0.1066,  0.1088],
        [ 0.0597, -0.0414, -0.0070],
        [ 0.0999, -0.1144,  0.1069],
        [-0.1493, -0.1382, -0.0944],
        [-0.1282, -0.0551,  0.1842],
        [-0.0884,  0.1715,  0.1333],
        [-0.1237, -0.0346, -0.1212],
        [-0.1591,  0.0782,  0.1766],
        [-0.0979, -0.1715,  0.1219],
        [-0.0090, -0.1380,  0.0930],
        [-0.0415, -0.0647,  0.0196],
        [-0.0873, -0.0458,  0.0429],
        [ 0.1476, -0.0387, -0.1387],
        [ 0.0455,  0.1495, -0.0804],
        [ 0.1157, -0.1883,  0.0048],
        [-0.0624,  0.0507,  0.2092],
        [ 0.0857,  0.1103,  0.0614],
        [-0.0119, -0.1856,  0.0480],
        [ 0.1112,  0.0402,  0.0705],
        [ 0.0621,  0.0641,  0.1533],
        [ 0.1240, -0.0774, -0.1003],
        [ 0.1498, -0.0603,  0.1056],
        [ 0.0335, -0.1414,  0.0975],
        [ 0.1121,  0.0132,  0.1346],
        [ 0.0196, -0.0898, -0.1555],
        [ 0.1366,  0.0517, -0.1794],
        [-0.1712, -0.0670,  0.0692],
        [ 0.0718,  0.0930,  0.1426],
        [ 0.1638, -0.1896, -0.0791],
        [ 0.0837,  0.0853, -0.0925],
        [-0.1776, -0.0045,  0.1761],
        [ 0.0887, -0.1445,  0.0025],
        [-0.1261, -0.0424, -0.0112],
        [ 0.1165, -0.0727, -0.1131],
        [-0.1350,  0.1270,  0.0759],
        [-0.0180, -0.0715, -0.0282],
        [-0.0870, -0.0337,  0.0543],
        [ 0.0227, -0.0190, -0.1319],
        [ 0.1067, -0.0078,  0.0168],
        [ 0.0197,  0.0038,  0.0833],
        [-0.0221, -0.1376, -0.1091]], device='cuda:0') torch.Size([128, 3])
recurrent_blocks.0.weight_hh_l0_reverse tensor([[ 0.0382,  0.1491, -0.1590,  ..., -0.0732, -0.0775,  0.0383],
        [ 0.0058, -0.0370,  0.1844,  ..., -0.1342,  0.0067,  0.0324],
        [-0.1587,  0.0588,  0.1723,  ...,  0.2035, -0.0137,  0.0961],
        ...,
        [ 0.1034,  0.1116, -0.1050,  ..., -0.1402, -0.0120,  0.0934],
        [ 0.0856,  0.2102,  0.1811,  ..., -0.1108,  0.1653,  0.0018],
        [ 0.0317, -0.0589, -0.0160,  ..., -0.0882,  0.2150,  0.0680]],
       device='cuda:0') torch.Size([128, 32])
recurrent_blocks.0.bias_ih_l0_reverse tensor([ 0.1457, -0.0818, -0.0666,  0.0959, -0.0394,  0.0599,  0.0673, -0.1537,
        -0.0856, -0.1215,  0.0966,  0.1250,  0.1864,  0.0551, -0.0804,  0.0403,
        -0.0991, -0.0748,  0.1672, -0.1250, -0.1350,  0.1614, -0.1863, -0.1750,
         0.1447, -0.0961,  0.1271, -0.0838,  0.0979,  0.0107, -0.0745,  0.0753,
         0.1257,  0.1412, -0.0468,  0.0360,  0.1012,  0.0342,  0.0602, -0.1562,
         0.1016,  0.0149, -0.1350, -0.0998, -0.1222,  0.0982,  0.0616,  0.0511,
        -0.1484, -0.0946, -0.0653,  0.1775,  0.0612,  0.1825,  0.1011, -0.0994,
        -0.0140,  0.1068, -0.1308,  0.0639, -0.1356, -0.0067, -0.1989, -0.0610,
        -0.1445, -0.0989,  0.0640, -0.1093, -0.1513,  0.1231, -0.1866,  0.0579,
        -0.0176,  0.0493, -0.1334, -0.0355, -0.2139,  0.0300, -0.0231,  0.1063,
        -0.0112,  0.0156,  0.1197,  0.1024, -0.0667,  0.1382, -0.1240,  0.0062,
         0.0120, -0.0452, -0.0547, -0.0250,  0.0962,  0.0804, -0.0694,  0.0570,
        -0.0143,  0.1242,  0.1719, -0.1382,  0.1275, -0.1038,  0.1874,  0.1579,
        -0.0534, -0.1138,  0.1475, -0.1292,  0.1945,  0.0525, -0.1339, -0.0188,
         0.0805,  0.0141,  0.1322,  0.1385,  0.0162,  0.1793,  0.0274, -0.0709,
        -0.0731,  0.1556, -0.1163,  0.1170, -0.0900, -0.0826, -0.1102, -0.0507],
       device='cuda:0') torch.Size([128])
recurrent_blocks.0.bias_hh_l0_reverse tensor([ 1.2566e-01,  8.1829e-02,  4.9619e-02, -1.4303e-01, -1.0313e-01,
         3.5163e-02,  2.0579e-03,  6.7259e-02,  1.8431e-04,  4.2447e-02,
        -7.0469e-02,  1.0181e-01, -9.7668e-02, -1.4701e-01, -1.2586e-01,
        -1.1465e-01, -1.9417e-01, -1.3207e-01,  1.0700e-01, -1.4358e-01,
         7.8737e-02, -9.6603e-02, -1.8337e-01,  1.0914e-01, -3.5355e-03,
        -7.6927e-02,  5.5152e-02,  2.3746e-02,  4.3906e-02,  9.9308e-02,
        -1.2645e-01,  4.9879e-02, -6.1152e-02,  1.4424e-01,  3.6171e-02,
         1.4030e-01,  5.4085e-03,  4.0260e-02,  3.8711e-02, -1.1839e-01,
         1.4404e-01, -1.9327e-01, -1.5993e-01,  7.0043e-02,  1.2084e-01,
        -1.0345e-01,  4.1573e-02,  8.8312e-03, -1.8473e-01, -8.1949e-02,
        -1.4974e-01, -1.0799e-01, -6.8033e-02, -1.3114e-04, -1.3221e-01,
        -3.8588e-02,  6.3981e-02, -6.9068e-02,  1.0231e-01, -1.2039e-01,
        -8.4295e-02,  6.9543e-02, -2.5493e-02,  1.6152e-01, -8.6933e-02,
        -1.2865e-01,  3.8306e-02,  5.3438e-02, -4.7629e-02,  4.6515e-02,
         7.1200e-02, -8.4357e-02, -1.1163e-01, -9.4160e-02, -7.6909e-03,
         1.3113e-01, -2.0645e-01,  1.4460e-01,  1.4716e-01,  5.9406e-02,
        -4.7612e-02, -1.7989e-01, -1.3983e-01, -1.2832e-01,  3.0463e-02,
        -2.3648e-02,  5.1101e-02, -5.7084e-02, -9.4425e-02, -1.5566e-01,
        -1.2586e-02,  1.9748e-01,  1.0998e-01, -3.2278e-02,  5.7400e-02,
        -1.8445e-02,  1.2250e-01, -1.1174e-01, -2.6553e-02, -1.9481e-01,
         1.4984e-01, -1.0299e-01, -6.5456e-02, -8.7033e-02,  1.5395e-01,
        -3.1835e-03, -2.2732e-02, -1.4984e-01,  4.7286e-02, -6.8780e-02,
        -1.8559e-01,  1.1876e-01,  8.6514e-02, -1.2125e-01,  9.3134e-02,
         1.5361e-01, -1.1454e-01,  2.7569e-02, -1.9770e-01, -2.9747e-02,
         1.0474e-02, -3.9439e-02, -2.4166e-02, -1.1737e-01,  1.2034e-01,
         8.8362e-02,  5.4639e-02, -1.6674e-02], device='cuda:0') torch.Size([128])
recurrent_blocks.1.weight_ih_l0 tensor([[-0.1601,  0.0734,  0.0983,  ..., -0.0321,  0.2129, -0.0969],
        [-0.0585,  0.0281,  0.0114,  ...,  0.0412, -0.1052,  0.1640],
        [ 0.1771, -0.1013, -0.0228,  ..., -0.0295, -0.0226,  0.0590],
        ...,
        [ 0.1359,  0.0193,  0.0650,  ..., -0.1078,  0.0488,  0.1488],
        [-0.0194,  0.1775,  0.0604,  ..., -0.2005,  0.0021,  0.0225],
        [-0.1865,  0.1474, -0.0345,  ..., -0.0299, -0.0620,  0.0226]],
       device='cuda:0') torch.Size([128, 64])
recurrent_blocks.1.weight_hh_l0 tensor([[-0.1768,  0.1547, -0.1749,  ...,  0.1106,  0.0565,  0.0060],
        [ 0.0413,  0.1332,  0.0100,  ...,  0.1923, -0.1274,  0.0899],
        [ 0.1725, -0.1409, -0.0875,  ...,  0.0313,  0.0534, -0.1327],
        ...,
        [ 0.0615, -0.0215, -0.0057,  ...,  0.0231, -0.1426, -0.1017],
        [-0.0212,  0.1403, -0.0465,  ..., -0.1051, -0.1623, -0.0027],
        [ 0.1436, -0.0254,  0.0092,  ...,  0.1235, -0.1437,  0.0406]],
       device='cuda:0') torch.Size([128, 32])
recurrent_blocks.1.bias_ih_l0 tensor([ 0.0659,  0.1439,  0.0787, -0.0452,  0.0937, -0.0539, -0.0286, -0.0825,
         0.0772, -0.1563, -0.1287,  0.1214, -0.0217,  0.0533,  0.0332,  0.2168,
         0.1373,  0.1104, -0.1173,  0.1907,  0.0047, -0.0254, -0.0214, -0.1067,
         0.0579, -0.0592, -0.1897,  0.1316,  0.1178, -0.1990, -0.0748, -0.1311,
        -0.0328,  0.0589,  0.0971,  0.0282, -0.1511, -0.1244,  0.1850,  0.1689,
         0.0887, -0.0311,  0.0036, -0.0351,  0.0440, -0.1516, -0.0131,  0.0547,
         0.0989,  0.0642,  0.1429, -0.0929,  0.0441, -0.1481,  0.1502, -0.1401,
         0.0433,  0.0711, -0.1806, -0.0334,  0.0500,  0.1310,  0.0545, -0.0062,
        -0.0143,  0.2170,  0.0910,  0.0873, -0.0148,  0.0578,  0.0865, -0.1647,
         0.0235,  0.0613, -0.0360, -0.0980,  0.0063,  0.1255, -0.0494, -0.1253,
        -0.1333, -0.0261, -0.0380,  0.0105,  0.1701, -0.0123,  0.0697,  0.0114,
        -0.0806,  0.0007,  0.0004, -0.1170,  0.0503, -0.0500,  0.0805,  0.1160,
         0.0825,  0.0019,  0.1290, -0.0212, -0.0966, -0.0269,  0.1072, -0.1093,
        -0.1086, -0.1565,  0.0733, -0.0270, -0.0289,  0.0942,  0.0103,  0.1255,
        -0.1282,  0.0875, -0.0173,  0.0206,  0.2036, -0.0997,  0.1731, -0.1123,
         0.1331, -0.0524,  0.0407, -0.0865,  0.1232,  0.0019, -0.1414,  0.0742],
       device='cuda:0') torch.Size([128])
recurrent_blocks.1.bias_hh_l0 tensor([-0.0709,  0.1457,  0.0425,  0.1221, -0.0047,  0.1842,  0.0023,  0.1780,
        -0.0342, -0.0852, -0.0632, -0.0074, -0.0480, -0.0324, -0.1618,  0.1945,
         0.1594,  0.0980,  0.0275, -0.0738,  0.2044,  0.1019,  0.1753, -0.1429,
         0.1138,  0.1104, -0.0308, -0.1354,  0.0128, -0.1627, -0.0358, -0.1142,
         0.0288, -0.1609,  0.0443, -0.0561, -0.1177, -0.0155, -0.0464,  0.0701,
         0.0161, -0.1140,  0.1316,  0.0171, -0.0451,  0.1793,  0.1342, -0.0085,
        -0.0564,  0.0225, -0.0557,  0.0682, -0.0454, -0.0024,  0.0704,  0.1197,
         0.1312, -0.0412, -0.1081,  0.1703, -0.0428, -0.1544,  0.0563, -0.1310,
         0.0683, -0.1052,  0.1638,  0.1793, -0.1442,  0.0105, -0.2017,  0.1434,
         0.1390, -0.1304, -0.0449, -0.1252, -0.0781,  0.0617,  0.0930,  0.0224,
        -0.0805, -0.0532,  0.1598,  0.1456,  0.2045,  0.0148, -0.1267,  0.1578,
        -0.1273, -0.1513,  0.1425, -0.0283,  0.0887,  0.0468, -0.0560, -0.1091,
        -0.0350,  0.0900,  0.0182,  0.1057,  0.0661, -0.0861,  0.1573, -0.1110,
        -0.0823,  0.0312,  0.1444, -0.0737, -0.0467, -0.0888, -0.1413,  0.0194,
        -0.1805,  0.1434,  0.1639,  0.1778,  0.1210, -0.0799, -0.0559, -0.1153,
        -0.0243, -0.1488, -0.0995, -0.1191, -0.0841, -0.1065,  0.1112,  0.1363],
       device='cuda:0') torch.Size([128])
recurrent_blocks.1.weight_ih_l0_reverse tensor([[-0.0409,  0.0658, -0.0316,  ...,  0.1013, -0.1157,  0.0675],
        [ 0.0758, -0.0111,  0.0586,  ...,  0.1310, -0.0397,  0.0596],
        [-0.2169, -0.1183,  0.0207,  ..., -0.0702,  0.0524,  0.0479],
        ...,
        [-0.1419,  0.0591, -0.1839,  ..., -0.0359, -0.0483, -0.1069],
        [ 0.0652,  0.1889,  0.0368,  ..., -0.0570, -0.1564, -0.1162],
        [ 0.0318,  0.0231, -0.0620,  ..., -0.0349, -0.0960, -0.0812]],
       device='cuda:0') torch.Size([128, 64])
recurrent_blocks.1.weight_hh_l0_reverse tensor([[ 0.1074,  0.0637,  0.1061,  ...,  0.1178, -0.1962, -0.1560],
        [-0.0662, -0.0274, -0.0326,  ...,  0.1016, -0.0932,  0.0710],
        [-0.0961, -0.0728,  0.0544,  ...,  0.1398, -0.1773,  0.0318],
        ...,
        [ 0.1188, -0.1385,  0.0887,  ..., -0.0463,  0.0653, -0.1340],
        [-0.0863,  0.0871,  0.0627,  ...,  0.0192, -0.0105,  0.0183],
        [ 0.0191, -0.1294,  0.1720,  ...,  0.0306,  0.1569,  0.0446]],
       device='cuda:0') torch.Size([128, 32])
recurrent_blocks.1.bias_ih_l0_reverse tensor([-0.1236,  0.1395,  0.0287, -0.1398,  0.0982, -0.0222,  0.1927,  0.0980,
         0.0959, -0.0475,  0.0214,  0.2137,  0.0600,  0.0354, -0.0465, -0.1736,
         0.1402, -0.0296,  0.0670,  0.0911,  0.1005, -0.0511,  0.1142, -0.1273,
        -0.1432, -0.0636,  0.1720, -0.0106,  0.0286, -0.0258, -0.0263, -0.1153,
         0.1130, -0.0083, -0.0681, -0.1761, -0.0872,  0.1104, -0.1068,  0.1740,
        -0.1060, -0.0805,  0.1998, -0.0622,  0.1907,  0.1133, -0.1232,  0.0483,
        -0.0608, -0.0840, -0.2015,  0.0402, -0.0959, -0.1376,  0.1554, -0.1203,
         0.0601, -0.0005,  0.2021, -0.0062,  0.0461,  0.0950,  0.1350,  0.1580,
        -0.0412, -0.0140,  0.1763, -0.1656, -0.0589, -0.0373, -0.1281,  0.1169,
        -0.1917,  0.0970,  0.0623, -0.0848, -0.2005, -0.1280,  0.0370,  0.1102,
         0.0041,  0.0591, -0.1417,  0.0092, -0.0445, -0.1054, -0.0159, -0.1599,
         0.0068,  0.0547,  0.1232,  0.1404, -0.1472, -0.1361, -0.0297, -0.0375,
         0.0785, -0.1243, -0.0963,  0.0032, -0.1875,  0.1011,  0.1938,  0.1179,
        -0.1261, -0.1301, -0.0779,  0.1184, -0.1381, -0.0912,  0.0027, -0.1174,
         0.1617, -0.0286, -0.1537,  0.1619,  0.1243, -0.1113,  0.1371,  0.1059,
        -0.1756,  0.0902,  0.0361, -0.1293,  0.0341,  0.0156, -0.1127,  0.1844],
       device='cuda:0') torch.Size([128])
recurrent_blocks.1.bias_hh_l0_reverse tensor([-0.1028,  0.0352, -0.0711,  0.0275, -0.1520,  0.1178, -0.0115, -0.0194,
         0.1665,  0.1215, -0.0509,  0.1359,  0.1830,  0.1064, -0.0196, -0.0958,
        -0.1330,  0.0277,  0.0159, -0.0554, -0.0303,  0.1442, -0.0802,  0.1859,
         0.0481, -0.0383,  0.0844, -0.0487, -0.1100,  0.1612, -0.1073, -0.0990,
        -0.1003,  0.0703, -0.1808,  0.1503,  0.0622, -0.0879, -0.0417,  0.0683,
         0.1200, -0.0025, -0.0682, -0.1288,  0.0452,  0.0566, -0.0591,  0.0547,
         0.1833, -0.1347,  0.0686, -0.0627,  0.0420,  0.0470,  0.0620, -0.1235,
        -0.1174, -0.0328, -0.0060, -0.0208, -0.0162,  0.1300,  0.0773,  0.1662,
        -0.0781, -0.1136, -0.0861, -0.0932,  0.0140,  0.1332, -0.0385, -0.0160,
        -0.0112, -0.1211,  0.0879,  0.1852, -0.0256, -0.0270, -0.1764,  0.1165,
        -0.0248,  0.0918,  0.1586, -0.0862,  0.0886,  0.1613,  0.0285, -0.1123,
         0.0118,  0.0831,  0.1642, -0.0102, -0.1038, -0.1852,  0.2107,  0.2189,
        -0.1556, -0.0050, -0.0075, -0.0572, -0.0964,  0.0482,  0.2030, -0.1321,
        -0.0773,  0.0342,  0.0136, -0.0771,  0.1341,  0.1105, -0.1298, -0.1689,
         0.0587,  0.0926, -0.1601,  0.0700,  0.1401,  0.0716,  0.1416,  0.1833,
        -0.0153,  0.1022,  0.2046,  0.1615,  0.1011, -0.1203, -0.0743, -0.1095],
       device='cuda:0') torch.Size([128])
recurrent_blocks.2.weight_ih_l0 tensor([[-0.1357, -0.1248, -0.0374,  ..., -0.1212, -0.0009, -0.0707],
        [ 0.1114,  0.0461,  0.2209,  ...,  0.0453,  0.1251, -0.1590],
        [-0.0735,  0.1394,  0.1268,  ...,  0.0805,  0.1103,  0.1457],
        ...,
        [-0.1706, -0.0731,  0.1934,  ..., -0.0910, -0.1251, -0.0934],
        [-0.1116,  0.0433, -0.1358,  ...,  0.0230, -0.1014,  0.1732],
        [ 0.0839, -0.1502, -0.0842,  ...,  0.0361,  0.0767,  0.0912]],
       device='cuda:0') torch.Size([128, 64])
recurrent_blocks.2.weight_hh_l0 tensor([[-0.0941, -0.1104, -0.1303,  ..., -0.0012, -0.0226,  0.0629],
        [ 0.0790, -0.0131, -0.0595,  ..., -0.0914, -0.1352,  0.0456],
        [-0.0140, -0.1305, -0.0868,  ...,  0.1442, -0.1353, -0.0762],
        ...,
        [-0.0018,  0.1890, -0.1016,  ...,  0.1728, -0.0675, -0.0589],
        [-0.0395, -0.1026, -0.0655,  ..., -0.1095, -0.1204, -0.0669],
        [-0.0749,  0.0701, -0.1111,  ...,  0.0933, -0.1409,  0.1342]],
       device='cuda:0') torch.Size([128, 32])
recurrent_blocks.2.bias_ih_l0 tensor([-0.0440,  0.1583, -0.0781, -0.0614,  0.1542,  0.0725, -0.1668,  0.0449,
         0.0826, -0.0160,  0.0778,  0.0801, -0.1290, -0.0767,  0.0385, -0.0983,
         0.0265, -0.0159,  0.1113, -0.1436,  0.0190, -0.0772, -0.1096, -0.0969,
        -0.0687, -0.0937,  0.1887, -0.1356,  0.0566, -0.1063, -0.0302, -0.0229,
         0.1315, -0.0397,  0.0177, -0.0632, -0.0964,  0.0423,  0.1719, -0.0880,
         0.0188,  0.1365, -0.1027, -0.0723,  0.1583,  0.0923,  0.0114,  0.0333,
         0.0658,  0.0596,  0.0071, -0.0799, -0.0604, -0.1370,  0.1467, -0.1285,
        -0.1099, -0.1239,  0.1721,  0.0208, -0.0135, -0.1221,  0.1664,  0.1426,
        -0.0030,  0.0862, -0.1334,  0.0358, -0.0391,  0.1313, -0.1364,  0.0396,
         0.1827, -0.0616,  0.0264, -0.0710,  0.1367,  0.0953, -0.0022, -0.0559,
         0.0609,  0.0069,  0.0638, -0.1090,  0.1007,  0.0369, -0.1340, -0.0928,
         0.1214, -0.1618, -0.1169,  0.0078,  0.1193, -0.1714,  0.1588,  0.0492,
        -0.1757, -0.0723, -0.1120,  0.0386, -0.1438,  0.0345,  0.1620,  0.0095,
         0.1586,  0.1666, -0.1582,  0.0813,  0.1222,  0.1001, -0.0557,  0.1779,
        -0.0592, -0.0647,  0.1790,  0.0790,  0.1002, -0.0874, -0.0706, -0.1797,
        -0.0688,  0.0709, -0.1182,  0.0586,  0.1770, -0.1729, -0.0938,  0.1281],
       device='cuda:0') torch.Size([128])
recurrent_blocks.2.bias_hh_l0 tensor([-0.2036,  0.1695, -0.1255,  0.0481, -0.0825,  0.0917,  0.0369,  0.0564,
        -0.0889, -0.1068,  0.1075, -0.1234,  0.0747, -0.1504, -0.0494, -0.0456,
         0.1627,  0.1166,  0.0757, -0.1055, -0.1014, -0.0157, -0.1139,  0.0952,
         0.1380, -0.0762,  0.0476, -0.1399,  0.0579, -0.0662, -0.0675,  0.0326,
        -0.0577,  0.1060,  0.0661,  0.0398, -0.0081,  0.0326,  0.1507,  0.0725,
        -0.1117,  0.1431, -0.1670, -0.0993, -0.0927,  0.0856,  0.0541,  0.0020,
        -0.0550,  0.1158,  0.0948, -0.0331, -0.1092, -0.2076,  0.0859, -0.0864,
         0.1113, -0.1553,  0.0791, -0.0756,  0.1823,  0.0278, -0.0498, -0.0843,
         0.1179,  0.0167,  0.0088, -0.0431, -0.0892, -0.0532,  0.0502, -0.1400,
         0.1388, -0.0326, -0.1366,  0.1365,  0.1322, -0.0401, -0.0402, -0.1253,
         0.0953, -0.1629,  0.1149,  0.0666,  0.1067, -0.0224,  0.0829, -0.1542,
        -0.1237, -0.0166, -0.1438,  0.1584,  0.1886, -0.1438, -0.0497,  0.0335,
         0.1021,  0.0653, -0.1195, -0.0739, -0.1229,  0.0900,  0.1286,  0.0452,
        -0.1530,  0.0229,  0.0780, -0.1345,  0.2089,  0.0425,  0.1210,  0.1349,
        -0.0773,  0.0513, -0.0109,  0.1220, -0.1248, -0.0220,  0.1529, -0.0166,
        -0.0105,  0.1880, -0.1024, -0.1714,  0.2153,  0.1309,  0.1807,  0.1275],
       device='cuda:0') torch.Size([128])
recurrent_blocks.2.weight_ih_l0_reverse tensor([[-0.0641, -0.1087,  0.1417,  ...,  0.1094, -0.0284, -0.0209],
        [ 0.0917,  0.1107,  0.1301,  ..., -0.1339, -0.0752, -0.0070],
        [ 0.1511,  0.1200,  0.0696,  ...,  0.1192,  0.0956, -0.1466],
        ...,
        [-0.1557, -0.1262, -0.1789,  ...,  0.1264,  0.0447,  0.0492],
        [-0.0911, -0.0126,  0.0866,  ..., -0.1584,  0.0885, -0.0179],
        [-0.1273,  0.0311,  0.0693,  ...,  0.0333,  0.0191,  0.1547]],
       device='cuda:0') torch.Size([128, 64])
recurrent_blocks.2.weight_hh_l0_reverse tensor([[ 0.1328,  0.0028, -0.0437,  ..., -0.1404, -0.2064,  0.0109],
        [-0.0827,  0.0366,  0.0616,  ..., -0.0915, -0.0021,  0.0268],
        [-0.0354,  0.0760, -0.0286,  ..., -0.1496,  0.1190,  0.1274],
        ...,
        [-0.0136, -0.0445, -0.0133,  ..., -0.1751,  0.0508,  0.1149],
        [ 0.1781,  0.0013,  0.1452,  ...,  0.0443,  0.1538, -0.0242],
        [-0.0089,  0.1740,  0.1415,  ..., -0.0455,  0.1433, -0.0447]],
       device='cuda:0') torch.Size([128, 32])
recurrent_blocks.2.bias_ih_l0_reverse tensor([-0.2053, -0.1644, -0.0448, -0.1036,  0.0930,  0.0263, -0.0161,  0.0774,
         0.0898,  0.0020,  0.0243,  0.0188, -0.0923,  0.0574, -0.0970, -0.0211,
         0.0141,  0.2031, -0.0351, -0.0400, -0.0735,  0.0897,  0.0818, -0.0372,
        -0.0865, -0.1843,  0.0833, -0.1142, -0.1005, -0.0519, -0.0767, -0.0009,
         0.0754,  0.0682, -0.0447,  0.0532, -0.2068,  0.1398,  0.0275,  0.1237,
         0.1655,  0.0868,  0.1371, -0.0408, -0.0901,  0.1423, -0.0137,  0.0641,
         0.1876, -0.0948, -0.0800, -0.0207, -0.1103, -0.0067,  0.1683,  0.0804,
        -0.0487, -0.1578, -0.0662, -0.0423, -0.0068,  0.1589,  0.0922,  0.0111,
        -0.1096,  0.0227,  0.1183, -0.1308, -0.0101,  0.2158, -0.1372, -0.0814,
        -0.0683, -0.0798,  0.0850, -0.0604, -0.0489,  0.1467, -0.0710,  0.1690,
        -0.1757,  0.1090, -0.1353, -0.0398, -0.1734,  0.0572,  0.1054,  0.0562,
         0.0472,  0.1189,  0.0408,  0.1587,  0.0357,  0.0528,  0.0473,  0.1376,
         0.1011,  0.0003,  0.0071,  0.1062,  0.1319,  0.1231, -0.1240,  0.0836,
        -0.0436, -0.0491, -0.1611,  0.1796,  0.1348,  0.0796,  0.0985, -0.1262,
         0.1494,  0.1928, -0.0988,  0.1829,  0.0416,  0.1912,  0.0084,  0.0371,
        -0.1499, -0.0286, -0.0041,  0.1694, -0.0286,  0.1452,  0.0583,  0.0221],
       device='cuda:0') torch.Size([128])
recurrent_blocks.2.bias_hh_l0_reverse tensor([ 0.1161,  0.0003, -0.0956,  0.0899,  0.0551,  0.1826,  0.0709,  0.0508,
         0.0746,  0.0878,  0.0599, -0.1358,  0.0178, -0.0979, -0.1742, -0.0221,
        -0.0225,  0.1041,  0.0388,  0.0637, -0.1278,  0.0626,  0.1624, -0.1846,
        -0.2101,  0.1253,  0.1523,  0.1625,  0.1038,  0.1427,  0.1094,  0.0279,
         0.0895,  0.0304,  0.1257,  0.1394, -0.0520, -0.0078, -0.0493, -0.0694,
        -0.0254, -0.0253,  0.0869,  0.0172, -0.0658, -0.0940, -0.1636, -0.0979,
         0.1845,  0.1695, -0.0978, -0.0009, -0.0228,  0.2037,  0.1217,  0.1448,
        -0.0145, -0.0627,  0.1706, -0.0783,  0.1452, -0.0416,  0.1899,  0.2144,
         0.0665, -0.0351,  0.1738, -0.1470, -0.0090, -0.0091, -0.1227,  0.1838,
        -0.1599,  0.0142, -0.1132,  0.1800, -0.0318,  0.0426, -0.0056,  0.1756,
         0.0181,  0.0819, -0.1014, -0.1195, -0.1215,  0.0394,  0.1644,  0.0958,
         0.0901, -0.1297, -0.0621,  0.1074, -0.0974,  0.1454,  0.1185,  0.1332,
        -0.0865,  0.1340, -0.1390, -0.1623,  0.1271, -0.0618, -0.0346,  0.0696,
        -0.0134, -0.0710,  0.0303,  0.2126,  0.2012,  0.1425,  0.0997, -0.1100,
        -0.1083,  0.1793,  0.0516,  0.0667, -0.1149, -0.1006,  0.0015,  0.1097,
         0.0728, -0.0583, -0.1146, -0.1094,  0.0978, -0.1325, -0.1068,  0.0120],
       device='cuda:0') torch.Size([128])
recurrent_blocks.3.weight_ih_l0 tensor([[-0.0891,  0.1389, -0.1196,  ..., -0.0734, -0.0911,  0.0901],
        [ 0.0140,  0.0710, -0.1195,  ..., -0.0837,  0.0909,  0.0565],
        [-0.0145,  0.0076,  0.0586,  ..., -0.0550,  0.1152,  0.0997],
        ...,
        [ 0.0459, -0.1265,  0.1857,  ..., -0.1384, -0.0789,  0.1623],
        [ 0.0576, -0.1824, -0.1673,  ...,  0.1354, -0.0621,  0.1458],
        [-0.0421, -0.1635,  0.0532,  ..., -0.0534, -0.1025, -0.1107]],
       device='cuda:0') torch.Size([128, 64])
recurrent_blocks.3.weight_hh_l0 tensor([[-0.0350,  0.1131, -0.1438,  ..., -0.0278,  0.0763,  0.1318],
        [ 0.0933, -0.0136, -0.1168,  ..., -0.0392, -0.0985, -0.1014],
        [-0.0339, -0.0427, -0.1302,  ..., -0.1680, -0.0605,  0.0945],
        ...,
        [-0.1089,  0.0530,  0.0790,  ..., -0.1491, -0.0333, -0.0154],
        [ 0.1089, -0.1355, -0.1314,  ..., -0.1798,  0.0591, -0.1595],
        [-0.1421, -0.0496,  0.1444,  ...,  0.0253, -0.0587,  0.1856]],
       device='cuda:0') torch.Size([128, 32])
recurrent_blocks.3.bias_ih_l0 tensor([ 0.0037, -0.0280,  0.0706, -0.2055, -0.0583,  0.1818,  0.1761, -0.1169,
         0.1292, -0.0931,  0.0016, -0.1144,  0.1164,  0.0004,  0.1037, -0.1299,
         0.1317,  0.0920,  0.1223, -0.0825, -0.0594,  0.1719,  0.0550, -0.1564,
        -0.0261, -0.1095, -0.0104,  0.1293, -0.0402, -0.1582, -0.0772, -0.1307,
         0.0167, -0.0989,  0.1085, -0.0579,  0.0898,  0.0138, -0.0277, -0.1897,
        -0.1151, -0.0688,  0.1095,  0.1396,  0.2143, -0.0514, -0.0191,  0.0702,
        -0.1169, -0.0653,  0.1392,  0.1268,  0.0788,  0.1188, -0.0101,  0.1415,
         0.1381,  0.1247,  0.1706, -0.1651, -0.0541,  0.0573, -0.0883, -0.0235,
         0.1390, -0.0224,  0.1094,  0.0065,  0.1382,  0.1233, -0.1913,  0.0956,
        -0.0765, -0.0044, -0.0361, -0.0808,  0.1958, -0.0438, -0.1101, -0.0018,
         0.1670,  0.0881,  0.0264, -0.1301, -0.0427, -0.0913, -0.0829, -0.0922,
        -0.1710, -0.1645,  0.0240,  0.1008,  0.1479,  0.1343,  0.0939, -0.1018,
         0.0354,  0.0210, -0.1230,  0.0624, -0.0364, -0.0473, -0.0220, -0.0554,
        -0.1083,  0.0248, -0.1519, -0.0949,  0.0264,  0.0785, -0.1488,  0.0375,
        -0.1694,  0.0601,  0.0273,  0.0538,  0.1558,  0.1376,  0.1028,  0.1495,
         0.1113,  0.1928,  0.0306,  0.1452, -0.1502,  0.1226,  0.0983, -0.0593],
       device='cuda:0') torch.Size([128])
recurrent_blocks.3.bias_hh_l0 tensor([-1.4357e-01,  5.2687e-02,  1.2330e-01,  1.0491e-01,  5.7158e-02,
        -6.3481e-02,  1.7031e-01,  7.8673e-03,  1.0076e-01,  1.0680e-01,
         7.0274e-02,  1.0064e-01, -1.0734e-01,  2.6982e-02,  1.5340e-01,
         1.4072e-01,  9.9260e-02,  1.0635e-01,  4.5214e-02,  5.0372e-02,
         8.0280e-02, -7.7281e-02,  8.5036e-02, -1.7691e-01, -6.3775e-02,
         1.1579e-02,  1.6701e-01, -1.1003e-01,  8.6135e-02, -1.4176e-01,
         1.0339e-01, -8.8262e-02, -1.6570e-01, -1.2043e-01,  1.1246e-01,
        -1.9772e-01,  2.5435e-03,  1.7993e-01,  2.1121e-01, -2.0050e-01,
         2.0057e-01,  1.0188e-01, -1.3219e-01,  2.3572e-02, -1.1755e-01,
         1.2527e-01, -9.9488e-03,  7.6666e-02,  1.6775e-01,  3.2037e-02,
         6.4478e-02, -1.9005e-01,  8.5092e-03, -5.0755e-02, -9.1050e-02,
         1.6664e-01,  8.4552e-02, -1.1424e-02, -1.2066e-01,  9.7159e-02,
        -8.6384e-02,  8.1040e-02,  1.3791e-01, -1.1501e-01, -2.2464e-02,
        -7.4247e-02,  5.6871e-03,  3.2824e-02, -1.0241e-01,  3.0195e-02,
         3.0587e-02,  4.6418e-02, -1.8525e-01, -1.7446e-01, -6.4219e-02,
         1.2791e-01,  5.9489e-02, -5.2203e-05, -9.7398e-02,  6.9853e-02,
         1.7727e-01, -4.8381e-02, -2.0739e-02,  1.2314e-01, -2.5108e-02,
        -9.3177e-02,  4.6325e-02,  3.3257e-02, -8.2958e-02, -4.7364e-02,
        -1.1884e-01,  1.1521e-02,  1.5295e-01, -1.5905e-01,  1.0222e-01,
        -1.6388e-01,  1.4610e-01,  1.8225e-01, -1.5841e-01,  1.1864e-01,
        -1.0686e-01,  2.3239e-02,  1.7263e-01, -2.1360e-01,  6.5912e-02,
         1.4128e-01, -6.6293e-02, -6.2150e-02, -1.3732e-01, -1.6850e-02,
         9.8802e-02, -1.7537e-01, -1.2519e-01,  1.7510e-02,  2.0575e-01,
        -1.3200e-01,  1.7873e-01,  1.7340e-01, -1.0288e-01, -2.8959e-02,
         4.1819e-02,  1.9030e-01, -8.4893e-02,  2.4808e-02, -1.1060e-01,
         1.0159e-01, -8.1952e-02, -1.3941e-01], device='cuda:0') torch.Size([128])
recurrent_blocks.3.weight_ih_l0_reverse tensor([[ 0.1656, -0.0221,  0.0893,  ...,  0.1024,  0.1569, -0.0099],
        [ 0.0044, -0.0127, -0.0768,  ...,  0.0287, -0.1549, -0.0813],
        [ 0.1339, -0.0918, -0.0909,  ...,  0.0376,  0.0029, -0.0452],
        ...,
        [ 0.1360,  0.1166,  0.0398,  ...,  0.0229, -0.0108,  0.0267],
        [-0.1249,  0.1084, -0.1705,  ..., -0.0888,  0.0375, -0.1106],
        [-0.1304, -0.0224, -0.1613,  ...,  0.0056,  0.0588, -0.0620]],
       device='cuda:0') torch.Size([128, 64])
recurrent_blocks.3.weight_hh_l0_reverse tensor([[ 0.1238,  0.1195,  0.0392,  ...,  0.1855, -0.1331, -0.0916],
        [-0.0835, -0.0887,  0.0610,  ...,  0.0112, -0.0697, -0.0249],
        [-0.0289,  0.1804,  0.0018,  ...,  0.0750,  0.1378, -0.0349],
        ...,
        [ 0.0189, -0.0271,  0.0067,  ..., -0.0919,  0.2042,  0.1777],
        [-0.0459,  0.1021,  0.0038,  ...,  0.0451,  0.0107,  0.1884],
        [-0.0454, -0.0725, -0.0760,  ...,  0.0670,  0.0093, -0.0039]],
       device='cuda:0') torch.Size([128, 32])
recurrent_blocks.3.bias_ih_l0_reverse tensor([-0.0196,  0.1235,  0.1071, -0.0812,  0.1417,  0.0527,  0.1517,  0.0411,
         0.1039, -0.0357, -0.0821, -0.0671,  0.1061,  0.0881,  0.0039,  0.0851,
         0.0304, -0.1378,  0.0089,  0.1048,  0.0372,  0.0259, -0.0290, -0.0579,
         0.0120, -0.1282,  0.0559,  0.2030, -0.1560,  0.0571, -0.0041, -0.0227,
         0.0795,  0.0372,  0.1779, -0.0760, -0.0532, -0.0990,  0.0152, -0.1853,
        -0.1456, -0.0252, -0.0424,  0.1240, -0.1269,  0.1508, -0.1333, -0.0321,
        -0.0756,  0.1236, -0.0755,  0.0940,  0.0876,  0.0406, -0.1132,  0.0986,
         0.1013, -0.0478, -0.0252,  0.1232,  0.0008,  0.0720, -0.1006, -0.1308,
        -0.1508, -0.1838,  0.2044, -0.0479, -0.1382, -0.0826, -0.0887, -0.0325,
         0.1540,  0.0016, -0.1200,  0.0168, -0.0817, -0.1383,  0.0280, -0.1605,
        -0.0904,  0.2190,  0.1205, -0.0027,  0.1187, -0.1092,  0.1486, -0.1827,
         0.0107, -0.0122, -0.1141,  0.1458,  0.1356,  0.0482, -0.1107, -0.0806,
         0.1120, -0.1044, -0.0042, -0.0499,  0.1728, -0.1402,  0.0461, -0.1695,
        -0.0701,  0.0993,  0.1412,  0.0941, -0.0945,  0.1133,  0.0472, -0.1017,
        -0.1835, -0.0618,  0.1475, -0.1482, -0.0493,  0.0931,  0.0200, -0.0752,
        -0.0579, -0.0755, -0.1092,  0.1337,  0.1183, -0.2058,  0.0473, -0.0924],
       device='cuda:0') torch.Size([128])
recurrent_blocks.3.bias_hh_l0_reverse tensor([-2.8080e-02, -1.1067e-01, -4.3629e-02, -4.1522e-02, -3.0687e-02,
        -1.4028e-01,  1.6859e-01,  9.6327e-02,  1.2875e-01, -1.7989e-01,
         4.0106e-02, -4.3352e-03, -4.3494e-02, -8.0540e-02,  5.5434e-02,
        -7.0850e-02,  1.6667e-01, -8.5052e-02,  1.1288e-01,  1.1475e-01,
         1.3260e-01,  1.1689e-01,  1.3405e-01, -9.9940e-02, -5.2051e-02,
         1.0104e-01, -6.6563e-03, -3.4837e-02, -1.0871e-01, -5.8452e-02,
         7.4419e-02,  1.0157e-01, -1.0603e-01, -1.4856e-01,  1.8083e-01,
         4.7441e-03, -2.6046e-02, -9.9564e-04,  1.1211e-01, -5.5274e-02,
         2.7949e-02,  1.1406e-01,  1.3174e-02,  1.4733e-01,  9.7420e-02,
        -1.2247e-01, -2.7768e-02, -7.9808e-02, -2.6763e-02, -8.1700e-02,
        -1.4343e-01,  1.0274e-01, -8.3433e-02,  1.3312e-01, -1.2536e-01,
         8.0019e-02, -2.0960e-01,  4.4994e-03, -5.4142e-02,  1.3118e-01,
        -3.3576e-02,  9.6450e-02,  7.4033e-02, -4.0449e-02,  1.3351e-01,
         6.8715e-02, -1.2085e-01,  6.9409e-02, -2.0245e-01, -1.7942e-02,
        -1.8629e-01,  1.9054e-01, -5.9552e-02,  1.0519e-01,  1.8948e-01,
        -8.7235e-02,  1.1324e-01, -1.7568e-01, -1.7376e-01, -4.8838e-02,
         8.7021e-02,  1.5367e-02,  1.1252e-01, -2.2957e-02,  1.2976e-01,
        -1.1994e-01, -1.0928e-01,  7.9813e-02,  5.0948e-02, -1.5654e-01,
         1.6759e-01, -1.5972e-04, -1.7692e-01,  5.6654e-02, -8.8854e-02,
        -8.0115e-02, -2.6605e-02,  5.9318e-02, -9.3933e-02, -8.7376e-02,
        -1.4021e-01,  1.3538e-01,  1.1954e-01,  1.5525e-03, -4.4884e-02,
        -3.9732e-02, -1.0378e-01, -1.4271e-01, -1.5535e-02, -1.3986e-02,
         9.0643e-02, -4.1305e-02,  1.3654e-01,  9.0498e-02, -7.5914e-02,
         1.1293e-01,  1.1501e-01,  9.9984e-02,  1.0344e-01, -1.3520e-01,
         9.9225e-02, -2.4391e-02, -8.1267e-02,  1.4917e-01,  1.4796e-01,
         3.0155e-02,  1.8330e-02, -1.6089e-01], device='cuda:0') torch.Size([128])
fc_blocks.0.0.weight tensor([[ 0.0893,  0.0726, -0.0408,  ..., -0.1221, -0.0070,  0.0027],
        [ 0.0302,  0.0573, -0.0311,  ...,  0.0576, -0.0550, -0.0018],
        [ 0.0688,  0.0760, -0.0049,  ..., -0.1159,  0.1049,  0.0787],
        ...,
        [-0.0702,  0.0669,  0.0849,  ...,  0.1404,  0.0132,  0.0954],
        [-0.1401, -0.0197, -0.0864,  ...,  0.0151,  0.0469, -0.1204],
        [ 0.0713,  0.1345, -0.0580,  ...,  0.0594,  0.1479,  0.0773]],
       device='cuda:0') torch.Size([32, 64])
fc_blocks.0.0.bias tensor([ 0.0632,  0.1057,  0.1304, -0.1090, -0.1389,  0.0058, -0.0195,  0.1040,
        -0.0423,  0.0240, -0.0559, -0.0338, -0.1328, -0.0261, -0.0789,  0.0251,
         0.0441,  0.0641, -0.0191, -0.0393,  0.0571, -0.0300, -0.0666, -0.1504,
         0.1586, -0.0619,  0.0273,  0.0905, -0.0476, -0.0426,  0.0694, -0.0088],
       device='cuda:0') torch.Size([32])
fc_blocks.1.0.weight tensor([[-8.4601e-02,  5.1142e-02,  3.7774e-02,  1.6918e-01,  1.6476e-01,
          3.8872e-02, -8.0024e-02, -7.7135e-02,  1.0799e-01,  9.2698e-02,
          1.3630e-01, -5.3776e-02, -1.1876e-01, -9.8392e-02, -1.0237e-01,
         -1.3633e-01, -1.7789e-01,  9.3443e-02, -1.5106e-01, -9.9415e-02,
          5.5823e-03,  1.4040e-01,  2.1605e-02,  8.5645e-02,  4.4367e-02,
          1.0513e-01,  9.0401e-02,  7.1776e-02, -5.0634e-02, -2.2426e-02,
         -1.2063e-01, -4.3000e-02],
        [-1.8336e-02,  1.6458e-01,  1.1943e-01,  8.3206e-02, -5.8589e-02,
          1.3217e-01, -7.0700e-02,  8.6769e-02, -9.1529e-03, -1.5082e-01,
         -8.2562e-02, -8.5819e-02,  3.4776e-02,  1.0208e-03, -8.5872e-02,
         -4.0835e-02, -1.9977e-02,  1.4136e-01,  2.2142e-02, -1.4217e-01,
         -4.3420e-02, -1.5307e-01,  1.9900e-01, -1.4594e-01, -8.0770e-02,
          1.0214e-01,  6.6936e-02, -1.5878e-01,  3.3678e-02,  1.0588e-01,
         -1.5574e-01,  1.5918e-01],
        [ 1.0341e-01, -1.9724e-01, -6.3010e-02, -1.3584e-01, -1.2407e-01,
         -4.6592e-03, -9.2643e-02, -9.9502e-02,  2.9641e-02,  1.3630e-01,
          6.0100e-02, -8.7973e-02, -1.0888e-02,  1.3976e-01, -8.4320e-02,
         -1.9507e-01, -6.7593e-02,  1.1481e-01,  1.4549e-01, -9.4904e-02,
          2.3330e-02,  1.0167e-01,  2.0342e-02,  1.1971e-01,  1.4670e-02,
          5.4644e-02, -3.2206e-02, -1.5750e-01, -1.7979e-01,  2.2374e-02,
          1.0776e-01, -1.0981e-01],
        [ 1.6522e-01,  9.5137e-02,  9.2840e-02, -2.8688e-03, -3.5820e-02,
          4.1069e-02,  2.0994e-01,  1.5646e-01, -5.1741e-02, -9.9616e-05,
          4.9522e-02, -6.8150e-02, -1.1747e-01,  2.9419e-02, -1.3299e-01,
          1.6645e-01,  2.0406e-01,  1.1111e-01, -4.9957e-02,  1.1964e-01,
         -1.2276e-01,  9.3228e-02,  1.1343e-01,  5.8580e-02,  7.1319e-02,
          1.2752e-01,  8.1362e-02,  4.4847e-02,  1.9364e-02, -7.5604e-02,
         -4.2955e-02,  1.5489e-01],
        [-1.0756e-01, -8.5650e-04,  5.6945e-02, -1.1404e-01, -1.7428e-01,
         -7.3641e-02, -1.4943e-03, -6.7289e-02, -3.1648e-02,  1.1193e-01,
          1.3228e-01,  6.1864e-02, -2.7848e-02,  1.6943e-01, -1.8700e-01,
          2.0825e-01,  3.1769e-02, -1.2876e-01, -1.0463e-01, -8.2616e-02,
          5.1069e-02,  4.8156e-02, -8.7399e-02,  4.2388e-02,  5.6258e-02,
          1.1845e-01, -1.8221e-01,  3.5936e-02,  1.6668e-01,  3.0392e-02,
          6.0338e-02,  1.2758e-01],
        [-4.5526e-02,  2.0206e-02,  1.0945e-01,  8.6023e-02,  9.8653e-02,
          8.3647e-03,  1.4795e-01, -8.9435e-02,  1.4910e-01,  1.6437e-02,
          1.8236e-01,  7.4251e-02, -1.4087e-01, -8.9556e-03,  2.0468e-01,
          8.2700e-02,  6.6504e-02, -1.0881e-01,  1.9111e-02, -2.1318e-02,
          1.2820e-01,  4.6180e-02, -9.7537e-02,  2.6080e-02, -1.5983e-02,
         -4.8062e-02, -9.8390e-02, -1.9854e-02,  1.3339e-01,  1.5809e-01,
          1.2071e-02, -1.3069e-01],
        [-1.2321e-01, -1.9722e-01, -2.3097e-02,  5.3621e-02,  7.3152e-02,
          5.7135e-02, -1.1936e-01,  1.8327e-02,  1.1243e-01, -1.6068e-01,
         -5.9389e-02, -1.1311e-01, -1.5937e-01, -2.5072e-02,  8.1304e-02,
         -1.2927e-02, -1.2474e-01,  9.8840e-02,  1.2997e-01,  9.1186e-02,
          8.7555e-02, -1.0282e-01,  1.1333e-01, -2.8630e-03, -4.7596e-02,
         -2.3670e-02,  8.1248e-02, -6.8499e-02,  1.7090e-01, -1.3854e-01,
          4.0827e-02,  8.1072e-02],
        [ 1.7676e-01, -1.1435e-01, -5.9280e-02,  8.4224e-02, -8.4731e-02,
         -4.1044e-02, -3.7477e-02,  2.2298e-02, -2.5044e-03,  2.0524e-02,
          1.5126e-01,  5.8443e-02, -1.0663e-01,  1.0099e-01, -6.6293e-02,
          6.1648e-02,  9.9370e-02,  1.6262e-01, -1.1713e-01,  1.7021e-02,
          1.8577e-01,  2.2860e-02,  6.6463e-03,  1.9411e-01,  9.6055e-02,
         -1.2506e-01,  1.4386e-01,  1.2954e-01, -1.3222e-01,  1.0243e-01,
          8.5683e-02, -3.0323e-02],
        [-1.5877e-01, -6.7838e-02,  7.9276e-02, -3.7514e-02,  1.8676e-01,
          1.2483e-01,  5.1572e-02, -8.1026e-02,  5.3293e-02,  6.8849e-02,
          1.2922e-01,  1.3320e-01,  1.7162e-01,  2.0176e-02,  1.5015e-01,
          5.7338e-03, -3.6986e-02,  2.6510e-02, -6.0664e-02, -2.5629e-02,
          1.2194e-01,  1.1810e-01, -1.9816e-01,  1.1357e-01,  1.3566e-01,
          3.2033e-03,  8.4192e-02,  8.4994e-02,  1.2463e-01,  1.3923e-01,
         -5.9495e-02,  2.0044e-02],
        [-6.0586e-02,  8.5532e-02, -1.0014e-01,  1.7726e-01,  1.7889e-01,
          1.4934e-01, -1.8175e-01, -7.5734e-02,  4.4808e-02, -1.4924e-02,
          7.9215e-02,  7.3467e-03,  5.2076e-02, -8.1553e-02,  5.0263e-02,
         -4.4688e-02,  9.8931e-02, -1.2795e-01,  4.6739e-02,  3.0809e-02,
          2.1111e-02, -8.1426e-02,  5.0716e-02, -8.3395e-02, -1.5510e-01,
         -8.0309e-04,  9.1353e-02,  4.5671e-03,  1.3802e-01, -8.1294e-02,
          1.4573e-01,  4.2005e-02],
        [-9.6795e-02, -5.6441e-02,  1.0611e-01, -1.8620e-01,  8.4702e-02,
          7.3683e-02, -1.1518e-01,  1.6140e-01,  1.9680e-01, -3.4885e-02,
          9.3666e-02, -1.1400e-01, -1.1933e-01,  1.3490e-01, -1.2054e-01,
          1.2751e-01,  2.2263e-01,  1.2038e-01,  8.2665e-02,  1.3075e-01,
          1.7011e-01, -7.5463e-02,  8.5644e-03, -6.2315e-02,  1.8024e-01,
          1.0633e-01, -1.5010e-01, -1.2446e-01,  1.7127e-02, -3.4884e-02,
         -1.8995e-01,  7.0814e-02],
        [ 1.1742e-01,  5.6779e-02,  5.4046e-02, -8.3678e-02,  3.6629e-02,
         -1.2913e-01,  1.1761e-01,  2.0684e-01,  1.5092e-01,  1.4437e-01,
          6.6809e-02, -2.0162e-02, -1.7718e-02,  3.1745e-02, -5.0568e-02,
         -1.2725e-01, -8.2967e-02,  1.1225e-01,  1.0258e-01, -5.9759e-02,
          1.0584e-01,  7.6941e-02,  2.1033e-01, -7.6117e-03, -1.4130e-02,
          1.9404e-01,  2.4306e-02,  1.7304e-01, -1.3365e-01, -1.4526e-01,
          1.6066e-01,  1.5171e-01],
        [-8.5051e-02,  1.8164e-01, -5.2249e-02,  1.5573e-01, -1.3055e-01,
          1.1825e-01,  5.4738e-02,  1.3773e-01,  1.1617e-01, -1.0095e-01,
         -9.9026e-02, -1.1805e-01,  1.3924e-01,  6.2083e-02,  1.5302e-01,
         -5.0908e-02, -6.7327e-02,  1.6221e-01, -1.0522e-01, -1.6037e-01,
          7.4789e-02,  9.2221e-02, -1.2140e-01, -1.0604e-01,  8.8927e-02,
         -2.0975e-02,  1.4055e-01, -8.5774e-02,  8.5815e-02,  1.4175e-01,
          2.2952e-02,  1.5850e-01],
        [-6.7153e-02,  1.1066e-01,  1.1427e-01, -1.6444e-01, -1.2263e-02,
          8.4963e-02, -1.5710e-01,  5.9427e-02, -7.4256e-02, -1.2771e-01,
          1.2393e-01, -3.6574e-03,  1.2715e-01,  7.6868e-02,  1.4606e-01,
         -1.9714e-01, -1.8531e-01,  1.3713e-01,  4.3729e-03,  1.5729e-02,
          7.1383e-02, -9.9327e-02, -5.6495e-02,  8.6564e-02, -1.8539e-02,
          8.6152e-02,  6.8144e-02, -1.9490e-02, -1.6511e-02,  8.1896e-02,
         -7.1025e-02, -1.2698e-01],
        [-1.1484e-01, -1.6718e-01, -9.0252e-02,  6.9980e-02,  4.7188e-02,
         -4.7786e-02,  1.3689e-01, -1.3965e-02, -4.4649e-03, -1.9626e-01,
         -1.3719e-01, -1.7730e-01,  1.1185e-02, -5.1022e-02, -4.9303e-02,
         -1.7490e-02,  7.7871e-02, -7.2854e-02,  7.6611e-02,  1.1088e-01,
          2.5805e-02, -3.2992e-02, -1.2684e-01, -1.6616e-01, -1.1808e-01,
         -5.0136e-02, -1.1021e-01,  3.5854e-02, -4.4394e-02, -5.5758e-02,
          2.4093e-02, -1.4747e-01],
        [-1.9235e-01, -5.8074e-02, -1.8869e-01,  3.1073e-02,  1.7575e-01,
          1.6513e-02,  5.0375e-02,  1.2889e-01,  1.0248e-01, -1.6229e-02,
         -1.6149e-01,  1.7431e-01,  1.3015e-01, -8.2027e-02, -9.4434e-03,
          8.4847e-02,  1.3232e-01,  1.0853e-01,  1.1752e-01,  1.2984e-01,
         -8.9517e-02,  1.7395e-01,  1.0162e-01,  1.3046e-02, -1.5664e-01,
          1.4329e-01,  7.1777e-02,  6.0353e-02, -7.7596e-02, -1.0007e-01,
          1.5728e-01, -9.3303e-02]], device='cuda:0') torch.Size([16, 32])
fc_blocks.1.0.bias tensor([ 0.1184,  0.0939, -0.1072,  0.1595, -0.0129,  0.0072, -0.0549, -0.0844,
        -0.0919,  0.0214,  0.0197,  0.1734,  0.0037,  0.0226,  0.0642, -0.1611],
       device='cuda:0') torch.Size([16])
fc_blocks.2.0.weight tensor([[-0.0603,  0.1485, -0.1615,  0.1416,  0.1100,  0.1247, -0.0437,  0.0441,
         -0.0676, -0.0477,  0.1828,  0.1089,  0.0667, -0.0962, -0.1644, -0.2054],
        [-0.2075,  0.1339, -0.0374, -0.1549, -0.0999, -0.0100, -0.0307, -0.0336,
          0.1525, -0.1678, -0.0381, -0.1674, -0.1352, -0.1864, -0.1030, -0.2293],
        [ 0.0519, -0.0395,  0.1711, -0.0524,  0.2612,  0.0704, -0.1534,  0.2663,
         -0.2572, -0.0019, -0.1664, -0.0757,  0.0576, -0.0249, -0.0108,  0.1188],
        [ 0.0590, -0.1577,  0.1419, -0.1821, -0.1695,  0.0640, -0.2345,  0.1795,
         -0.0557,  0.0005,  0.0111, -0.1025,  0.1959,  0.1211,  0.1395,  0.2010],
        [-0.2575, -0.2658,  0.0914,  0.0139,  0.0677,  0.2788,  0.1553, -0.2634,
          0.0712,  0.1676, -0.0774,  0.1567, -0.0789, -0.0708,  0.1437, -0.2283],
        [ 0.0628,  0.0570,  0.2603, -0.0166, -0.0394,  0.1219,  0.0267, -0.1533,
          0.2271, -0.1921,  0.1216,  0.1047, -0.1497, -0.1239,  0.2324,  0.1270],
        [ 0.0745,  0.0237, -0.2725,  0.0134,  0.1697, -0.0010,  0.0387, -0.1151,
          0.1424, -0.2119,  0.1714, -0.1256, -0.1562, -0.1773,  0.1530, -0.2526],
        [-0.2786, -0.2238, -0.2497,  0.0591,  0.0029,  0.2819, -0.2099,  0.0411,
          0.0386,  0.1424,  0.1060,  0.1469, -0.2245, -0.0419, -0.1588, -0.0548]],
       device='cuda:0') torch.Size([8, 16])
fc_blocks.2.0.bias tensor([ 0.2552, -0.0520, -0.2563, -0.1392, -0.2665, -0.0773, -0.1142, -0.1383],
       device='cuda:0') torch.Size([8])
fc_blocks.3.0.weight tensor([[ 0.2180,  0.2910,  0.1398,  0.0180, -0.1455,  0.1744,  0.0985, -0.2444],
        [-0.1701,  0.0098,  0.2409, -0.0868,  0.1976,  0.1341,  0.2444,  0.1208],
        [ 0.1306,  0.0268,  0.0052, -0.1657, -0.1163,  0.1253,  0.0476, -0.1180],
        [ 0.0726,  0.3477, -0.0511,  0.3149,  0.1745,  0.0495,  0.2610,  0.2728]],
       device='cuda:0') torch.Size([4, 8])
fc_blocks.3.0.bias tensor([ 0.2429,  0.0201,  0.3799, -0.3888], device='cuda:0') torch.Size([4])
fc_blocks.4.0.weight tensor([[-0.2342,  0.0307,  0.2077, -0.5331],
        [ 0.4772, -0.2151,  0.0391, -0.4889]], device='cuda:0') torch.Size([2, 4])
fc_blocks.4.0.bias tensor([-0.3341, -0.4360], device='cuda:0') torch.Size([2])
Train Loss : 2170.925, Val Loss : 5100.134
======> Trajectory Loss : 2040.522, Gravity Loss : 0.001, EndOfTrajectory Loss : 1.304, BelowGroundPenalize Loss : 0.000
===> [Minibatch 6/129].........recurrent_blocks.0.weight_ih_l0 tensor([[ 0.1490,  0.0263, -0.0848],
        [-0.0778, -0.0222,  0.1763],
        [ 0.0313,  0.0627,  0.0856],
        [ 0.0005, -0.0821,  0.0455],
        [-0.0139, -0.0740, -0.0916],
        [ 0.0411, -0.1172,  0.1531],
        [-0.0760, -0.1524,  0.1606],
        [ 0.1108,  0.1450, -0.0619],
        [-0.1611, -0.1009, -0.0213],
        [ 0.1467,  0.0746,  0.1088],
        [-0.1295, -0.1858,  0.0512],
        [-0.0328,  0.1451, -0.0432],
        [-0.1447,  0.1658,  0.0876],
        [-0.1610, -0.0995,  0.1369],
        [-0.1619,  0.0689, -0.0761],
        [-0.1272,  0.0019,  0.2031],
        [ 0.0714, -0.1460, -0.1093],
        [ 0.0705,  0.1563, -0.0224],
        [-0.0534,  0.0086, -0.0517],
        [-0.1964, -0.1762, -0.0334],
        [-0.0791,  0.0759,  0.1638],
        [ 0.0422,  0.0419,  0.2107],
        [-0.0174, -0.0688, -0.1267],
        [ 0.0134, -0.1287, -0.0278],
        [-0.1459, -0.1382,  0.0385],
        [-0.2098, -0.1317, -0.0747],
        [-0.0577,  0.1106,  0.1135],
        [ 0.1196, -0.1890, -0.1701],
        [ 0.0309, -0.0707,  0.0992],
        [-0.1303, -0.0723,  0.1467],
        [ 0.0323, -0.1136, -0.1461],
        [ 0.0064,  0.0123, -0.0371],
        [-0.1353,  0.0578, -0.1647],
        [ 0.0564,  0.0396, -0.0030],
        [-0.0400,  0.1474,  0.0541],
        [ 0.1812,  0.1274, -0.0763],
        [-0.1134,  0.0016,  0.0689],
        [-0.0185, -0.1120, -0.1395],
        [-0.0602, -0.1533,  0.0675],
        [ 0.1370,  0.1020,  0.1431],
        [ 0.1544, -0.0566, -0.0397],
        [ 0.0426,  0.1073, -0.1133],
        [-0.1067,  0.1093,  0.0930],
        [ 0.1896,  0.1299,  0.2164],
        [-0.1446, -0.0026, -0.1412],
        [-0.0380, -0.0657, -0.1300],
        [-0.0911, -0.0288,  0.1209],
        [-0.1411,  0.0122, -0.0487],
        [ 0.0726, -0.0841,  0.0015],
        [-0.0282, -0.1530,  0.0831],
        [-0.1878,  0.1597,  0.0322],
        [-0.0274, -0.1543, -0.0217],
        [-0.1820, -0.0472,  0.1948],
        [ 0.0539, -0.0206,  0.0880],
        [-0.1068, -0.1449,  0.1659],
        [ 0.1602,  0.1168,  0.1924],
        [-0.1878, -0.0005, -0.1191],
        [ 0.0533, -0.1460, -0.1381],
        [ 0.0649,  0.1290, -0.0249],
        [ 0.0009, -0.0699,  0.1327],
        [ 0.1302,  0.0671,  0.2071],
        [-0.1693, -0.0981, -0.0301],
        [-0.0974,  0.0236, -0.0863],
        [-0.0294, -0.1821, -0.0358],
        [ 0.0541,  0.1184,  0.0082],
        [-0.1597,  0.0881, -0.0702],
        [-0.0226, -0.1884, -0.1754],
        [ 0.0856,  0.1181, -0.0246],
        [-0.1260, -0.1764, -0.0291],
        [-0.0430, -0.1946,  0.1214],
        [-0.0129, -0.0005, -0.0882],
        [ 0.1067,  0.0266,  0.0197],
        [-0.1692,  0.1743,  0.1460],
        [-0.0110, -0.1237, -0.0129],
        [-0.1119, -0.1389, -0.1127],
        [ 0.1101,  0.0730,  0.0704],
        [ 0.0903,  0.1543, -0.1762],
        [-0.1588,  0.1663,  0.0665],
        [-0.1491,  0.0740, -0.0166],
        [ 0.0203,  0.1269, -0.1517],
        [-0.0605, -0.0352, -0.0509],
        [ 0.1337, -0.1296,  0.1360],
        [ 0.0290,  0.1312, -0.0666],
        [ 0.0620,  0.1851,  0.0762],
        [-0.1569, -0.1006,  0.0477],
        [-0.1778,  0.1850, -0.0218],
        [-0.1059,  0.1808, -0.1461],
        [ 0.0366, -0.1412, -0.0040],
        [ 0.0490,  0.1276, -0.0776],
        [ 0.1076, -0.0731, -0.0224],
        [-0.1818,  0.1273, -0.1146],
        [-0.1773,  0.0434,  0.0983],
        [ 0.0255, -0.0657,  0.1434],
        [ 0.0634, -0.1384,  0.0966],
        [-0.0904,  0.0331,  0.0445],
        [-0.0945, -0.0498,  0.1868],
        [-0.0854, -0.0435, -0.0923],
        [-0.1950, -0.1648,  0.1192],
        [ 0.1447, -0.0604, -0.1622],
        [-0.0582,  0.0315,  0.1649],
        [-0.1459, -0.0863, -0.1728],
        [ 0.1265,  0.0533, -0.0841],
        [-0.0328,  0.1624, -0.1088],
        [ 0.0184,  0.0072, -0.0760],
        [-0.0652, -0.0984,  0.1070],
        [ 0.0832,  0.0355,  0.1363],
        [-0.1410,  0.0004,  0.1200],
        [ 0.1783,  0.0975,  0.0610],
        [-0.0742, -0.1236, -0.1222],
        [ 0.1485, -0.1151,  0.1167],
        [-0.0217, -0.0369, -0.0441],
        [ 0.0334,  0.0462,  0.0110],
        [ 0.1469, -0.1042,  0.1959],
        [-0.1204, -0.1168, -0.0355],
        [-0.0762, -0.0163, -0.0504],
        [ 0.0971,  0.0967,  0.0960],
        [ 0.0446,  0.0721, -0.0990],
        [ 0.1747, -0.1116,  0.1645],
        [ 0.0388, -0.1604,  0.1422],
        [-0.0824, -0.0862, -0.0884],
        [ 0.0380, -0.1982, -0.0388],
        [-0.0868, -0.0285,  0.0976],
        [ 0.0891, -0.1182,  0.0936],
        [-0.1742, -0.1886,  0.1349],
        [ 0.1714, -0.1911, -0.0767],
        [-0.0690,  0.1011,  0.0566],
        [ 0.1684, -0.1673,  0.1432],
        [ 0.0296,  0.0327, -0.0394]], device='cuda:0') torch.Size([128, 3])
recurrent_blocks.0.weight_hh_l0 tensor([[ 0.0246,  0.1015, -0.1315,  ...,  0.0959,  0.1275,  0.1059],
        [ 0.0233,  0.0288,  0.0839,  ...,  0.1225,  0.0469, -0.0804],
        [ 0.0402, -0.0762, -0.0242,  ..., -0.1530, -0.1636, -0.0133],
        ...,
        [-0.1399,  0.0235, -0.0225,  ..., -0.0867,  0.0754, -0.0019],
        [ 0.0652,  0.0064, -0.1211,  ...,  0.0326, -0.0701,  0.1738],
        [-0.0466,  0.1159, -0.0713,  ..., -0.1545,  0.0083, -0.0526]],
       device='cuda:0') torch.Size([128, 32])
recurrent_blocks.0.bias_ih_l0 tensor([-0.0719,  0.0685, -0.1656,  0.1225,  0.1166,  0.1991, -0.1167, -0.0152,
         0.0941,  0.0097, -0.1324,  0.1234, -0.1860,  0.0178,  0.1166,  0.1025,
         0.0829,  0.0949, -0.0057,  0.1090, -0.0250,  0.0226, -0.0979,  0.1251,
        -0.1345,  0.1763,  0.0799,  0.0072,  0.0784,  0.1057, -0.1010, -0.0477,
         0.0046, -0.0900,  0.0605,  0.1434, -0.0187, -0.0925,  0.0854,  0.0901,
        -0.0024,  0.0637,  0.1171,  0.1672, -0.1675,  0.0196, -0.0139, -0.0839,
         0.0969,  0.0105,  0.1000,  0.0232,  0.0848,  0.0216, -0.0718,  0.0590,
         0.1662,  0.0287,  0.1040, -0.1463, -0.1153,  0.0829,  0.0391,  0.0610,
        -0.0315,  0.1147, -0.1019,  0.1306,  0.1743,  0.0643,  0.0931,  0.0075,
        -0.1119,  0.0698,  0.1806,  0.1449,  0.0006,  0.0756,  0.0058, -0.1140,
         0.1119,  0.0749,  0.0942, -0.1435,  0.0191, -0.2139,  0.0462,  0.1351,
        -0.1675, -0.1603,  0.1622, -0.0533,  0.2216, -0.1667, -0.1843,  0.1473,
         0.0298,  0.1609,  0.0530,  0.0783, -0.0650,  0.0479, -0.1207,  0.0716,
        -0.0466,  0.0475,  0.2182,  0.1685, -0.0123,  0.0117, -0.0737,  0.0594,
        -0.0261, -0.0255,  0.0411, -0.1297,  0.0728,  0.0826,  0.0546, -0.0635,
        -0.0771,  0.1540,  0.0177, -0.0960,  0.1746, -0.0553,  0.1638, -0.0810],
       device='cuda:0') torch.Size([128])
recurrent_blocks.0.bias_hh_l0 tensor([ 0.0197, -0.0466, -0.0400,  0.1079, -0.0960,  0.1708,  0.0637,  0.0592,
        -0.1673,  0.0035,  0.1457,  0.0294, -0.0070, -0.1817, -0.0785,  0.0049,
         0.0748,  0.1030, -0.1554,  0.1232,  0.0067,  0.1914,  0.0488,  0.1002,
         0.1259, -0.1489, -0.0895,  0.1252,  0.0279,  0.0245, -0.0259, -0.1170,
        -0.1342,  0.1772, -0.0877, -0.1014,  0.0424,  0.0946, -0.1356,  0.0019,
         0.1044,  0.0525, -0.0187,  0.1854, -0.1694,  0.0929,  0.0751,  0.0455,
        -0.0907, -0.1498,  0.0390, -0.0774,  0.1067,  0.0628, -0.0576,  0.1567,
        -0.1334,  0.1212,  0.0060,  0.1053,  0.0865,  0.1381, -0.0912,  0.0758,
         0.0009,  0.2047, -0.1794,  0.0579,  0.0790, -0.0402, -0.1645,  0.1295,
         0.0623, -0.1997,  0.1168,  0.1616,  0.0209, -0.1375,  0.2265, -0.0277,
         0.1016,  0.1760,  0.1641, -0.1609,  0.1288,  0.0727, -0.1727,  0.0479,
        -0.0041, -0.1252,  0.1526,  0.1443, -0.0631, -0.0636, -0.0637,  0.0802,
         0.0268, -0.1139,  0.1549,  0.1459, -0.0322, -0.0704, -0.0250,  0.1529,
         0.1489,  0.2042,  0.0862,  0.0576, -0.0014, -0.0242, -0.0097, -0.0192,
        -0.0019, -0.1431, -0.1256,  0.0182, -0.0445,  0.1635, -0.0461, -0.0539,
        -0.1456,  0.1468,  0.1032,  0.0015, -0.0470, -0.0541, -0.0720,  0.0634],
       device='cuda:0') torch.Size([128])
recurrent_blocks.0.weight_ih_l0_reverse tensor([[ 0.0615, -0.1732, -0.0250],
        [ 0.0416, -0.0284, -0.0524],
        [-0.0225,  0.0452,  0.0574],
        [-0.1766, -0.0575,  0.0990],
        [ 0.2017,  0.1663, -0.0526],
        [-0.0989, -0.0437,  0.1887],
        [ 0.0377,  0.0689, -0.1045],
        [ 0.0484,  0.0440,  0.1076],
        [ 0.0878, -0.0275, -0.1289],
        [-0.0683,  0.2109, -0.2257],
        [-0.0784,  0.0507,  0.0433],
        [-0.1659,  0.0480, -0.1938],
        [ 0.1176,  0.0973,  0.0026],
        [-0.0327, -0.0207,  0.1236],
        [ 0.1039, -0.0977, -0.0019],
        [-0.0751, -0.0810, -0.0117],
        [-0.0962, -0.0048,  0.0575],
        [-0.1031, -0.0017, -0.0941],
        [-0.1867,  0.0201, -0.0939],
        [ 0.1069, -0.0805,  0.1572],
        [-0.0185,  0.1246, -0.1339],
        [-0.1150, -0.1164, -0.0141],
        [-0.1016,  0.1109,  0.0102],
        [ 0.0315,  0.1416, -0.1540],
        [-0.1640,  0.0392, -0.0136],
        [-0.1826, -0.1942,  0.0128],
        [-0.0733,  0.0527, -0.1116],
        [-0.1960,  0.0992,  0.0628],
        [-0.0547,  0.1748,  0.2135],
        [ 0.1222,  0.0406, -0.1777],
        [-0.0628,  0.1616, -0.1755],
        [-0.1559, -0.1706, -0.0751],
        [-0.1659, -0.0724,  0.0756],
        [-0.1665,  0.0524,  0.1711],
        [-0.1661,  0.1703,  0.1310],
        [-0.0215, -0.0831, -0.1251],
        [ 0.1721,  0.1138,  0.1658],
        [-0.0601,  0.0852,  0.1247],
        [ 0.0727,  0.0222,  0.0854],
        [-0.1513, -0.0448,  0.0682],
        [ 0.0950,  0.0336,  0.0420],
        [ 0.1878, -0.0173, -0.1350],
        [-0.1920, -0.0331, -0.1439],
        [ 0.1418,  0.1836, -0.0868],
        [ 0.0411,  0.1650,  0.0481],
        [ 0.1548, -0.1557, -0.1078],
        [-0.1485,  0.1215, -0.1557],
        [ 0.0102, -0.2138, -0.0306],
        [-0.1568, -0.1310, -0.1847],
        [-0.0964,  0.1714,  0.1480],
        [ 0.0111,  0.1440,  0.1156],
        [ 0.0552, -0.0919,  0.0717],
        [-0.0417, -0.0687,  0.0376],
        [ 0.0170, -0.2027,  0.2135],
        [-0.0972,  0.1527, -0.1902],
        [-0.0288, -0.0473,  0.1171],
        [-0.0323,  0.0419,  0.1284],
        [ 0.0322, -0.0925,  0.1803],
        [-0.0210,  0.0649,  0.0432],
        [-0.1897,  0.0348, -0.0304],
        [-0.0917,  0.1091,  0.1472],
        [-0.1115, -0.0100, -0.2174],
        [-0.0681,  0.0348, -0.0700],
        [-0.2128,  0.1001,  0.1541],
        [ 0.1891, -0.0235, -0.1687],
        [ 0.0210, -0.1660, -0.0677],
        [-0.1119,  0.0188, -0.0551],
        [-0.1531, -0.1233, -0.1556],
        [-0.0753, -0.1100, -0.1596],
        [ 0.0046, -0.0653,  0.0089],
        [-0.0446, -0.0714, -0.2025],
        [-0.1577,  0.0530,  0.1610],
        [ 0.0347,  0.2026, -0.0925],
        [-0.1145, -0.2153, -0.0794],
        [ 0.0077,  0.0291,  0.0008],
        [-0.0406, -0.0556,  0.0528],
        [-0.0249, -0.0004, -0.0456],
        [-0.0886, -0.0184,  0.1188],
        [-0.1907, -0.1521,  0.0850],
        [ 0.0954,  0.0245,  0.0562],
        [ 0.0466, -0.1487,  0.0930],
        [ 0.0599, -0.0653, -0.0615],
        [-0.0455, -0.1509,  0.1832],
        [ 0.1189,  0.1381, -0.0953],
        [ 0.1606,  0.1421, -0.1858],
        [ 0.0074, -0.1503,  0.1995],
        [ 0.0655,  0.0015,  0.1117],
        [-0.0836,  0.1031,  0.1128],
        [ 0.0566, -0.0339, -0.0152],
        [ 0.1055, -0.1066,  0.0988],
        [-0.1455, -0.1304, -0.1005],
        [-0.1310, -0.0644,  0.1930],
        [-0.0818,  0.1638,  0.1414],
        [-0.1210, -0.0322, -0.1255],
        [-0.1647,  0.0721,  0.1833],
        [-0.1024, -0.1805,  0.1306],
        [-0.0174, -0.1444,  0.1002],
        [-0.0467, -0.0666,  0.0274],
        [-0.0961, -0.0516,  0.0504],
        [ 0.1537, -0.0352, -0.1380],
        [ 0.0523,  0.1498, -0.0730],
        [ 0.1119, -0.1953,  0.0124],
        [-0.0551,  0.0455,  0.2169],
        [ 0.0770,  0.1070,  0.0690],
        [-0.0170, -0.1925,  0.0557],
        [ 0.1085,  0.0401,  0.0616],
        [ 0.0538,  0.0606,  0.1595],
        [ 0.1274, -0.0765, -0.1026],
        [ 0.1519, -0.0681,  0.1137],
        [ 0.0255, -0.1490,  0.1053],
        [ 0.1085,  0.0114,  0.1393],
        [ 0.0271, -0.0966, -0.1481],
        [ 0.1391,  0.0548, -0.1856],
        [-0.1732, -0.0644,  0.0752],
        [ 0.0646,  0.0873,  0.1497],
        [ 0.1567, -0.1958, -0.0719],
        [ 0.0755,  0.0791, -0.0848],
        [-0.1846, -0.0123,  0.1842],
        [ 0.0959, -0.1437,  0.0038],
        [-0.1287, -0.0426, -0.0112],
        [ 0.1083, -0.0780, -0.1064],
        [-0.1430,  0.1240,  0.0833],
        [-0.0136, -0.0693, -0.0242],
        [-0.0958, -0.0411,  0.0627],
        [ 0.0177, -0.0252, -0.1242],
        [ 0.1122, -0.0043,  0.0109],
        [ 0.0139, -0.0016,  0.0863],
        [-0.0301, -0.1444, -0.1020]], device='cuda:0') torch.Size([128, 3])
recurrent_blocks.0.weight_hh_l0_reverse tensor([[ 0.0313,  0.1421, -0.1517,  ..., -0.0690, -0.0691,  0.0457],
        [-0.0019, -0.0446,  0.1918,  ..., -0.1367,  0.0150,  0.0397],
        [-0.1662,  0.0515,  0.1793,  ...,  0.2035, -0.0059,  0.1030],
        ...,
        [ 0.1098,  0.1170, -0.1088,  ..., -0.1448, -0.0153,  0.0892],
        [ 0.0816,  0.2064,  0.1865,  ..., -0.1052,  0.1717,  0.0075],
        [ 0.0247, -0.0655, -0.0095,  ..., -0.0810,  0.2221,  0.0745]],
       device='cuda:0') torch.Size([128, 32])
recurrent_blocks.0.bias_ih_l0_reverse tensor([ 0.1530, -0.0740, -0.0589,  0.0974, -0.0319,  0.0675,  0.0752, -0.1461,
        -0.0779, -0.1305,  0.1027,  0.1227,  0.1947,  0.0628, -0.0757,  0.0478,
        -0.1050, -0.0688,  0.1744, -0.1178, -0.1273,  0.1697, -0.1854, -0.1747,
         0.1515, -0.0886,  0.1311, -0.0753,  0.1058,  0.0048, -0.0715,  0.0825,
         0.1329,  0.1490, -0.0392,  0.0362,  0.1087,  0.0417,  0.0680, -0.1487,
         0.1092,  0.0062, -0.1289, -0.1033, -0.1140,  0.1059,  0.0663,  0.0585,
        -0.1547, -0.0888, -0.0582,  0.1846,  0.0689,  0.1907,  0.1016, -0.0996,
        -0.0073,  0.1143, -0.1273,  0.0722, -0.1278, -0.0129, -0.1968, -0.0539,
        -0.1522, -0.1069,  0.0727, -0.1154, -0.1590,  0.1315, -0.1957,  0.0667,
        -0.0257,  0.0517, -0.1403, -0.0269, -0.2226,  0.0378, -0.0179,  0.1142,
        -0.0109,  0.0092,  0.1276,  0.0941, -0.0748,  0.1473, -0.1146,  0.0101,
         0.0037, -0.0533, -0.0606, -0.0161,  0.1043,  0.0763, -0.0627,  0.0657,
        -0.0071,  0.1320,  0.1794, -0.1378,  0.1350, -0.0962,  0.1952,  0.1655,
        -0.0457, -0.1227,  0.1537, -0.1317,  0.2026,  0.0602, -0.1293, -0.0114,
         0.0742,  0.0201,  0.1393,  0.1456,  0.0239,  0.1874,  0.0284, -0.0710,
        -0.0663,  0.1631, -0.1126,  0.1254, -0.0821, -0.0885, -0.1074, -0.0435],
       device='cuda:0') torch.Size([128])
recurrent_blocks.0.bias_hh_l0_reverse tensor([ 0.1329,  0.0897,  0.0573, -0.1416, -0.0956,  0.0428,  0.0100,  0.0748,
         0.0079,  0.0335, -0.0643,  0.0995, -0.0893, -0.1393, -0.1211, -0.1072,
        -0.2000, -0.1261,  0.1141, -0.1364,  0.0865, -0.0883, -0.1825,  0.1095,
         0.0032, -0.0694,  0.0591,  0.0322,  0.0518,  0.0935, -0.1235,  0.0571,
        -0.0540,  0.1521,  0.0437,  0.1405,  0.0129,  0.0478,  0.0465, -0.1109,
         0.1517, -0.2021, -0.1539,  0.0666,  0.1290, -0.0958,  0.0463,  0.0162,
        -0.1910, -0.0762, -0.1426, -0.1009, -0.0603,  0.0080, -0.1318, -0.0388,
         0.0707, -0.0616,  0.1058, -0.1121, -0.0765,  0.0634, -0.0234,  0.1686,
        -0.0946, -0.1367,  0.0470,  0.0474, -0.0553,  0.0549,  0.0621, -0.0756,
        -0.1198, -0.0917, -0.0145,  0.1397, -0.2152,  0.1524,  0.1524,  0.0673,
        -0.0473, -0.1863, -0.1319, -0.1366,  0.0224, -0.0145,  0.0604, -0.0532,
        -0.1028, -0.1638, -0.0185,  0.2064,  0.1181, -0.0365,  0.0641, -0.0097,
         0.1297, -0.1039, -0.0190, -0.1944,  0.1573, -0.0954, -0.0577, -0.0794,
         0.1616, -0.0121, -0.0166, -0.1524,  0.0555, -0.0611, -0.1810,  0.1262,
         0.0803, -0.1153,  0.1003,  0.1608, -0.1068,  0.0357, -0.1966, -0.0299,
         0.0173, -0.0320, -0.0204, -0.1090,  0.1282,  0.0824,  0.0575, -0.0095],
       device='cuda:0') torch.Size([128])
recurrent_blocks.1.weight_ih_l0 tensor([[-0.1667,  0.0792,  0.0927,  ..., -0.0344,  0.2199, -0.0909],
        [-0.0637,  0.0358,  0.0036,  ...,  0.0357, -0.0983,  0.1714],
        [ 0.1763, -0.0949, -0.0288,  ..., -0.0361, -0.0172,  0.0659],
        ...,
        [ 0.1413,  0.0113,  0.0734,  ..., -0.1069,  0.0450,  0.1413],
        [-0.0144,  0.1833,  0.0546,  ..., -0.2076,  0.0062,  0.0281],
        [-0.1921,  0.1541, -0.0414,  ..., -0.0338, -0.0554,  0.0290]],
       device='cuda:0') torch.Size([128, 64])
recurrent_blocks.1.weight_hh_l0 tensor([[-0.1715,  0.1604, -0.1692,  ...,  0.1186,  0.0621,  0.0117],
        [ 0.0478,  0.1405,  0.0180,  ...,  0.2001, -0.1198,  0.0971],
        [ 0.1781, -0.1340, -0.0829,  ...,  0.0376,  0.0579, -0.1259],
        ...,
        [ 0.0535, -0.0292, -0.0141,  ...,  0.0157, -0.1513, -0.1095],
        [-0.0158,  0.1461, -0.0411,  ..., -0.0987, -0.1570,  0.0031],
        [ 0.1494, -0.0191,  0.0161,  ...,  0.1319, -0.1374,  0.0468]],
       device='cuda:0') torch.Size([128, 32])
recurrent_blocks.1.bias_ih_l0 tensor([ 0.0717,  0.1520,  0.0837, -0.0375,  0.0992, -0.0461, -0.0193, -0.0753,
         0.0804, -0.1491, -0.1257,  0.1261, -0.0165,  0.0610,  0.0410,  0.2251,
         0.1349,  0.1128, -0.1085,  0.1979,  0.0137, -0.0203, -0.0133, -0.1096,
         0.0668, -0.0519, -0.1952,  0.1367,  0.1239, -0.2072, -0.0691, -0.1235,
        -0.0272,  0.0668,  0.1017,  0.0358, -0.1459, -0.1167,  0.1939,  0.1760,
         0.0920, -0.0240,  0.0060, -0.0304,  0.0491, -0.1442, -0.0054,  0.0630,
         0.0963,  0.0660,  0.1516, -0.0857,  0.0531, -0.1431,  0.1582, -0.1432,
         0.0523,  0.0783, -0.1867, -0.0284,  0.0560,  0.1228,  0.0601,  0.0011,
        -0.0064,  0.2264,  0.0959,  0.0941, -0.0203,  0.0668,  0.0775, -0.1724,
         0.0287,  0.0533, -0.0295, -0.0911,  0.0154,  0.1341, -0.0407, -0.1341,
        -0.1316, -0.0299, -0.0288,  0.0175,  0.1783, -0.0183,  0.0609,  0.0185,
        -0.0887, -0.0084,  0.0002, -0.1215,  0.0597, -0.0569,  0.0866,  0.1255,
         0.0882,  0.0097,  0.1337, -0.0135, -0.0910, -0.0193,  0.1149, -0.1021,
        -0.1054, -0.1494,  0.0769, -0.0223, -0.0236,  0.1019,  0.0180,  0.1341,
        -0.1307,  0.0892, -0.0093,  0.0277,  0.2125, -0.0947,  0.1810, -0.1152,
         0.1416, -0.0452,  0.0351, -0.0812,  0.1293, -0.0063, -0.1357,  0.0815],
       device='cuda:0') torch.Size([128])
recurrent_blocks.1.bias_hh_l0 tensor([-0.0652,  0.1537,  0.0475,  0.1298,  0.0009,  0.1920,  0.0116,  0.1852,
        -0.0311, -0.0779, -0.0602, -0.0027, -0.0427, -0.0247, -0.1540,  0.2028,
         0.1570,  0.1003,  0.0363, -0.0666,  0.2134,  0.1071,  0.1834, -0.1458,
         0.1226,  0.1177, -0.0364, -0.1303,  0.0189, -0.1710, -0.0300, -0.1067,
         0.0344, -0.1531,  0.0490, -0.0486, -0.1124, -0.0079, -0.0375,  0.0772,
         0.0194, -0.1069,  0.1340,  0.0218, -0.0400,  0.1867,  0.1420, -0.0002,
        -0.0591,  0.0242, -0.0470,  0.0753, -0.0363,  0.0025,  0.0785,  0.1167,
         0.1402, -0.0340, -0.1142,  0.1753, -0.0369, -0.1626,  0.0619, -0.1238,
         0.0763, -0.0959,  0.1686,  0.1861, -0.1496,  0.0195, -0.2106,  0.1357,
         0.1441, -0.1385, -0.0383, -0.1183, -0.0690,  0.0702,  0.1016,  0.0136,
        -0.0788, -0.0570,  0.1689,  0.1526,  0.2128,  0.0087, -0.1355,  0.1649,
        -0.1353, -0.1604,  0.1423, -0.0329,  0.0981,  0.0400, -0.0498, -0.0995,
        -0.0293,  0.0977,  0.0228,  0.1134,  0.0717, -0.0785,  0.1650, -0.1039,
        -0.0791,  0.0384,  0.1480, -0.0690, -0.0414, -0.0812, -0.1336,  0.0280,
        -0.1830,  0.1451,  0.1719,  0.1849,  0.1299, -0.0749, -0.0480, -0.1183,
        -0.0158, -0.1416, -0.1050, -0.1138, -0.0780, -0.1147,  0.1169,  0.1436],
       device='cuda:0') torch.Size([128])
recurrent_blocks.1.weight_ih_l0_reverse tensor([[-0.0343,  0.0605, -0.0263,  ...,  0.0973, -0.1175,  0.0624],
        [ 0.0705, -0.0040,  0.0514,  ...,  0.1270, -0.0322,  0.0665],
        [-0.2226, -0.1109,  0.0133,  ..., -0.0750,  0.0595,  0.0549],
        ...,
        [-0.1470,  0.0668, -0.1915,  ..., -0.0338, -0.0439, -0.1000],
        [ 0.0600,  0.1969,  0.0285,  ..., -0.0607, -0.1499, -0.1088],
        [ 0.0269,  0.0309, -0.0700,  ..., -0.0388, -0.0888, -0.0739]],
       device='cuda:0') torch.Size([128, 64])
recurrent_blocks.1.weight_hh_l0_reverse tensor([[ 0.1012,  0.0684,  0.1015,  ...,  0.1232, -0.2014, -0.1613],
        [-0.0581, -0.0343, -0.0258,  ...,  0.0945, -0.0862,  0.0781],
        [-0.0877, -0.0798,  0.0613,  ...,  0.1324, -0.1701,  0.0391],
        ...,
        [ 0.1269, -0.1453,  0.0953,  ..., -0.0537,  0.0723, -0.1266],
        [-0.0777,  0.0798,  0.0699,  ...,  0.0111, -0.0028,  0.0261],
        [ 0.0275, -0.1367,  0.1792,  ...,  0.0228,  0.1645,  0.0523]],
       device='cuda:0') torch.Size([128, 32])
recurrent_blocks.1.bias_ih_l0_reverse tensor([-0.1292,  0.1469,  0.0365, -0.1341,  0.0915, -0.0139,  0.2012,  0.1049,
         0.1041, -0.0424,  0.0299,  0.2219,  0.0684,  0.0411, -0.0415, -0.1662,
         0.1483, -0.0216,  0.0714,  0.0980,  0.1067, -0.0428,  0.1218, -0.1284,
        -0.1397, -0.0593,  0.1795, -0.0016,  0.0349, -0.0181, -0.0173, -0.1067,
         0.1073, -0.0009, -0.0604, -0.1708, -0.0938,  0.1184, -0.0985,  0.1807,
        -0.0980, -0.0758,  0.2081, -0.0537,  0.1994,  0.1190, -0.1185,  0.0557,
        -0.0530, -0.0764, -0.1989,  0.0470, -0.0899, -0.1296,  0.1630, -0.1225,
         0.0625,  0.0021,  0.2098,  0.0024,  0.0525,  0.1026,  0.1440,  0.1667,
        -0.0451, -0.0232,  0.1846, -0.1721, -0.0656, -0.0281, -0.1370,  0.1261,
        -0.2001,  0.0923,  0.0710, -0.0769, -0.2084, -0.1347,  0.0338,  0.1184,
        -0.0034,  0.0681, -0.1453,  0.0011, -0.0399, -0.0960, -0.0062, -0.1602,
         0.0051,  0.0509,  0.1301,  0.1490, -0.1527, -0.1423, -0.0210, -0.0292,
         0.0729, -0.1170, -0.0887,  0.0086, -0.1941,  0.1090,  0.2025,  0.1246,
        -0.1183, -0.1249, -0.0697,  0.1272, -0.1297, -0.0855,  0.0078, -0.1101,
         0.1691, -0.0210, -0.1492,  0.1688,  0.1304, -0.1036,  0.1446,  0.1044,
        -0.1724,  0.0949,  0.0437, -0.1213,  0.0405,  0.0235, -0.1039,  0.1928],
       device='cuda:0') torch.Size([128])
recurrent_blocks.1.bias_hh_l0_reverse tensor([-1.0833e-01,  4.2672e-02, -6.3339e-02,  3.3177e-02, -1.5867e-01,
         1.2616e-01, -3.0660e-03, -1.2456e-02,  1.7469e-01,  1.2664e-01,
        -4.2429e-02,  1.4416e-01,  1.9146e-01,  1.1212e-01, -1.4570e-02,
        -8.8433e-02, -1.2494e-01,  3.5748e-02,  2.0259e-02, -4.8384e-02,
        -2.4111e-02,  1.5247e-01, -7.2633e-02,  1.8480e-01,  5.1644e-02,
        -3.3950e-02,  9.1932e-02, -3.9758e-02, -1.0374e-01,  1.6898e-01,
        -9.8349e-02, -9.0401e-02, -1.0593e-01,  7.7704e-02, -1.7321e-01,
         1.5563e-01,  5.5634e-02, -8.0006e-02, -3.3326e-02,  7.4985e-02,
         1.2798e-01,  2.1694e-03, -5.9935e-02, -1.2027e-01,  5.3877e-02,
         6.2220e-02, -5.4342e-02,  6.2057e-02,  1.9114e-01, -1.2707e-01,
         7.1203e-02, -5.5847e-02,  4.8000e-02,  5.4970e-02,  6.9577e-02,
        -1.2580e-01, -1.1494e-01, -3.0169e-02,  1.6262e-03, -1.2143e-02,
        -9.7580e-03,  1.3762e-01,  8.6386e-02,  1.7491e-01, -8.2016e-02,
        -1.2289e-01, -7.7768e-02, -9.9647e-02,  7.2688e-03,  1.4241e-01,
        -4.7447e-02, -6.9014e-03, -1.9622e-02, -1.2583e-01,  9.6665e-02,
         1.9305e-01, -3.3446e-02, -3.3682e-02, -1.7962e-01,  1.2469e-01,
        -3.2240e-02,  1.0074e-01,  1.5504e-01, -9.4225e-02,  9.3242e-02,
         1.7068e-01,  3.8122e-02, -1.1264e-01,  1.0096e-02,  7.9375e-02,
         1.7102e-01, -1.5863e-03, -1.0924e-01, -1.9139e-01,  2.1939e-01,
         2.2716e-01, -1.6115e-01,  2.3402e-03,  7.4304e-05, -5.1719e-02,
        -1.0308e-01,  5.6016e-02,  2.1168e-01, -1.2546e-01, -6.9496e-02,
         3.9401e-02,  2.1780e-02, -6.8334e-02,  1.4246e-01,  1.1614e-01,
        -1.2474e-01, -1.6157e-01,  6.6105e-02,  1.0022e-01, -1.5556e-01,
         7.6917e-02,  1.4624e-01,  7.9316e-02,  1.4908e-01,  1.8182e-01,
        -1.2039e-02,  1.0689e-01,  2.1212e-01,  1.6948e-01,  1.0751e-01,
        -1.1248e-01, -6.5543e-02, -1.0102e-01], device='cuda:0') torch.Size([128])
recurrent_blocks.2.weight_ih_l0 tensor([[-0.1348, -0.1213, -0.0354,  ..., -0.1217,  0.0025, -0.0673],
        [ 0.1174,  0.0534,  0.2284,  ...,  0.0379,  0.1324, -0.1517],
        [-0.0789,  0.1354,  0.1288,  ...,  0.0849,  0.1063,  0.1418],
        ...,
        [-0.1652, -0.0663,  0.2007,  ..., -0.0979, -0.1181, -0.0865],
        [-0.1064,  0.0489, -0.1307,  ...,  0.0173, -0.0957,  0.1789],
        [ 0.0890, -0.1438, -0.0774,  ...,  0.0297,  0.0833,  0.0978]],
       device='cuda:0') torch.Size([128, 64])
recurrent_blocks.2.weight_hh_l0 tensor([[-0.0960, -0.1048, -0.1305,  ..., -0.0047, -0.0185,  0.0656],
        [ 0.0828, -0.0058, -0.0668,  ..., -0.0983, -0.1283,  0.0527],
        [-0.0169, -0.1344, -0.0822,  ...,  0.1490, -0.1392, -0.0818],
        ...,
        [ 0.0006,  0.1956, -0.1084,  ...,  0.1665, -0.0611, -0.0524],
        [-0.0348, -0.0970, -0.0713,  ..., -0.1149, -0.1150, -0.0613],
        [-0.0737,  0.0765, -0.1175,  ...,  0.0874, -0.1349,  0.1403]],
       device='cuda:0') torch.Size([128, 32])
recurrent_blocks.2.bias_ih_l0 tensor([-0.0462,  0.1658, -0.0802, -0.0661,  0.1616,  0.0810, -0.1594,  0.0523,
         0.0823, -0.0096,  0.0777,  0.0877, -0.1211, -0.0696,  0.0433, -0.0910,
         0.0352, -0.0092,  0.1172, -0.1465,  0.0227, -0.0794, -0.1030, -0.1034,
        -0.0598, -0.0847,  0.1961, -0.1371,  0.0637, -0.0989, -0.0234, -0.0162,
         0.1275, -0.0323,  0.0157, -0.0675, -0.0891,  0.0506,  0.1798, -0.0806,
         0.0177,  0.1433, -0.1035, -0.0649,  0.1670,  0.0993,  0.0168,  0.0408,
         0.0743,  0.0664,  0.0129, -0.0831, -0.0566, -0.1421,  0.1533, -0.1341,
        -0.1010, -0.1151,  0.1796,  0.0188, -0.0061, -0.1144,  0.1728,  0.1490,
         0.0008,  0.0949, -0.1351,  0.0356, -0.0462,  0.1394, -0.1429,  0.0334,
         0.1846, -0.0680,  0.0315, -0.0632,  0.1433,  0.1010,  0.0008, -0.0637,
         0.0690,  0.0023,  0.0707, -0.1095,  0.1061,  0.0352, -0.1409, -0.0870,
         0.1137, -0.1695, -0.1240,  0.0078,  0.1258, -0.1785,  0.1664,  0.0554,
        -0.1772, -0.0649, -0.1134,  0.0339, -0.1366,  0.0422,  0.1698,  0.0169,
         0.1572,  0.1740, -0.1579,  0.0882,  0.1309,  0.1069, -0.0484,  0.1858,
        -0.0513, -0.0578,  0.1848,  0.0761,  0.1040, -0.0897, -0.0631, -0.1862,
        -0.0600,  0.0795, -0.1103,  0.0568,  0.1865, -0.1655, -0.0879,  0.1348],
       device='cuda:0') torch.Size([128])
recurrent_blocks.2.bias_hh_l0 tensor([-0.2059,  0.1770, -0.1276,  0.0434, -0.0751,  0.1002,  0.0442,  0.0639,
        -0.0893, -0.1003,  0.1074, -0.1158,  0.0827, -0.1433, -0.0446, -0.0382,
         0.1715,  0.1233,  0.0816, -0.1083, -0.0978, -0.0179, -0.1073,  0.0886,
         0.1469, -0.0672,  0.0551, -0.1414,  0.0651, -0.0588, -0.0606,  0.0393,
        -0.0618,  0.1134,  0.0641,  0.0356, -0.0008,  0.0409,  0.1586,  0.0799,
        -0.1127,  0.1500, -0.1677, -0.0920, -0.0840,  0.0925,  0.0596,  0.0094,
        -0.0465,  0.1225,  0.1005, -0.0363, -0.1054, -0.2127,  0.0925, -0.0920,
         0.1203, -0.1465,  0.0866, -0.0776,  0.1897,  0.0355, -0.0434, -0.0779,
         0.1216,  0.0254,  0.0071, -0.0433, -0.0963, -0.0451,  0.0437, -0.1462,
         0.1407, -0.0390, -0.1315,  0.1444,  0.1388, -0.0344, -0.0372, -0.1331,
         0.1034, -0.1675,  0.1217,  0.0661,  0.1121, -0.0242,  0.0759, -0.1484,
        -0.1314, -0.0243, -0.1509,  0.1583,  0.1951, -0.1510, -0.0421,  0.0397,
         0.1007,  0.0727, -0.1209, -0.0786, -0.1156,  0.0977,  0.1363,  0.0526,
        -0.1544,  0.0303,  0.0782, -0.1277,  0.2176,  0.0494,  0.1283,  0.1429,
        -0.0693,  0.0582, -0.0051,  0.1190, -0.1209, -0.0243,  0.1604, -0.0230,
        -0.0017,  0.1966, -0.0945, -0.1732,  0.2248,  0.1384,  0.1865,  0.1342],
       device='cuda:0') torch.Size([128])
recurrent_blocks.2.weight_ih_l0_reverse tensor([[-0.0637, -0.1047,  0.1434,  ...,  0.1091, -0.0247, -0.0174],
        [ 0.0960,  0.1174,  0.1361,  ..., -0.1399, -0.0686, -0.0004],
        [ 0.1570,  0.1275,  0.0768,  ...,  0.1113,  0.1033, -0.1389],
        ...,
        [-0.1553, -0.1310, -0.1834,  ...,  0.1283,  0.0399,  0.0442],
        [-0.0849, -0.0042,  0.0955,  ..., -0.1670,  0.0969, -0.0094],
        [-0.1216,  0.0390,  0.0780,  ...,  0.0251,  0.0271,  0.1627]],
       device='cuda:0') torch.Size([128, 64])
recurrent_blocks.2.weight_hh_l0_reverse tensor([[ 0.1357, -0.0028, -0.0403,  ..., -0.1454, -0.2033,  0.0138],
        [-0.0762,  0.0292,  0.0684,  ..., -0.0961,  0.0044,  0.0333],
        [-0.0276,  0.0692, -0.0212,  ..., -0.1479,  0.1269,  0.1353],
        ...,
        [-0.0190, -0.0392, -0.0174,  ..., -0.1782,  0.0461,  0.1104],
        [ 0.1862, -0.0063,  0.1536,  ...,  0.0492,  0.1622, -0.0157],
        [-0.0007,  0.1668,  0.1492,  ..., -0.0426,  0.1514, -0.0365]],
       device='cuda:0') torch.Size([128, 32])
recurrent_blocks.2.bias_ih_l0_reverse tensor([-0.2071, -0.1591, -0.0363, -0.1022,  0.0904,  0.0341, -0.0078,  0.0851,
         0.0970,  0.0055,  0.0324,  0.0249, -0.0849,  0.0625, -0.0937, -0.0133,
         0.0227,  0.2107, -0.0290, -0.0319, -0.0693,  0.0979,  0.0904, -0.0409,
        -0.0917, -0.1767,  0.0893, -0.1062, -0.1017, -0.0547, -0.0693,  0.0066,
         0.0720,  0.0732, -0.0365,  0.0542, -0.2113,  0.1475,  0.0353,  0.1315,
         0.1727,  0.0877,  0.1450, -0.0348, -0.0828,  0.1469, -0.0098,  0.0719,
         0.1961, -0.0875, -0.0736, -0.0129, -0.1065,  0.0014,  0.1767,  0.0769,
        -0.0537, -0.1503, -0.0603, -0.0352, -0.0087,  0.1561,  0.0993,  0.0191,
        -0.1071,  0.0171,  0.1264, -0.1323, -0.0173,  0.2211, -0.1453, -0.0752,
        -0.0757, -0.0854,  0.0941, -0.0538, -0.0557,  0.1411, -0.0756,  0.1763,
        -0.1839,  0.1165, -0.1408, -0.0476, -0.1785,  0.0640,  0.1139,  0.0543,
         0.0467,  0.1115,  0.0475,  0.1682,  0.0361,  0.0535,  0.0543,  0.1451,
         0.0996,  0.0061,  0.0153,  0.1086,  0.1286,  0.1303, -0.1149,  0.0926,
        -0.0361, -0.0449, -0.1534,  0.1872,  0.1427,  0.0847,  0.1029, -0.1183,
         0.1562,  0.2014, -0.0921,  0.1910,  0.0458,  0.1997,  0.0167,  0.0331,
        -0.1551, -0.0211,  0.0018,  0.1769, -0.0295,  0.1426,  0.0675,  0.0308],
       device='cuda:0') torch.Size([128])
recurrent_blocks.2.bias_hh_l0_reverse tensor([ 1.1425e-01,  5.6388e-03, -8.7133e-02,  9.1328e-02,  5.2579e-02,
         1.9049e-01,  7.9141e-02,  5.8514e-02,  8.1736e-02,  9.1291e-02,
         6.7975e-02, -1.2971e-01,  2.5212e-02, -9.2813e-02, -1.7088e-01,
        -1.4209e-02, -1.3926e-02,  1.1170e-01,  4.4912e-02,  7.1754e-02,
        -1.2359e-01,  7.0819e-02,  1.7104e-01, -1.8833e-01, -2.1537e-01,
         1.3295e-01,  1.5826e-01,  1.7048e-01,  1.0261e-01,  1.3996e-01,
         1.1676e-01,  3.5477e-02,  8.6184e-02,  3.5431e-02,  1.3400e-01,
         1.4042e-01, -5.6464e-02, -7.2709e-05, -4.1541e-02, -6.1602e-02,
        -1.8077e-02, -2.4422e-02,  9.4840e-02,  2.3175e-02, -5.8439e-02,
        -8.9381e-02, -1.5970e-01, -9.0062e-02,  1.9304e-01,  1.7688e-01,
        -9.1400e-02,  6.9212e-03, -1.9056e-02,  2.1177e-01,  1.3016e-01,
         1.4141e-01, -1.9481e-02, -5.5198e-02,  1.7647e-01, -7.1190e-02,
         1.4326e-01, -4.4363e-02,  1.9697e-01,  2.2239e-01,  6.9088e-02,
        -4.0631e-02,  1.8194e-01, -1.4853e-01, -1.6230e-02, -3.7295e-03,
        -1.3077e-01,  1.8994e-01, -1.6722e-01,  8.5709e-03, -1.0408e-01,
         1.8656e-01, -3.8569e-02,  3.6908e-02, -1.0098e-02,  1.8286e-01,
         9.8892e-03,  8.9423e-02, -1.0689e-01, -1.2739e-01, -1.2648e-01,
         4.6196e-02,  1.7289e-01,  9.3886e-02,  8.9590e-02, -1.3712e-01,
        -5.5388e-02,  1.1692e-01, -9.6932e-02,  1.4613e-01,  1.2548e-01,
         1.4070e-01, -8.8020e-02,  1.3979e-01, -1.3080e-01, -1.5988e-01,
         1.2373e-01, -5.4617e-02, -2.5532e-02,  7.8609e-02, -5.8861e-03,
        -6.6771e-02,  3.7993e-02,  2.2019e-01,  2.0905e-01,  1.4761e-01,
         1.0416e-01, -1.0210e-01, -1.0155e-01,  1.8798e-01,  5.8307e-02,
         7.4878e-02, -1.1076e-01, -9.2098e-02,  9.8376e-03,  1.0583e-01,
         6.7577e-02, -5.0758e-02, -1.0874e-01, -1.0188e-01,  9.6787e-02,
        -1.3521e-01, -9.7677e-02,  2.0724e-02], device='cuda:0') torch.Size([128])
recurrent_blocks.3.weight_ih_l0 tensor([[-0.0842,  0.1472, -0.1275,  ..., -0.0815, -0.0827,  0.0985],
        [ 0.0204,  0.0784, -0.1264,  ..., -0.0908,  0.0982,  0.0639],
        [-0.0099,  0.0136,  0.0512,  ..., -0.0614,  0.1213,  0.1056],
        ...,
        [ 0.0511, -0.1187,  0.1782,  ..., -0.1461, -0.0709,  0.1703],
        [ 0.0611, -0.1803, -0.1691,  ...,  0.1340, -0.0608,  0.1474],
        [-0.0369, -0.1567,  0.0454,  ..., -0.0605, -0.0954, -0.1038]],
       device='cuda:0') torch.Size([128, 64])
recurrent_blocks.3.weight_hh_l0 tensor([[-0.0269,  0.1210, -0.1350,  ..., -0.0358,  0.0843,  0.1398],
        [ 0.1006, -0.0063, -0.1091,  ..., -0.0464, -0.0916, -0.0945],
        [-0.0279, -0.0368, -0.1262,  ..., -0.1740, -0.0547,  0.1018],
        ...,
        [-0.1014,  0.0604,  0.0870,  ..., -0.1566, -0.0255, -0.0075],
        [ 0.1109, -0.1336, -0.1294,  ..., -0.1817,  0.0596, -0.1578],
        [-0.1354, -0.0430,  0.1502,  ...,  0.0185, -0.0518,  0.1936]],
       device='cuda:0') torch.Size([128, 32])
recurrent_blocks.3.bias_ih_l0 tensor([ 0.0122, -0.0206,  0.0745, -0.2090, -0.0583,  0.1896,  0.1819, -0.1160,
         0.1329, -0.0868,  0.0004, -0.1075,  0.1225, -0.0035,  0.0982, -0.1352,
         0.1387,  0.0929,  0.1289, -0.0790, -0.0530,  0.1795,  0.0600, -0.1512,
        -0.0198, -0.1031, -0.0035,  0.1268, -0.0325, -0.1504, -0.0758, -0.1255,
         0.0251, -0.0912,  0.1109, -0.0617,  0.0859,  0.0224, -0.0215, -0.1931,
        -0.1110, -0.0623,  0.1077,  0.1466,  0.2202, -0.0550, -0.0228,  0.0645,
        -0.1099, -0.0670,  0.1457,  0.1251,  0.0856,  0.1267, -0.0049,  0.1449,
         0.1449,  0.1312,  0.1780, -0.1677, -0.0454,  0.0655, -0.0878, -0.0197,
         0.1458, -0.0136,  0.1102,  0.0025,  0.1354,  0.1302, -0.1959,  0.0902,
        -0.0802, -0.0106, -0.0354, -0.0740,  0.2017, -0.0413, -0.1082, -0.0076,
         0.1746,  0.0857,  0.0326, -0.1271, -0.0372, -0.0973, -0.0890, -0.0872,
        -0.1769, -0.1715,  0.0182,  0.0991,  0.1547,  0.1299,  0.0972, -0.0969,
         0.0435,  0.0286, -0.1217,  0.0590, -0.0362, -0.0386, -0.0142, -0.0548,
        -0.1014,  0.0327, -0.1533, -0.0865,  0.0353,  0.0744, -0.1539,  0.0321,
        -0.1619,  0.0598,  0.0359,  0.0576,  0.1649,  0.1453,  0.1105,  0.1545,
         0.1205,  0.2003,  0.0391,  0.1427, -0.1416,  0.1309,  0.0996, -0.0531],
       device='cuda:0') torch.Size([128])
recurrent_blocks.3.bias_hh_l0 tensor([-0.1350,  0.0601,  0.1272,  0.1014,  0.0572, -0.0557,  0.1761,  0.0088,
         0.1045,  0.1131,  0.0690,  0.1076, -0.1012,  0.0230,  0.1479,  0.1355,
         0.1063,  0.1072,  0.0518,  0.0538,  0.0866, -0.0697,  0.0901, -0.1716,
        -0.0574,  0.0181,  0.1739, -0.1125,  0.0939, -0.1339,  0.1048, -0.0830,
        -0.1572, -0.1128,  0.1149, -0.2015, -0.0013,  0.1886,  0.2174, -0.2039,
         0.2046,  0.1084, -0.1340,  0.0306, -0.1117,  0.1217, -0.0136,  0.0710,
         0.1748,  0.0303,  0.0709, -0.1917,  0.0153, -0.0428, -0.0858,  0.1701,
         0.0914, -0.0049, -0.1133,  0.0946, -0.0777,  0.0892,  0.1384, -0.1112,
        -0.0157, -0.0655,  0.0065,  0.0288, -0.1052,  0.0371,  0.0261,  0.0410,
        -0.1890, -0.1806, -0.0635,  0.1347,  0.0654,  0.0025, -0.0954,  0.0641,
         0.1849, -0.0508, -0.0145,  0.1262, -0.0197, -0.0991,  0.0402,  0.0382,
        -0.0889, -0.0544, -0.1246,  0.0098,  0.1597, -0.1635,  0.1055, -0.1590,
         0.1542,  0.1899, -0.1571,  0.1152, -0.1067,  0.0319,  0.1805, -0.2130,
         0.0729,  0.1492, -0.0677, -0.0538, -0.1284, -0.0210,  0.0936, -0.1808,
        -0.1177,  0.0173,  0.2144, -0.1283,  0.1878,  0.1811, -0.0952, -0.0239,
         0.0510,  0.1978, -0.0764,  0.0224, -0.1020,  0.1099, -0.0806, -0.1332],
       device='cuda:0') torch.Size([128])
recurrent_blocks.3.weight_ih_l0_reverse tensor([[ 0.1724, -0.0170,  0.0839,  ...,  0.0970,  0.1618, -0.0050],
        [ 0.0100, -0.0053, -0.0838,  ...,  0.0214, -0.1474, -0.0738],
        [ 0.1400, -0.0840, -0.0995,  ...,  0.0295,  0.0110, -0.0371],
        ...,
        [ 0.1327,  0.1152,  0.0380,  ...,  0.0233, -0.0118,  0.0251],
        [-0.1208,  0.1160, -0.1783,  ..., -0.0963,  0.0451, -0.1031],
        [-0.1250, -0.0163, -0.1676,  ..., -0.0007,  0.0652, -0.0558]],
       device='cuda:0') torch.Size([128, 64])
recurrent_blocks.3.weight_hh_l0_reverse tensor([[ 0.1162,  0.1140,  0.0446,  ...,  0.1945, -0.1296, -0.0865],
        [-0.0896, -0.0960,  0.0683,  ...,  0.0174, -0.0617, -0.0172],
        [-0.0336,  0.1730,  0.0096,  ...,  0.0778,  0.1444, -0.0274],
        ...,
        [ 0.0153, -0.0271,  0.0052,  ..., -0.0932,  0.2076,  0.1798],
        [-0.0510,  0.0944,  0.0109,  ...,  0.0445,  0.0199,  0.1969],
        [-0.0511, -0.0786, -0.0699,  ...,  0.0729,  0.0167,  0.0027]],
       device='cuda:0') torch.Size([128, 32])
recurrent_blocks.3.bias_ih_l0_reverse tensor([-0.0166,  0.1309,  0.1157, -0.0788,  0.1496,  0.0594,  0.1577,  0.0353,
         0.1105, -0.0354, -0.0755, -0.0603,  0.1127,  0.0947, -0.0007,  0.0922,
         0.0379, -0.1306,  0.0024,  0.1120,  0.0441,  0.0310, -0.0222, -0.0539,
         0.0069, -0.1207,  0.0514,  0.2106, -0.1493,  0.0534,  0.0029, -0.0162,
         0.0802,  0.0445,  0.1864, -0.0744, -0.0453, -0.0918,  0.0215, -0.1909,
        -0.1395, -0.0248, -0.0359,  0.1304, -0.1204,  0.1590, -0.1384, -0.0252,
        -0.0680,  0.1306, -0.0821,  0.1009,  0.0941,  0.0445, -0.1065,  0.1028,
         0.0964, -0.0399, -0.0309,  0.1307,  0.0072,  0.0679, -0.0954, -0.1249,
        -0.1538, -0.1914,  0.2104, -0.0454, -0.1444, -0.0769, -0.0942, -0.0257,
         0.1479, -0.0035, -0.1112,  0.0230, -0.0877, -0.1455,  0.0290, -0.1543,
        -0.0963,  0.2262,  0.1154, -0.0077,  0.1253, -0.1023,  0.1553, -0.1823,
         0.0135, -0.0164, -0.1152,  0.1528,  0.1317,  0.0520, -0.1046, -0.0743,
         0.1156, -0.0971,  0.0035, -0.0528,  0.1807, -0.1339,  0.0552, -0.1754,
        -0.0626,  0.1033,  0.1477,  0.1008, -0.0857,  0.1211,  0.0428, -0.0946,
        -0.1767, -0.0537,  0.1411, -0.1400, -0.0406,  0.0992,  0.0274, -0.0681,
        -0.0630, -0.0676, -0.1139,  0.1430,  0.1247, -0.2095,  0.0533, -0.0861],
       device='cuda:0') torch.Size([128])
recurrent_blocks.3.bias_hh_l0_reverse tensor([-0.0251, -0.1033, -0.0350, -0.0391, -0.0228, -0.1336,  0.1746,  0.0906,
         0.1353, -0.1796,  0.0467,  0.0024, -0.0369, -0.0739,  0.0508, -0.0638,
         0.1742, -0.0778,  0.1064,  0.1219,  0.1396,  0.1219,  0.1408, -0.0959,
        -0.0571,  0.1085, -0.0112, -0.0273, -0.1020, -0.0621,  0.0814,  0.1080,
        -0.1053, -0.1413,  0.1893,  0.0064, -0.0182,  0.0062,  0.1184, -0.0609,
         0.0341,  0.1145,  0.0197,  0.1537,  0.1039, -0.1142, -0.0330, -0.0729,
        -0.0192, -0.0747, -0.1501,  0.1097, -0.0769,  0.1370, -0.1186,  0.0842,
        -0.2144,  0.0124, -0.0598,  0.1387, -0.0272,  0.0923,  0.0792, -0.0345,
         0.1305,  0.0611, -0.1148,  0.0720, -0.2087, -0.0122, -0.1919,  0.1974,
        -0.0656,  0.1001,  0.1982, -0.0811,  0.1072, -0.1828, -0.1728, -0.0427,
         0.0811,  0.0226,  0.1075, -0.0280,  0.1364, -0.1130, -0.1026,  0.0803,
         0.0537, -0.1607,  0.1665,  0.0068, -0.1808,  0.0604, -0.0828, -0.0738,
        -0.0230,  0.0667, -0.0862, -0.0902, -0.1323,  0.1418,  0.1286, -0.0044,
        -0.0374, -0.0358, -0.0972, -0.1360, -0.0068, -0.0061,  0.0863, -0.0343,
         0.1433,  0.0986, -0.0823,  0.1211,  0.1237,  0.1061,  0.1109, -0.1280,
         0.0941, -0.0165, -0.0860,  0.1585,  0.1544,  0.0265,  0.0244, -0.1545],
       device='cuda:0') torch.Size([128])
fc_blocks.0.0.weight tensor([[ 0.0855,  0.0681, -0.0399,  ..., -0.1167, -0.0114, -0.0014],
        [ 0.0378,  0.0648, -0.0226,  ...,  0.0503, -0.0476,  0.0058],
        [ 0.0763,  0.0838,  0.0029,  ..., -0.1232,  0.1131,  0.0870],
        ...,
        [-0.0727,  0.0684,  0.0891,  ...,  0.1422,  0.0150,  0.0962],
        [-0.1480, -0.0265, -0.0919,  ...,  0.0228,  0.0388, -0.1292],
        [ 0.0792,  0.1427, -0.0494,  ...,  0.0517,  0.1564,  0.0859]],
       device='cuda:0') torch.Size([32, 64])
fc_blocks.0.0.bias tensor([ 0.0626,  0.1142,  0.1393, -0.1148, -0.1438,  0.0029, -0.0228,  0.1140,
        -0.0450,  0.0202, -0.0590, -0.0380, -0.1357, -0.0284, -0.0870,  0.0317,
         0.0513,  0.0720, -0.0222, -0.0433,  0.0540, -0.0333, -0.0570, -0.1550,
         0.1650, -0.0642,  0.0217,  0.0867, -0.0484, -0.0439,  0.0628,  0.0006],
       device='cuda:0') torch.Size([32])
fc_blocks.1.0.weight tensor([[-9.0179e-02,  4.5254e-02,  3.3286e-02,  1.7395e-01,  1.7029e-01,
          3.6650e-02, -8.4557e-02, -8.2765e-02,  1.0495e-01,  8.9633e-02,
          1.3325e-01, -5.6441e-02, -1.1314e-01, -1.0151e-01, -9.6635e-02,
         -1.4153e-01, -1.8337e-01,  8.7321e-02, -1.5375e-01, -1.0374e-01,
          2.5628e-03,  1.3757e-01,  1.6056e-02,  8.2137e-02,  3.8168e-02,
          1.0222e-01,  9.6439e-02,  6.8703e-02, -5.2110e-02, -2.0171e-02,
         -1.1682e-01, -4.7407e-02],
        [-1.0931e-02,  1.7216e-01,  1.2703e-01,  7.5702e-02, -6.6257e-02,
          1.2448e-01, -6.8028e-02,  9.4464e-02, -1.6335e-02, -1.5768e-01,
         -8.9860e-02, -9.3364e-02,  2.7242e-02, -4.7751e-03, -9.3534e-02,
         -3.3309e-02, -1.2144e-02,  1.4905e-01,  1.4330e-02, -1.4344e-01,
         -5.0635e-02, -1.6076e-01,  2.0663e-01, -1.5101e-01, -7.2952e-02,
          9.4631e-02,  7.1763e-02, -1.6623e-01,  2.6555e-02,  9.8317e-02,
         -1.6345e-01,  1.6675e-01],
        [ 1.0121e-01, -1.9890e-01, -5.8216e-02, -1.3643e-01, -1.2170e-01,
         -7.8005e-03, -9.5778e-02, -9.9102e-02,  2.6546e-02,  1.3321e-01,
          5.7006e-02, -9.1108e-02, -8.9250e-03,  1.3667e-01, -8.2289e-02,
         -1.9042e-01, -6.9990e-02,  1.1284e-01,  1.4238e-01, -9.8025e-02,
          2.0236e-02,  9.8569e-02,  2.1803e-02,  1.1466e-01,  1.2282e-02,
          5.1546e-02, -2.6720e-02, -1.6060e-01, -1.8300e-01,  1.8820e-02,
          1.0365e-01, -1.0507e-01],
        [ 1.7340e-01,  1.0244e-01,  1.0008e-01, -1.0960e-02, -4.3323e-02,
          3.7025e-02,  2.1419e-01,  1.6408e-01, -4.9411e-02,  2.4962e-03,
          5.1918e-02, -7.1007e-02, -1.2612e-01,  3.2267e-02, -1.4048e-01,
          1.7397e-01,  2.1212e-01,  1.1839e-01, -5.0293e-02,  1.2283e-01,
         -1.2026e-01,  9.3741e-02,  1.2089e-01,  5.6651e-02,  7.9555e-02,
          1.2920e-01,  8.6806e-02,  4.6419e-02,  1.3582e-02, -8.3598e-02,
         -5.0369e-02,  1.6229e-01],
        [-1.0053e-01,  5.8886e-03,  6.3699e-02, -1.2104e-01, -1.8101e-01,
         -8.0482e-02, -4.2439e-03, -6.0484e-02, -3.7613e-02,  1.0697e-01,
          1.2659e-01,  5.5149e-02, -3.4939e-02,  1.6497e-01, -1.9377e-01,
          2.1511e-01,  3.8595e-02, -1.2211e-01, -1.1135e-01, -8.8824e-02,
          4.5553e-02,  4.1541e-02, -8.0606e-02,  3.5767e-02,  6.3160e-02,
          1.1196e-01, -1.7711e-01,  2.9449e-02,  1.5960e-01,  2.3323e-02,
          5.3565e-02,  1.3441e-01],
        [-4.0493e-02,  2.5229e-02,  1.1432e-01,  8.0985e-02,  9.5127e-02,
          8.0595e-03,  1.5233e-01, -8.4278e-02,  1.5171e-01,  1.9112e-02,
          1.8536e-01,  7.4324e-02, -1.4679e-01, -5.7857e-03,  2.0484e-01,
          8.7621e-02,  7.2136e-02, -1.0363e-01,  1.9935e-02, -1.7923e-02,
          1.3087e-01,  4.7695e-02, -9.2542e-02,  2.5749e-02, -1.0416e-02,
         -4.5876e-02, -1.0210e-01, -1.7640e-02,  1.3498e-01,  1.5721e-01,
          6.9544e-03, -1.2586e-01],
        [-1.2825e-01, -2.0209e-01, -2.8088e-02,  5.8803e-02,  7.7933e-02,
          6.2019e-02, -1.1983e-01,  1.3241e-02,  1.1395e-01, -1.6083e-01,
         -5.7702e-02, -1.0865e-01, -1.5421e-01, -3.0163e-02,  8.6514e-02,
         -1.7764e-02, -1.2995e-01,  9.3748e-02,  1.3478e-01,  9.2496e-02,
          8.9372e-02, -9.8559e-02,  1.0830e-01, -1.8858e-03, -5.2875e-02,
         -1.9831e-02,  8.6673e-02, -6.4920e-02,  1.7525e-01, -1.3355e-01,
          4.5969e-02,  7.6118e-02],
        [ 1.7045e-01, -1.2106e-01, -6.5967e-02,  9.0627e-02, -7.7971e-02,
         -3.4547e-02, -3.2786e-02,  1.5655e-02,  4.3411e-03,  2.7786e-02,
          1.5812e-01,  6.5074e-02, -1.0038e-01,  1.0834e-01, -5.9663e-02,
          5.5014e-02,  9.2730e-02,  1.5588e-01, -1.1064e-01,  2.3766e-02,
          1.9255e-01,  2.9471e-02, -6.6002e-06,  2.0101e-01,  8.9588e-02,
         -1.1871e-01,  1.3897e-01,  1.3627e-01, -1.2634e-01,  1.0863e-01,
          9.2322e-02, -3.6935e-02],
        [-1.6097e-01, -6.9164e-02,  8.4710e-02, -4.1846e-02,  1.8736e-01,
          1.2165e-01,  4.8434e-02, -7.9972e-02,  5.0200e-02,  6.5753e-02,
          1.2612e-01,  1.3003e-01,  1.7267e-01,  1.7076e-02,  1.5036e-01,
          1.1189e-02, -3.9254e-02,  2.4893e-02, -6.3769e-02, -2.8755e-02,
          1.1885e-01,  1.1500e-01, -1.9610e-01,  1.0791e-01,  1.3336e-01,
          1.0720e-04,  8.9888e-02,  8.1901e-02,  1.2127e-01,  1.3572e-01,
         -6.3714e-02,  2.5641e-02],
        [-6.7076e-02,  7.7774e-02, -1.0844e-01,  1.8199e-01,  1.8457e-01,
          1.4682e-01, -1.8636e-01, -8.1956e-02,  4.1749e-02, -1.7959e-02,
          7.6154e-02,  4.5934e-03,  5.7398e-02, -8.4625e-02,  5.8032e-02,
         -5.1024e-02,  9.3684e-02, -1.3522e-01,  4.3919e-02,  2.6470e-02,
          1.8064e-02, -8.4335e-02,  4.3268e-02, -8.6802e-02, -1.6149e-01,
         -3.7880e-03,  8.7389e-02,  1.4987e-03,  1.3592e-01, -8.0339e-02,
          1.4949e-01,  3.3853e-02],
        [-8.8777e-02, -4.9215e-02,  1.1330e-01, -1.9411e-01,  7.7354e-02,
          6.8399e-02, -1.1105e-01,  1.6888e-01,  1.9872e-01, -3.2589e-02,
          9.5705e-02, -1.1841e-01, -1.2769e-01,  1.3750e-01, -1.2795e-01,
          1.3494e-01,  2.3043e-01,  1.2755e-01,  8.1041e-02,  1.3320e-01,
          1.7234e-01, -7.6073e-02,  1.5924e-02, -6.6019e-02,  1.8821e-01,
          1.0740e-01, -1.4488e-01, -1.2371e-01,  1.0157e-02, -4.2984e-02,
         -1.9728e-01,  7.8161e-02],
        [ 1.2377e-01,  6.2670e-02,  5.9908e-02, -8.9963e-02,  3.0638e-02,
         -1.3388e-01,  1.2168e-01,  2.1289e-01,  1.5256e-01,  1.4643e-01,
          6.8606e-02, -2.4269e-02, -2.4350e-02,  3.4281e-02, -5.6548e-02,
         -1.2129e-01, -7.6679e-02,  1.1816e-01,  1.0047e-01, -5.7732e-02,
          1.0787e-01,  7.5773e-02,  2.1630e-01, -1.1110e-02, -7.7493e-03,
          1.9481e-01,  3.0624e-02,  1.7327e-01, -1.3918e-01, -1.5174e-01,
          1.5470e-01,  1.5765e-01],
        [-8.1297e-02,  1.8414e-01, -4.9640e-02,  1.5226e-01, -1.3282e-01,
          1.1497e-01,  5.0056e-02,  1.4050e-01,  1.1378e-01, -1.0174e-01,
         -1.0179e-01, -1.2092e-01,  1.3542e-01,  6.0215e-02,  1.5027e-01,
         -4.7990e-02, -6.4546e-02,  1.6440e-01, -1.0851e-01, -1.6298e-01,
          7.2156e-02,  8.9187e-02, -1.1867e-01, -1.0822e-01,  9.2252e-02,
         -2.4690e-02,  1.4512e-01, -8.8509e-02,  8.1353e-02,  1.3800e-01,
          2.0286e-02,  1.6141e-01],
        [-7.3164e-02,  1.0379e-01,  1.0784e-01, -1.5988e-01, -6.6602e-03,
          8.2213e-02, -1.6013e-01,  5.2535e-02, -7.7323e-02, -1.3079e-01,
          1.2086e-01, -6.6290e-03,  1.3361e-01,  7.3719e-02,  1.5252e-01,
         -2.0401e-01, -1.9162e-01,  1.3051e-01,  1.4396e-03,  1.2567e-02,
          6.8323e-02, -1.0231e-01, -6.3353e-02,  8.3027e-02, -2.4683e-02,
          8.3138e-02,  6.4702e-02, -2.2520e-02, -1.9185e-02,  8.0844e-02,
         -6.8686e-02, -1.3320e-01],
        [-1.1827e-01, -1.7120e-01, -9.1651e-02,  7.2347e-02,  5.1391e-02,
         -5.0506e-02,  1.3228e-01, -1.7576e-02, -7.5430e-03, -1.9930e-01,
         -1.4027e-01, -1.8017e-01,  1.4860e-02, -5.4065e-02, -4.5272e-02,
         -2.0527e-02,  7.3752e-02, -7.7117e-02,  7.3714e-02,  1.0646e-01,
          2.2747e-02, -3.5958e-02, -1.3035e-01, -1.6975e-01, -1.2251e-01,
         -5.3148e-02, -1.0358e-01,  3.2713e-02, -4.6751e-02, -5.5264e-02,
          2.4893e-02, -1.4757e-01],
        [-1.9828e-01, -6.2768e-02, -1.9552e-01,  3.4821e-02,  1.7912e-01,
          1.9703e-02,  4.6964e-02,  1.2506e-01,  1.0204e-01, -1.5277e-02,
         -1.6102e-01,  1.7857e-01,  1.3378e-01, -7.8483e-02, -5.3533e-03,
          8.0870e-02,  1.2871e-01,  1.0436e-01,  1.2036e-01,  1.2637e-01,
         -8.9034e-02,  1.7640e-01,  9.7475e-02,  9.6124e-03, -1.6054e-01,
          1.4603e-01,  7.4153e-02,  5.6905e-02, -7.3839e-02, -9.7040e-02,
          1.6112e-01, -1.0081e-01]], device='cuda:0') torch.Size([16, 32])
fc_blocks.1.0.bias tensor([ 0.1124,  0.1026, -0.1103,  0.1689, -0.0056,  0.0145, -0.0605, -0.0899,
        -0.0950,  0.0166,  0.0296,  0.1821,  0.0089,  0.0181,  0.0595, -0.1647],
       device='cuda:0') torch.Size([16])
fc_blocks.2.0.weight tensor([[-0.0554,  0.1564, -0.1633,  0.1502,  0.1160,  0.1158, -0.0394,  0.0521,
         -0.0657, -0.0437,  0.1909,  0.1174,  0.0743, -0.0935, -0.1613, -0.2033],
        [-0.2025,  0.1421, -0.0388, -0.1462, -0.0938, -0.0191, -0.0263, -0.0255,
          0.1544, -0.1639, -0.0297, -0.1586, -0.1275, -0.1837, -0.1000, -0.2283],
        [ 0.0521, -0.0312,  0.1622, -0.0440,  0.2673,  0.0618, -0.1488,  0.2745,
         -0.2625, -0.0069, -0.1582, -0.0674,  0.0655, -0.0289, -0.0183,  0.1138],
        [ 0.0612, -0.1654,  0.1490, -0.1899, -0.1756,  0.0721, -0.2393,  0.1717,
         -0.0513,  0.0052,  0.0035, -0.1102,  0.1884,  0.1246,  0.1464,  0.2059],
        [-0.2623, -0.2738,  0.0926,  0.0053,  0.0617,  0.2877,  0.1509, -0.2713,
          0.0690,  0.1635, -0.0856,  0.1482, -0.0864, -0.0736,  0.1403, -0.2308],
        [ 0.0578,  0.0639,  0.2533, -0.0096, -0.0334,  0.1149,  0.0204, -0.1462,
          0.2202, -0.1985,  0.1285,  0.1116, -0.1429, -0.1306,  0.2255,  0.1201],
        [ 0.0740,  0.0320, -0.2809,  0.0217,  0.1759, -0.0096,  0.0436, -0.1070,
          0.1376, -0.2167,  0.1795, -0.1174, -0.1483, -0.1810,  0.1461, -0.2576],
        [-0.2784, -0.2289, -0.2447,  0.0540, -0.0020,  0.2871, -0.2079,  0.0361,
          0.0433,  0.1456,  0.1009,  0.1418, -0.2295, -0.0378, -0.1542, -0.0499]],
       device='cuda:0') torch.Size([8, 16])
fc_blocks.2.0.bias tensor([ 0.2649, -0.0422, -0.2494, -0.1450, -0.2759, -0.0702, -0.1080, -0.1438],
       device='cuda:0') torch.Size([8])
fc_blocks.3.0.weight tensor([[ 0.2267,  0.2816,  0.1299,  0.0089, -0.1547,  0.1805,  0.0890, -0.2400],
        [-0.1751,  0.0146,  0.2457, -0.0819,  0.2025,  0.1321,  0.2491,  0.1242],
        [ 0.1394,  0.0173, -0.0047, -0.1748, -0.1256,  0.1314,  0.0380, -0.1135],
        [ 0.0635,  0.3574, -0.0411,  0.3243,  0.1841,  0.0433,  0.2707,  0.2684]],
       device='cuda:0') torch.Size([4, 8])
fc_blocks.3.0.bias tensor([ 0.2529,  0.0154,  0.3899, -0.3985], device='cuda:0') torch.Size([4])
fc_blocks.4.0.weight tensor([[-0.2241,  0.0341,  0.2178, -0.5423],
        [ 0.4872, -0.2117,  0.0492, -0.4981]], device='cuda:0') torch.Size([2, 4])
fc_blocks.4.0.bias tensor([-0.3244, -0.4263], device='cuda:0') torch.Size([2])
Train Loss : 1149.266, Val Loss : 452.418
======> Trajectory Loss : 1025.489, Gravity Loss : 0.001, EndOfTrajectory Loss : 1.238, BelowGroundPenalize Loss : 0.000
===> [Minibatch 7/129].........recurrent_blocks.0.weight_ih_l0 tensor([[ 0.1532,  0.0327, -0.0917],
        [-0.0829, -0.0307,  0.1852],
        [ 0.0366,  0.0635,  0.0932],
        [ 0.0042, -0.0898,  0.0541],
        [-0.0214, -0.0826, -0.0830],
        [ 0.0329, -0.1255,  0.1617],
        [-0.0736, -0.1600,  0.1686],
        [ 0.1160,  0.1447, -0.0559],
        [-0.1542, -0.1069, -0.0152],
        [ 0.1444,  0.0712,  0.1171],
        [-0.1291, -0.1948,  0.0600],
        [-0.0298,  0.1368, -0.0342],
        [-0.1399,  0.1701,  0.0794],
        [-0.1548, -0.1032,  0.1359],
        [-0.1636,  0.0603, -0.0675],
        [-0.1221, -0.0067,  0.2117],
        [ 0.0641, -0.1548, -0.1006],
        [ 0.0774,  0.1474, -0.0140],
        [-0.0562,  0.0023, -0.0437],
        [-0.2032, -0.1846, -0.0249],
        [-0.0819,  0.0684,  0.1719],
        [ 0.0487,  0.0346,  0.2191],
        [-0.0100, -0.0772, -0.1183],
        [ 0.0183, -0.1369, -0.0195],
        [-0.1435, -0.1471,  0.0474],
        [-0.2081, -0.1406, -0.0659],
        [-0.0660,  0.1172,  0.1144],
        [ 0.1115, -0.1961, -0.1635],
        [ 0.0362, -0.0793,  0.1078],
        [-0.1389, -0.0741,  0.1551],
        [ 0.0395, -0.1219, -0.1376],
        [ 0.0007,  0.0036, -0.0284],
        [-0.1315,  0.0649, -0.1709],
        [ 0.0500,  0.0312,  0.0058],
        [-0.0350,  0.1508,  0.0618],
        [ 0.1865,  0.1198, -0.0678],
        [-0.1209, -0.0070,  0.0774],
        [-0.0264, -0.1203, -0.1311],
        [-0.0644, -0.1606,  0.0753],
        [ 0.1422,  0.1023,  0.1490],
        [ 0.1613, -0.0624, -0.0337],
        [ 0.0452,  0.1039, -0.1052],
        [-0.1102,  0.1006,  0.1018],
        [ 0.1933,  0.1216,  0.2254],
        [-0.1398,  0.0009, -0.1495],
        [-0.0320, -0.0682, -0.1316],
        [-0.0952, -0.0372,  0.1295],
        [-0.1393,  0.0033, -0.0400],
        [ 0.0685, -0.0927,  0.0100],
        [-0.0209, -0.1618,  0.0914],
        [-0.1949,  0.1539,  0.0401],
        [-0.0346, -0.1628, -0.0133],
        [-0.1858, -0.0545,  0.2027],
        [ 0.0603, -0.0279,  0.0962],
        [-0.1008, -0.1531,  0.1739],
        [ 0.1668,  0.1090,  0.2005],
        [-0.1946, -0.0094, -0.1105],
        [ 0.0510, -0.1546, -0.1293],
        [ 0.0567,  0.1309, -0.0247],
        [-0.0073, -0.0770,  0.1390],
        [ 0.1369,  0.0589,  0.2155],
        [-0.1783, -0.1019, -0.0219],
        [-0.0903,  0.0152, -0.0779],
        [-0.0366, -0.1906, -0.0273],
        [ 0.0507,  0.1090,  0.0077],
        [-0.1565,  0.0795, -0.0615],
        [-0.0289, -0.1814, -0.1828],
        [ 0.0821,  0.1092, -0.0164],
        [-0.1263, -0.1849, -0.0206],
        [-0.0412, -0.2017,  0.1308],
        [-0.0110,  0.0093, -0.0976],
        [ 0.1104,  0.0188,  0.0264],
        [-0.1739,  0.1772,  0.1409],
        [-0.0175, -0.1154, -0.0214],
        [-0.1067, -0.1473, -0.1041],
        [ 0.1030,  0.0639,  0.0792],
        [ 0.0874,  0.1494, -0.1745],
        [-0.1613,  0.1717,  0.0640],
        [-0.1428,  0.0653, -0.0079],
        [ 0.0151,  0.1355, -0.1603],
        [-0.0547, -0.0435, -0.0419],
        [ 0.1308, -0.1390,  0.1446],
        [ 0.0239,  0.1226, -0.0584],
        [ 0.0583,  0.1937,  0.0673],
        [-0.1500, -0.1082,  0.0560],
        [-0.1716,  0.1930, -0.0308],
        [-0.0980,  0.1899, -0.1551],
        [ 0.0327, -0.1491,  0.0047],
        [ 0.0492,  0.1357, -0.0869],
        [ 0.1038, -0.0639, -0.0314],
        [-0.1769,  0.1198, -0.1078],
        [-0.1743,  0.0353,  0.1055],
        [ 0.0280, -0.0750,  0.1526],
        [ 0.0690, -0.1292,  0.0876],
        [-0.0848,  0.0420,  0.0358],
        [-0.0886, -0.0579,  0.1956],
        [-0.0818, -0.0363, -0.0990],
        [-0.2001, -0.1731,  0.1280],
        [ 0.1486, -0.0629, -0.1545],
        [-0.0518,  0.0243,  0.1734],
        [-0.1532, -0.0948, -0.1643],
        [ 0.1185,  0.0453, -0.0759],
        [-0.0387,  0.1554, -0.1011],
        [ 0.0231,  0.0069, -0.0704],
        [-0.0585, -0.1044,  0.1130],
        [ 0.0831,  0.0309,  0.1444],
        [-0.1456, -0.0083,  0.1289],
        [ 0.1834,  0.0892,  0.0699],
        [-0.0695, -0.1197, -0.1301],
        [ 0.1550, -0.1186,  0.1155],
        [-0.0304, -0.0447, -0.0355],
        [ 0.0251,  0.0380,  0.0196],
        [ 0.1383, -0.1121,  0.2042],
        [-0.1129, -0.1256, -0.0271],
        [-0.0808, -0.0226, -0.0426],
        [ 0.0889,  0.0883,  0.1045],
        [ 0.0361,  0.0648, -0.0913],
        [ 0.1823, -0.1194,  0.1724],
        [ 0.0462, -0.1686,  0.1504],
        [-0.0746, -0.0938, -0.0804],
        [ 0.0304, -0.2066, -0.0303],
        [-0.0934, -0.0371,  0.1063],
        [ 0.0809, -0.1188,  0.0945],
        [-0.1823, -0.1955,  0.1411],
        [ 0.1759, -0.1994, -0.0683],
        [-0.0778,  0.0974,  0.0648],
        [ 0.1754, -0.1752,  0.1517],
        [ 0.0209,  0.0245, -0.0309]], device='cuda:0') torch.Size([128, 3])
recurrent_blocks.0.weight_hh_l0 tensor([[ 0.0292,  0.0936, -0.1239,  ...,  0.1036,  0.1361,  0.0981],
        [ 0.0194,  0.0375,  0.0751,  ...,  0.1141,  0.0384, -0.0718],
        [ 0.0447, -0.0684, -0.0319,  ..., -0.1605, -0.1711, -0.0055],
        ...,
        [-0.1384,  0.0312, -0.0303,  ..., -0.0939,  0.0682,  0.0056],
        [ 0.0644,  0.0147, -0.1295,  ...,  0.0250, -0.0785,  0.1821],
        [-0.0493,  0.1237, -0.0792,  ..., -0.1617,  0.0008, -0.0450]],
       device='cuda:0') torch.Size([128, 32])
recurrent_blocks.0.bias_ih_l0 tensor([-0.0788,  0.0773, -0.1579,  0.1311,  0.1252,  0.2078, -0.1086, -0.0094,
         0.1002,  0.0180, -0.1236,  0.1324, -0.1941,  0.0166,  0.1253,  0.1112,
         0.0916,  0.1033,  0.0024,  0.1175, -0.0169,  0.0310, -0.0896,  0.1334,
        -0.1256,  0.1851,  0.0806,  0.0138,  0.0870,  0.1141, -0.0925, -0.0390,
        -0.0017, -0.0811,  0.0683,  0.1520, -0.0102, -0.0841,  0.0932,  0.0957,
         0.0035,  0.0718,  0.1259,  0.1762, -0.1758,  0.0179, -0.0052, -0.0752,
         0.1055,  0.0188,  0.1079,  0.0316,  0.0927,  0.0298, -0.0638,  0.0671,
         0.1749,  0.0374,  0.1041, -0.1401, -0.1069,  0.0911,  0.0476,  0.0695,
        -0.0319,  0.1234, -0.1093,  0.1388,  0.1827,  0.0736,  0.0836,  0.0141,
        -0.1170,  0.0613,  0.1892,  0.1538,  0.0023,  0.0734,  0.0145, -0.1225,
         0.1209,  0.0835,  0.1024, -0.1523,  0.0274, -0.2229,  0.0371,  0.1437,
        -0.1769, -0.1693,  0.1688, -0.0462,  0.2309, -0.1756, -0.1929,  0.1562,
         0.0230,  0.1698,  0.0607,  0.0869, -0.0565,  0.0561, -0.1130,  0.0770,
        -0.0406,  0.0556,  0.2270,  0.1774, -0.0200,  0.0104, -0.0652,  0.0681,
        -0.0178, -0.0171,  0.0490, -0.1212,  0.0806,  0.0904,  0.0629, -0.0554,
        -0.0686,  0.1628,  0.0185, -0.0900,  0.1831, -0.0470,  0.1722, -0.0725],
       device='cuda:0') torch.Size([128])
recurrent_blocks.0.bias_hh_l0 tensor([ 0.0128, -0.0377, -0.0323,  0.1165, -0.0875,  0.1794,  0.0717,  0.0650,
        -0.1613,  0.0118,  0.1545,  0.0383, -0.0151, -0.1829, -0.0698,  0.0135,
         0.0836,  0.1115, -0.1474,  0.1317,  0.0148,  0.1998,  0.0572,  0.1085,
         0.1348, -0.1400, -0.0888,  0.1317,  0.0365,  0.0329, -0.0175, -0.1083,
        -0.1404,  0.1861, -0.0800, -0.0928,  0.0509,  0.1030, -0.1277,  0.0076,
         0.1103,  0.0606, -0.0099,  0.1944, -0.1776,  0.0912,  0.0838,  0.0542,
        -0.0822, -0.1415,  0.0470, -0.0690,  0.1147,  0.0710, -0.0496,  0.1648,
        -0.1248,  0.1300,  0.0060,  0.1114,  0.0949,  0.1463, -0.0827,  0.0844,
         0.0004,  0.2135, -0.1867,  0.0661,  0.0874, -0.0308, -0.1739,  0.1360,
         0.0572, -0.2082,  0.1254,  0.1704,  0.0226, -0.1397,  0.2352, -0.0362,
         0.1107,  0.1846,  0.1723, -0.1698,  0.1372,  0.0637, -0.1818,  0.0565,
        -0.0134, -0.1342,  0.1593,  0.1515, -0.0538, -0.0725, -0.0724,  0.0891,
         0.0201, -0.1051,  0.1626,  0.1544, -0.0237, -0.0622, -0.0173,  0.1584,
         0.1549,  0.2123,  0.0950,  0.0666, -0.0092, -0.0256, -0.0011, -0.0105,
         0.0064, -0.1347, -0.1177,  0.0267, -0.0367,  0.1714, -0.0378, -0.0459,
        -0.1371,  0.1556,  0.1039,  0.0075, -0.0385, -0.0458, -0.0636,  0.0719],
       device='cuda:0') torch.Size([128])
recurrent_blocks.0.weight_ih_l0_reverse tensor([[ 0.0527, -0.1807, -0.0168],
        [ 0.0345, -0.0300, -0.0439],
        [-0.0306,  0.0378,  0.0657],
        [-0.1699, -0.0535,  0.1024],
        [ 0.2096,  0.1662, -0.0443],
        [-0.0963, -0.0513,  0.1969],
        [ 0.0447,  0.0629, -0.0961],
        [ 0.0392,  0.0385,  0.1156],
        [ 0.0807, -0.0356, -0.1208],
        [-0.0707,  0.2101, -0.2338],
        [-0.0845,  0.0448,  0.0506],
        [-0.1662,  0.0434, -0.1902],
        [ 0.1178,  0.0895,  0.0114],
        [-0.0400, -0.0287,  0.1319],
        [ 0.0994, -0.1011,  0.0047],
        [-0.0673, -0.0882, -0.0034],
        [-0.0939,  0.0004,  0.0505],
        [-0.1015, -0.0035, -0.0867],
        [-0.1936,  0.0132, -0.0861],
        [ 0.0988, -0.0880,  0.1648],
        [-0.0252,  0.1172, -0.1255],
        [-0.1215, -0.1252, -0.0054],
        [-0.0981,  0.1065,  0.0152],
        [ 0.0263,  0.1395, -0.1491],
        [-0.1727,  0.0322, -0.0061],
        [-0.1912, -0.1985,  0.0208],
        [-0.0674,  0.0573, -0.1054],
        [-0.2046,  0.0908,  0.0716],
        [-0.0605,  0.1710,  0.2219],
        [ 0.1285,  0.0427, -0.1785],
        [-0.0698,  0.1559, -0.1698],
        [-0.1643, -0.1785, -0.0673],
        [-0.1747, -0.0800,  0.0836],
        [-0.1751,  0.0468,  0.1796],
        [-0.1750,  0.1632,  0.1391],
        [-0.0148, -0.0788, -0.1232],
        [ 0.1798,  0.1114,  0.1740],
        [-0.0607,  0.0780,  0.1327],
        [ 0.0800,  0.0157,  0.0936],
        [-0.1603, -0.0509,  0.0761],
        [ 0.0888,  0.0258,  0.0499],
        [ 0.1852, -0.0166, -0.1428],
        [-0.2008, -0.0389, -0.1367],
        [ 0.1424,  0.1800, -0.0841],
        [ 0.0449,  0.1573,  0.0567],
        [ 0.1474, -0.1635, -0.0996],
        [-0.1529,  0.1191, -0.1492],
        [ 0.0183, -0.2210, -0.0225],
        [-0.1544, -0.1260, -0.1919],
        [-0.0949,  0.1683,  0.1552],
        [ 0.0040,  0.1391,  0.1233],
        [ 0.0475, -0.0992,  0.0792],
        [-0.0483, -0.0760,  0.0460],
        [ 0.0090, -0.2112,  0.2220],
        [-0.0945,  0.1483, -0.1854],
        [-0.0339, -0.0515,  0.1218],
        [-0.0410,  0.0351,  0.1359],
        [ 0.0239, -0.0982,  0.1881],
        [-0.0155,  0.0678,  0.0492],
        [-0.1989,  0.0269, -0.0217],
        [-0.0977,  0.1027,  0.1556],
        [-0.1056, -0.0079, -0.2194],
        [-0.0752,  0.0284, -0.0646],
        [-0.2216,  0.0925,  0.1616],
        [ 0.1834, -0.0147, -0.1771],
        [ 0.0226, -0.1574, -0.0763],
        [-0.1099,  0.0097, -0.0460],
        [-0.1493, -0.1151, -0.1628],
        [-0.0786, -0.1019, -0.1680],
        [ 0.0090, -0.0739,  0.0178],
        [-0.0431, -0.0626, -0.2119],
        [-0.1547,  0.0443,  0.1701],
        [ 0.0295,  0.2113, -0.1012],
        [-0.1088, -0.2214, -0.0773],
        [ 0.0048,  0.0347, -0.0070],
        [-0.0432, -0.0643,  0.0618],
        [-0.0249,  0.0080, -0.0547],
        [-0.0828, -0.0265,  0.1273],
        [-0.1840, -0.1560,  0.0915],
        [ 0.0907,  0.0161,  0.0647],
        [ 0.0481, -0.1435,  0.0920],
        [ 0.0555, -0.0614, -0.0690],
        [-0.0423, -0.1598,  0.1916],
        [ 0.1114,  0.1469, -0.1040],
        [ 0.1567,  0.1505, -0.1942],
        [ 0.0083, -0.1600,  0.2089],
        [ 0.0648, -0.0075,  0.1213],
        [-0.0815,  0.0973,  0.1188],
        [ 0.0526, -0.0261, -0.0240],
        [ 0.1120, -0.0985,  0.0902],
        [-0.1407, -0.1230, -0.1078],
        [-0.1321, -0.0739,  0.2022],
        [-0.0752,  0.1555,  0.1497],
        [-0.1199, -0.0280, -0.1308],
        [-0.1684,  0.0651,  0.1909],
        [-0.1028, -0.1895,  0.1397],
        [-0.0262, -0.1519,  0.1083],
        [-0.0526, -0.0719,  0.0358],
        [-0.1052, -0.0585,  0.0584],
        [ 0.1606, -0.0307, -0.1355],
        [ 0.0598,  0.1474, -0.0647],
        [ 0.1059, -0.2027,  0.0204],
        [-0.0478,  0.0392,  0.2252],
        [ 0.0679,  0.1012,  0.0770],
        [-0.0233, -0.2002,  0.0637],
        [ 0.1066,  0.0405,  0.0535],
        [ 0.0467,  0.0547,  0.1668],
        [ 0.1277, -0.0807, -0.0991],
        [ 0.1526, -0.0760,  0.1223],
        [ 0.0179, -0.1571,  0.1136],
        [ 0.1043,  0.0081,  0.1458],
        [ 0.0351, -0.1038, -0.1399],
        [ 0.1415,  0.0603, -0.1930],
        [-0.1714, -0.0663,  0.0825],
        [ 0.0571,  0.0803,  0.1575],
        [ 0.1488, -0.2030, -0.0644],
        [ 0.0687,  0.0717, -0.0763],
        [-0.1924, -0.0202,  0.1925],
        [ 0.0950, -0.1485,  0.0088],
        [-0.1339, -0.0465, -0.0065],
        [ 0.0995, -0.0848, -0.0988],
        [-0.1513,  0.1184,  0.0912],
        [-0.0080, -0.0669, -0.0180],
        [-0.1050, -0.0490,  0.0714],
        [ 0.0125, -0.0323, -0.1158],
        [ 0.1184, -0.0022,  0.0096],
        [ 0.0070, -0.0077,  0.0919],
        [-0.0387, -0.1519, -0.0946]], device='cuda:0') torch.Size([128, 3])
recurrent_blocks.0.weight_hh_l0_reverse tensor([[ 0.0234,  0.1344, -0.1440,  ..., -0.0713, -0.0607,  0.0533],
        [-0.0102, -0.0526,  0.1995,  ..., -0.1422,  0.0231,  0.0472],
        [-0.1743,  0.0438,  0.1868,  ...,  0.1989,  0.0020,  0.1104],
        ...,
        [ 0.1126,  0.1162, -0.1064,  ..., -0.1501, -0.0168,  0.0907],
        [ 0.0757,  0.2006,  0.1926,  ..., -0.1045,  0.1784,  0.0136],
        [ 0.0175, -0.0722, -0.0028,  ..., -0.0841,  0.2291,  0.0812]],
       device='cuda:0') torch.Size([128, 32])
recurrent_blocks.0.bias_ih_l0_reverse tensor([ 1.6115e-01, -6.5459e-02, -5.0573e-02,  1.0048e-01, -2.3632e-02,
         7.5767e-02,  8.3580e-02, -1.3810e-01, -6.9839e-02, -1.3854e-01,
         1.1004e-01,  1.2610e-01,  2.0354e-01,  7.1073e-02, -6.9140e-02,
         5.5985e-02, -1.1196e-01, -6.1526e-02,  1.8217e-01, -1.1016e-01,
        -1.1884e-01,  1.7842e-01, -1.8051e-01, -1.6980e-01,  1.5899e-01,
        -8.0607e-02,  1.3720e-01, -6.6442e-02,  1.1419e-01,  3.8253e-03,
        -6.5899e-02,  9.0273e-02,  1.4090e-01,  1.5747e-01, -3.1107e-02,
         3.7781e-02,  1.1692e-01,  4.9786e-02,  7.6314e-02, -1.4080e-01,
         1.1718e-01, -1.6951e-03, -1.2169e-01, -1.0071e-01, -1.0532e-01,
         1.1407e-01,  7.2757e-02,  6.6624e-02, -1.6179e-01, -8.1632e-02,
        -5.0472e-02,  1.9209e-01,  7.7275e-02,  1.9918e-01,  1.0626e-01,
        -9.4871e-02,  1.0665e-04,  1.2207e-01, -1.2141e-01,  8.0919e-02,
        -1.1937e-01, -1.5111e-02, -1.9142e-01, -4.6335e-02, -1.6050e-01,
        -1.1553e-01,  8.1833e-02, -1.2243e-01, -1.6744e-01,  1.4042e-01,
        -2.0517e-01,  7.5862e-02, -3.4393e-02,  5.3739e-02, -1.4808e-01,
        -1.7853e-02, -2.3174e-01,  4.6290e-02, -1.1546e-02,  1.2267e-01,
        -1.1786e-02,  1.6526e-03,  1.3608e-01,  8.5336e-02, -8.3232e-02,
         1.5675e-01, -1.0506e-01,  1.6132e-02, -5.1701e-03, -6.1992e-02,
        -6.7854e-02, -6.9126e-03,  1.1268e-01,  7.1152e-02, -5.5012e-02,
         7.4882e-02,  9.6891e-04,  1.4043e-01,  1.8739e-01, -1.3569e-01,
         1.4321e-01, -8.8095e-02,  2.0351e-01,  1.7355e-01, -3.7718e-02,
        -1.3074e-01,  1.6098e-01, -1.2831e-01,  2.1129e-01,  6.8499e-02,
        -1.2291e-01, -3.2244e-03,  6.6934e-02,  2.7302e-02,  1.4717e-01,
         1.5321e-01,  3.2407e-02,  1.9570e-01,  3.3448e-02, -6.6327e-02,
        -5.8794e-02,  1.7098e-01, -1.0653e-01,  1.3412e-01, -7.3722e-02,
        -9.0030e-02, -1.0179e-01, -3.6036e-02], device='cuda:0') torch.Size([128])
recurrent_blocks.0.bias_hh_l0_reverse tensor([ 0.1411,  0.0982,  0.0657, -0.1385, -0.0874,  0.0510,  0.0184,  0.0828,
         0.0160,  0.0254, -0.0570,  0.1029, -0.0805, -0.1310, -0.1146, -0.0990,
        -0.2070, -0.1188,  0.1219, -0.1287,  0.0949, -0.0796, -0.1776,  0.1144,
         0.0108, -0.0614,  0.0652,  0.0411,  0.0602,  0.0925, -0.1179,  0.0649,
        -0.0459,  0.1605,  0.0518,  0.1421,  0.0211,  0.0558,  0.0548, -0.1030,
         0.1596, -0.2099, -0.1467,  0.0692,  0.1377, -0.0876,  0.0527,  0.0244,
        -0.1981, -0.0690, -0.1349, -0.0934, -0.0519,  0.0165, -0.1270, -0.0341,
         0.0781, -0.0538,  0.1117, -0.1034, -0.0681,  0.0612, -0.0180,  0.1762,
        -0.1029, -0.1453,  0.0561,  0.0403, -0.0637,  0.0638,  0.0526, -0.0664,
        -0.1285, -0.0897, -0.0223,  0.1488, -0.2243,  0.1609,  0.1587,  0.0758,
        -0.0482, -0.1938, -0.1235, -0.1454,  0.0140, -0.0051,  0.0700, -0.0471,
        -0.1116, -0.1724, -0.0258,  0.2156,  0.1264, -0.0416,  0.0717, -0.0005,
         0.1377, -0.0955, -0.0110, -0.1923,  0.1655, -0.0873, -0.0494, -0.0714,
         0.1697, -0.0201, -0.0093, -0.1490,  0.0641, -0.0528, -0.1746,  0.1344,
         0.0730, -0.1081,  0.1081,  0.1684, -0.0983,  0.0440, -0.1916, -0.0252,
         0.0248, -0.0241, -0.0144, -0.1002,  0.1366,  0.0809,  0.0631, -0.0021],
       device='cuda:0') torch.Size([128])
recurrent_blocks.1.weight_ih_l0 tensor([[-0.1664,  0.0860,  0.0860,  ..., -0.0398,  0.2267, -0.0843],
        [-0.0676,  0.0438, -0.0045,  ...,  0.0296, -0.0905,  0.1794],
        [ 0.1775, -0.0875, -0.0360,  ..., -0.0437, -0.0104,  0.0731],
        ...,
        [ 0.1458,  0.0066,  0.0789,  ..., -0.1073,  0.0463,  0.1398],
        [-0.0078,  0.1897,  0.0481,  ..., -0.2148,  0.0118,  0.0342],
        [-0.1907,  0.1612, -0.0486,  ..., -0.0397, -0.0488,  0.0356]],
       device='cuda:0') torch.Size([128, 64])
recurrent_blocks.1.weight_hh_l0 tensor([[-0.1655,  0.1670, -0.1628,  ...,  0.1203,  0.0683,  0.0182],
        [ 0.0553,  0.1482,  0.0264,  ...,  0.2066, -0.1115,  0.1049],
        [ 0.1845, -0.1267, -0.0765,  ...,  0.0413,  0.0642, -0.1188],
        ...,
        [ 0.0542, -0.0324, -0.0184,  ...,  0.0091, -0.1542, -0.1118],
        [-0.0099,  0.1525, -0.0350,  ..., -0.0986, -0.1510,  0.0093],
        [ 0.1555, -0.0124,  0.0228,  ...,  0.1348, -0.1310,  0.0534]],
       device='cuda:0') torch.Size([128, 32])
recurrent_blocks.1.bias_ih_l0 tensor([ 0.0787,  0.1599,  0.0903, -0.0290,  0.1061, -0.0378, -0.0112, -0.0675,
         0.0817, -0.1410, -0.1200,  0.1325, -0.0097,  0.0691,  0.0487,  0.2323,
         0.1298,  0.1180, -0.1008,  0.2055,  0.0216, -0.0140, -0.0060, -0.1090,
         0.0745, -0.0438, -0.1980,  0.1434,  0.1312, -0.2134, -0.0622, -0.1152,
        -0.0205,  0.0750,  0.1081,  0.0441, -0.1392, -0.1084,  0.2017,  0.1837,
         0.0930, -0.0161,  0.0114, -0.0240,  0.0557, -0.1359,  0.0026,  0.0702,
         0.0914,  0.0709,  0.1592, -0.0779,  0.0611, -0.1370,  0.1655, -0.1430,
         0.0602,  0.0862, -0.1915, -0.0217,  0.0630,  0.1160,  0.0669,  0.0090,
         0.0020,  0.2347,  0.1016,  0.1006, -0.0268,  0.0750,  0.0698, -0.1805,
         0.0327,  0.0454, -0.0226, -0.0838,  0.0244,  0.1423, -0.0332, -0.1417,
        -0.1275, -0.0349, -0.0209,  0.0241,  0.1855, -0.0255,  0.0532,  0.0258,
        -0.0958, -0.0176, -0.0005, -0.1265,  0.0691, -0.0635,  0.0937,  0.1346,
         0.0949,  0.0181,  0.1400, -0.0052, -0.0843, -0.0110,  0.1233, -0.0945,
        -0.1041, -0.1416,  0.0828, -0.0160, -0.0170,  0.1102,  0.0264,  0.1426,
        -0.1359,  0.0941, -0.0007,  0.0353,  0.2217, -0.0885,  0.1895, -0.1141,
         0.1506, -0.0374,  0.0323, -0.0744,  0.1365, -0.0125, -0.1290,  0.0892],
       device='cuda:0') torch.Size([128])
recurrent_blocks.1.bias_hh_l0 tensor([-0.0582,  0.1617,  0.0541,  0.1383,  0.0078,  0.2003,  0.0197,  0.1931,
        -0.0297, -0.0698, -0.0545,  0.0038, -0.0360, -0.0166, -0.1463,  0.2100,
         0.1519,  0.1056,  0.0440, -0.0590,  0.2213,  0.1134,  0.1907, -0.1452,
         0.1304,  0.1258, -0.0392, -0.1235,  0.0261, -0.1772, -0.0232, -0.0984,
         0.0412, -0.1449,  0.0554, -0.0402, -0.1057,  0.0005, -0.0297,  0.0849,
         0.0203, -0.0991,  0.1394,  0.0281, -0.0334,  0.1950,  0.1499,  0.0071,
        -0.0639,  0.0291, -0.0394,  0.0832, -0.0284,  0.0087,  0.0857,  0.1169,
         0.1481, -0.0261, -0.1190,  0.1820, -0.0298, -0.1694,  0.0686, -0.1159,
         0.0847, -0.0876,  0.1743,  0.1926, -0.1561,  0.0277, -0.2184,  0.1276,
         0.1481, -0.1463, -0.0315, -0.1110, -0.0600,  0.0784,  0.1092,  0.0060,
        -0.0747, -0.0619,  0.1769,  0.1592,  0.2200,  0.0016, -0.1431,  0.1722,
        -0.1424, -0.1696,  0.1415, -0.0379,  0.1075,  0.0333, -0.0427, -0.0904,
        -0.0226,  0.1062,  0.0291,  0.1218,  0.0785, -0.0702,  0.1734, -0.0963,
        -0.0778,  0.0462,  0.1539, -0.0627, -0.0348, -0.0729, -0.1252,  0.0366,
        -0.1881,  0.1500,  0.1806,  0.1925,  0.1390, -0.0687, -0.0395, -0.1171,
        -0.0069, -0.1338, -0.1078, -0.1070, -0.0709, -0.1208,  0.1236,  0.1513],
       device='cuda:0') torch.Size([128])
recurrent_blocks.1.weight_ih_l0_reverse tensor([[-0.0282,  0.0571, -0.0226,  ...,  0.0925, -0.1179,  0.0601],
        [ 0.0697,  0.0038,  0.0435,  ...,  0.1209, -0.0247,  0.0738],
        [-0.2249, -0.1029,  0.0051,  ..., -0.0816,  0.0670,  0.0625],
        ...,
        [-0.1502,  0.0746, -0.1996,  ..., -0.0359, -0.0375, -0.0930],
        [ 0.0571,  0.2055,  0.0196,  ..., -0.0665, -0.1425, -0.1009],
        [ 0.0241,  0.0393, -0.0787,  ..., -0.0446, -0.0810, -0.0659]],
       device='cuda:0') torch.Size([128, 64])
recurrent_blocks.1.weight_hh_l0_reverse tensor([[ 0.0959,  0.0705,  0.0997,  ...,  0.1269, -0.2046, -0.1647],
        [-0.0502, -0.0419, -0.0183,  ...,  0.0867, -0.0784,  0.0859],
        [-0.0796, -0.0876,  0.0690,  ...,  0.1243, -0.1621,  0.0472],
        ...,
        [ 0.1348, -0.1527,  0.1025,  ..., -0.0615,  0.0800, -0.1188],
        [-0.0694,  0.0716,  0.0780,  ...,  0.0025,  0.0057,  0.0346],
        [ 0.0355, -0.1448,  0.1872,  ...,  0.0142,  0.1728,  0.0607]],
       device='cuda:0') torch.Size([128, 32])
recurrent_blocks.1.bias_ih_l0_reverse tensor([-0.1335,  0.1551,  0.0449, -0.1270,  0.0906, -0.0058,  0.2086,  0.1122,
         0.1118, -0.0356,  0.0381,  0.2293,  0.0758,  0.0482, -0.0350, -0.1586,
         0.1560, -0.0133,  0.0777,  0.1059,  0.1140, -0.0341,  0.1301, -0.1318,
        -0.1345, -0.0529,  0.1863,  0.0064,  0.0415, -0.0098, -0.0094, -0.0990,
         0.1027,  0.0073, -0.0521, -0.1639, -0.0968,  0.1265, -0.0912,  0.1881,
        -0.0902, -0.0693,  0.2167, -0.0463,  0.2071,  0.1259, -0.1120,  0.0629,
        -0.0453, -0.0681, -0.1937,  0.0547, -0.0828, -0.1209,  0.1712, -0.1270,
         0.0666,  0.0073,  0.2167,  0.0103,  0.0595,  0.1109,  0.1522,  0.1744,
        -0.0477, -0.0320,  0.1922, -0.1793, -0.0723, -0.0197, -0.1448,  0.1346,
        -0.2077,  0.0875,  0.0789, -0.0700, -0.2153, -0.1422,  0.0303,  0.1271,
        -0.0101,  0.0762, -0.1493, -0.0072, -0.0351, -0.0877,  0.0025, -0.1591,
         0.0027,  0.0470,  0.1361,  0.1566, -0.1579, -0.1479, -0.0134, -0.0219,
         0.0686, -0.1089, -0.0804,  0.0155, -0.1950,  0.1175,  0.2114,  0.1321,
        -0.1099, -0.1181, -0.0610,  0.1363, -0.1210, -0.0787,  0.0146, -0.1023,
         0.1774, -0.0127, -0.1428,  0.1766,  0.1375, -0.0953,  0.1527,  0.1007,
        -0.1675,  0.1014,  0.0518, -0.1127,  0.0481,  0.0320, -0.0948,  0.2017],
       device='cuda:0') torch.Size([128])
recurrent_blocks.1.bias_hh_l0_reverse tensor([-0.1127,  0.0509, -0.0549,  0.0403, -0.1596,  0.1342,  0.0044, -0.0051,
         0.1824,  0.1334, -0.0342,  0.1515,  0.1989,  0.1192, -0.0080, -0.0808,
        -0.1173,  0.0441,  0.0266, -0.0405, -0.0167,  0.1611, -0.0643,  0.1814,
         0.0568, -0.0276,  0.0987, -0.0317, -0.0972,  0.1773, -0.0904, -0.0827,
        -0.1105,  0.0859, -0.1649,  0.1625,  0.0527, -0.0719, -0.0260,  0.0824,
         0.1358,  0.0087, -0.0514, -0.1129,  0.0616,  0.0692, -0.0478,  0.0693,
         0.1989, -0.1188,  0.0764, -0.0482,  0.0551,  0.0636,  0.0779, -0.1303,
        -0.1108, -0.0249,  0.0085, -0.0042, -0.0027,  0.1460,  0.0945,  0.1826,
        -0.0847, -0.1317, -0.0701, -0.1068,  0.0005,  0.1508, -0.0553,  0.0016,
        -0.0272, -0.1306,  0.1045,  0.2000, -0.0404, -0.0412, -0.1832,  0.1334,
        -0.0389,  0.1089,  0.1511, -0.1025,  0.0980,  0.1790,  0.0469, -0.1115,
         0.0077,  0.0755,  0.1771,  0.0060, -0.1144, -0.1970,  0.2271,  0.2345,
        -0.1655,  0.0104,  0.0084, -0.0448, -0.1040,  0.0645,  0.2206, -0.1179,
        -0.0611,  0.0462,  0.0305, -0.0592,  0.1512,  0.1230, -0.1180, -0.1538,
         0.0743,  0.1085, -0.1492,  0.0846,  0.1533,  0.0876,  0.1572,  0.1781,
        -0.0072,  0.1134,  0.2202,  0.1781,  0.1150, -0.1040, -0.0564, -0.0921],
       device='cuda:0') torch.Size([128])
recurrent_blocks.2.weight_ih_l0 tensor([[-0.1298, -0.1154, -0.0301,  ..., -0.1262,  0.0084, -0.0614],
        [ 0.1246,  0.0612,  0.2361,  ...,  0.0302,  0.1400, -0.1439],
        [-0.0855,  0.1293,  0.1250,  ...,  0.0912,  0.1001,  0.1357],
        ...,
        [-0.1586, -0.0587,  0.2067,  ..., -0.1056, -0.1103, -0.0788],
        [-0.1000,  0.0558, -0.1251,  ...,  0.0103, -0.0887,  0.1858],
        [ 0.0950, -0.1368, -0.0717,  ...,  0.0227,  0.0905,  0.1049]],
       device='cuda:0') torch.Size([128, 64])
recurrent_blocks.2.weight_hh_l0 tensor([[-0.0970, -0.0982, -0.1334,  ..., -0.0105, -0.0124,  0.0712],
        [ 0.0873,  0.0019, -0.0741,  ..., -0.1057, -0.1209,  0.0604],
        [-0.0202, -0.1405, -0.0761,  ...,  0.1555, -0.1453, -0.0887],
        ...,
        [ 0.0055,  0.2032, -0.1162,  ...,  0.1591, -0.0537, -0.0451],
        [-0.0282, -0.0901, -0.0783,  ..., -0.1218, -0.1081, -0.0545],
        [-0.0693,  0.0834, -0.1249,  ...,  0.0805, -0.1280,  0.1470]],
       device='cuda:0') torch.Size([128, 32])
recurrent_blocks.2.bias_ih_l0 tensor([-0.0451,  0.1733, -0.0845, -0.0700,  0.1687,  0.0895, -0.1530,  0.0597,
         0.0793, -0.0039,  0.0798,  0.0947, -0.1141, -0.0628,  0.0474, -0.0846,
         0.0436, -0.0030,  0.1242, -0.1469,  0.0286, -0.0784, -0.0972, -0.1091,
        -0.0519, -0.0763,  0.2026, -0.1377,  0.0700, -0.0926, -0.0173, -0.0084,
         0.1249, -0.0245,  0.0122, -0.0711, -0.0812,  0.0593,  0.1867, -0.0727,
         0.0144,  0.1496, -0.1016, -0.0578,  0.1747,  0.1064,  0.0216,  0.0474,
         0.0832,  0.0729,  0.0199, -0.0848, -0.0507, -0.1461,  0.1591, -0.1390,
        -0.0926, -0.1059,  0.1862,  0.0175,  0.0004, -0.1078,  0.1785,  0.1565,
         0.0044,  0.1025, -0.1361,  0.0369, -0.0527,  0.1464, -0.1486,  0.0279,
         0.1859, -0.0736,  0.0363, -0.0564,  0.1491,  0.1062,  0.0034, -0.0706,
         0.0762, -0.0017,  0.0775, -0.1102,  0.1127,  0.0325, -0.1470, -0.0818,
         0.1071, -0.1763, -0.1302,  0.0079,  0.1314, -0.1848,  0.1730,  0.0611,
        -0.1749, -0.0567, -0.1165,  0.0301, -0.1287,  0.0505,  0.1782,  0.0252,
         0.1531,  0.1822, -0.1546,  0.0960,  0.1399,  0.1148, -0.0403,  0.1944,
        -0.0427, -0.0499,  0.1918,  0.0749,  0.1098, -0.0885, -0.0556, -0.1917,
        -0.0511,  0.0885, -0.1018,  0.0558,  0.1955, -0.1573, -0.0807,  0.1423],
       device='cuda:0') torch.Size([128])
recurrent_blocks.2.bias_hh_l0 tensor([-0.2047,  0.1845, -0.1319,  0.0395, -0.0679,  0.1087,  0.0506,  0.0713,
        -0.0922, -0.0947,  0.1094, -0.1088,  0.0896, -0.1365, -0.0405, -0.0318,
         0.1798,  0.1295,  0.0887, -0.1088, -0.0918, -0.0170, -0.1015,  0.0830,
         0.1547, -0.0587,  0.0616, -0.1420,  0.0713, -0.0525, -0.0546,  0.0471,
        -0.0643,  0.1213,  0.0606,  0.0320,  0.0071,  0.0496,  0.1655,  0.0878,
        -0.1161,  0.1562, -0.1659, -0.0849, -0.0764,  0.0996,  0.0644,  0.0160,
        -0.0376,  0.1290,  0.1076, -0.0380, -0.0995, -0.2167,  0.0983, -0.0969,
         0.1287, -0.1374,  0.0932, -0.0789,  0.1962,  0.0422, -0.0377, -0.0704,
         0.1253,  0.0330,  0.0061, -0.0419, -0.1028, -0.0380,  0.0380, -0.1517,
         0.1421, -0.0446, -0.1267,  0.1512,  0.1446, -0.0293, -0.0346, -0.1399,
         0.1105, -0.1715,  0.1286,  0.0654,  0.1187, -0.0268,  0.0698, -0.1432,
        -0.1380, -0.0310, -0.1570,  0.1585,  0.2008, -0.1572, -0.0354,  0.0454,
         0.1029,  0.0808, -0.1240, -0.0824, -0.1077,  0.1061,  0.1447,  0.0609,
        -0.1585,  0.0384,  0.0815, -0.1199,  0.2266,  0.0572,  0.1364,  0.1514,
        -0.0608,  0.0661,  0.0020,  0.1178, -0.1152, -0.0230,  0.1678, -0.0286,
         0.0073,  0.2056, -0.0860, -0.1742,  0.2338,  0.1466,  0.1937,  0.1417],
       device='cuda:0') torch.Size([128])
recurrent_blocks.2.weight_ih_l0_reverse tensor([[-0.0608, -0.0990,  0.1484,  ...,  0.1071, -0.0195, -0.0121],
        [ 0.1020,  0.1245,  0.1432,  ..., -0.1461, -0.0619,  0.0064],
        [ 0.1642,  0.1356,  0.0843,  ...,  0.1031,  0.1112, -0.1308],
        ...,
        [-0.1541, -0.1341, -0.1870,  ...,  0.1295,  0.0369,  0.0410],
        [-0.0776,  0.0044,  0.1046,  ..., -0.1756,  0.1052, -0.0009],
        [-0.1146,  0.0476,  0.0853,  ...,  0.0164,  0.0357,  0.1714]],
       device='cuda:0') torch.Size([128, 64])
recurrent_blocks.2.weight_hh_l0_reverse tensor([[ 0.1385, -0.0093, -0.0349,  ..., -0.1494, -0.1987,  0.0183],
        [-0.0703,  0.0216,  0.0755,  ..., -0.0998,  0.0108,  0.0398],
        [-0.0203,  0.0619, -0.0133,  ..., -0.1463,  0.1349,  0.1433],
        ...,
        [-0.0238, -0.0357, -0.0197,  ..., -0.1810,  0.0427,  0.1072],
        [ 0.1934, -0.0143,  0.1622,  ...,  0.0534,  0.1703, -0.0073],
        [ 0.0070,  0.1588,  0.1576,  ..., -0.0401,  0.1601, -0.0278]],
       device='cuda:0') torch.Size([128, 32])
recurrent_blocks.2.bias_ih_l0_reverse tensor([-0.2078, -0.1538, -0.0279, -0.0994,  0.0934,  0.0412, -0.0006,  0.0919,
         0.1034,  0.0111,  0.0409,  0.0304, -0.0782,  0.0691, -0.0883, -0.0050,
         0.0304,  0.2175, -0.0230, -0.0240, -0.0670,  0.1052,  0.0985, -0.0456,
        -0.0963, -0.1686,  0.0965, -0.0986, -0.1005, -0.0569, -0.0628,  0.0133,
         0.0694,  0.0786, -0.0278,  0.0570, -0.2118,  0.1542,  0.0421,  0.1383,
         0.1792,  0.0909,  0.1536, -0.0297, -0.0764,  0.1532, -0.0037,  0.0803,
         0.2036, -0.0811, -0.0667, -0.0047, -0.1072,  0.0085,  0.1847,  0.0732,
        -0.0581, -0.1420, -0.0531, -0.0280, -0.0095,  0.1537,  0.1055,  0.0261,
        -0.1048,  0.0122,  0.1336, -0.1342, -0.0241,  0.2258, -0.1523, -0.0699,
        -0.0822, -0.0905,  0.1022, -0.0480, -0.0616,  0.1354, -0.0809,  0.1829,
        -0.1911,  0.1230, -0.1457, -0.0546, -0.1827,  0.0700,  0.1214,  0.0529,
         0.0463,  0.1048,  0.0543,  0.1768,  0.0355,  0.0537,  0.0604,  0.1516,
         0.0993,  0.0133,  0.0241,  0.1134,  0.1306,  0.1382, -0.1059,  0.1014,
        -0.0280, -0.0386, -0.1451,  0.1954,  0.1511,  0.0913,  0.1090, -0.1098,
         0.1638,  0.2105, -0.0846,  0.1995,  0.0456,  0.2085,  0.0254,  0.0282,
        -0.1597, -0.0129,  0.0089,  0.1851, -0.0277,  0.1404,  0.0760,  0.0397],
       device='cuda:0') torch.Size([128])
recurrent_blocks.2.bias_hh_l0_reverse tensor([ 0.1135,  0.0109, -0.0788,  0.0941,  0.0555,  0.1976,  0.0864,  0.0653,
         0.0881,  0.0969,  0.0765, -0.1243,  0.0319, -0.0862, -0.1654, -0.0060,
        -0.0063,  0.1184,  0.0509,  0.0797, -0.1213,  0.0782,  0.1791, -0.1930,
        -0.2200,  0.1411,  0.1655,  0.1780,  0.1037,  0.1377,  0.1233,  0.0421,
         0.0835,  0.0408,  0.1427,  0.1432, -0.0569,  0.0066, -0.0347, -0.0548,
        -0.0117, -0.0213,  0.1034,  0.0284, -0.0520, -0.0831, -0.1536, -0.0817,
         0.2006,  0.1833, -0.0845,  0.0151, -0.0197,  0.2188,  0.1381,  0.1377,
        -0.0238, -0.0469,  0.1836, -0.0640,  0.1425, -0.0467,  0.2032,  0.2294,
         0.0714, -0.0456,  0.1892, -0.1505, -0.0230,  0.0010, -0.1378,  0.1953,
        -0.1737,  0.0034, -0.0960,  0.1924, -0.0445,  0.0312, -0.0154,  0.1894,
         0.0027,  0.0960, -0.1118, -0.1343, -0.1307,  0.0521,  0.1804,  0.0925,
         0.0891, -0.1438, -0.0485,  0.1256, -0.0975,  0.1463,  0.1316,  0.1473,
        -0.0883,  0.1470, -0.1220, -0.1550,  0.1258, -0.0467, -0.0166,  0.0874,
         0.0023, -0.0605,  0.0463,  0.2284,  0.2175,  0.1541,  0.1103, -0.0935,
        -0.0939,  0.1970,  0.0658,  0.0834, -0.1109, -0.0833,  0.0185,  0.1009,
         0.0630, -0.0426, -0.1017, -0.0936,  0.0986, -0.1374, -0.0891,  0.0297],
       device='cuda:0') torch.Size([128])
recurrent_blocks.3.weight_ih_l0 tensor([[-0.0799,  0.1546, -0.1343,  ..., -0.0885, -0.0754,  0.1059],
        [ 0.0261,  0.0850, -0.1323,  ..., -0.0970,  0.1046,  0.0703],
        [-0.0035,  0.0208,  0.0462,  ..., -0.0690,  0.1286,  0.1128],
        ...,
        [ 0.0578, -0.1104,  0.1724,  ..., -0.1542, -0.0627,  0.1786],
        [ 0.0669, -0.1752, -0.1691,  ...,  0.1293, -0.0565,  0.1521],
        [-0.0308, -0.1498,  0.0424,  ..., -0.0677, -0.0880, -0.0966]],
       device='cuda:0') torch.Size([128, 64])
recurrent_blocks.3.weight_hh_l0 tensor([[-1.9829e-02,  1.2801e-01, -1.2735e-01,  ..., -4.2864e-02,
          9.1288e-02,  1.4676e-01],
        [ 1.0697e-01,  7.1166e-05, -1.0228e-01,  ..., -5.2811e-02,
         -8.5530e-02, -8.8413e-02],
        [-2.0641e-02, -2.9571e-02, -1.2010e-01,  ..., -1.8133e-01,
         -4.7520e-02,  1.0996e-01],
        ...,
        [-9.3417e-02,  6.8480e-02,  9.5549e-02,  ..., -1.6462e-01,
         -1.7355e-02,  8.6244e-04],
        [ 1.1588e-01, -1.2860e-01, -1.2414e-01,  ..., -1.8656e-01,
          6.3512e-02, -1.5295e-01],
        [-1.2820e-01, -3.5943e-02,  1.5671e-01,  ...,  1.1297e-02,
         -4.4589e-02,  2.0110e-01]], device='cuda:0') torch.Size([128, 32])
recurrent_blocks.3.bias_ih_l0 tensor([ 0.0197, -0.0141,  0.0799, -0.2126, -0.0564,  0.1963,  0.1869, -0.1125,
         0.1361, -0.0814, -0.0007, -0.1014,  0.1279, -0.0069,  0.0928, -0.1368,
         0.1448,  0.0969,  0.1347, -0.0768, -0.0475,  0.1861,  0.0644, -0.1444,
        -0.0142, -0.0974,  0.0024,  0.1255, -0.0256, -0.1435, -0.0723, -0.1193,
         0.0327, -0.0843,  0.1153, -0.0651,  0.0827,  0.0303, -0.0161, -0.1952,
        -0.1075, -0.0565,  0.1063,  0.1527,  0.2253, -0.0581, -0.0261,  0.0597,
        -0.1037, -0.0663,  0.1513,  0.1236,  0.0915,  0.1337, -0.0003,  0.1508,
         0.1509,  0.1369,  0.1843, -0.1693, -0.0370,  0.0728, -0.0846, -0.0139,
         0.1516, -0.0060,  0.1109, -0.0010,  0.1330,  0.1362, -0.1998,  0.0854,
        -0.0834, -0.0160, -0.0348, -0.0681,  0.2069, -0.0390, -0.1064, -0.0129,
         0.1813,  0.0834,  0.0381, -0.1244, -0.0324, -0.1024, -0.0944, -0.0829,
        -0.1821, -0.1776,  0.0132,  0.0979,  0.1606,  0.1260,  0.1008, -0.0927,
         0.0521,  0.0368, -0.1180,  0.0553, -0.0342, -0.0305, -0.0058, -0.0518,
        -0.0947,  0.0402, -0.1544, -0.0782,  0.0440,  0.0708, -0.1589,  0.0302,
        -0.1539,  0.0622,  0.0440,  0.0596,  0.1732,  0.1531,  0.1181,  0.1612,
         0.1292,  0.2072,  0.0479,  0.1418, -0.1330,  0.1392,  0.1035, -0.0458],
       device='cuda:0') torch.Size([128])
recurrent_blocks.3.bias_hh_l0 tensor([-0.1276,  0.0666,  0.1326,  0.0978,  0.0590, -0.0490,  0.1811,  0.0122,
         0.1077,  0.1186,  0.0680,  0.1136, -0.0958,  0.0196,  0.1425,  0.1338,
         0.1124,  0.1112,  0.0576,  0.0560,  0.0921, -0.0631,  0.0944, -0.1648,
        -0.0519,  0.0237,  0.1799, -0.1139,  0.1008, -0.1270,  0.1084, -0.0768,
        -0.1497, -0.1058,  0.1193, -0.2049, -0.0045,  0.1965,  0.2228, -0.2060,
         0.2082,  0.1142, -0.1355,  0.0367, -0.1065,  0.1185, -0.0169,  0.0662,
         0.1810,  0.0310,  0.0765, -0.1932,  0.0212, -0.0359, -0.0813,  0.1759,
         0.0973,  0.0008, -0.1070,  0.0930, -0.0692,  0.0965,  0.1416, -0.1055,
        -0.0099, -0.0578,  0.0072,  0.0253, -0.1076,  0.0430,  0.0221,  0.0362,
        -0.1922, -0.1860, -0.0629,  0.1406,  0.0706,  0.0048, -0.0937,  0.0588,
         0.1916, -0.0531, -0.0091,  0.1289, -0.0149, -0.1043,  0.0349,  0.0425,
        -0.0940, -0.0605, -0.1297,  0.0087,  0.1657, -0.1674,  0.1090, -0.1548,
         0.1628,  0.1980, -0.1534,  0.1116, -0.1047,  0.0400,  0.1889, -0.2100,
         0.0795,  0.1567, -0.0689, -0.0454, -0.1197, -0.0245,  0.0886, -0.1827,
        -0.1097,  0.0196,  0.2225, -0.1263,  0.1961,  0.1890, -0.0875, -0.0172,
         0.0597,  0.2047, -0.0676,  0.0214, -0.0934,  0.1182, -0.0768, -0.1260],
       device='cuda:0') torch.Size([128])
recurrent_blocks.3.weight_ih_l0_reverse tensor([[ 0.1792, -0.0103,  0.0817,  ...,  0.0902,  0.1684,  0.0016],
        [ 0.0165,  0.0025, -0.0878,  ...,  0.0135, -0.1393, -0.0658],
        [ 0.1463, -0.0766, -0.1069,  ...,  0.0220,  0.0185, -0.0297],
        ...,
        [ 0.1276,  0.1119,  0.0360,  ...,  0.0254, -0.0142,  0.0221],
        [-0.1146,  0.1243, -0.1840,  ..., -0.1046,  0.0534, -0.0949],
        [-0.1188, -0.0093, -0.1699,  ..., -0.0077,  0.0724, -0.0486]],
       device='cuda:0') torch.Size([128, 64])
recurrent_blocks.3.weight_hh_l0_reverse tensor([[ 0.1089,  0.1073,  0.0514,  ...,  0.2034, -0.1237, -0.0798],
        [-0.0963, -0.1035,  0.0761,  ...,  0.0238, -0.0531, -0.0090],
        [-0.0386,  0.1661,  0.0168,  ...,  0.0807,  0.1504, -0.0204],
        ...,
        [ 0.0156, -0.0244,  0.0022,  ..., -0.0946,  0.2100,  0.1800],
        [-0.0577,  0.0861,  0.0190,  ...,  0.0442,  0.0293,  0.2059],
        [-0.0575, -0.0853, -0.0629,  ...,  0.0797,  0.0245,  0.0100]],
       device='cuda:0') torch.Size([128, 32])
recurrent_blocks.3.bias_ih_l0_reverse tensor([-0.0112,  0.1391,  0.1235, -0.0768,  0.1577,  0.0654,  0.1629,  0.0311,
         0.1163, -0.0340, -0.0679, -0.0542,  0.1185,  0.1005, -0.0069,  0.0986,
         0.0446, -0.1241, -0.0003,  0.1184,  0.0503,  0.0368, -0.0162, -0.0502,
         0.0029, -0.1139,  0.0479,  0.2173, -0.1416,  0.0497,  0.0108, -0.0087,
         0.0841,  0.0523,  0.1942, -0.0730, -0.0368, -0.0855,  0.0270, -0.1958,
        -0.1341, -0.0222, -0.0286,  0.1360, -0.1147,  0.1663, -0.1433, -0.0189,
        -0.0614,  0.1367, -0.0863,  0.1070,  0.0997,  0.0501, -0.1006,  0.1064,
         0.0923, -0.0322, -0.0358,  0.1372,  0.0146,  0.0640, -0.0886, -0.1177,
        -0.1566, -0.1981,  0.2157, -0.0431, -0.1499, -0.0719, -0.0991, -0.0197,
         0.1426, -0.0080, -0.1035,  0.0284, -0.0930, -0.1518,  0.0298, -0.1490,
        -0.1014,  0.2325,  0.1102, -0.0121,  0.1311, -0.0962,  0.1611, -0.1819,
         0.0159, -0.0200, -0.1159,  0.1588,  0.1284,  0.0552, -0.0994, -0.0688,
         0.1215, -0.0889,  0.0120, -0.0579,  0.1889, -0.1265,  0.0634, -0.1798,
        -0.0553,  0.1094,  0.1551,  0.1084, -0.0773,  0.1297,  0.0369, -0.0867,
        -0.1691, -0.0458,  0.1377, -0.1313, -0.0316,  0.1065,  0.0354, -0.0602,
        -0.0669, -0.0594, -0.1176,  0.1517,  0.1322, -0.2133,  0.0601, -0.0787],
       device='cuda:0') torch.Size([128])
recurrent_blocks.3.bias_hh_l0_reverse tensor([-0.0197, -0.0950, -0.0273, -0.0371, -0.0147, -0.1276,  0.1798,  0.0863,
         0.1411, -0.1782,  0.0544,  0.0086, -0.0311, -0.0681,  0.0446, -0.0574,
         0.1809, -0.0713,  0.1037,  0.1284,  0.1457,  0.1277,  0.1469, -0.0922,
        -0.0611,  0.1153, -0.0147, -0.0206, -0.0943, -0.0659,  0.0894,  0.1156,
        -0.1014, -0.1335,  0.1971,  0.0078, -0.0097,  0.0125,  0.1239, -0.0658,
         0.0394,  0.1171,  0.0269,  0.1593,  0.1096, -0.1070, -0.0379, -0.0665,
        -0.0125, -0.0686, -0.1543,  0.1158, -0.0713,  0.1427, -0.1127,  0.0879,
        -0.2186,  0.0201, -0.0647,  0.1452, -0.0197,  0.0884,  0.0860, -0.0273,
         0.1277,  0.0544, -0.1096,  0.0742, -0.2141, -0.0072, -0.1967,  0.2034,
        -0.0709,  0.0957,  0.2060, -0.0756,  0.1020, -0.1891, -0.1720, -0.0373,
         0.0760,  0.0289,  0.1022, -0.0324,  0.1422, -0.1070, -0.0967,  0.0806,
         0.0562, -0.1643,  0.1658,  0.0129, -0.1842,  0.0637, -0.0776, -0.0683,
        -0.0171,  0.0748, -0.0777, -0.0954, -0.1240,  0.1491,  0.1368, -0.0087,
        -0.0300, -0.0296, -0.0898, -0.1284,  0.0017,  0.0024,  0.0804, -0.0263,
         0.1510,  0.1065, -0.0857,  0.1298,  0.1327,  0.1134,  0.1188, -0.1202,
         0.0902, -0.0083, -0.0896,  0.1672,  0.1619,  0.0227,  0.0311, -0.1472],
       device='cuda:0') torch.Size([128])
fc_blocks.0.0.weight tensor([[ 0.0809,  0.0631, -0.0404,  ..., -0.1111, -0.0160, -0.0058],
        [ 0.0462,  0.0730, -0.0137,  ...,  0.0424, -0.0398,  0.0139],
        [ 0.0844,  0.0920,  0.0109,  ..., -0.1312,  0.1219,  0.0957],
        ...,
        [-0.0771,  0.0659,  0.0882,  ...,  0.1462,  0.0135,  0.0937],
        [-0.1566, -0.0342, -0.0988,  ...,  0.0312,  0.0301, -0.1384],
        [ 0.0876,  0.1513, -0.0408,  ...,  0.0433,  0.1654,  0.0950]],
       device='cuda:0') torch.Size([32, 64])
fc_blocks.0.0.bias tensor([ 0.0617,  0.1225,  0.1486, -0.1217, -0.1477,  0.0003, -0.0257,  0.1241,
        -0.0472,  0.0169, -0.0617, -0.0420, -0.1407, -0.0303, -0.0957,  0.0393,
         0.0594,  0.0801, -0.0248, -0.0468,  0.0514, -0.0361, -0.0472, -0.1591,
         0.1721, -0.0659,  0.0168,  0.0833, -0.0487, -0.0457,  0.0561,  0.0101],
       device='cuda:0') torch.Size([32])
fc_blocks.1.0.weight tensor([[-9.5009e-02,  4.0235e-02,  2.9491e-02,  1.7806e-01,  1.7506e-01,
          3.4702e-02, -8.8516e-02, -8.7601e-02,  1.0228e-01,  8.6956e-02,
          1.3058e-01, -5.8777e-02, -1.0826e-01, -1.0422e-01, -9.1730e-02,
         -1.4598e-01, -1.8810e-01,  8.2090e-02, -1.5610e-01, -1.0751e-01,
         -7.4709e-05,  1.3510e-01,  1.1313e-02,  7.9064e-02,  3.2803e-02,
          9.9680e-02,  1.0171e-01,  6.6018e-02, -5.3401e-02, -1.8220e-02,
         -1.1358e-01, -5.1145e-02],
        [-3.1354e-03,  1.8050e-01,  1.3538e-01,  6.7514e-02, -7.4647e-02,
          1.1617e-01, -6.6087e-02,  1.0288e-01, -2.4240e-02, -1.6552e-01,
         -9.7950e-02, -1.0167e-01,  1.9142e-02, -1.1349e-02, -1.0192e-01,
         -2.5024e-02, -3.6338e-03,  1.5743e-01,  5.8967e-03, -1.4631e-01,
         -5.8644e-02, -1.6914e-01,  2.1499e-01, -1.5755e-01, -6.4473e-02,
          8.6733e-02,  7.5935e-02, -1.7447e-01,  1.9958e-02,  9.0188e-02,
         -1.7187e-01,  1.7507e-01],
        [ 9.9218e-02, -2.0059e-01, -5.4984e-02, -1.3654e-01, -1.1951e-01,
         -1.0537e-02, -9.8516e-02, -9.9263e-02,  2.3843e-02,  1.3051e-01,
          5.4304e-02, -9.3838e-02, -7.0804e-03,  1.3396e-01, -8.0329e-02,
         -1.8717e-01, -7.2211e-02,  1.1089e-01,  1.3967e-01, -1.0075e-01,
          1.7535e-02,  9.5860e-02,  2.2455e-02,  1.1049e-01,  1.0081e-02,
          4.8842e-02, -2.1921e-02, -1.6330e-01, -1.8580e-01,  1.5792e-02,
          1.0029e-01, -1.0174e-01],
        [ 1.8216e-01,  1.1032e-01,  1.0793e-01, -1.9429e-02, -5.1431e-02,
          3.1147e-02,  2.1765e-01,  1.7219e-01, -4.7861e-02,  4.2128e-03,
          5.3485e-02, -7.6228e-02, -1.3504e-01,  3.4541e-02, -1.4848e-01,
          1.8200e-01,  2.2048e-01,  1.2618e-01, -5.2462e-02,  1.2450e-01,
         -1.1848e-01,  9.2494e-02,  1.2891e-01,  5.2003e-02,  8.8069e-02,
          1.3007e-01,  9.1223e-02,  4.6494e-02,  7.7615e-03, -9.2151e-02,
         -5.8309e-02,  1.7030e-01],
        [-9.2668e-02,  1.3048e-02,  7.0854e-02, -1.2850e-01, -1.8831e-01,
         -8.7980e-02, -9.8460e-03, -5.3246e-02, -4.4770e-02,  1.0052e-01,
          1.1969e-01,  4.7962e-02, -4.2575e-02,  1.5861e-01, -2.0096e-01,
          2.2238e-01,  4.5839e-02, -1.1509e-01, -1.1873e-01, -9.5858e-02,
          3.8701e-02,  3.4289e-02, -7.3368e-02,  2.8666e-02,  7.0498e-02,
          1.0442e-01, -1.7287e-01,  2.2312e-02,  1.5223e-01,  1.5710e-02,
          4.6412e-02,  1.4170e-01],
        [-3.4072e-02,  3.1921e-02,  1.2093e-01,  7.4321e-02,  8.9483e-02,
          5.6122e-03,  1.5599e-01, -7.7511e-02,  1.5367e-01,  2.1076e-02,
          1.8768e-01,  7.1827e-02, -1.5398e-01, -3.1499e-03,  2.0201e-01,
          9.4246e-02,  7.9193e-02, -9.6833e-02,  1.9174e-02, -1.5819e-02,
          1.3293e-01,  4.7758e-02, -8.5876e-02,  2.2635e-02, -3.4018e-03,
         -4.4365e-02, -1.0556e-01, -1.6627e-02,  1.3596e-01,  1.5423e-01,
          2.0707e-04, -1.1929e-01],
        [-1.3266e-01, -2.0638e-01, -3.2491e-02,  6.3353e-02,  8.2150e-02,
          6.6306e-02, -1.2022e-01,  8.7630e-03,  1.1529e-01, -1.6093e-01,
         -5.6207e-02, -1.0473e-01, -1.4969e-01, -3.4601e-02,  9.1101e-02,
         -2.2029e-02, -1.3454e-01,  8.9251e-02,  1.3901e-01,  9.3668e-02,
          9.0974e-02, -9.4810e-02,  1.0387e-01, -9.8768e-04, -5.7510e-02,
         -1.6466e-02,  9.1413e-02, -6.1761e-02,  1.7906e-01, -1.2918e-01,
          5.0497e-02,  7.1759e-02],
        [ 1.6333e-01, -1.2880e-01, -7.3686e-02,  9.8118e-02, -7.0193e-02,
         -2.7010e-02, -2.6277e-02,  7.9545e-03,  1.2118e-02,  3.5797e-02,
          1.6597e-01,  7.2767e-02, -9.3096e-02,  1.1632e-01, -5.1973e-02,
          4.7319e-02,  8.5032e-02,  1.4818e-01, -1.0308e-01,  3.1534e-02,
          2.0033e-01,  3.7142e-02, -7.7131e-03,  2.0885e-01,  8.2012e-02,
         -1.1152e-01,  1.3476e-01,  1.4404e-01, -1.2070e-01,  1.1590e-01,
          1.0001e-01, -4.4614e-02],
        [-1.6224e-01, -6.8340e-02,  9.1593e-02, -4.7328e-02,  1.8647e-01,
          1.1882e-01,  4.5689e-02, -7.6014e-02,  4.7494e-02,  6.3043e-02,
          1.2341e-01,  1.2719e-01,  1.7145e-01,  1.4367e-02,  1.4868e-01,
          1.8104e-02, -4.0138e-02,  2.5367e-02, -6.6504e-02, -3.1499e-02,
          1.1615e-01,  1.1227e-01, -1.9126e-01,  1.0210e-01,  1.3235e-01,
         -2.6029e-03,  9.4727e-02,  7.9186e-02,  1.1831e-01,  1.3240e-01,
         -6.8702e-02,  3.2646e-02],
        [-7.3644e-02,  6.9411e-02, -1.1716e-01,  1.8708e-01,  1.9041e-01,
          1.4474e-01, -1.9038e-01, -8.8679e-02,  3.9086e-02, -2.0599e-02,
          7.3490e-02,  2.3087e-03,  6.2655e-02, -8.7303e-02,  6.6409e-02,
         -5.8061e-02,  8.8492e-02, -1.4314e-01,  4.1498e-02,  2.2701e-02,
          1.5410e-02, -8.6840e-02,  3.5172e-02, -8.9625e-02, -1.6802e-01,
         -6.3834e-03,  8.3990e-02, -1.1558e-03,  1.3412e-01, -7.9166e-02,
          1.5423e-01,  2.5172e-02],
        [-8.0150e-02, -4.1423e-02,  1.2108e-01, -2.0242e-01,  6.9375e-02,
          6.1571e-02, -1.0785e-01,  1.7684e-01,  1.9962e-01, -3.1473e-02,
          9.6640e-02, -1.2476e-01, -1.3637e-01,  1.3942e-01, -1.3585e-01,
          1.4287e-01,  2.3857e-01,  1.3522e-01,  7.7222e-02,  1.3361e-01,
          1.7365e-01, -7.8930e-02,  2.3834e-02, -7.1967e-02,  1.9649e-01,
          1.0739e-01, -1.4054e-01, -1.2501e-01,  3.1875e-03, -5.1525e-02,
         -2.0512e-01,  8.6098e-02],
        [ 1.3119e-01,  6.9886e-02,  6.7105e-02, -9.7430e-02,  2.3360e-02,
         -1.4025e-01,  1.2480e-01,  2.2021e-01,  1.5312e-01,  1.4722e-01,
          6.9218e-02, -3.0347e-02, -3.2043e-02,  3.6095e-02, -6.3818e-02,
         -1.1403e-01, -6.9217e-02,  1.2537e-01,  9.6287e-02, -5.7794e-02,
          1.0893e-01,  7.2428e-02,  2.2356e-01, -1.6808e-02, -2.2500e-04,
          1.9444e-01,  3.4918e-02,  1.7143e-01, -1.4485e-01, -1.5932e-01,
          1.4744e-01,  1.6490e-01],
        [-8.0015e-02,  1.8251e-01, -5.1185e-02,  1.5222e-01, -1.3129e-01,
          1.1500e-01,  5.0141e-02,  1.3928e-01,  1.1448e-01, -9.8581e-02,
         -1.0093e-01, -1.1979e-01,  1.3464e-01,  6.0764e-02,  1.5159e-01,
         -4.8966e-02, -6.5734e-02,  1.6218e-01, -1.0832e-01, -1.6172e-01,
          7.3026e-02,  8.9849e-02, -1.1991e-01, -1.0628e-01,  9.1779e-02,
         -2.5889e-02,  1.4916e-01, -8.7333e-02,  7.7881e-02,  1.3731e-01,
          2.1794e-02,  1.6046e-01],
        [-7.8968e-02,  9.6376e-02,  1.0056e-01, -1.5481e-01, -5.7506e-04,
          7.9885e-02, -1.6277e-01,  4.5093e-02, -7.9995e-02, -1.3348e-01,
          1.1818e-01, -9.1448e-03,  1.4005e-01,  7.0971e-02,  1.5952e-01,
         -2.1167e-01, -1.9806e-01,  1.2337e-01, -1.0939e-03,  9.8236e-03,
          6.5656e-02, -1.0490e-01, -7.0833e-02,  8.0326e-02, -3.0829e-02,
          8.0513e-02,  6.1823e-02, -2.5148e-02, -2.1497e-02,  8.0220e-02,
         -6.5338e-02, -1.4018e-01],
        [-1.2112e-01, -1.7435e-01, -9.1537e-02,  7.4292e-02,  5.4950e-02,
         -5.2894e-02,  1.2826e-01, -2.0537e-02, -1.0232e-02, -2.0195e-01,
         -1.4296e-01, -1.8269e-01,  1.7996e-02, -5.6723e-02, -4.2098e-02,
         -2.2926e-02,  7.0227e-02, -8.0533e-02,  7.1179e-02,  1.0260e-01,
          2.0075e-02, -3.8553e-02, -1.3307e-01, -1.7291e-01, -1.2624e-01,
         -5.5779e-02, -9.7824e-02,  2.9967e-02, -4.8814e-02, -5.4873e-02,
          2.5398e-02, -1.4607e-01],
        [-2.0466e-01, -6.8150e-02, -2.0334e-01,  3.8390e-02,  1.8235e-01,
          2.2767e-02,  4.3987e-02,  1.2128e-01,  1.0189e-01, -1.4290e-02,
         -1.6029e-01,  1.8265e-01,  1.3714e-01, -7.5325e-02, -8.4993e-04,
          7.6805e-02,  1.2538e-01,  9.9827e-02,  1.2304e-01,  1.2335e-01,
         -8.8450e-02,  1.7879e-01,  9.3111e-02,  6.6634e-03, -1.6433e-01,
          1.4856e-01,  7.6320e-02,  5.5110e-02, -7.0519e-02, -9.4266e-02,
          1.6499e-01, -1.0905e-01]], device='cuda:0') torch.Size([16, 32])
fc_blocks.1.0.bias tensor([ 0.1073,  0.1114, -0.1130,  0.1784,  0.0024,  0.0221, -0.0653, -0.0962,
        -0.0976,  0.0122,  0.0397,  0.1912,  0.0117,  0.0141,  0.0555, -0.1678],
       device='cuda:0') torch.Size([16])
fc_blocks.2.0.weight tensor([[-0.0512,  0.1649, -0.1669,  0.1591,  0.1228,  0.1066, -0.0366,  0.0606,
         -0.0645, -0.0406,  0.1995,  0.1263,  0.0825, -0.0915, -0.1594, -0.2018],
        [-0.1982,  0.1508, -0.0417, -0.1370, -0.0869, -0.0284, -0.0231, -0.0170,
          0.1557, -0.1607, -0.0209, -0.1495, -0.1191, -0.1817, -0.0981, -0.2280],
        [ 0.0522, -0.0224,  0.1530, -0.0352,  0.2744,  0.0527, -0.1453,  0.2829,
         -0.2679, -0.0118, -0.1494, -0.0586,  0.0740, -0.0328, -0.0260,  0.1091],
        [ 0.0633, -0.1737,  0.1569, -0.1983, -0.1824,  0.0809, -0.2424,  0.1632,
         -0.0467,  0.0099, -0.0047, -0.1186,  0.1804,  0.1282,  0.1536,  0.2122],
        [-0.2663, -0.2822,  0.0955, -0.0036,  0.0549,  0.2969,  0.1482, -0.2798,
          0.0676,  0.1603, -0.0941,  0.1393, -0.0946, -0.0757,  0.1381, -0.2327],
        [ 0.0511,  0.0718,  0.2454, -0.0017, -0.0265,  0.1070,  0.0131, -0.1384,
          0.2123, -0.2058,  0.1363,  0.1195, -0.1352, -0.1383,  0.2177,  0.1122],
        [ 0.0691,  0.0372, -0.2861,  0.0268,  0.1810, -0.0148,  0.0389, -0.1017,
          0.1322, -0.2222,  0.1846, -0.1122, -0.1431, -0.1865,  0.1407, -0.2632],
        [-0.2781, -0.2334, -0.2403,  0.0495, -0.0068,  0.2916, -0.2060,  0.0318,
          0.0474,  0.1486,  0.0964,  0.1373, -0.2340, -0.0341, -0.1501, -0.0456]],
       device='cuda:0') torch.Size([8, 16])
fc_blocks.2.0.bias tensor([ 0.2744, -0.0329, -0.2425, -0.1516, -0.2851, -0.0624, -0.1027, -0.1485],
       device='cuda:0') torch.Size([8])
fc_blocks.3.0.weight tensor([[ 2.3575e-01,  2.7200e-01,  1.1992e-01, -3.0156e-04, -1.6414e-01,
          1.8747e-01,  9.3860e-02, -2.3633e-01],
        [-1.7975e-01,  1.8770e-02,  2.4995e-01, -7.7467e-02,  2.0688e-01,
          1.2706e-01,  2.5050e-01,  1.2722e-01],
        [ 1.4847e-01,  7.6702e-03, -1.4755e-02, -1.8398e-01, -1.3506e-01,
          1.3838e-01,  4.2852e-02, -1.0981e-01],
        [ 5.4230e-02,  3.6735e-01, -3.0934e-02,  3.3384e-01,  1.9387e-01,
          3.6256e-02,  2.6591e-01,  2.6477e-01]], device='cuda:0') torch.Size([4, 8])
fc_blocks.3.0.bias tensor([ 0.2627,  0.0113,  0.3997, -0.4079], device='cuda:0') torch.Size([4])
fc_blocks.4.0.weight tensor([[-0.2140,  0.0368,  0.2280, -0.5505],
        [ 0.4974, -0.2090,  0.0594, -0.5063]], device='cuda:0') torch.Size([2, 4])
fc_blocks.4.0.bias tensor([-0.3152, -0.4171], device='cuda:0') torch.Size([2])
Train Loss : 200.247, Val Loss : 846.694
======> Trajectory Loss : 86.334, Gravity Loss : 0.000, EndOfTrajectory Loss : 1.139, BelowGroundPenalize Loss : 0.000
===> [Minibatch 8/129].........recurrent_blocks.0.weight_ih_l0 tensor([[ 1.5726e-01,  3.7422e-02, -9.8548e-02],
        [-8.6336e-02, -3.7724e-02,  1.9283e-01],
        [ 4.2433e-02,  6.8227e-02,  9.9697e-02],
        [ 8.0698e-03, -9.5193e-02,  6.1771e-02],
        [-2.7055e-02, -8.7400e-02, -7.8261e-02],
        [ 2.6471e-02, -1.3387e-01,  1.6787e-01],
        [-6.8714e-02, -1.6688e-01,  1.7484e-01],
        [ 1.2068e-01,  1.4843e-01, -5.1535e-02],
        [-1.4651e-01, -1.1410e-01, -1.0023e-02],
        [ 1.4458e-01,  6.9826e-02,  1.2449e-01],
        [-1.2759e-01, -2.0212e-01,  6.7725e-02],
        [-2.6538e-02,  1.2951e-01, -2.6299e-02],
        [-1.3423e-01,  1.7547e-01,  7.1287e-02],
        [-1.4813e-01, -1.0847e-01,  1.3516e-01],
        [-1.6413e-01,  5.3924e-02, -5.9910e-02],
        [-1.1652e-01, -1.2575e-02,  2.1935e-01],
        [ 5.9748e-02, -1.6077e-01, -9.2807e-02],
        [ 8.4571e-02,  1.3943e-01, -6.5661e-03],
        [-5.6940e-02, -2.7506e-03, -3.6757e-02],
        [-2.0901e-01, -1.9286e-01, -1.8150e-02],
        [-8.3402e-02,  6.1762e-02,  1.7897e-01],
        [ 5.4940e-02,  2.8677e-02,  2.2656e-01],
        [-3.2438e-03, -8.4803e-02, -1.1171e-01],
        [ 2.3175e-02, -1.4427e-01, -1.2945e-02],
        [-1.4066e-01, -1.5576e-01,  5.4633e-02],
        [-2.0486e-01, -1.4751e-01, -5.8526e-02],
        [-7.4274e-02,  1.2474e-01,  1.1601e-01],
        [ 1.0556e-01, -1.9969e-01, -1.6062e-01],
        [ 4.1923e-02, -8.6536e-02,  1.1520e-01],
        [-1.4522e-01, -7.4100e-02,  1.6198e-01],
        [ 4.4811e-02, -1.2370e-01, -1.3187e-01],
        [-2.6568e-03, -3.3059e-03, -2.0897e-02],
        [-1.2806e-01,  7.0117e-02, -1.7694e-01],
        [ 4.5810e-02,  2.3872e-02,  1.3318e-02],
        [-2.9124e-02,  1.5657e-01,  6.8135e-02],
        [ 1.9173e-01,  1.1363e-01, -6.0175e-02],
        [-1.2611e-01, -1.0727e-02,  8.1469e-02],
        [-3.2359e-02, -1.2833e-01, -1.2554e-01],
        [-6.3533e-02, -1.6757e-01,  8.0918e-02],
        [ 1.4632e-01,  1.0605e-01,  1.5316e-01],
        [ 1.6896e-01, -6.9517e-02, -2.8451e-02],
        [ 4.9821e-02,  1.0236e-01, -9.8030e-02],
        [-1.1183e-01,  9.3161e-02,  1.0947e-01],
        [ 1.9709e-01,  1.1393e-01,  2.3318e-01],
        [-1.3397e-01,  5.6845e-03, -1.5739e-01],
        [-2.5919e-02, -7.2156e-02, -1.3290e-01],
        [-9.7826e-02, -4.3878e-02,  1.3692e-01],
        [-1.3614e-01, -2.5728e-03, -3.2297e-02],
        [ 6.7669e-02, -9.9469e-02,  1.7438e-02],
        [-1.3467e-02, -1.6979e-01,  9.8771e-02],
        [-1.9991e-01,  1.4890e-01,  4.6831e-02],
        [-4.0441e-02, -1.7080e-01, -6.6314e-03],
        [-1.8799e-01, -6.0985e-02,  2.0957e-01],
        [ 6.6338e-02, -3.2725e-02,  1.0343e-01],
        [-9.5142e-02, -1.6051e-01,  1.7978e-01],
        [ 1.7314e-01,  1.0188e-01,  2.0662e-01],
        [-1.9905e-01, -1.7959e-02, -1.0390e-01],
        [ 5.1245e-02, -1.6197e-01, -1.2226e-01],
        [ 4.8823e-02,  1.3600e-01, -2.3818e-02],
        [-1.3309e-02, -7.9928e-02,  1.4148e-01],
        [ 1.4384e-01,  5.1671e-02,  2.2252e-01],
        [-1.8530e-01, -1.0504e-01, -1.5581e-02],
        [-8.5408e-02,  1.3984e-02, -7.2461e-02],
        [-4.0715e-02, -1.9823e-01, -2.0145e-02],
        [ 4.7855e-02,  9.9461e-02,  7.1058e-03],
        [-1.5310e-01,  7.2097e-02, -5.3789e-02],
        [-3.5249e-02, -1.7743e-01, -1.8907e-01],
        [ 7.9147e-02,  1.0164e-01, -9.1056e-03],
        [-1.2713e-01, -1.9320e-01, -1.4284e-02],
        [-3.8623e-02, -2.0732e-01,  1.3868e-01],
        [-1.0272e-02,  1.7285e-02, -1.0573e-01],
        [ 1.1429e-01,  1.6394e-02,  3.2039e-02],
        [-1.7801e-01,  1.7882e-01,  1.3629e-01],
        [-2.4269e-02, -1.0842e-01, -2.9020e-02],
        [-1.0143e-01, -1.5157e-01, -9.6376e-02],
        [ 9.7030e-02,  5.6081e-02,  8.7086e-02],
        [ 8.5376e-02,  1.4445e-01, -1.7320e-01],
        [-1.6412e-01,  1.7541e-01,  6.1668e-02],
        [-1.3649e-01,  5.8206e-02, -1.6179e-04],
        [ 9.7693e-03,  1.3989e-01, -1.6802e-01],
        [-4.8505e-02, -4.8181e-02, -3.3777e-02],
        [ 1.2907e-01, -1.4385e-01,  1.5222e-01],
        [ 1.9644e-02,  1.1496e-01, -5.1224e-02],
        [ 5.4098e-02,  1.9844e-01,  5.9757e-02],
        [-1.4286e-01, -1.0893e-01,  6.3533e-02],
        [-1.6739e-01,  1.9230e-01, -3.8896e-02],
        [-9.2816e-02,  1.9757e-01, -1.6260e-01],
        [ 3.0914e-02, -1.5464e-01,  1.2005e-02],
        [ 4.8408e-02,  1.4240e-01, -9.4911e-02],
        [ 9.9717e-02, -5.6272e-02, -3.9334e-02],
        [-1.7167e-01,  1.1607e-01, -1.0139e-01],
        [-1.7125e-01,  2.9560e-02,  1.1103e-01],
        [ 3.1338e-02, -8.1372e-02,  1.6072e-01],
        [ 7.2919e-02, -1.2098e-01,  7.9975e-02],
        [-8.0462e-02,  4.8092e-02,  2.8569e-02],
        [-8.2333e-02, -6.1446e-02,  2.0356e-01],
        [-7.8465e-02, -3.1525e-02, -1.0577e-01],
        [-2.0210e-01, -1.7986e-01,  1.3524e-01],
        [ 1.5434e-01, -5.8871e-02, -1.4803e-01],
        [-4.4746e-02,  1.8753e-02,  1.8103e-01],
        [-1.5849e-01, -9.8263e-02, -1.5988e-01],
        [ 1.1249e-01,  3.7840e-02, -7.0697e-02],
        [-3.9538e-02,  1.4838e-01, -9.5926e-02],
        [ 2.6817e-02,  1.0350e-02, -6.6461e-02],
        [-5.0754e-02, -1.1171e-01,  1.1851e-01],
        [ 8.6615e-02,  3.0722e-02,  1.5159e-01],
        [-1.4762e-01, -1.6357e-02,  1.3640e-01],
        [ 1.8938e-01,  8.2149e-02,  7.7254e-02],
        [-6.3589e-02, -1.1398e-01, -1.3729e-01],
        [ 1.6191e-01, -1.2378e-01,  1.1469e-01],
        [-3.6589e-02, -5.1358e-02, -2.8687e-02],
        [ 2.0817e-02,  3.0365e-02,  2.6911e-02],
        [ 1.3337e-01, -1.2013e-01,  2.1148e-01],
        [-1.0513e-01, -1.3339e-01, -1.9746e-02],
        [-8.1623e-02, -2.7756e-02, -3.6127e-02],
        [ 8.1916e-02,  8.0416e-02,  1.1133e-01],
        [ 2.9131e-02,  5.7441e-02, -8.4773e-02],
        [ 1.9036e-01, -1.2754e-01,  1.7937e-01],
        [ 5.3031e-02, -1.7617e-01,  1.5663e-01],
        [-6.6581e-02, -1.0103e-01, -7.4489e-02],
        [ 2.5675e-02, -2.1439e-01, -2.4572e-02],
        [-9.6775e-02, -4.4297e-02,  1.1350e-01],
        [ 7.2690e-02, -1.1453e-01,  9.6380e-02],
        [-1.8884e-01, -1.9900e-01,  1.4398e-01],
        [ 1.8146e-01, -2.0681e-01, -6.1207e-02],
        [-8.4586e-02,  9.4012e-02,  7.1111e-02],
        [ 1.8155e-01, -1.7829e-01,  1.5789e-01],
        [ 1.4957e-02,  1.6756e-02, -2.4031e-02]], device='cuda:0') torch.Size([128, 3])
recurrent_blocks.0.weight_hh_l0 tensor([[ 0.0331,  0.0855, -0.1159,  ...,  0.1121,  0.1451,  0.0902],
        [ 0.0161,  0.0447,  0.0677,  ...,  0.1074,  0.0315, -0.0647],
        [ 0.0492, -0.0623, -0.0381,  ..., -0.1660, -0.1766,  0.0003],
        ...,
        [-0.1383,  0.0365, -0.0354,  ..., -0.0977,  0.0643,  0.0103],
        [ 0.0635,  0.0197, -0.1344,  ...,  0.0222, -0.0820,  0.1864],
        [-0.0524,  0.1296, -0.0850,  ..., -0.1665, -0.0045, -0.0393]],
       device='cuda:0') torch.Size([128, 32])
recurrent_blocks.0.bias_ih_l0 tensor([-0.0855,  0.0850, -0.1515,  0.1387,  0.1299,  0.2140, -0.1024, -0.0052,
         0.1054,  0.0254, -0.1158,  0.1403, -0.2024,  0.0159,  0.1329,  0.1188,
         0.0994,  0.1107,  0.0093,  0.1243, -0.0098,  0.0385, -0.0829,  0.1400,
        -0.1183,  0.1925,  0.0819,  0.0166,  0.0944,  0.1209, -0.0869, -0.0315,
        -0.0076, -0.0736,  0.0746,  0.1596, -0.0061, -0.0785,  0.0988,  0.0997,
         0.0088,  0.0790,  0.1336,  0.1840, -0.1837,  0.0165,  0.0022, -0.0675,
         0.1129,  0.0261,  0.1146,  0.0383,  0.0997,  0.0371, -0.0579,  0.0732,
         0.1815,  0.0445,  0.1048, -0.1376, -0.0999,  0.0974,  0.0529,  0.0767,
        -0.0325,  0.1311, -0.1155,  0.1460,  0.1890,  0.0815,  0.0755,  0.0196,
        -0.1215,  0.0537,  0.1968,  0.1616,  0.0034,  0.0713,  0.0222, -0.1302,
         0.1290,  0.0910,  0.1096, -0.1599,  0.0350, -0.2311,  0.0296,  0.1511,
        -0.1849, -0.1772,  0.1751, -0.0407,  0.2390, -0.1832, -0.2001,  0.1641,
         0.0164,  0.1770,  0.0671,  0.0945, -0.0521,  0.0613, -0.1078,  0.0808,
        -0.0350,  0.0628,  0.2346,  0.1848, -0.0275,  0.0095, -0.0583,  0.0754,
        -0.0105, -0.0098,  0.0554, -0.1144,  0.0872,  0.0975,  0.0692, -0.0495,
        -0.0629,  0.1700,  0.0201, -0.0871,  0.1902, -0.0408,  0.1784, -0.0656],
       device='cuda:0') torch.Size([128])
recurrent_blocks.0.bias_hh_l0 tensor([ 6.0769e-03, -3.0059e-02, -2.5887e-02,  1.2416e-01, -8.2755e-02,
         1.8564e-01,  7.7948e-02,  6.9187e-02, -1.5601e-01,  1.9240e-02,
         1.6227e-01,  4.6257e-02, -2.3340e-02, -1.8367e-01, -6.2252e-02,
         2.1168e-02,  9.1357e-02,  1.1885e-01, -1.4044e-01,  1.3849e-01,
         2.1906e-02,  2.0734e-01,  6.3824e-02,  1.1510e-01,  1.4211e-01,
        -1.3271e-01, -8.7468e-02,  1.3450e-01,  4.3895e-02,  3.9712e-02,
        -1.1796e-02, -1.0080e-01, -1.4639e-01,  1.9356e-01, -7.3703e-02,
        -8.5246e-02,  5.4949e-02,  1.0863e-01, -1.2207e-01,  1.1594e-02,
         1.1558e-01,  6.7747e-02, -2.2721e-03,  2.0221e-01, -1.8553e-01,
         8.9863e-02,  9.1202e-02,  6.1874e-02, -7.4727e-02, -1.3420e-01,
         5.3679e-02, -6.2339e-02,  1.2157e-01,  7.8303e-02, -4.3627e-02,
         1.7094e-01, -1.1808e-01,  1.3707e-01,  6.7318e-03,  1.1389e-01,
         1.0197e-01,  1.5261e-01, -7.7372e-02,  9.1548e-02, -1.2860e-04,
         2.2115e-01, -1.9296e-01,  7.3374e-02,  9.3748e-02, -2.2901e-02,
        -1.8205e-01,  1.4153e-01,  5.2725e-02, -2.1579e-01,  1.3311e-01,
         1.7827e-01,  2.3722e-02, -1.4184e-01,  2.4291e-01, -4.3934e-02,
         1.1875e-01,  1.9216e-01,  1.7948e-01, -1.7734e-01,  1.4471e-01,
         5.5604e-02, -1.8932e-01,  6.3855e-02, -2.1445e-02, -1.4212e-01,
         1.6551e-01,  1.5692e-01, -4.5683e-02, -8.0188e-02, -7.9547e-02,
         9.6981e-02,  1.3450e-02, -9.7857e-02,  1.6892e-01,  1.6204e-01,
        -1.9314e-02, -5.6960e-02, -1.2096e-02,  1.6210e-01,  1.6042e-01,
         2.1943e-01,  1.0261e-01,  7.3963e-02, -1.6651e-02, -2.6491e-02,
         5.7532e-03, -3.2060e-03,  1.3729e-02, -1.2735e-01, -1.1132e-01,
         3.3587e-02, -3.0139e-02,  1.7843e-01, -3.1580e-02, -3.9928e-02,
        -1.3135e-01,  1.6283e-01,  1.0555e-01,  1.0336e-02, -3.1418e-02,
        -3.9511e-02, -5.7407e-02,  7.8814e-02], device='cuda:0') torch.Size([128])
recurrent_blocks.0.weight_ih_l0_reverse tensor([[ 4.5739e-02, -1.8603e-01, -1.1049e-02],
        [ 2.9603e-02, -2.9999e-02, -3.7212e-02],
        [-3.6120e-02,  3.1508e-02,  7.2888e-02],
        [-1.6238e-01, -4.7933e-02,  1.0668e-01],
        [ 2.1775e-01,  1.6621e-01, -3.7378e-02],
        [-9.0866e-02, -5.8810e-02,  2.0391e-01],
        [ 5.2443e-02,  5.7041e-02, -8.9366e-02],
        [ 3.1081e-02,  3.5049e-02,  1.2219e-01],
        [ 7.4192e-02, -4.3995e-02, -1.1385e-01],
        [-7.2651e-02,  2.0995e-01, -2.4057e-01],
        [-8.9502e-02,  3.7593e-02,  5.8056e-02],
        [-1.6564e-01,  3.6982e-02, -1.8783e-01],
        [ 1.2104e-01,  8.1580e-02,  1.9049e-02],
        [-4.3831e-02, -3.2584e-02,  1.3737e-01],
        [ 9.5740e-02, -1.0496e-01,  8.2341e-03],
        [-5.9264e-02, -9.5189e-02,  3.1466e-03],
        [-8.9919e-02,  2.6325e-03,  4.4143e-02],
        [-9.7482e-02,  8.4941e-04, -8.0314e-02],
        [-1.9967e-01,  6.3083e-03, -8.0300e-02],
        [ 9.2402e-02, -9.5062e-02,  1.6991e-01],
        [-3.0912e-02,  1.1027e-01, -1.1789e-01],
        [-1.2301e-01, -1.3299e-01,  2.2116e-03],
        [-9.2257e-02,  1.0121e-01,  1.7795e-02],
        [ 2.1103e-02,  1.3725e-01, -1.4664e-01],
        [-1.8000e-01,  2.5728e-02, -2.8972e-04],
        [-1.9817e-01, -1.9916e-01,  2.7082e-02],
        [-6.0859e-02,  6.2714e-02, -1.0040e-01],
        [-2.1117e-01,  8.3137e-02,  7.9118e-02],
        [-6.3203e-02,  1.7414e-01,  2.2711e-01],
        [ 1.3589e-01,  4.4591e-02, -1.7716e-01],
        [-7.6906e-02,  1.5111e-01, -1.6613e-01],
        [-1.7030e-01, -1.8650e-01, -6.0895e-02],
        [-1.8152e-01, -8.5347e-02,  8.9264e-02],
        [-1.8152e-01,  4.3430e-02,  1.8605e-01],
        [-1.8162e-01,  1.5757e-01,  1.4597e-01],
        [-7.3101e-03, -7.3320e-02, -1.2039e-01],
        [ 1.8795e-01,  1.1084e-01,  1.8093e-01],
        [-5.6163e-02,  7.0593e-02,  1.3955e-01],
        [ 8.8011e-02,  9.8660e-03,  1.0024e-01],
        [-1.6843e-01, -5.5289e-02,  8.2469e-02],
        [ 8.4142e-02,  1.7449e-02,  5.6864e-02],
        [ 1.8298e-01, -1.5370e-02, -1.4954e-01],
        [-2.0884e-01, -4.6065e-02, -1.2911e-01],
        [ 1.4367e-01,  1.7421e-01, -8.2530e-02],
        [ 5.0738e-02,  1.4972e-01,  6.4232e-02],
        [ 1.4505e-01, -1.6648e-01, -9.4740e-02],
        [-1.5634e-01,  1.1587e-01, -1.4573e-01],
        [ 2.6736e-02, -2.2868e-01, -1.6115e-02],
        [-1.5068e-01, -1.2338e-01, -1.9832e-01],
        [-9.1360e-02,  1.7242e-01,  1.6161e-01],
        [-2.2099e-03,  1.3315e-01,  1.2897e-01],
        [ 4.1731e-02, -1.0631e-01,  8.4079e-02],
        [-5.3941e-02, -8.2519e-02,  5.3675e-02],
        [ 5.3122e-03, -2.1904e-01,  2.2945e-01],
        [-8.9296e-02,  1.4328e-01, -1.8309e-01],
        [-3.9002e-02, -5.4520e-02,  1.2400e-01],
        [-4.8321e-02,  2.8732e-02,  1.4153e-01],
        [ 1.6715e-02, -1.0251e-01,  1.9408e-01],
        [-9.2768e-03,  7.2616e-02,  5.3798e-02],
        [-2.0641e-01,  1.9951e-02, -1.4430e-02],
        [-9.9292e-02,  1.0450e-01,  1.6023e-01],
        [-9.8704e-02, -5.8940e-03, -2.1937e-01],
        [-8.2344e-02,  2.3116e-02, -6.0933e-02],
        [-2.2820e-01,  8.4827e-02,  1.6778e-01],
        [ 1.7734e-01, -7.2584e-03, -1.8380e-01],
        [ 2.2612e-02, -1.4945e-01, -8.3621e-02],
        [-1.0650e-01,  2.2320e-03, -3.8029e-02],
        [-1.4746e-01, -1.0668e-01, -1.6957e-01],
        [-8.3500e-02, -9.4313e-02, -1.7513e-01],
        [ 1.4857e-02, -8.1000e-02,  2.5591e-02],
        [-4.3790e-02, -5.4385e-02, -2.1989e-01],
        [-1.4962e-01,  3.6406e-02,  1.7805e-01],
        [ 2.3241e-02,  2.1620e-01, -1.0885e-01],
        [-1.0510e-01, -2.2533e-01, -7.4985e-02],
        [ 5.6019e-04,  3.6337e-02, -1.4511e-02],
        [-4.3647e-02, -7.1919e-02,  6.9712e-02],
        [-2.6765e-02,  1.5642e-02, -6.2652e-02],
        [-7.6927e-02, -3.1679e-02,  1.3415e-01],
        [-1.7657e-01, -1.5541e-01,  9.6683e-02],
        [ 8.7741e-02,  8.1581e-03,  7.1824e-02],
        [ 4.9976e-02, -1.3791e-01,  9.1648e-02],
        [ 4.9853e-02, -6.1703e-02, -7.5661e-02],
        [-3.8206e-02, -1.6353e-01,  1.9896e-01],
        [ 1.0374e-01,  1.5445e-01, -1.1119e-01],
        [ 1.5176e-01,  1.5266e-01, -2.0194e-01],
        [ 1.1205e-02, -1.6496e-01,  2.1721e-01],
        [ 6.6655e-02, -1.5827e-02,  1.2926e-01],
        [-7.7819e-02,  9.1896e-02,  1.2366e-01],
        [ 4.6803e-02, -2.0252e-02, -3.1486e-02],
        [ 1.1220e-01, -9.0958e-02,  8.2857e-02],
        [-1.3835e-01, -1.1576e-01, -1.1401e-01],
        [-1.3151e-01, -8.1012e-02,  2.1029e-01],
        [-6.9934e-02,  1.5210e-01,  1.5604e-01],
        [-1.2108e-01, -2.4920e-02, -1.3578e-01],
        [-1.6518e-01,  5.9127e-02,  1.9736e-01],
        [-1.0055e-01, -1.9629e-01,  1.4759e-01],
        [-3.3017e-02, -1.5727e-01,  1.1402e-01],
        [-5.4859e-02, -7.3204e-02,  4.2059e-02],
        [-1.1237e-01, -6.3864e-02,  6.4836e-02],
        [ 1.6824e-01, -2.4700e-02, -1.3212e-01],
        [ 6.7956e-02,  1.4858e-01, -5.7635e-02],
        [ 1.0652e-01, -2.0992e-01,  2.7156e-02],
        [-3.9715e-02,  3.4116e-02,  2.3161e-01],
        [ 5.9527e-02,  9.6895e-02,  8.3633e-02],
        [-2.7290e-02, -2.0860e-01,  7.0598e-02],
        [ 1.0507e-01,  4.1544e-02,  4.6709e-02],
        [ 3.8728e-02,  4.7509e-02,  1.7437e-01],
        [ 1.2758e-01, -8.6809e-02, -9.6837e-02],
        [ 1.5666e-01, -8.2799e-02,  1.2973e-01],
        [ 1.5015e-02, -1.5931e-01,  1.1873e-01],
        [ 1.0128e-01,  4.9792e-03,  1.4930e-01],
        [ 4.3605e-02, -1.1139e-01, -1.3347e-01],
        [ 1.4579e-01,  6.2534e-02, -1.9975e-01],
        [-1.6742e-01, -6.1923e-02,  8.8893e-02],
        [ 5.0874e-02,  7.3563e-02,  1.6326e-01],
        [ 1.4235e-01, -2.1011e-01, -5.9645e-02],
        [ 6.2516e-02,  6.5129e-02, -6.8645e-02],
        [-1.9502e-01, -2.8613e-02,  1.9994e-01],
        [ 9.7692e-02, -1.5417e-01,  1.1072e-02],
        [-1.3900e-01, -4.7434e-02, -4.3345e-03],
        [ 9.2213e-02, -9.1200e-02, -9.3162e-02],
        [-1.5878e-01,  1.1382e-01,  9.7160e-02],
        [-1.6926e-03, -6.1988e-02, -1.3191e-02],
        [-1.1277e-01, -5.6211e-02,  7.8649e-02],
        [ 1.2152e-02, -3.6121e-02, -1.1101e-01],
        [ 1.2565e-01,  3.6545e-04,  1.0365e-02],
        [-5.3348e-05, -1.2966e-02,  9.5570e-02],
        [-4.6043e-02, -1.5972e-01, -8.8579e-02]], device='cuda:0') torch.Size([128, 3])
recurrent_blocks.0.weight_hh_l0_reverse tensor([[ 0.0188,  0.1304, -0.1401,  ..., -0.0705, -0.0562,  0.0567],
        [-0.0160, -0.0581,  0.2046,  ..., -0.1457,  0.0282,  0.0517],
        [-0.1811,  0.0374,  0.1930,  ...,  0.1947,  0.0084,  0.1164],
        ...,
        [ 0.1146,  0.1133, -0.1023,  ..., -0.1563, -0.0189,  0.0936],
        [ 0.0716,  0.1973,  0.1963,  ..., -0.0999,  0.1832,  0.0172],
        [ 0.0120, -0.0770,  0.0021,  ..., -0.0859,  0.2341,  0.0863]],
       device='cuda:0') torch.Size([128, 32])
recurrent_blocks.0.bias_ih_l0_reverse tensor([ 0.1669, -0.0588, -0.0434,  0.1043, -0.0167,  0.0828,  0.0904, -0.1315,
        -0.0628, -0.1453,  0.1175,  0.1284,  0.2112,  0.0765, -0.0656,  0.0625,
        -0.1182, -0.0552,  0.1880, -0.1051, -0.1112,  0.1861, -0.1780, -0.1674,
         0.1648, -0.0743,  0.1420, -0.0589,  0.1194,  0.0048, -0.0622,  0.0967,
         0.1465,  0.1639, -0.0242,  0.0401,  0.1238,  0.0566,  0.0829, -0.1344,
         0.1241, -0.0084, -0.1141, -0.0992, -0.0978,  0.1189,  0.0762,  0.0730,
        -0.1681, -0.0753, -0.0448,  0.1970,  0.0850,  0.2067,  0.1085, -0.0928,
         0.0058,  0.1280, -0.1170,  0.0882, -0.1148, -0.0154, -0.1878, -0.0402,
        -0.1672, -0.1228,  0.0898, -0.1291, -0.1746,  0.1482, -0.2132,  0.0839,
        -0.0421,  0.0559, -0.1556, -0.0100, -0.2397,  0.0531, -0.0065,  0.1298,
        -0.0121, -0.0049,  0.1434,  0.0781, -0.0909,  0.1651, -0.0970,  0.0210,
        -0.0127, -0.0693, -0.0739,  0.0011,  0.1190,  0.0663, -0.0486,  0.0828,
         0.0066,  0.1466,  0.1938, -0.1328,  0.1503, -0.0814,  0.2099,  0.1801,
        -0.0307, -0.1375,  0.1685, -0.1262,  0.2187,  0.0736, -0.1194,  0.0032,
         0.0603,  0.0336,  0.1530,  0.1580,  0.0401,  0.2032,  0.0356, -0.0642,
        -0.0531,  0.1770, -0.1019,  0.1414, -0.0690, -0.0896, -0.0982, -0.0300],
       device='cuda:0') torch.Size([128])
recurrent_blocks.0.bias_hh_l0_reverse tensor([ 0.1468,  0.1049,  0.0729, -0.1347, -0.0804,  0.0581,  0.0252,  0.0894,
         0.0230,  0.0186, -0.0496,  0.1052, -0.0729, -0.1256, -0.1110, -0.0924,
        -0.2133, -0.1125,  0.1278, -0.1236,  0.1026, -0.0720, -0.1750,  0.1168,
         0.0166, -0.0552,  0.0700,  0.0486,  0.0654,  0.0934, -0.1142,  0.0713,
        -0.0404,  0.1670,  0.0587,  0.1444,  0.0280,  0.0627,  0.0614, -0.0967,
         0.1666, -0.2166, -0.1391,  0.0707,  0.1452, -0.0828,  0.0562,  0.0307,
        -0.2045, -0.0627, -0.1292, -0.0885, -0.0443,  0.0240, -0.1248, -0.0320,
         0.0838, -0.0479,  0.1161, -0.0961, -0.0634,  0.0609, -0.0144,  0.1823,
        -0.1096, -0.1526,  0.0641,  0.0336, -0.0709,  0.0717,  0.0446, -0.0584,
        -0.1362, -0.0876, -0.0298,  0.1566, -0.2323,  0.1677,  0.1638,  0.0829,
        -0.0485, -0.2004, -0.1162, -0.1526,  0.0063,  0.0033,  0.0780, -0.0423,
        -0.1191, -0.1798, -0.0318,  0.2236,  0.1327, -0.0464,  0.0782,  0.0074,
         0.1434, -0.0893, -0.0046, -0.1894,  0.1726, -0.0806, -0.0429, -0.0648,
         0.1766, -0.0269, -0.0017, -0.1468,  0.0716, -0.0477, -0.1711,  0.1407,
         0.0664, -0.1017,  0.1139,  0.1731, -0.0906,  0.0515, -0.1895, -0.0231,
         0.0305, -0.0181, -0.0097, -0.0930,  0.1413,  0.0813,  0.0667,  0.0039],
       device='cuda:0') torch.Size([128])
recurrent_blocks.1.weight_ih_l0 tensor([[-0.1660,  0.0916,  0.0805,  ..., -0.0446,  0.2321, -0.0791],
        [-0.0710,  0.0507, -0.0115,  ...,  0.0242, -0.0840,  0.1862],
        [ 0.1793, -0.0808, -0.0426,  ..., -0.0511, -0.0043,  0.0796],
        ...,
        [ 0.1497,  0.0024,  0.0839,  ..., -0.1081,  0.0470,  0.1386],
        [-0.0004,  0.1964,  0.0413,  ..., -0.2229,  0.0176,  0.0408],
        [-0.1913,  0.1658, -0.0529,  ..., -0.0436, -0.0456,  0.0392]],
       device='cuda:0') torch.Size([128, 64])
recurrent_blocks.1.weight_hh_l0 tensor([[-0.1606,  0.1725, -0.1577,  ...,  0.1219,  0.0732,  0.0235],
        [ 0.0616,  0.1549,  0.0336,  ...,  0.2123, -0.1045,  0.1115],
        [ 0.1905, -0.1199, -0.0706,  ...,  0.0445,  0.0700, -0.1122],
        ...,
        [ 0.0547, -0.0353, -0.0224,  ...,  0.0031, -0.1568, -0.1139],
        [-0.0034,  0.1592, -0.0283,  ..., -0.0997, -0.1442,  0.0159],
        [ 0.1588, -0.0080,  0.0263,  ...,  0.1384, -0.1278,  0.0575]],
       device='cuda:0') torch.Size([128, 32])
recurrent_blocks.1.bias_ih_l0 tensor([ 0.0846,  0.1668,  0.0962, -0.0212,  0.1130, -0.0305, -0.0041, -0.0604,
         0.0795, -0.1338, -0.1152,  0.1380, -0.0042,  0.0762,  0.0555,  0.2387,
         0.1249,  0.1220, -0.0940,  0.2123,  0.0286, -0.0074,  0.0003, -0.1112,
         0.0814, -0.0368, -0.2012,  0.1499,  0.1375, -0.2189, -0.0556, -0.1081,
        -0.0149,  0.0819,  0.1140,  0.0518, -0.1322, -0.1012,  0.2086,  0.1906,
         0.0898, -0.0092,  0.0159, -0.0188,  0.0609, -0.1288,  0.0096,  0.0767,
         0.0868,  0.0743,  0.1660, -0.0710,  0.0681, -0.1304,  0.1719, -0.1454,
         0.0671,  0.0927, -0.1959, -0.0150,  0.0689,  0.1100,  0.0734,  0.0156,
         0.0095,  0.2421,  0.1068,  0.1064, -0.0327,  0.0822,  0.0629, -0.1877,
         0.0352,  0.0384, -0.0166, -0.0773,  0.0324,  0.1495, -0.0264, -0.1484,
        -0.1233, -0.0392, -0.0139,  0.0300,  0.1919, -0.0321,  0.0464,  0.0320,
        -0.1020, -0.0257, -0.0011, -0.1310,  0.0774, -0.0694,  0.1002,  0.1426,
         0.0997,  0.0245,  0.1460,  0.0025, -0.0771, -0.0052,  0.1305, -0.0877,
        -0.1068, -0.1348,  0.0876, -0.0113, -0.0121,  0.1166,  0.0335,  0.1501,
        -0.1409,  0.0975,  0.0069,  0.0421,  0.2297, -0.0817,  0.1966, -0.1167,
         0.1573, -0.0320,  0.0291, -0.0669,  0.1421, -0.0179, -0.1221,  0.0948],
       device='cuda:0') torch.Size([128])
recurrent_blocks.1.bias_hh_l0 tensor([-5.2309e-02,  1.6858e-01,  6.0021e-02,  1.4605e-01,  1.4692e-02,
         2.0761e-01,  2.6866e-02,  2.0019e-01, -3.1917e-02, -6.2638e-02,
        -4.9674e-02,  9.1909e-03, -3.0421e-02, -9.5551e-03, -1.3952e-01,
         2.1638e-01,  1.4694e-01,  1.0955e-01,  5.0793e-02, -5.2148e-02,
         2.2829e-01,  1.1994e-01,  1.9705e-01, -1.4736e-01,  1.3721e-01,
         1.3278e-01, -4.2416e-02, -1.1705e-01,  3.2429e-02, -1.8271e-01,
        -1.6588e-02, -9.1206e-02,  4.6689e-02, -1.3793e-01,  6.1257e-02,
        -3.2477e-02, -9.8756e-02,  7.6319e-03, -2.2766e-02,  9.1814e-02,
         1.7106e-02, -9.2160e-02,  1.4392e-01,  3.3350e-02, -2.8128e-02,
         2.0212e-01,  1.5696e-01,  1.3463e-02, -6.8528e-02,  3.2562e-02,
        -3.2679e-02,  9.0070e-02, -2.1322e-02,  1.5279e-02,  9.2129e-02,
         1.1441e-01,  1.5506e-01, -1.9588e-02, -1.2338e-01,  1.8872e-01,
        -2.3899e-02, -1.7546e-01,  7.5146e-02, -1.0932e-01,  9.2148e-02,
        -8.0220e-02,  1.7948e-01,  1.9840e-01, -1.6206e-01,  3.4954e-02,
        -2.2525e-01,  1.2045e-01,  1.5069e-01, -1.5332e-01, -2.5460e-02,
        -1.0456e-01, -5.2041e-02,  8.5655e-02,  1.1591e-01, -7.2376e-04,
        -7.0478e-02, -6.6208e-02,  1.8391e-01,  1.6507e-01,  2.2632e-01,
        -5.0001e-03, -1.4994e-01,  1.7836e-01, -1.4860e-01, -1.7768e-01,
         1.4101e-01, -4.2341e-02,  1.1581e-01,  2.7406e-02, -3.6237e-02,
        -8.2372e-02, -1.7804e-02,  1.1252e-01,  3.5115e-02,  1.2950e-01,
         8.5690e-02, -6.4365e-02,  1.8057e-01, -8.9431e-02, -8.0521e-02,
         5.2994e-02,  1.5873e-01, -5.7963e-02, -2.9883e-02, -6.6442e-02,
        -1.1811e-01,  4.4119e-02, -1.9316e-01,  1.5336e-01,  1.8816e-01,
         1.9927e-01,  1.4708e-01, -6.1859e-02, -3.2380e-02, -1.1971e-01,
        -1.8160e-04, -1.2838e-01, -1.1105e-01, -9.9514e-02, -6.5209e-02,
        -1.2626e-01,  1.3048e-01,  1.5696e-01], device='cuda:0') torch.Size([128])
recurrent_blocks.1.weight_ih_l0_reverse tensor([[-0.0226,  0.0545, -0.0199,  ...,  0.0871, -0.1183,  0.0589],
        [ 0.0679,  0.0091,  0.0385,  ...,  0.1169, -0.0207,  0.0780],
        [-0.2269, -0.0961, -0.0018,  ..., -0.0874,  0.0729,  0.0688],
        ...,
        [-0.1519,  0.0826, -0.2078,  ..., -0.0399, -0.0307, -0.0855],
        [ 0.0544,  0.2127,  0.0123,  ..., -0.0715, -0.1369, -0.0946],
        [ 0.0219,  0.0468, -0.0863,  ..., -0.0502, -0.0743, -0.0589]],
       device='cuda:0') torch.Size([128, 64])
recurrent_blocks.1.weight_hh_l0_reverse tensor([[ 0.0912,  0.0714,  0.0991,  ...,  0.1295, -0.2069, -0.1672],
        [-0.0432, -0.0467, -0.0136,  ...,  0.0814, -0.0727,  0.0915],
        [-0.0725, -0.0943,  0.0755,  ...,  0.1174, -0.1552,  0.0541],
        ...,
        [ 0.1419, -0.1604,  0.1101,  ..., -0.0696,  0.0878, -0.1108],
        [-0.0622,  0.0649,  0.0847,  ..., -0.0047,  0.0128,  0.0418],
        [ 0.0425, -0.1520,  0.1943,  ...,  0.0067,  0.1802,  0.0681]],
       device='cuda:0') torch.Size([128, 32])
recurrent_blocks.1.bias_ih_l0_reverse tensor([-0.1371,  0.1614,  0.0523, -0.1195,  0.0896,  0.0013,  0.2152,  0.1187,
         0.1186, -0.0309,  0.0453,  0.2357,  0.0824,  0.0546, -0.0290, -0.1533,
         0.1627, -0.0060,  0.0839,  0.1123,  0.1176, -0.0264,  0.1369, -0.1369,
        -0.1306, -0.0476,  0.1922,  0.0135,  0.0473, -0.0022, -0.0024, -0.0922,
         0.0988,  0.0131, -0.0450, -0.1562, -0.0995,  0.1337, -0.0847,  0.1947,
        -0.0833, -0.0651,  0.2241, -0.0397,  0.2139,  0.1323, -0.1059,  0.0675,
        -0.0385, -0.0608, -0.1883,  0.0606, -0.0803, -0.1131,  0.1777, -0.1327,
         0.0697,  0.0118,  0.2227,  0.0173,  0.0657,  0.1189,  0.1593,  0.1812,
        -0.0498, -0.0397,  0.1990, -0.1861, -0.0782, -0.0124, -0.1517,  0.1421,
        -0.2143,  0.0834,  0.0858, -0.0639, -0.2215, -0.1489,  0.0271,  0.1343,
        -0.0160,  0.0834, -0.1529, -0.0144, -0.0310, -0.0803,  0.0103, -0.1568,
         0.0007,  0.0436,  0.1415,  0.1632, -0.1624, -0.1529, -0.0066, -0.0154,
         0.0649, -0.1033, -0.0734,  0.0233, -0.1961,  0.1250,  0.2190,  0.1384,
        -0.1021, -0.1139, -0.0539,  0.1442, -0.1132, -0.0724,  0.0209, -0.0975,
         0.1841, -0.0053, -0.1364,  0.1820,  0.1374, -0.0873,  0.1586,  0.0955,
        -0.1638,  0.1069,  0.0588, -0.1053,  0.0555,  0.0403, -0.0869,  0.2096],
       device='cuda:0') torch.Size([128])
recurrent_blocks.1.bias_hh_l0_reverse tensor([-0.1163,  0.0571, -0.0476,  0.0478, -0.1606,  0.1413,  0.0110,  0.0013,
         0.1891,  0.1381, -0.0269,  0.1579,  0.2055,  0.1256, -0.0020, -0.0756,
        -0.1105,  0.0514,  0.0328, -0.0342, -0.0132,  0.1689, -0.0575,  0.1763,
         0.0608, -0.0223,  0.1046, -0.0246, -0.0914,  0.1848, -0.0834, -0.0759,
        -0.1145,  0.0917, -0.1578,  0.1702,  0.0500, -0.0646, -0.0196,  0.0889,
         0.1427,  0.0129, -0.0439, -0.1063,  0.0684,  0.0755, -0.0418,  0.0739,
         0.2057, -0.1115,  0.0818, -0.0423,  0.0575,  0.0715,  0.0843, -0.1360,
        -0.1078, -0.0204,  0.0146,  0.0028,  0.0035,  0.1539,  0.1017,  0.1894,
        -0.0868, -0.1393, -0.0634, -0.1137, -0.0054,  0.1581, -0.0622,  0.0091,
        -0.0338, -0.1347,  0.1114,  0.2061, -0.0465, -0.0479, -0.1864,  0.1406,
        -0.0448,  0.1161,  0.1474, -0.1098,  0.1020,  0.1864,  0.0547, -0.1092,
         0.0057,  0.0720,  0.1824,  0.0126, -0.1190, -0.2020,  0.2338,  0.2409,
        -0.1691,  0.0160,  0.0154, -0.0371, -0.1050,  0.0720,  0.2282, -0.1117,
        -0.0533,  0.0504,  0.0376, -0.0513,  0.1589,  0.1293, -0.1117, -0.1490,
         0.0810,  0.1159, -0.1428,  0.0900,  0.1532,  0.0955,  0.1631,  0.1730,
        -0.0034,  0.1188,  0.2273,  0.1855,  0.1225, -0.0957, -0.0485, -0.0843],
       device='cuda:0') torch.Size([128])
recurrent_blocks.2.weight_ih_l0 tensor([[-0.1266, -0.1112, -0.0273,  ..., -0.1293,  0.0127, -0.0572],
        [ 0.1310,  0.0680,  0.2428,  ...,  0.0234,  0.1468, -0.1371],
        [-0.0922,  0.1231,  0.1202,  ...,  0.0976,  0.0939,  0.1296],
        ...,
        [-0.1532, -0.0523,  0.2114,  ..., -0.1122, -0.1037, -0.0722],
        [-0.0933,  0.0627, -0.1187,  ...,  0.0033, -0.0818,  0.1927],
        [ 0.0983, -0.1322, -0.0693,  ...,  0.0181,  0.0955,  0.1096]],
       device='cuda:0') torch.Size([128, 64])
recurrent_blocks.2.weight_hh_l0 tensor([[-0.0980, -0.0933, -0.1359,  ..., -0.0149, -0.0078,  0.0750],
        [ 0.0913,  0.0087, -0.0804,  ..., -0.1122, -0.1144,  0.0671],
        [-0.0233, -0.1467, -0.0705,  ...,  0.1620, -0.1514, -0.0957],
        ...,
        [ 0.0097,  0.2095, -0.1230,  ...,  0.1528, -0.0474, -0.0390],
        [-0.0215, -0.0833, -0.0848,  ..., -0.1286, -0.1013, -0.0476],
        [-0.0664,  0.0879, -0.1312,  ...,  0.0758, -0.1232,  0.1510]],
       device='cuda:0') torch.Size([128, 32])
recurrent_blocks.2.bias_ih_l0 tensor([-0.0444,  0.1799, -0.0888, -0.0726,  0.1751,  0.0969, -0.1473,  0.0663,
         0.0754,  0.0011,  0.0816,  0.1009, -0.1080, -0.0568,  0.0511, -0.0789,
         0.0510,  0.0025,  0.1305, -0.1478,  0.0338, -0.0763, -0.0921, -0.1140,
        -0.0450, -0.0688,  0.2084, -0.1415,  0.0755, -0.0869, -0.0120, -0.0018,
         0.1226, -0.0176,  0.0089, -0.0740, -0.0742,  0.0668,  0.1928, -0.0657,
         0.0107,  0.1551, -0.0999, -0.0514,  0.1814,  0.1126,  0.0259,  0.0532,
         0.0911,  0.0786,  0.0262, -0.0865, -0.0458, -0.1494,  0.1642, -0.1433,
        -0.0852, -0.0980,  0.1920,  0.0141,  0.0062, -0.1019,  0.1835,  0.1624,
         0.0075,  0.1092, -0.1369,  0.0383, -0.0585,  0.1527, -0.1536,  0.0231,
         0.1870, -0.0785,  0.0406, -0.0503,  0.1542,  0.1107,  0.0057, -0.0766,
         0.0825, -0.0053,  0.0836, -0.1108,  0.1186,  0.0299, -0.1524, -0.0773,
         0.1012, -0.1822, -0.1356,  0.0075,  0.1364, -0.1903,  0.1789,  0.0662,
        -0.1735, -0.0509, -0.1196,  0.0278, -0.1205,  0.0558,  0.1854,  0.0326,
         0.1482,  0.1894, -0.1516,  0.1022,  0.1478,  0.1194, -0.0333,  0.2018,
        -0.0348, -0.0433,  0.1981,  0.0735,  0.1142, -0.0857, -0.0491, -0.1966,
        -0.0435,  0.0958, -0.0947,  0.0523,  0.2033, -0.1502, -0.0738,  0.1479],
       device='cuda:0') torch.Size([128])
recurrent_blocks.2.bias_hh_l0 tensor([-0.2040,  0.1911, -0.1362,  0.0369, -0.0615,  0.1161,  0.0563,  0.0778,
        -0.0961, -0.0896,  0.1113, -0.1026,  0.0957, -0.1306, -0.0368, -0.0261,
         0.1873,  0.1350,  0.0950, -0.1097, -0.0866, -0.0149, -0.0964,  0.0780,
         0.1617, -0.0513,  0.0673, -0.1458,  0.0768, -0.0468, -0.0492,  0.0537,
        -0.0666,  0.1281,  0.0573,  0.0290,  0.0140,  0.0571,  0.1716,  0.0948,
        -0.1198,  0.1617, -0.1642, -0.0785, -0.0696,  0.1059,  0.0686,  0.0218,
        -0.0297,  0.1348,  0.1139, -0.0397, -0.0946, -0.2200,  0.1034, -0.1012,
         0.1360, -0.1294,  0.0990, -0.0823,  0.2019,  0.0481, -0.0327, -0.0646,
         0.1284,  0.0398,  0.0053, -0.0405, -0.1085, -0.0318,  0.0330, -0.1565,
         0.1431, -0.0495, -0.1225,  0.1573,  0.1497, -0.0247, -0.0323, -0.1459,
         0.1169, -0.1751,  0.1346,  0.0648,  0.1246, -0.0295,  0.0644, -0.1387,
        -0.1439, -0.0369, -0.1624,  0.1581,  0.2057, -0.1627, -0.0296,  0.0504,
         0.1044,  0.0866, -0.1271, -0.0847, -0.0996,  0.1114,  0.1519,  0.0683,
        -0.1634,  0.0457,  0.0845, -0.1136,  0.2346,  0.0618,  0.1435,  0.1589,
        -0.0529,  0.0727,  0.0082,  0.1164, -0.1108, -0.0202,  0.1743, -0.0335,
         0.0148,  0.2130, -0.0789, -0.1777,  0.2417,  0.1537,  0.2007,  0.1473],
       device='cuda:0') torch.Size([128])
recurrent_blocks.2.weight_ih_l0_reverse tensor([[-0.0553, -0.0920,  0.1546,  ...,  0.1025, -0.0127, -0.0053],
        [ 0.1070,  0.1306,  0.1490,  ..., -0.1514, -0.0560,  0.0124],
        [ 0.1705,  0.1426,  0.0909,  ...,  0.0959,  0.1183, -0.1237],
        ...,
        [-0.1508, -0.1341, -0.1887,  ...,  0.1290,  0.0366,  0.0404],
        [-0.0714,  0.0118,  0.1122,  ..., -0.1831,  0.1124,  0.0064],
        [-0.1084,  0.0551,  0.0916,  ...,  0.0087,  0.0433,  0.1790]],
       device='cuda:0') torch.Size([128, 64])
recurrent_blocks.2.weight_hh_l0_reverse tensor([[ 1.4142e-01, -1.6848e-02, -2.8070e-02,  ..., -1.5361e-01,
         -1.9244e-01,  2.4552e-02],
        [-6.5116e-02,  1.4819e-02,  8.1757e-02,  ..., -1.0315e-01,
          1.6372e-02,  4.5454e-02],
        [-1.3928e-02,  5.5342e-02, -6.3102e-03,  ..., -1.4493e-01,
          1.4190e-01,  1.5040e-01],
        ...,
        [-2.7791e-02, -3.4975e-02, -1.8920e-02,  ..., -1.8348e-01,
          4.1172e-02,  1.0589e-01],
        [ 1.9972e-01, -2.1209e-02,  1.6963e-01,  ...,  5.7140e-02,
          1.7748e-01, -1.2751e-05],
        [ 1.3899e-02,  1.5160e-01,  1.6511e-01,  ..., -3.7992e-02,
          1.6770e-01, -2.0163e-02]], device='cuda:0') torch.Size([128, 32])
recurrent_blocks.2.bias_ih_l0_reverse tensor([-0.2071, -0.1492, -0.0205, -0.0964,  0.0958,  0.0474,  0.0058,  0.0979,
         0.1090,  0.0145,  0.0484,  0.0351, -0.0724,  0.0750, -0.0834,  0.0022,
         0.0371,  0.2234, -0.0177, -0.0170, -0.0641,  0.1116,  0.1056, -0.0500,
        -0.1003, -0.1615,  0.1027, -0.0920, -0.0989, -0.0585, -0.0571,  0.0191,
         0.0673,  0.0833, -0.0201,  0.0606, -0.2122,  0.1601,  0.0481,  0.1443,
         0.1848,  0.0919,  0.1611, -0.0251, -0.0707,  0.1589,  0.0019,  0.0877,
         0.2103, -0.0754, -0.0606,  0.0024, -0.1058,  0.0147,  0.1917,  0.0698,
        -0.0619, -0.1348, -0.0470, -0.0216, -0.0097,  0.1517,  0.1110,  0.0322,
        -0.1028,  0.0079,  0.1400, -0.1360, -0.0300,  0.2299, -0.1585, -0.0651,
        -0.0879, -0.0950,  0.1093, -0.0429, -0.0668,  0.1304, -0.0856,  0.1887,
        -0.1974,  0.1288, -0.1500, -0.0607, -0.1865,  0.0752,  0.1280,  0.0518,
         0.0459,  0.0990,  0.0604,  0.1844,  0.0349,  0.0538,  0.0658,  0.1574,
         0.1006,  0.0141,  0.0315,  0.1197,  0.1323,  0.1452, -0.0981,  0.1091,
        -0.0203, -0.0362, -0.1386,  0.2026,  0.1586,  0.0972,  0.1151, -0.1024,
         0.1695,  0.2184, -0.0779,  0.2067,  0.0471,  0.2165,  0.0328,  0.0236,
        -0.1637, -0.0058,  0.0130,  0.1921, -0.0248,  0.1387,  0.0836,  0.0476],
       device='cuda:0') torch.Size([128])
recurrent_blocks.2.bias_hh_l0_reverse tensor([ 0.1143,  0.0155, -0.0714,  0.0971,  0.0579,  0.2038,  0.0927,  0.0713,
         0.0937,  0.1003,  0.0839, -0.1195,  0.0377, -0.0803, -0.1605,  0.0013,
         0.0005,  0.1244,  0.0562,  0.0867, -0.1184,  0.0846,  0.1862, -0.1974,
        -0.2240,  0.1482,  0.1717,  0.1847,  0.1054,  0.1361,  0.1290,  0.0480,
         0.0814,  0.0455,  0.1504,  0.1468, -0.0574,  0.0125, -0.0287, -0.0488,
        -0.0060, -0.0202,  0.1109,  0.0330, -0.0464, -0.0774, -0.1480, -0.0743,
         0.2072,  0.1889, -0.0784,  0.0222, -0.0184,  0.2250,  0.1451,  0.1343,
        -0.0277, -0.0396,  0.1898, -0.0576,  0.1423, -0.0488,  0.2086,  0.2355,
         0.0734, -0.0499,  0.1955, -0.1523, -0.0290,  0.0051, -0.1440,  0.2001,
        -0.1795, -0.0011, -0.0888,  0.1975, -0.0497,  0.0262, -0.0201,  0.1952,
        -0.0037,  0.1018, -0.1161, -0.1405, -0.1345,  0.0574,  0.1869,  0.0913,
         0.0887, -0.1496, -0.0425,  0.1332, -0.0982,  0.1464,  0.1370,  0.1531,
        -0.0870,  0.1478, -0.1146, -0.1488,  0.1275, -0.0397, -0.0088,  0.0951,
         0.0099, -0.0581,  0.0529,  0.2356,  0.2250,  0.1600,  0.1163, -0.0862,
        -0.0882,  0.2050,  0.0725,  0.0906, -0.1094, -0.0753,  0.0259,  0.0963,
         0.0590, -0.0355, -0.0976, -0.0867,  0.1015, -0.1390, -0.0816,  0.0375],
       device='cuda:0') torch.Size([128])
recurrent_blocks.3.weight_ih_l0 tensor([[-0.0760,  0.1610, -0.1403,  ..., -0.0948, -0.0690,  0.1124],
        [ 0.0311,  0.0908, -0.1376,  ..., -0.1025,  0.1102,  0.0761],
        [ 0.0023,  0.0272,  0.0419,  ..., -0.0758,  0.1351,  0.1192],
        ...,
        [ 0.0637, -0.1031,  0.1672,  ..., -0.1613, -0.0554,  0.1860],
        [ 0.0736, -0.1696, -0.1669,  ...,  0.1240, -0.0517,  0.1572],
        [-0.0289, -0.1463,  0.0368,  ..., -0.0713, -0.0837, -0.0927]],
       device='cuda:0') torch.Size([128, 64])
recurrent_blocks.3.weight_hh_l0 tensor([[-0.0136,  0.1342, -0.1206,  ..., -0.0491,  0.0975,  0.1529],
        [ 0.1126,  0.0057, -0.0963,  ..., -0.0584, -0.0802, -0.0830],
        [-0.0142, -0.0232, -0.1147,  ..., -0.1878, -0.0412,  0.1172],
        ...,
        [-0.0864,  0.0755,  0.1031,  ..., -0.1716, -0.0102,  0.0082],
        [ 0.1212, -0.1232, -0.1183,  ..., -0.1917,  0.0681, -0.1472],
        [-0.1241, -0.0321,  0.1598,  ...,  0.0070, -0.0410,  0.2039]],
       device='cuda:0') torch.Size([128, 32])
recurrent_blocks.3.bias_ih_l0 tensor([ 0.0263, -0.0084,  0.0847, -0.2159, -0.0535,  0.2023,  0.1914, -0.1090,
         0.1390, -0.0765, -0.0016, -0.0961,  0.1326, -0.0099,  0.0880, -0.1383,
         0.1502,  0.0993,  0.1398, -0.0741, -0.0427,  0.1919,  0.0683, -0.1385,
        -0.0093, -0.0924,  0.0077,  0.1242, -0.0196, -0.1374, -0.0686, -0.1139,
         0.0393, -0.0782,  0.1192, -0.0681,  0.0801,  0.0373, -0.0113, -0.1968,
        -0.1043, -0.0515,  0.1049,  0.1581,  0.2299, -0.0609, -0.0290,  0.0554,
        -0.0983, -0.0667,  0.1562,  0.1223,  0.0968,  0.1398,  0.0037,  0.1553,
         0.1561,  0.1420,  0.1900, -0.1707, -0.0295,  0.0793, -0.0806, -0.0094,
         0.1568,  0.0008,  0.1116, -0.0041,  0.1308,  0.1414, -0.2033,  0.0812,
        -0.0863, -0.0207, -0.0343, -0.0629,  0.2115, -0.0370, -0.1049, -0.0175,
         0.1871,  0.0813,  0.0428, -0.1220, -0.0282, -0.1070, -0.0991, -0.0791,
        -0.1867, -0.1830,  0.0087,  0.0969,  0.1658,  0.1225,  0.1040, -0.0890,
         0.0596,  0.0435, -0.1146,  0.0520, -0.0310, -0.0234,  0.0015, -0.0485,
        -0.0887,  0.0468, -0.1555, -0.0708,  0.0517,  0.0677, -0.1634,  0.0286,
        -0.1461,  0.0636,  0.0512,  0.0630,  0.1805,  0.1601,  0.1248,  0.1648,
         0.1367,  0.2133,  0.0554,  0.1381, -0.1255,  0.1465,  0.1076, -0.0412],
       device='cuda:0') torch.Size([128])
recurrent_blocks.3.bias_hh_l0 tensor([-0.1210,  0.0723,  0.1374,  0.0945,  0.0620, -0.0430,  0.1856,  0.0158,
         0.1106,  0.1234,  0.0671,  0.1190, -0.0911,  0.0166,  0.1378,  0.1324,
         0.1178,  0.1137,  0.0627,  0.0588,  0.0970, -0.0572,  0.0983, -0.1590,
        -0.0470,  0.0287,  0.1852, -0.1152,  0.1068, -0.1209,  0.1120, -0.0714,
        -0.1431, -0.0997,  0.1232, -0.2079, -0.0071,  0.2035,  0.2276, -0.2076,
         0.2113,  0.1192, -0.1368,  0.0421, -0.1020,  0.1158, -0.0198,  0.0619,
         0.1864,  0.0306,  0.0815, -0.1945,  0.0265, -0.0297, -0.0772,  0.1805,
         0.1026,  0.0059, -0.1013,  0.0916, -0.0618,  0.1030,  0.1456, -0.1010,
        -0.0047, -0.0511,  0.0079,  0.0222, -0.1098,  0.0483,  0.0187,  0.0319,
        -0.1951, -0.1908, -0.0624,  0.1458,  0.0751,  0.0068, -0.0921,  0.0542,
         0.1974, -0.0552, -0.0043,  0.1312, -0.0107, -0.1089,  0.0302,  0.0464,
        -0.0986, -0.0659, -0.1342,  0.0077,  0.1709, -0.1708,  0.1123, -0.1511,
         0.1703,  0.2047, -0.1500,  0.1082, -0.1015,  0.0471,  0.1961, -0.2067,
         0.0855,  0.1633, -0.0699, -0.0380, -0.1120, -0.0277,  0.0842, -0.1843,
        -0.1019,  0.0210,  0.2297, -0.1229,  0.2034,  0.1960, -0.0809, -0.0136,
         0.0672,  0.2107, -0.0601,  0.0178, -0.0859,  0.1254, -0.0726, -0.1213],
       device='cuda:0') torch.Size([128])
recurrent_blocks.3.weight_ih_l0_reverse tensor([[ 0.1804, -0.0080,  0.0765,  ...,  0.0879,  0.1714,  0.0042],
        [ 0.0205,  0.0082, -0.0929,  ...,  0.0078, -0.1329, -0.0597],
        [ 0.1516, -0.0702, -0.1135,  ...,  0.0154,  0.0250, -0.0232],
        ...,
        [ 0.1228,  0.1089,  0.0341,  ...,  0.0275, -0.0163,  0.0194],
        [-0.1105,  0.1308, -0.1900,  ..., -0.1112,  0.0602, -0.0882],
        [-0.1131, -0.0031, -0.1716,  ..., -0.0142,  0.0789, -0.0422]],
       device='cuda:0') torch.Size([128, 64])
recurrent_blocks.3.weight_hh_l0_reverse tensor([[ 0.1081,  0.1056,  0.0541,  ...,  0.2109, -0.1236, -0.0781],
        [-0.1001, -0.1086,  0.0820,  ...,  0.0295, -0.0472, -0.0031],
        [-0.0429,  0.1600,  0.0232,  ...,  0.0833,  0.1558, -0.0143],
        ...,
        [ 0.0163, -0.0218, -0.0005,  ..., -0.0958,  0.2121,  0.1800],
        [-0.0622,  0.0798,  0.0254,  ...,  0.0441,  0.0368,  0.2130],
        [-0.0635, -0.0915, -0.0565,  ...,  0.0856,  0.0316,  0.0166]],
       device='cuda:0') torch.Size([128, 32])
recurrent_blocks.3.bias_ih_l0_reverse tensor([-0.0086,  0.1457,  0.1303, -0.0751,  0.1648,  0.0707,  0.1676,  0.0273,
         0.1213, -0.0327, -0.0613, -0.0488,  0.1237,  0.1057, -0.0126,  0.1042,
         0.0504, -0.1184, -0.0019,  0.1240,  0.0557,  0.0419, -0.0109, -0.0470,
        -0.0003, -0.1079,  0.0447,  0.2232, -0.1347,  0.0463,  0.0160, -0.0020,
         0.0832,  0.0561,  0.2010, -0.0717, -0.0298, -0.0799,  0.0319, -0.2001,
        -0.1295, -0.0200, -0.0226,  0.1408, -0.1097,  0.1726, -0.1477, -0.0133,
        -0.0555,  0.1421, -0.0896,  0.1123,  0.1047,  0.0554, -0.0954,  0.1097,
         0.0886, -0.0254, -0.0401,  0.1430,  0.0217,  0.0605, -0.0856, -0.1111,
        -0.1591, -0.2041,  0.2203, -0.0412, -0.1547, -0.0675, -0.1034, -0.0144,
         0.1379, -0.0119, -0.0967,  0.0332, -0.0976, -0.1573,  0.0305, -0.1442,
        -0.1060,  0.2380,  0.1056, -0.0160,  0.1362, -0.0909,  0.1663, -0.1815,
         0.0181, -0.0231, -0.1166,  0.1642,  0.1254,  0.0581, -0.0947, -0.0639,
         0.1210, -0.0825,  0.0193, -0.0636,  0.1962, -0.1201,  0.0706, -0.1836,
        -0.0488,  0.1119,  0.1605,  0.1150, -0.0698,  0.1373,  0.0314, -0.0798,
        -0.1632, -0.0388,  0.1353, -0.1242, -0.0240,  0.1137,  0.0422, -0.0532,
        -0.0702, -0.0522, -0.1209,  0.1594,  0.1393, -0.2167,  0.0657, -0.0721],
       device='cuda:0') torch.Size([128])
recurrent_blocks.3.bias_hh_l0_reverse tensor([-0.0171, -0.0885, -0.0204, -0.0354, -0.0076, -0.1223,  0.1844,  0.0826,
         0.1462, -0.1769,  0.0609,  0.0140, -0.0259, -0.0630,  0.0389, -0.0518,
         0.1867, -0.0656,  0.1020,  0.1339,  0.1511,  0.1329,  0.1522, -0.0890,
        -0.0643,  0.1213, -0.0178, -0.0147, -0.0874, -0.0692,  0.0945,  0.1223,
        -0.1023, -0.1297,  0.2039,  0.0090, -0.0026,  0.0181,  0.1288, -0.0701,
         0.0441,  0.1192,  0.0330,  0.1641,  0.1146, -0.1006, -0.0422, -0.0609,
        -0.0067, -0.0633, -0.1576,  0.1211, -0.0663,  0.1479, -0.1075,  0.0911,
        -0.2222,  0.0269, -0.0690,  0.1510, -0.0127,  0.0850,  0.0890, -0.0208,
         0.1252,  0.0484, -0.1049,  0.0762, -0.2190, -0.0029, -0.2010,  0.2087,
        -0.0756,  0.0917,  0.2128, -0.0708,  0.0973, -0.1947, -0.1713, -0.0326,
         0.0714,  0.0344,  0.0976, -0.0363,  0.1473, -0.1016, -0.0916,  0.0810,
         0.0583, -0.1675,  0.1651,  0.0183, -0.1871,  0.0665, -0.0729, -0.0634,
        -0.0176,  0.0812, -0.0704, -0.1010, -0.1168,  0.1555,  0.1441, -0.0126,
        -0.0235, -0.0271, -0.0844, -0.1218,  0.0091,  0.0101,  0.0749, -0.0195,
         0.1569,  0.1135, -0.0880,  0.1370,  0.1403,  0.1206,  0.1257, -0.1132,
         0.0869, -0.0011, -0.0930,  0.1749,  0.1690,  0.0193,  0.0368, -0.1405],
       device='cuda:0') torch.Size([128])
fc_blocks.0.0.weight tensor([[ 0.0746,  0.0564, -0.0447,  ..., -0.1041, -0.0222, -0.0120],
        [ 0.0507,  0.0777, -0.0106,  ...,  0.0379, -0.0344,  0.0190],
        [ 0.0922,  0.0999,  0.0189,  ..., -0.1391,  0.1302,  0.1040],
        ...,
        [-0.0813,  0.0633,  0.0869,  ...,  0.1502,  0.0119,  0.0912],
        [-0.1654, -0.0425, -0.1066,  ...,  0.0399,  0.0212, -0.1478],
        [ 0.0943,  0.1583, -0.0342,  ...,  0.0366,  0.1729,  0.1024]],
       device='cuda:0') torch.Size([32, 64])
fc_blocks.0.0.bias tensor([ 0.0594,  0.1290,  0.1572, -0.1288, -0.1512, -0.0020, -0.0283,  0.1320,
        -0.0492,  0.0140, -0.0640, -0.0455, -0.1461, -0.0320, -0.1042,  0.0476,
         0.0675,  0.0855, -0.0271, -0.0499,  0.0490, -0.0386, -0.0395, -0.1627,
         0.1789, -0.0674,  0.0125,  0.0803, -0.0438, -0.0474,  0.0498,  0.0182],
       device='cuda:0') torch.Size([32])
fc_blocks.1.0.weight tensor([[-0.0992,  0.0363,  0.0266,  0.1815,  0.1791,  0.0330, -0.0920, -0.0916,
          0.0999,  0.0846,  0.1282, -0.0609, -0.1041, -0.1066, -0.0878, -0.1495,
         -0.1921,  0.0780, -0.1582, -0.1108, -0.0024,  0.1329,  0.0075,  0.0763,
          0.0283,  0.0974,  0.1063,  0.0636, -0.0533, -0.0166, -0.1110, -0.0540],
        [ 0.0036,  0.1874,  0.1423,  0.0606, -0.0817,  0.1091, -0.0643,  0.1099,
         -0.0310, -0.1719, -0.1047, -0.1086,  0.0123, -0.0176, -0.1089, -0.0181,
          0.0034,  0.1643, -0.0012, -0.1486, -0.0654, -0.1762,  0.2220, -0.1629,
         -0.0574,  0.0799,  0.0796, -0.1813,  0.0128,  0.0833, -0.1789,  0.1820],
        [ 0.0970, -0.2043, -0.0582, -0.1332, -0.1165, -0.0129, -0.1009, -0.1030,
          0.0215,  0.1281,  0.0519, -0.0962, -0.0041,  0.1316, -0.0768, -0.1900,
         -0.0755,  0.1070,  0.1373, -0.1031,  0.0152,  0.0935,  0.0188,  0.1096,
          0.0070,  0.0465, -0.0175, -0.1657, -0.1910,  0.0140,  0.0999, -0.1044],
        [ 0.1897,  0.1168,  0.1144, -0.0265, -0.0582,  0.0262,  0.2207,  0.1789,
         -0.0465,  0.0058,  0.0549, -0.0805, -0.1425,  0.0365, -0.1551,  0.1886,
          0.2274,  0.1325, -0.0542,  0.1261, -0.1169,  0.0916,  0.1355,  0.0483,
          0.0951,  0.1309,  0.0952,  0.0467,  0.0015, -0.0993, -0.0648,  0.1769],
        [-0.0842,  0.0208,  0.0786, -0.1365, -0.1963, -0.0962, -0.0168, -0.0454,
         -0.0528,  0.0931,  0.1120,  0.0402, -0.0507,  0.1512, -0.2087,  0.2302,
          0.0537, -0.1074, -0.1268, -0.1036,  0.0309,  0.0264, -0.0655,  0.0210,
          0.0784,  0.0962, -0.1696,  0.0145,  0.1571,  0.0077,  0.0386,  0.1496],
        [-0.0290,  0.0364,  0.1253,  0.0698,  0.0856,  0.0041,  0.1593, -0.0729,
          0.1555,  0.0229,  0.1898,  0.0705, -0.1591, -0.0008,  0.2006,  0.0987,
          0.0840, -0.0924,  0.0189, -0.0137,  0.1348,  0.0482, -0.0813,  0.0209,
          0.0014, -0.0430, -0.1085, -0.0154,  0.1313,  0.1525, -0.0043, -0.1148],
        [-0.1365, -0.2098, -0.0360,  0.0672,  0.0856,  0.0700, -0.1207,  0.0051,
          0.1164, -0.1613, -0.0550, -0.1016, -0.1458, -0.0385,  0.0949, -0.0255,
         -0.1383,  0.0857,  0.1426,  0.0945,  0.0923, -0.0917,  0.1002, -0.0005,
         -0.0614, -0.0135,  0.0956, -0.0592,  0.1846, -0.1255,  0.0542,  0.0681],
        [ 0.1560, -0.1372, -0.0821,  0.1064, -0.0618, -0.0189, -0.0187, -0.0005,
          0.0202,  0.0444,  0.1745,  0.0812, -0.0851,  0.1244, -0.0436,  0.0389,
          0.0766,  0.1398, -0.0949,  0.0400,  0.2087,  0.0455, -0.0161,  0.2174,
          0.0737, -0.1042,  0.1312,  0.1525, -0.1254,  0.1239,  0.1084, -0.0530],
        [-0.1631, -0.0662,  0.0994, -0.0535,  0.1848,  0.1163,  0.0433, -0.0706,
          0.0451,  0.0606,  0.1210,  0.1246,  0.1689,  0.0120,  0.1458,  0.0259,
         -0.0401,  0.0272, -0.0689, -0.0339,  0.1138,  0.1098, -0.1851,  0.0963,
          0.1322, -0.0050,  0.0988,  0.0768,  0.1179,  0.1293, -0.0741,  0.0405],
        [-0.0798,  0.0608, -0.1263,  0.1923,  0.1961,  0.1430, -0.1939, -0.0956,
          0.0367, -0.0229,  0.0711,  0.0004,  0.0678, -0.0897,  0.0751, -0.0654,
          0.0834, -0.1514,  0.0394,  0.0194,  0.0131, -0.0890,  0.0268, -0.0920,
         -0.1745, -0.0087,  0.0811, -0.0035,  0.1298, -0.0779,  0.1595,  0.0161],
        [-0.0719, -0.0333,  0.1292, -0.2109,  0.0613,  0.0546, -0.1052,  0.1850,
          0.2002, -0.0309,  0.0972, -0.1316, -0.1451,  0.1410, -0.1441,  0.1511,
          0.2470,  0.1433,  0.0730,  0.1334,  0.1746, -0.0823,  0.0320, -0.0785,
          0.2050,  0.1072, -0.1368, -0.1269,  0.0076, -0.0602, -0.2132,  0.0942],
        [ 0.1354,  0.0711,  0.0682, -0.0990,  0.0212, -0.1423,  0.1281,  0.2217,
          0.1542,  0.1491,  0.0708, -0.0309, -0.0340,  0.0378, -0.0650, -0.1128,
         -0.0678,  0.1263,  0.0955, -0.0559,  0.1106,  0.0724,  0.2250, -0.0171,
          0.0014,  0.1948,  0.0404,  0.1722, -0.1499, -0.1610,  0.1462,  0.1665],
        [-0.0807,  0.1777, -0.0559,  0.1557, -0.1268,  0.1181,  0.0541,  0.1348,
          0.1173, -0.0929, -0.0969, -0.1153,  0.1373,  0.0629,  0.1562, -0.0533,
         -0.0702,  0.1570, -0.1050, -0.1573,  0.0768,  0.0938, -0.1244, -0.1013,
          0.0878, -0.0253,  0.1529, -0.0829,  0.0728,  0.1402,  0.0265,  0.1563],
        [-0.0843,  0.0888,  0.0930, -0.1496,  0.0055,  0.0779, -0.1651,  0.0375,
         -0.0823, -0.1358,  0.1158, -0.0113,  0.1463,  0.0686,  0.1667, -0.2196,
         -0.2044,  0.1161, -0.0033,  0.0074,  0.0633, -0.1072, -0.0785,  0.0782,
         -0.0368,  0.0782,  0.0594, -0.0275, -0.0254,  0.0799, -0.0615, -0.1474],
        [-0.1235, -0.1763, -0.0889,  0.0757,  0.0579, -0.0550,  0.1247, -0.0227,
         -0.0126, -0.2043, -0.1453, -0.1849,  0.0206, -0.0591, -0.0401, -0.0245,
          0.0673, -0.0828,  0.0689,  0.0992,  0.0177, -0.0408, -0.1347, -0.1757,
         -0.1292, -0.0581, -0.0928,  0.0275, -0.0493, -0.0546,  0.0254, -0.1422],
        [-0.2114, -0.0746, -0.2115,  0.0421,  0.1856,  0.0259,  0.0414,  0.1172,
          0.1020, -0.0131, -0.1591,  0.1869,  0.1404, -0.0725,  0.0046,  0.0722,
          0.1221,  0.0944,  0.1257,  0.1207, -0.0877,  0.1813,  0.0881,  0.0042,
         -0.1684,  0.1509,  0.0785,  0.0555, -0.0738, -0.0916,  0.1693, -0.1175]],
       device='cuda:0') torch.Size([16, 32])
fc_blocks.1.0.bias tensor([ 0.1027,  0.1190, -0.1154,  0.1867,  0.0110,  0.0285, -0.0695, -0.1029,
        -0.0999,  0.0084,  0.0492,  0.1966,  0.0121,  0.0105,  0.0520, -0.1706],
       device='cuda:0') torch.Size([16])
fc_blocks.2.0.weight tensor([[-0.0475,  0.1711, -0.1694,  0.1657,  0.1265,  0.0991, -0.0339,  0.0678,
         -0.0633, -0.0377,  0.2057,  0.1329,  0.0884, -0.0896, -0.1575, -0.2004],
        [-0.1946,  0.1592, -0.0467, -0.1283, -0.0802, -0.0380, -0.0222, -0.0082,
          0.1562, -0.1588, -0.0125, -0.1408, -0.1109, -0.1807, -0.0979, -0.2290],
        [ 0.0524, -0.0187,  0.1482, -0.0309,  0.2742,  0.0465, -0.1416,  0.2895,
         -0.2721, -0.0154, -0.1460, -0.0543,  0.0776, -0.0357, -0.0312,  0.1053],
        [ 0.0641, -0.1708,  0.1550, -0.1956, -0.1784,  0.0802, -0.2479,  0.1615,
         -0.0452,  0.0104, -0.0017, -0.1160,  0.1832,  0.1285,  0.1532,  0.2097],
        [-0.2701, -0.2820,  0.0944, -0.0040,  0.0576,  0.3003,  0.1440, -0.2847,
          0.0657,  0.1567, -0.0938,  0.1389, -0.0943, -0.0783,  0.1349, -0.2350],
        [ 0.0469,  0.0771,  0.2398,  0.0038, -0.0233,  0.1007,  0.0085, -0.1319,
          0.2062, -0.2103,  0.1416,  0.1250, -0.1299, -0.1434,  0.2122,  0.1065],
        [ 0.0633,  0.0430, -0.2920,  0.0327,  0.1866, -0.0210,  0.0332, -0.0952,
          0.1260, -0.2280,  0.1905, -0.1063, -0.1373, -0.1923,  0.1348, -0.2691],
        [-0.2780, -0.2372, -0.2366,  0.0457, -0.0094,  0.2956, -0.2046,  0.0279,
          0.0510,  0.1508,  0.0926,  0.1335, -0.2377, -0.0311, -0.1466, -0.0419]],
       device='cuda:0') torch.Size([8, 16])
fc_blocks.2.0.bias tensor([ 0.2826, -0.0235, -0.2371, -0.1517, -0.2912, -0.0561, -0.0965, -0.1527],
       device='cuda:0') torch.Size([8])
fc_blocks.3.0.weight tensor([[ 0.2411,  0.2652,  0.1125, -0.0054, -0.1700,  0.1895,  0.0920, -0.2329],
        [-0.1837,  0.0225,  0.2537, -0.0737,  0.2107,  0.1258,  0.2542,  0.1298],
        [ 0.1538,  0.0008, -0.0222, -0.1891, -0.1409,  0.1404,  0.0408, -0.1064],
        [ 0.0590,  0.3628, -0.0354,  0.3291,  0.1892,  0.0411,  0.2708,  0.2591]],
       device='cuda:0') torch.Size([4, 8])
fc_blocks.3.0.bias tensor([ 0.2707,  0.0077,  0.4077, -0.4040], device='cuda:0') torch.Size([4])
fc_blocks.4.0.weight tensor([[-0.2071,  0.0394,  0.2355, -0.5567],
        [ 0.5043, -0.2065,  0.0669, -0.5125]], device='cuda:0') torch.Size([2, 4])
fc_blocks.4.0.bias tensor([-0.3075, -0.4094], device='cuda:0') torch.Size([2])
Train Loss : 273.410, Val Loss : 226.239
======> Trajectory Loss : 144.997, Gravity Loss : 0.000, EndOfTrajectory Loss : 1.063, BelowGroundPenalize Loss : 22.151
===> [Minibatch 9/129].........recurrent_blocks.0.weight_ih_l0 tensor([[ 1.6166e-01,  4.2340e-02, -1.0522e-01],
        [-8.9383e-02, -4.3726e-02,  1.9960e-01],
        [ 4.7918e-02,  7.4197e-02,  1.0530e-01],
        [ 1.1433e-02, -9.8796e-02,  6.8694e-02],
        [-3.1434e-02, -8.9142e-02, -7.5599e-02],
        [ 2.0711e-02, -1.4228e-01,  1.7276e-01],
        [-6.3801e-02, -1.7252e-01,  1.8015e-01],
        [ 1.2534e-01,  1.5419e-01, -4.7619e-02],
        [-1.3909e-01, -1.2215e-01, -5.1683e-03],
        [ 1.4489e-01,  6.9080e-02,  1.3121e-01],
        [-1.2617e-01, -2.0793e-01,  7.4645e-02],
        [-2.3244e-02,  1.2314e-01, -1.9233e-02],
        [-1.2840e-01,  1.8184e-01,  6.3372e-02],
        [-1.4177e-01, -1.1390e-01,  1.3463e-01],
        [-1.6450e-01,  4.8947e-02, -5.3112e-02],
        [-1.1126e-01, -1.7074e-02,  2.2624e-01],
        [ 5.6030e-02, -1.6434e-01, -8.5794e-02],
        [ 9.1419e-02,  1.3303e-01,  1.1909e-05],
        [-5.7311e-02, -7.8399e-03, -3.0575e-02],
        [-2.1410e-01, -2.0065e-01, -1.2447e-02],
        [-8.4499e-02,  5.6174e-02,  1.8532e-01],
        [ 6.0841e-02,  2.3684e-02,  2.3328e-01],
        [ 2.6780e-03, -9.1895e-02, -1.0605e-01],
        [ 2.7282e-02, -1.5145e-01, -7.4697e-03],
        [-1.3810e-01, -1.6369e-01,  6.1012e-02],
        [-2.0224e-01, -1.5341e-01, -5.2241e-02],
        [-8.1680e-02,  1.3281e-01,  1.1818e-01],
        [ 1.0005e-01, -2.0372e-01, -1.5951e-01],
        [ 4.7104e-02, -9.2840e-02,  1.2179e-01],
        [-1.5097e-01, -7.3254e-02,  1.6800e-01],
        [ 4.9117e-02, -1.2158e-01, -1.2844e-01],
        [-5.4911e-03, -8.2294e-03, -1.4218e-02],
        [-1.2461e-01,  7.4680e-02, -1.8264e-01],
        [ 4.1941e-02,  1.7230e-02,  1.9849e-02],
        [-2.3787e-02,  1.6328e-01,  7.3440e-02],
        [ 1.9602e-01,  1.0832e-01, -5.3308e-02],
        [-1.2977e-01, -1.0921e-02,  8.3171e-02],
        [-3.7872e-02, -1.3664e-01, -1.2156e-01],
        [-6.2440e-02, -1.7423e-01,  8.5542e-02],
        [ 1.5013e-01,  1.1177e-01,  1.5687e-01],
        [ 1.7575e-01, -7.7432e-02, -2.3343e-02],
        [ 5.4099e-02,  1.0075e-01, -9.1559e-02],
        [-1.1330e-01,  8.6775e-02,  1.1627e-01],
        [ 2.0026e-01,  1.0692e-01,  2.4012e-01],
        [-1.2827e-01,  1.1374e-02, -1.6450e-01],
        [-2.0464e-02, -7.5686e-02, -1.3398e-01],
        [-1.0004e-01, -4.9328e-02,  1.4355e-01],
        [-1.3305e-01, -6.9866e-03, -2.5414e-02],
        [ 6.6641e-02, -1.0451e-01,  2.4161e-02],
        [-6.5573e-03, -1.7575e-01,  1.0524e-01],
        [-2.0474e-01,  1.4310e-01,  5.2718e-02],
        [-4.5419e-02, -1.7813e-01, -1.1005e-03],
        [-1.8986e-01, -6.6399e-02,  2.1572e-01],
        [ 7.1630e-02, -3.5989e-02,  1.0996e-01],
        [-9.0552e-02, -1.6764e-01,  1.8454e-01],
        [ 1.7790e-01,  9.4637e-02,  2.1142e-01],
        [-2.0300e-01, -2.6230e-02, -9.8246e-02],
        [ 5.1062e-02, -1.6879e-01, -1.1634e-01],
        [ 4.1714e-02,  1.4205e-01, -2.2430e-02],
        [-1.8950e-02, -8.3708e-02,  1.4225e-01],
        [ 1.4975e-01,  4.4845e-02,  2.2871e-01],
        [-1.9156e-01, -1.0811e-01, -1.0175e-02],
        [-8.1457e-02,  1.6723e-02, -6.9566e-02],
        [-4.4322e-02, -2.0452e-01, -1.3856e-02],
        [ 4.5417e-02,  8.9708e-02,  6.5267e-03],
        [-1.4989e-01,  6.5647e-02, -4.6912e-02],
        [-4.1182e-02, -1.7479e-01, -1.9461e-01],
        [ 7.6608e-02,  9.5056e-02, -2.5583e-03],
        [-1.2866e-01, -2.0135e-01, -9.2123e-03],
        [-3.6387e-02, -2.1092e-01,  1.4560e-01],
        [-9.8983e-03,  2.3524e-02, -1.1299e-01],
        [ 1.1804e-01,  1.7449e-02,  3.7057e-02],
        [-1.8038e-01,  1.8006e-01,  1.3197e-01],
        [-3.0468e-02, -1.0241e-01, -3.5863e-02],
        [-9.6578e-02, -1.5390e-01, -8.9451e-02],
        [ 9.1877e-02,  4.9277e-02,  9.4080e-02],
        [ 8.3243e-02,  1.3898e-01, -1.7202e-01],
        [-1.6688e-01,  1.7750e-01,  5.9446e-02],
        [-1.3061e-01,  5.2205e-02,  6.7633e-03],
        [ 4.8045e-03,  1.4255e-01, -1.7498e-01],
        [-4.2609e-02, -5.1178e-02, -2.6458e-02],
        [ 1.2772e-01, -1.4635e-01,  1.5907e-01],
        [ 1.5943e-02,  1.0799e-01, -4.4792e-02],
        [ 5.0258e-02,  2.0096e-01,  5.3040e-02],
        [-1.3634e-01, -1.0789e-01,  7.0349e-02],
        [-1.6390e-01,  1.8935e-01, -4.6285e-02],
        [-8.8560e-02,  2.0365e-01, -1.6917e-01],
        [ 2.9591e-02, -1.5913e-01,  1.8408e-02],
        [ 4.7682e-02,  1.4665e-01, -1.0205e-01],
        [ 9.5873e-02, -4.9774e-02, -4.6384e-02],
        [-1.6685e-01,  1.1466e-01, -9.5514e-02],
        [-1.6856e-01,  2.4268e-02,  1.1561e-01],
        [ 3.4552e-02, -8.6099e-02,  1.6799e-01],
        [ 7.6077e-02, -1.1366e-01,  7.3176e-02],
        [-7.7025e-02,  5.1969e-02,  2.2441e-02],
        [-7.6547e-02, -6.3007e-02,  2.1068e-01],
        [-7.4688e-02, -2.6806e-02, -1.1235e-01],
        [-2.0423e-01, -1.8626e-01,  1.4133e-01],
        [ 1.5990e-01, -5.3216e-02, -1.4267e-01],
        [-3.8223e-02,  1.2923e-02,  1.8806e-01],
        [-1.6206e-01, -9.7937e-02, -1.5791e-01],
        [ 1.0685e-01,  2.9744e-02, -6.7322e-02],
        [-4.1017e-02,  1.4046e-01, -9.1811e-02],
        [ 2.9852e-02,  1.5884e-02, -6.2929e-02],
        [-4.3199e-02, -1.1968e-01,  1.2413e-01],
        [ 8.9864e-02,  3.0258e-02,  1.5786e-01],
        [-1.4953e-01, -2.3936e-02,  1.4312e-01],
        [ 1.9453e-01,  7.5278e-02,  8.3704e-02],
        [-5.7679e-02, -1.0714e-01, -1.4370e-01],
        [ 1.6837e-01, -1.2894e-01,  1.1403e-01],
        [-4.2477e-02, -5.7978e-02, -2.2736e-02],
        [ 1.6988e-02,  2.2793e-02,  3.3433e-02],
        [ 1.2849e-01, -1.2842e-01,  2.1820e-01],
        [-9.7851e-02, -1.3926e-01, -1.3190e-02],
        [-8.2816e-02, -3.3873e-02, -3.0590e-02],
        [ 7.6045e-02,  7.3240e-02,  1.1705e-01],
        [ 2.2460e-02,  4.9810e-02, -7.9097e-02],
        [ 1.9722e-01, -1.3617e-01,  1.8584e-01],
        [ 5.8552e-02, -1.8391e-01,  1.6161e-01],
        [-5.9913e-02, -1.0874e-01, -7.0246e-02],
        [ 2.1331e-02, -2.2261e-01, -2.0245e-02],
        [-9.9998e-02, -5.0925e-02,  1.1952e-01],
        [ 6.5200e-02, -1.0881e-01,  9.8941e-02],
        [-1.9508e-01, -2.0243e-01,  1.4530e-01],
        [ 1.8589e-01, -2.1410e-01, -5.5058e-02],
        [-9.1292e-02,  8.9051e-02,  7.6225e-02],
        [ 1.8712e-01, -1.7778e-01,  1.6242e-01],
        [ 9.6379e-03,  8.8368e-03, -1.8075e-02]], device='cuda:0') torch.Size([128, 3])
recurrent_blocks.0.weight_hh_l0 tensor([[ 0.0365,  0.0771, -0.1077,  ...,  0.1210,  0.1544,  0.0819],
        [ 0.0131,  0.0511,  0.0612,  ...,  0.1016,  0.0255, -0.0586],
        [ 0.0530, -0.0573, -0.0430,  ..., -0.1699, -0.1804,  0.0049],
        ...,
        [-0.1390,  0.0404, -0.0386,  ..., -0.0998,  0.0620,  0.0135],
        [ 0.0630,  0.0220, -0.1366,  ...,  0.0228, -0.0820,  0.1879],
        [-0.0553,  0.1347, -0.0897,  ..., -0.1701, -0.0089, -0.0347]],
       device='cuda:0') torch.Size([128, 32])
recurrent_blocks.0.bias_ih_l0 tensor([-0.0920,  0.0918, -0.1459,  0.1456,  0.1326,  0.2190, -0.0971, -0.0014,
         0.1103,  0.0321, -0.1089,  0.1474, -0.2105,  0.0153,  0.1397,  0.1257,
         0.1064,  0.1173,  0.0155,  0.1301, -0.0035,  0.0453, -0.0772,  0.1455,
        -0.1119,  0.1987,  0.0838,  0.0176,  0.1010,  0.1269, -0.0834, -0.0248,
        -0.0132, -0.0671,  0.0798,  0.1665, -0.0044, -0.0744,  0.1035,  0.1032,
         0.0139,  0.0854,  0.1404,  0.1910, -0.1911,  0.0154,  0.0088, -0.0606,
         0.1196,  0.0326,  0.1205,  0.0438,  0.1058,  0.0436, -0.0531,  0.0780,
         0.1872,  0.0505,  0.1059, -0.1369, -0.0937,  0.1028,  0.0558,  0.0830,
        -0.0330,  0.1380, -0.1210,  0.1526,  0.1941,  0.0885,  0.0682,  0.0245,
        -0.1257,  0.0469,  0.2037,  0.1686,  0.0045,  0.0692,  0.0291, -0.1371,
         0.1362,  0.0978,  0.1160, -0.1666,  0.0418, -0.2384,  0.0230,  0.1574,
        -0.1920, -0.1842,  0.1808, -0.0362,  0.2463, -0.1900, -0.2062,  0.1712,
         0.0100,  0.1831,  0.0723,  0.1015, -0.0502,  0.0648, -0.1037,  0.0840,
        -0.0293,  0.0690,  0.2413,  0.1913, -0.0345,  0.0088, -0.0524,  0.0819,
        -0.0037, -0.0032,  0.0609, -0.1086,  0.0928,  0.1040,  0.0742, -0.0452,
        -0.0585,  0.1760,  0.0223, -0.0859,  0.1964, -0.0357,  0.1829, -0.0596],
       device='cuda:0') torch.Size([128])
recurrent_blocks.0.bias_hh_l0 tensor([-0.0004, -0.0233, -0.0203,  0.1311, -0.0801,  0.1906,  0.0832,  0.0729,
        -0.1511,  0.0259,  0.1692,  0.0533, -0.0315, -0.1842, -0.0555,  0.0280,
         0.0983,  0.1254, -0.1343,  0.1442,  0.0283,  0.2141,  0.0695,  0.1206,
         0.1485, -0.1264, -0.0856,  0.1356,  0.0505,  0.0457, -0.0084, -0.0941,
        -0.1520,  0.2001, -0.0685, -0.0784,  0.0567,  0.1127, -0.1175,  0.0151,
         0.1207,  0.0742,  0.0045,  0.2092, -0.1929,  0.0887,  0.0978,  0.0687,
        -0.0680, -0.1278,  0.0595, -0.0568,  0.1277,  0.0848, -0.0388,  0.1757,
        -0.1124,  0.1430,  0.0078,  0.1146,  0.1082,  0.1580, -0.0745,  0.0978,
        -0.0006,  0.2280, -0.1985,  0.0799,  0.0988, -0.0160, -0.1893,  0.1464,
         0.0485, -0.2226,  0.1400,  0.1853,  0.0248, -0.1439,  0.2498, -0.0508,
         0.1260,  0.1990,  0.1859, -0.1840,  0.1515,  0.0483, -0.1959,  0.0702,
        -0.0286, -0.1491,  0.1712,  0.1614, -0.0384, -0.0870, -0.0856,  0.1041,
         0.0070, -0.0918,  0.1741,  0.1690, -0.0173, -0.0535, -0.0080,  0.1654,
         0.1661,  0.2256,  0.1093,  0.0804, -0.0237, -0.0272,  0.0117,  0.0033,
         0.0205, -0.1208, -0.1058,  0.0393, -0.0244,  0.1849, -0.0266, -0.0356,
        -0.1270,  0.1689,  0.1077,  0.0116, -0.0253, -0.0344, -0.0529,  0.0848],
       device='cuda:0') torch.Size([128])
recurrent_blocks.0.weight_ih_l0_reverse tensor([[ 3.9618e-02, -1.9080e-01, -6.7267e-03],
        [ 2.6609e-02, -3.2261e-02, -3.1479e-02],
        [-4.0331e-02,  2.5622e-02,  7.9249e-02],
        [-1.5472e-01, -4.2193e-02,  1.1167e-01],
        [ 2.2511e-01,  1.6409e-01, -3.1324e-02],
        [-8.4594e-02, -6.6199e-02,  2.1019e-01],
        [ 5.9569e-02,  5.0449e-02, -8.3505e-02],
        [ 2.3967e-02,  3.0766e-02,  1.2809e-01],
        [ 6.8039e-02, -5.2311e-02, -1.0760e-01],
        [-7.4113e-02,  2.1245e-01, -2.4642e-01],
        [-8.8960e-02,  3.2169e-02,  6.5855e-02],
        [-1.6438e-01,  2.9620e-02, -1.8524e-01],
        [ 1.2439e-01,  7.3546e-02,  2.5899e-02],
        [-4.5429e-02, -3.2828e-02,  1.4164e-01],
        [ 9.3291e-02, -1.0632e-01,  1.0052e-02],
        [-5.1835e-02, -1.0250e-01,  8.6804e-03],
        [-8.5758e-02,  5.0519e-03,  3.7443e-02],
        [-9.1966e-02,  7.0260e-03, -7.3848e-02],
        [-2.0460e-01,  8.3396e-04, -7.5361e-02],
        [ 8.7082e-02, -1.0206e-01,  1.7360e-01],
        [-3.4436e-02,  1.0491e-01, -1.1054e-01],
        [-1.2301e-01, -1.3882e-01,  9.0672e-03],
        [-8.6314e-02,  9.4439e-02,  1.9287e-02],
        [ 1.5387e-02,  1.3197e-01, -1.4385e-01],
        [-1.8603e-01,  1.9071e-02,  4.9289e-03],
        [-2.0392e-01, -1.9839e-01,  3.2596e-02],
        [-5.4170e-02,  6.7108e-02, -9.5868e-02],
        [-2.1606e-01,  7.5904e-02,  8.5779e-02],
        [-6.4027e-02,  1.7959e-01,  2.3064e-01],
        [ 1.4356e-01,  4.4724e-02, -1.7458e-01],
        [-8.4133e-02,  1.4513e-01, -1.6293e-01],
        [-1.7411e-01, -1.9337e-01, -5.5119e-02],
        [-1.8742e-01, -9.0650e-02,  9.3424e-02],
        [-1.8603e-01,  3.8540e-02,  1.9158e-01],
        [-1.8684e-01,  1.5212e-01,  1.5212e-01],
        [ 1.7787e-04, -6.7876e-02, -1.1695e-01],
        [ 1.9553e-01,  1.0885e-01,  1.8691e-01],
        [-5.0577e-02,  6.2895e-02,  1.4577e-01],
        [ 9.5536e-02,  3.0848e-03,  1.0591e-01],
        [-1.7567e-01, -6.0719e-02,  8.8277e-02],
        [ 7.9898e-02,  8.9706e-03,  6.3211e-02],
        [ 1.8103e-01, -1.2441e-02, -1.5533e-01],
        [-2.1601e-01, -5.0332e-02, -1.2088e-01],
        [ 1.4554e-01,  1.6717e-01, -8.0621e-02],
        [ 5.6768e-02,  1.4170e-01,  7.1025e-02],
        [ 1.4565e-01, -1.6550e-01, -9.1108e-02],
        [-1.5841e-01,  1.1558e-01, -1.4409e-01],
        [ 3.4613e-02, -2.3694e-01, -1.0809e-02],
        [-1.4686e-01, -1.2047e-01, -2.0467e-01],
        [-8.6459e-02,  1.7849e-01,  1.6826e-01],
        [-7.2952e-03,  1.2967e-01,  1.3385e-01],
        [ 3.7417e-02, -1.1352e-01,  8.7568e-02],
        [-5.7177e-02, -8.6802e-02,  6.1229e-02],
        [ 3.2840e-03, -2.2533e-01,  2.3626e-01],
        [-8.4588e-02,  1.3668e-01, -1.8202e-01],
        [-4.4680e-02, -6.0047e-02,  1.2676e-01],
        [-5.4580e-02,  2.2138e-02,  1.4669e-01],
        [ 1.0509e-02, -1.0742e-01,  1.9934e-01],
        [-2.9750e-03,  7.7346e-02,  5.8086e-02],
        [-2.1257e-01,  1.3418e-02, -7.9440e-03],
        [-9.9004e-02,  1.0920e-01,  1.6285e-01],
        [-9.1555e-02, -5.1234e-03, -2.1816e-01],
        [-8.9418e-02,  1.7916e-02, -5.7754e-02],
        [-2.3255e-01,  7.8248e-02,  1.7340e-01],
        [ 1.7137e-01, -2.6648e-05, -1.8949e-01],
        [ 2.1485e-02, -1.4174e-01, -9.0077e-02],
        [-1.0309e-01, -4.5472e-03, -3.0965e-02],
        [-1.4578e-01, -9.7920e-02, -1.7606e-01],
        [-8.7871e-02, -8.6529e-02, -1.8138e-01],
        [ 2.0523e-02, -8.7276e-02,  3.2500e-02],
        [-4.4627e-02, -4.6506e-02, -2.2688e-01],
        [-1.4383e-01,  2.8791e-02,  1.8516e-01],
        [ 1.7311e-02,  2.1844e-01, -1.1574e-01],
        [-1.0257e-01, -2.2827e-01, -7.2858e-02],
        [-4.0392e-03,  3.5483e-02, -2.1760e-02],
        [-4.3428e-02, -7.9512e-02,  7.6789e-02],
        [-2.8754e-02,  2.2861e-02, -6.9691e-02],
        [-7.1242e-02, -3.5183e-02,  1.4008e-01],
        [-1.6924e-01, -1.5297e-01,  1.0107e-01],
        [ 8.5035e-02,  6.3233e-04,  7.8020e-02],
        [ 5.2318e-02, -1.3148e-01,  9.1535e-02],
        [ 4.3741e-02, -6.3866e-02, -8.1817e-02],
        [-3.4233e-02, -1.6435e-01,  2.0547e-01],
        [ 9.6576e-02,  1.6139e-01, -1.1732e-01],
        [ 1.4669e-01,  1.5315e-01, -2.0896e-01],
        [ 1.4154e-02, -1.6782e-01,  2.2466e-01],
        [ 6.8500e-02, -2.3821e-02,  1.3619e-01],
        [-7.3461e-02,  8.5710e-02,  1.2812e-01],
        [ 4.0673e-02, -1.4957e-02, -3.8151e-02],
        [ 1.1047e-01, -8.3597e-02,  7.6375e-02],
        [-1.3699e-01, -1.0843e-01, -1.1951e-01],
        [-1.3030e-01, -8.7028e-02,  2.1744e-01],
        [-6.4850e-02,  1.5060e-01,  1.6122e-01],
        [-1.2276e-01, -2.1798e-02, -1.4039e-01],
        [-1.6099e-01,  5.3302e-02,  2.0304e-01],
        [-9.7248e-02, -2.0024e-01,  1.5471e-01],
        [-3.8895e-02, -1.6221e-01,  1.1827e-01],
        [-5.5869e-02, -7.4968e-02,  4.7063e-02],
        [-1.1840e-01, -6.8878e-02,  7.0468e-02],
        [ 1.7593e-01, -1.8252e-02, -1.2778e-01],
        [ 7.5864e-02,  1.4925e-01, -5.1401e-02],
        [ 1.0798e-01, -2.1731e-01,  3.3218e-02],
        [-3.1811e-02,  2.7779e-02,  2.3702e-01],
        [ 5.1706e-02,  9.1542e-02,  8.9631e-02],
        [-3.0012e-02, -2.1740e-01,  7.7032e-02],
        [ 1.0400e-01,  4.5226e-02,  4.1007e-02],
        [ 3.3354e-02,  4.2030e-02,  1.8249e-01],
        [ 1.2602e-01, -9.3756e-02, -9.4072e-02],
        [ 1.6096e-01, -8.9827e-02,  1.3647e-01],
        [ 1.5285e-02, -1.5677e-01,  1.2243e-01],
        [ 9.9588e-02,  4.6558e-03,  1.5103e-01],
        [ 5.1896e-02, -1.1969e-01, -1.2807e-01],
        [ 1.5056e-01,  6.5163e-02, -2.0686e-01],
        [-1.6196e-01, -5.5695e-02,  9.5501e-02],
        [ 4.5875e-02,  6.8402e-02,  1.6815e-01],
        [ 1.3709e-01, -2.1741e-01, -5.6494e-02],
        [ 5.8127e-02,  6.0400e-02, -6.1203e-02],
        [-1.9586e-01, -3.7309e-02,  2.0697e-01],
        [ 9.9916e-02, -1.6116e-01,  1.1782e-02],
        [-1.4446e-01, -4.9484e-02, -1.6893e-03],
        [ 8.5560e-02, -9.7807e-02, -8.8016e-02],
        [-1.6591e-01,  1.0765e-01,  1.0237e-01],
        [ 4.6333e-03, -5.6148e-02, -8.5812e-03],
        [-1.1974e-01, -6.3095e-02,  8.5098e-02],
        [ 1.3280e-02, -3.6016e-02, -1.0828e-01],
        [ 1.3308e-01,  1.7279e-03,  1.2354e-02],
        [-7.1347e-03, -1.8572e-02,  9.8711e-02],
        [-5.2526e-02, -1.6787e-01, -8.3068e-02]], device='cuda:0') torch.Size([128, 3])
recurrent_blocks.0.weight_hh_l0_reverse tensor([[ 0.0162,  0.1286, -0.1383,  ..., -0.0679, -0.0541,  0.0578],
        [-0.0208, -0.0625,  0.2087,  ..., -0.1485,  0.0321,  0.0553],
        [-0.1870,  0.0317,  0.1986,  ...,  0.1909,  0.0140,  0.1218],
        ...,
        [ 0.1148,  0.1085, -0.0966,  ..., -0.1630, -0.0198,  0.0986],
        [ 0.0681,  0.1945,  0.1995,  ..., -0.0946,  0.1873,  0.0201],
        [ 0.0068, -0.0815,  0.0068,  ..., -0.0885,  0.2388,  0.0911]],
       device='cuda:0') torch.Size([128, 32])
recurrent_blocks.0.bias_ih_l0_reverse tensor([ 0.1712, -0.0530, -0.0370,  0.1088, -0.0106,  0.0891,  0.0963, -0.1257,
        -0.0565, -0.1513,  0.1252,  0.1309,  0.2181,  0.0808, -0.0637,  0.0681,
        -0.1247, -0.0488,  0.1930, -0.1013, -0.1038,  0.1930, -0.1765, -0.1648,
         0.1700, -0.0689,  0.1464, -0.0522,  0.1230,  0.0070, -0.0592,  0.1025,
         0.1506,  0.1694, -0.0181,  0.0431,  0.1297,  0.0628,  0.0885, -0.1287,
         0.1305, -0.0143, -0.1059, -0.0974, -0.0910,  0.1226,  0.0778,  0.0782,
        -0.1743, -0.0689, -0.0399,  0.2005,  0.0925,  0.2135,  0.1095, -0.0903,
         0.0109,  0.1332, -0.1130,  0.0947, -0.1121, -0.0146, -0.1848, -0.0346,
        -0.1729, -0.1293,  0.0969, -0.1355, -0.1808,  0.1552, -0.2202,  0.0910,
        -0.0490,  0.0578, -0.1628, -0.0030, -0.2468,  0.0590, -0.0022,  0.1360,
        -0.0121, -0.0110,  0.1498,  0.0719, -0.0979,  0.1726, -0.0901,  0.0254,
        -0.0194, -0.0759, -0.0793,  0.0083,  0.1242,  0.0619, -0.0429,  0.0900,
         0.0108,  0.1516,  0.1994, -0.1290,  0.1564, -0.0753,  0.2153,  0.1861,
        -0.0242, -0.1433,  0.1766, -0.1234,  0.2254,  0.0773, -0.1177,  0.0085,
         0.0535,  0.0401,  0.1579,  0.1611,  0.0475,  0.2102,  0.0362, -0.0619,
        -0.0480,  0.1821, -0.0976,  0.1478, -0.0662, -0.0881, -0.0952, -0.0245],
       device='cuda:0') torch.Size([128])
recurrent_blocks.0.bias_hh_l0_reverse tensor([ 0.1511,  0.1107,  0.0792, -0.1301, -0.0744,  0.0644,  0.0311,  0.0953,
         0.0293,  0.0126, -0.0418,  0.1078, -0.0660, -0.1213, -0.1091, -0.0869,
        -0.2197, -0.1061,  0.1328, -0.1199,  0.1099, -0.0651, -0.1736,  0.1194,
         0.0218, -0.0497,  0.0744,  0.0553,  0.0690,  0.0956, -0.1112,  0.0771,
        -0.0363,  0.1725,  0.0649,  0.1474,  0.0339,  0.0689,  0.0670, -0.0909,
         0.1730, -0.2225, -0.1309,  0.0725,  0.1520, -0.0791,  0.0578,  0.0360,
        -0.2106, -0.0563, -0.1243, -0.0850, -0.0367,  0.0308, -0.1238, -0.0295,
         0.0889, -0.0427,  0.1201, -0.0896, -0.0608,  0.0616, -0.0114,  0.1879,
        -0.1153, -0.1591,  0.0712,  0.0273, -0.0771,  0.0786,  0.0376, -0.0513,
        -0.1430, -0.0856, -0.0370,  0.1636, -0.2393,  0.1736,  0.1681,  0.0890,
        -0.0485, -0.2065, -0.1097, -0.1588, -0.0007,  0.0107,  0.0850, -0.0379,
        -0.1258, -0.1863, -0.0372,  0.2308,  0.1379, -0.0508,  0.0839,  0.0146,
         0.1476, -0.0843,  0.0010, -0.1856,  0.1787, -0.0745, -0.0376, -0.0588,
         0.1831, -0.0327,  0.0064, -0.1441,  0.0783, -0.0440, -0.1694,  0.1461,
         0.0595, -0.0953,  0.1188,  0.1763, -0.0832,  0.0585, -0.1888, -0.0207,
         0.0356, -0.0130, -0.0054, -0.0865,  0.1441,  0.0828,  0.0697,  0.0094],
       device='cuda:0') torch.Size([128])
recurrent_blocks.1.weight_ih_l0 tensor([[-0.1656,  0.0965,  0.0756,  ..., -0.0491,  0.2370, -0.0743],
        [-0.0740,  0.0568, -0.0177,  ...,  0.0194, -0.0781,  0.1923],
        [ 0.1810, -0.0748, -0.0486,  ..., -0.0579,  0.0012,  0.0855],
        ...,
        [ 0.1533, -0.0013,  0.0884,  ..., -0.1090,  0.0474,  0.1374],
        [ 0.0071,  0.2040,  0.0336,  ..., -0.2315,  0.0246,  0.0484],
        [-0.1927,  0.1693, -0.0558,  ..., -0.0461, -0.0436,  0.0416]],
       device='cuda:0') torch.Size([128, 64])
recurrent_blocks.1.weight_hh_l0 tensor([[-0.1562,  0.1774, -0.1532,  ...,  0.1231,  0.0776,  0.0283],
        [ 0.0672,  0.1609,  0.0400,  ...,  0.2173, -0.0983,  0.1175],
        [ 0.1959, -0.1139, -0.0653,  ...,  0.0474,  0.0753, -0.1063],
        ...,
        [ 0.0550, -0.0378, -0.0260,  ..., -0.0021, -0.1593, -0.1158],
        [ 0.0042,  0.1667, -0.0206,  ..., -0.1017, -0.1364,  0.0235],
        [ 0.1609, -0.0047,  0.0286,  ...,  0.1420, -0.1261,  0.0605]],
       device='cuda:0') torch.Size([128, 32])
recurrent_blocks.1.bias_ih_l0 tensor([ 0.0899,  0.1729,  0.1015, -0.0140,  0.1197, -0.0240,  0.0024, -0.0540,
         0.0751, -0.1274, -0.1104,  0.1428,  0.0008,  0.0825,  0.0616,  0.2444,
         0.1209,  0.1256, -0.0879,  0.2185,  0.0348, -0.0012,  0.0060, -0.1150,
         0.0875, -0.0306, -0.2043,  0.1558,  0.1431, -0.2238, -0.0495, -0.1017,
        -0.0100,  0.0880,  0.1192,  0.0594, -0.1251, -0.0948,  0.2147,  0.1968,
         0.0846, -0.0031,  0.0205, -0.0143,  0.0656, -0.1225,  0.0158,  0.0823,
         0.0830,  0.0773,  0.1719, -0.0648,  0.0743, -0.1240,  0.1776, -0.1492,
         0.0733,  0.0985, -0.1998, -0.0090,  0.0742,  0.1047,  0.0795,  0.0214,
         0.0161,  0.2486,  0.1113,  0.1115, -0.0381,  0.0887,  0.0568, -0.1941,
         0.0367,  0.0322, -0.0112, -0.0716,  0.0395,  0.1560, -0.0205, -0.1544,
        -0.1191, -0.0430, -0.0076,  0.0352,  0.1975, -0.0380,  0.0404,  0.0373,
        -0.1075, -0.0329, -0.0015, -0.1350,  0.0848, -0.0747,  0.1060,  0.1498,
         0.1039,  0.0297,  0.1517,  0.0098, -0.0694, -0.0007,  0.1368, -0.0815,
        -0.1116, -0.1288,  0.0927, -0.0072, -0.0078,  0.1220,  0.0399,  0.1569,
        -0.1449,  0.1005,  0.0137,  0.0483,  0.2368, -0.0743,  0.2028, -0.1213,
         0.1628, -0.0281,  0.0260, -0.0592,  0.1471, -0.0227, -0.1147,  0.0995],
       device='cuda:0') torch.Size([128])
recurrent_blocks.1.bias_hh_l0 tensor([-0.0470,  0.1747,  0.0653,  0.1533,  0.0214,  0.2141,  0.0333,  0.2065,
        -0.0364, -0.0563, -0.0449,  0.0140, -0.0255, -0.0032, -0.1335,  0.2221,
         0.1430,  0.1131,  0.0569, -0.0460,  0.2345,  0.1262,  0.2027, -0.1511,
         0.1433,  0.1390, -0.0455, -0.1112,  0.0380, -0.1876, -0.0104, -0.0848,
         0.0516, -0.1318,  0.0665, -0.0250, -0.0917,  0.0140, -0.0166,  0.0980,
         0.0119, -0.0861,  0.1485,  0.0379, -0.0235,  0.2085,  0.1632,  0.0192,
        -0.0724,  0.0356, -0.0267,  0.0963, -0.0151,  0.0217,  0.0978,  0.1106,
         0.1612, -0.0138, -0.1273,  0.1947, -0.0187, -0.1808,  0.0813, -0.1035,
         0.0988, -0.0737,  0.1841,  0.2035, -0.1675,  0.0414, -0.2314,  0.1141,
         0.1522, -0.1595, -0.0201, -0.0988, -0.0449,  0.0921,  0.1219, -0.0067,
        -0.0663, -0.0700,  0.1902,  0.1703,  0.2320, -0.0109, -0.1560,  0.1837,
        -0.1541, -0.1849,  0.1406, -0.0464,  0.1232,  0.0222, -0.0304, -0.0752,
        -0.0136,  0.1178,  0.0408,  0.1368,  0.0933, -0.0598,  0.1869, -0.0832,
        -0.0854,  0.0589,  0.1638, -0.0539, -0.0256, -0.0611, -0.1117,  0.0508,
        -0.1972,  0.1564,  0.1950,  0.2055,  0.1542, -0.0545, -0.0262, -0.1243,
         0.0053, -0.1245, -0.1142, -0.0918, -0.0602, -0.1311,  0.1379,  0.1616],
       device='cuda:0') torch.Size([128])
recurrent_blocks.1.weight_ih_l0_reverse tensor([[-0.0175,  0.0526, -0.0178,  ...,  0.0817, -0.1182,  0.0587],
        [ 0.0657,  0.0130,  0.0350,  ...,  0.1147, -0.0185,  0.0805],
        [-0.2288, -0.0900, -0.0078,  ..., -0.0926,  0.0781,  0.0743],
        ...,
        [-0.1531,  0.0905, -0.2160,  ..., -0.0447, -0.0235, -0.0777],
        [ 0.0521,  0.2190,  0.0059,  ..., -0.0760, -0.1320, -0.0890],
        [ 0.0201,  0.0535, -0.0932,  ..., -0.0554, -0.0682, -0.0526]],
       device='cuda:0') torch.Size([128, 64])
recurrent_blocks.1.weight_hh_l0_reverse tensor([[ 8.7058e-02,  7.1565e-02,  9.9228e-02,  ...,  1.3148e-01,
         -2.0866e-01, -1.6917e-01],
        [-3.7133e-02, -5.0093e-02, -1.0281e-02,  ...,  7.7601e-02,
         -6.8400e-02,  9.5888e-02],
        [-6.6260e-02, -1.0011e-01,  8.1297e-02,  ...,  1.1131e-01,
         -1.4906e-01,  6.0250e-02],
        ...,
        [ 1.4826e-01, -1.6842e-01,  1.1794e-01,  ..., -7.7713e-02,
          9.5543e-02, -1.0297e-01],
        [-5.5824e-02,  5.8924e-02,  9.0517e-02,  ..., -1.1130e-02,
          1.9093e-02,  4.8219e-02],
        [ 4.8785e-02, -1.5856e-01,  2.0077e-01,  ..., -1.5013e-04,
          1.8684e-01,  7.4800e-02]], device='cuda:0') torch.Size([128, 32])
recurrent_blocks.1.bias_ih_l0_reverse tensor([-0.1403,  0.1664,  0.0587, -0.1124,  0.0887,  0.0076,  0.2210,  0.1243,
         0.1246, -0.0272,  0.0517,  0.2414,  0.0882,  0.0602, -0.0236, -0.1489,
         0.1687,  0.0005,  0.0899,  0.1178,  0.1198, -0.0196,  0.1427, -0.1428,
        -0.1266, -0.0428,  0.1975,  0.0198,  0.0524,  0.0046,  0.0038, -0.0862,
         0.0953,  0.0174, -0.0387, -0.1487, -0.1018,  0.1401, -0.0790,  0.2005,
        -0.0772, -0.0618,  0.2308, -0.0339,  0.2199,  0.1379, -0.1004,  0.0713,
        -0.0324, -0.0542, -0.1828,  0.0657, -0.0794, -0.1060,  0.1832, -0.1385,
         0.0730,  0.0158,  0.2281,  0.0235,  0.0713,  0.1260,  0.1657,  0.1873,
        -0.0516, -0.0465,  0.2049, -0.1922, -0.0835, -0.0059, -0.1579,  0.1487,
        -0.2202,  0.0798,  0.0919, -0.0585, -0.2269, -0.1549,  0.0242,  0.1407,
        -0.0212,  0.0898, -0.1561, -0.0209, -0.0275, -0.0738,  0.0172, -0.1537,
        -0.0011,  0.0405,  0.1462,  0.1692, -0.1665, -0.1573, -0.0006, -0.0097,
         0.0619, -0.0994, -0.0673,  0.0315, -0.1969,  0.1316,  0.2258,  0.1439,
        -0.0949, -0.1106, -0.0478,  0.1512, -0.1063, -0.0664,  0.0270, -0.0945,
         0.1899,  0.0012, -0.1298,  0.1861,  0.1352, -0.0798,  0.1631,  0.0899,
        -0.1601,  0.1117,  0.0650, -0.0988,  0.0628,  0.0482, -0.0800,  0.2166],
       device='cuda:0') torch.Size([128])
recurrent_blocks.1.bias_hh_l0_reverse tensor([-0.1194,  0.0622, -0.0411,  0.0549, -0.1615,  0.1476,  0.0168,  0.0069,
         0.1951,  0.1418, -0.0206,  0.1636,  0.2113,  0.1312,  0.0033, -0.0712,
        -0.1046,  0.0578,  0.0388, -0.0286, -0.0110,  0.1757, -0.0517,  0.1704,
         0.0648, -0.0175,  0.1099, -0.0183, -0.0863,  0.1916, -0.0772, -0.0699,
        -0.1180,  0.0961, -0.1515,  0.1778,  0.0477, -0.0582, -0.0138,  0.0947,
         0.1488,  0.0161, -0.0373, -0.1005,  0.0744,  0.0812, -0.0363,  0.0777,
         0.2117, -0.1050,  0.0874, -0.0372,  0.0585,  0.0785,  0.0898, -0.1418,
        -0.1044, -0.0164,  0.0200,  0.0090,  0.0090,  0.1611,  0.1080,  0.1955,
        -0.0885, -0.1462, -0.0574, -0.1197, -0.0107,  0.1646, -0.0683,  0.0158,
        -0.0397, -0.1383,  0.1175,  0.2115, -0.0519, -0.0539, -0.1892,  0.1470,
        -0.0500,  0.1225,  0.1442, -0.1162,  0.1056,  0.1929,  0.0615, -0.1061,
         0.0039,  0.0690,  0.1872,  0.0185, -0.1230, -0.2064,  0.2398,  0.2466,
        -0.1722,  0.0199,  0.0214, -0.0289, -0.1059,  0.0787,  0.2350, -0.1062,
        -0.0461,  0.0537,  0.0437, -0.0443,  0.1659,  0.1353, -0.1056, -0.1461,
         0.0869,  0.1224, -0.1362,  0.0941,  0.1510,  0.1031,  0.1676,  0.1673,
         0.0003,  0.1237,  0.2334,  0.1920,  0.1298, -0.0878, -0.0416, -0.0772],
       device='cuda:0') torch.Size([128])
recurrent_blocks.2.weight_ih_l0 tensor([[-0.1241, -0.1076, -0.0249,  ..., -0.1320,  0.0165, -0.0535],
        [ 0.1366,  0.0741,  0.2488,  ...,  0.0174,  0.1528, -0.1310],
        [-0.0986,  0.1173,  0.1154,  ...,  0.1036,  0.0882,  0.1238],
        ...,
        [-0.1486, -0.0467,  0.2154,  ..., -0.1179, -0.0979, -0.0665],
        [-0.0864,  0.0695, -0.1117,  ..., -0.0038, -0.0750,  0.1997],
        [ 0.1003, -0.1287, -0.0680,  ...,  0.0147,  0.0993,  0.1132]],
       device='cuda:0') torch.Size([128, 64])
recurrent_blocks.2.weight_hh_l0 tensor([[-0.0988, -0.0891, -0.1381,  ..., -0.0186, -0.0039,  0.0782],
        [ 0.0949,  0.0147, -0.0861,  ..., -0.1180, -0.1087,  0.0731],
        [-0.0260, -0.1525, -0.0655,  ...,  0.1680, -0.1570, -0.1022],
        ...,
        [ 0.0134,  0.2151, -0.1290,  ...,  0.1473, -0.0418, -0.0337],
        [-0.0146, -0.0764, -0.0906,  ..., -0.1353, -0.0946, -0.0405],
        [-0.0644,  0.0914, -0.1368,  ...,  0.0722, -0.1195,  0.1538]],
       device='cuda:0') torch.Size([128, 32])
recurrent_blocks.2.bias_ih_l0 tensor([-0.0439,  0.1857, -0.0927, -0.0733,  0.1808,  0.1035, -0.1423,  0.0721,
         0.0711,  0.0056,  0.0836,  0.1065, -0.1025, -0.0515,  0.0544, -0.0739,
         0.0577,  0.0073,  0.1362, -0.1492,  0.0385, -0.0734, -0.0875, -0.1185,
        -0.0388, -0.0622,  0.2135, -0.1460,  0.0804, -0.0819, -0.0072,  0.0041,
         0.1205, -0.0115,  0.0059, -0.0762, -0.0680,  0.0735,  0.1983, -0.0595,
         0.0072,  0.1600, -0.0979, -0.0458,  0.1874,  0.1182,  0.0296,  0.0583,
         0.0980,  0.0837,  0.0318, -0.0884, -0.0413, -0.1522,  0.1687, -0.1471,
        -0.0787, -0.0909,  0.1972,  0.0104,  0.0112, -0.0966,  0.1880,  0.1674,
         0.0104,  0.1152, -0.1376,  0.0397, -0.0636,  0.1582, -0.1580,  0.0188,
         0.1879, -0.0829,  0.0444, -0.0450,  0.1587,  0.1147,  0.0078, -0.0819,
         0.0881, -0.0085,  0.0890, -0.1113,  0.1238,  0.0274, -0.1572, -0.0733,
         0.0960, -0.1875, -0.1404,  0.0071,  0.1408, -0.1952,  0.1841,  0.0706,
        -0.1723, -0.0464, -0.1225,  0.0281, -0.1127,  0.0596,  0.1917,  0.0392,
         0.1431,  0.1958, -0.1467,  0.1077,  0.1549,  0.1225, -0.0270,  0.2086,
        -0.0276, -0.0375,  0.2037,  0.0720,  0.1179, -0.0814, -0.0434, -0.2010,
        -0.0368,  0.1021, -0.0885,  0.0483,  0.2103, -0.1440, -0.0671,  0.1524],
       device='cuda:0') torch.Size([128])
recurrent_blocks.2.bias_hh_l0 tensor([-0.2035,  0.1969, -0.1401,  0.0362, -0.0558,  0.1227,  0.0613,  0.0836,
        -0.1004, -0.0852,  0.1132, -0.0970,  0.1012, -0.1252, -0.0335, -0.0211,
         0.1939,  0.1398,  0.1006, -0.1111, -0.0820, -0.0120, -0.0919,  0.0736,
         0.1678, -0.0446,  0.0724, -0.1503,  0.0817, -0.0418, -0.0444,  0.0596,
        -0.0687,  0.1342,  0.0543,  0.0268,  0.0203,  0.0638,  0.1771,  0.1010,
        -0.1233,  0.1666, -0.1621, -0.0729, -0.0636,  0.1114,  0.0724,  0.0270,
        -0.0228,  0.1399,  0.1195, -0.0416, -0.0901, -0.2228,  0.1080, -0.1051,
         0.1426, -0.1224,  0.1042, -0.0861,  0.2070,  0.0533, -0.0283, -0.0595,
         0.1312,  0.0457,  0.0046, -0.0392, -0.1137, -0.0263,  0.0286, -0.1608,
         0.1441, -0.0539, -0.1187,  0.1626,  0.1542, -0.0207, -0.0302, -0.1513,
         0.1225, -0.1782,  0.1400,  0.0644,  0.1298, -0.0320,  0.0597, -0.1346,
        -0.1491, -0.0422, -0.1673,  0.1577,  0.2102, -0.1676, -0.0243,  0.0549,
         0.1056,  0.0911, -0.1300, -0.0843, -0.0918,  0.1151,  0.1583,  0.0750,
        -0.1684,  0.0521,  0.0894, -0.1082,  0.2416,  0.0650,  0.1497,  0.1656,
        -0.0456,  0.0785,  0.0138,  0.1149, -0.1070, -0.0160,  0.1801, -0.0379,
         0.0215,  0.2192, -0.0727, -0.1817,  0.2487,  0.1599,  0.2074,  0.1518],
       device='cuda:0') torch.Size([128])
recurrent_blocks.2.weight_ih_l0_reverse tensor([[-0.0484, -0.0841,  0.1618,  ...,  0.0962, -0.0050,  0.0024],
        [ 0.1112,  0.1360,  0.1539,  ..., -0.1562, -0.0508,  0.0177],
        [ 0.1761,  0.1489,  0.0966,  ...,  0.0895,  0.1245, -0.1175],
        ...,
        [-0.1459, -0.1319, -0.1887,  ...,  0.1270,  0.0385,  0.0420],
        [-0.0660,  0.0184,  0.1189,  ..., -0.1897,  0.1188,  0.0130],
        [-0.1028,  0.0619,  0.0974,  ...,  0.0018,  0.0501,  0.1858]],
       device='cuda:0') torch.Size([128, 64])
recurrent_blocks.2.weight_hh_l0_reverse tensor([[ 1.4501e-01, -2.5145e-02, -2.0335e-02,  ..., -1.5826e-01,
         -1.8509e-01,  3.1940e-02],
        [-6.0533e-02,  8.7779e-03,  8.7285e-02,  ..., -1.0632e-01,
          2.1327e-02,  5.0484e-02],
        [-8.2479e-03,  4.9559e-02, -1.0930e-04,  ..., -1.4375e-01,
          1.4815e-01,  1.5668e-01],
        ...,
        [-3.1069e-02, -3.6112e-02, -1.5971e-02,  ..., -1.8576e-01,
          4.1199e-02,  1.0612e-01],
        [ 2.0538e-01, -2.7360e-02,  1.7625e-01,  ...,  6.0479e-02,
          1.8381e-01,  6.4706e-03],
        [ 2.0029e-02,  1.4517e-01,  1.7181e-01,  ..., -3.6145e-02,
          1.7452e-01, -1.3301e-02]], device='cuda:0') torch.Size([128, 32])
recurrent_blocks.2.bias_ih_l0_reverse tensor([-0.2049, -0.1451, -0.0140, -0.0936,  0.0979,  0.0529,  0.0114,  0.1032,
         0.1140,  0.0171,  0.0550,  0.0393, -0.0672,  0.0803, -0.0790,  0.0086,
         0.0430,  0.2287, -0.0130, -0.0108, -0.0611,  0.1173,  0.1118, -0.0539,
        -0.1039, -0.1551,  0.1083, -0.0861, -0.0968, -0.0597, -0.0520,  0.0243,
         0.0657,  0.0875, -0.0133,  0.0641, -0.2127,  0.1654,  0.0534,  0.1496,
         0.1898,  0.0925,  0.1677, -0.0210, -0.0657,  0.1641,  0.0070,  0.0943,
         0.2162, -0.0704, -0.0551,  0.0088, -0.1036,  0.0202,  0.1979,  0.0668,
        -0.0653, -0.1283, -0.0415, -0.0160, -0.0093,  0.1499,  0.1158,  0.0377,
        -0.1010,  0.0040,  0.1457, -0.1377, -0.0353,  0.2336, -0.1641, -0.0609,
        -0.0930, -0.0990,  0.1156, -0.0383, -0.0715,  0.1260, -0.0898,  0.1939,
        -0.2030,  0.1339, -0.1538, -0.0661, -0.1898,  0.0799,  0.1338,  0.0508,
         0.0455,  0.0938,  0.0657,  0.1912,  0.0342,  0.0538,  0.0707,  0.1626,
         0.1037,  0.0127,  0.0381,  0.1268,  0.1338,  0.1515, -0.0912,  0.1160,
        -0.0133, -0.0348, -0.1330,  0.2089,  0.1652,  0.1027,  0.1213, -0.0960,
         0.1744,  0.2255, -0.0719,  0.2131,  0.0492,  0.2237,  0.0393,  0.0195,
        -0.1672,  0.0006,  0.0159,  0.1982, -0.0206,  0.1376,  0.0903,  0.0546],
       device='cuda:0') torch.Size([128])
recurrent_blocks.2.bias_hh_l0_reverse tensor([ 0.1165,  0.0196, -0.0648,  0.0999,  0.0600,  0.2092,  0.0984,  0.0766,
         0.0987,  0.1029,  0.0905, -0.1153,  0.0429, -0.0751, -0.1561,  0.0077,
         0.0064,  0.1296,  0.0610,  0.0929, -0.1153,  0.0903,  0.1924, -0.2013,
        -0.2276,  0.1545,  0.1772,  0.1906,  0.1074,  0.1350,  0.1341,  0.0532,
         0.0799,  0.0497,  0.1572,  0.1503, -0.0578,  0.0178, -0.0234, -0.0435,
        -0.0010, -0.0196,  0.1175,  0.0371, -0.0413, -0.0722, -0.1429, -0.0677,
         0.2132,  0.1940, -0.0729,  0.0286, -0.0161,  0.2306,  0.1514,  0.1313,
        -0.0311, -0.0332,  0.1953, -0.0519,  0.1427, -0.0506,  0.2135,  0.2410,
         0.0752, -0.0537,  0.2012, -0.1539, -0.0342,  0.0087, -0.1496,  0.2043,
        -0.1845, -0.0051, -0.0825,  0.2020, -0.0544,  0.0218, -0.0243,  0.2004,
        -0.0093,  0.1069, -0.1199, -0.1459, -0.1379,  0.0620,  0.1928,  0.0903,
         0.0883, -0.1548, -0.0372,  0.1399, -0.0988,  0.1465,  0.1418,  0.1582,
        -0.0839,  0.1464, -0.1080, -0.1416,  0.1290, -0.0334, -0.0019,  0.1020,
         0.0170, -0.0567,  0.0584,  0.2419,  0.2316,  0.1656,  0.1225, -0.0798,
        -0.0834,  0.2121,  0.0785,  0.0970, -0.1073, -0.0681,  0.0324,  0.0922,
         0.0555, -0.0291, -0.0947, -0.0805,  0.1058, -0.1402, -0.0749,  0.0446],
       device='cuda:0') torch.Size([128])
recurrent_blocks.3.weight_ih_l0 tensor([[-0.0726,  0.1667, -0.1456,  ..., -0.1003, -0.0632,  0.1182],
        [ 0.0356,  0.0959, -0.1422,  ..., -0.1074,  0.1152,  0.0811],
        [ 0.0073,  0.0329,  0.0380,  ..., -0.0818,  0.1409,  0.1249],
        ...,
        [ 0.0689, -0.0966,  0.1625,  ..., -0.1677, -0.0489,  0.1925],
        [ 0.0804, -0.1639, -0.1638,  ...,  0.1185, -0.0470,  0.1623],
        [-0.0288, -0.1444,  0.0305,  ..., -0.0730, -0.0808, -0.0904]],
       device='cuda:0') torch.Size([128, 64])
recurrent_blocks.3.weight_hh_l0 tensor([[-0.0080,  0.1396, -0.1145,  ..., -0.0546,  0.1029,  0.1584],
        [ 0.1176,  0.0107, -0.0909,  ..., -0.0634, -0.0754, -0.0782],
        [-0.0085, -0.0175, -0.1099,  ..., -0.1935, -0.0355,  0.1236],
        ...,
        [-0.0802,  0.0818,  0.1097,  ..., -0.1778, -0.0038,  0.0147],
        [ 0.1265, -0.1178, -0.1125,  ..., -0.1968,  0.0728, -0.1410],
        [-0.1215, -0.0298,  0.1613,  ...,  0.0041, -0.0392,  0.2044]],
       device='cuda:0') torch.Size([128, 32])
recurrent_blocks.3.bias_ih_l0 tensor([ 0.0321, -0.0033,  0.0890, -0.2189, -0.0486,  0.2076,  0.1954, -0.1055,
         0.1416, -0.0722, -0.0029, -0.0913,  0.1368, -0.0126,  0.0838, -0.1393,
         0.1551,  0.1019,  0.1444, -0.0706, -0.0384,  0.1971,  0.0717, -0.1334,
        -0.0050, -0.0880,  0.0124,  0.1230, -0.0142, -0.1320, -0.0652, -0.1091,
         0.0452, -0.0728,  0.1226, -0.0708,  0.0782,  0.0435, -0.0071, -0.1981,
        -0.1016, -0.0470,  0.1032,  0.1629,  0.2339, -0.0634, -0.0316,  0.0517,
        -0.0935, -0.0668,  0.1606,  0.1213,  0.1014,  0.1452,  0.0073,  0.1594,
         0.1608,  0.1464,  0.1950, -0.1719, -0.0230,  0.0850, -0.0761, -0.0055,
         0.1614,  0.0068,  0.1122, -0.0068,  0.1288,  0.1461, -0.2064,  0.0774,
        -0.0888, -0.0250, -0.0337, -0.0583,  0.2155, -0.0352, -0.1035, -0.0217,
         0.1923,  0.0795,  0.0471, -0.1199, -0.0245, -0.1111, -0.1033, -0.0757,
        -0.1907, -0.1878,  0.0048,  0.0960,  0.1705,  0.1195,  0.1069, -0.0857,
         0.0662,  0.0493, -0.1115,  0.0490, -0.0257, -0.0171,  0.0079, -0.0454,
        -0.0833,  0.0527, -0.1575, -0.0642,  0.0586,  0.0649, -0.1673,  0.0274,
        -0.1387,  0.0650,  0.0576,  0.0679,  0.1870,  0.1664,  0.1307,  0.1668,
         0.1434,  0.2187,  0.0620,  0.1336, -0.1188,  0.1529,  0.1117, -0.0379],
       device='cuda:0') torch.Size([128])
recurrent_blocks.3.bias_hh_l0 tensor([-1.1512e-01,  7.7390e-02,  1.4169e-01,  9.1548e-02,  6.6867e-02,
        -3.7702e-02,  1.8955e-01,  1.9257e-02,  1.1316e-01,  1.2774e-01,
         6.5741e-02,  1.2380e-01, -8.6914e-02,  1.3925e-02,  1.3356e-01,
         1.3139e-01,  1.2261e-01,  1.1630e-01,  6.7284e-02,  6.2237e-02,
         1.0127e-01, -5.2046e-02,  1.0174e-01, -1.5382e-01, -4.2681e-02,
         3.3164e-02,  1.8986e-01, -1.1634e-01,  1.1220e-01, -1.1550e-01,
         1.1537e-01, -6.6641e-02, -1.3717e-01, -9.4324e-02,  1.2662e-01,
        -2.1064e-01, -9.0496e-03,  2.0968e-01,  2.3180e-01, -2.0886e-01,
         2.1408e-01,  1.2372e-01, -1.3850e-01,  4.6860e-02, -9.7962e-02,
         1.1330e-01, -2.2409e-02,  5.8181e-02,  1.9119e-01,  3.0535e-02,
         8.5851e-02, -1.9554e-01,  3.1125e-02, -2.4315e-02, -7.3654e-02,
         1.8450e-01,  1.0722e-01,  1.0348e-02, -9.6344e-02,  9.0374e-02,
        -5.5213e-02,  1.0872e-01,  1.5012e-01, -9.7011e-02, -7.7754e-05,
        -4.5086e-02,  8.4987e-03,  1.9507e-02, -1.1177e-01,  5.3013e-02,
         1.5575e-02,  2.8202e-02, -1.9760e-01, -1.9499e-01, -6.1822e-02,
         1.5039e-01,  7.9182e-02,  8.5486e-03, -9.0766e-02,  5.0027e-02,
         2.0264e-01, -5.6976e-02, -6.1575e-05,  1.3335e-01, -6.9627e-03,
        -1.1297e-01,  2.5992e-02,  4.9749e-02, -1.0265e-01, -7.0725e-02,
        -1.3812e-01,  6.7455e-03,  1.7553e-01, -1.7387e-01,  1.1519e-01,
        -1.4779e-01,  1.7697e-01,  2.1060e-01, -1.4689e-01,  1.0527e-01,
        -9.6122e-02,  5.3427e-02,  2.0254e-01, -2.0356e-01,  9.0899e-02,
         1.6914e-01, -7.1955e-02, -3.1481e-02, -1.0515e-01, -3.0478e-02,
         8.0270e-02, -1.8552e-01, -9.4494e-02,  2.2466e-02,  2.3609e-01,
        -1.1797e-01,  2.0993e-01,  2.0221e-01, -7.5027e-02, -1.1606e-02,
         7.3909e-02,  2.1611e-01, -5.3442e-02,  1.3227e-02, -7.9230e-02,
         1.3191e-01, -6.8536e-02, -1.1808e-01], device='cuda:0') torch.Size([128])
recurrent_blocks.3.weight_ih_l0_reverse tensor([[ 0.1798, -0.0072,  0.0704,  ...,  0.0874,  0.1731,  0.0053],
        [ 0.0237,  0.0131, -0.0978,  ...,  0.0028, -0.1274, -0.0544],
        [ 0.1563, -0.0645, -0.1194,  ...,  0.0096,  0.0307, -0.0174],
        ...,
        [ 0.1185,  0.1062,  0.0324,  ...,  0.0293, -0.0182,  0.0170],
        [-0.1072,  0.1363, -0.1955,  ..., -0.1168,  0.0661, -0.0825],
        [-0.1068,  0.0033, -0.1700,  ..., -0.0209,  0.0854, -0.0357]],
       device='cuda:0') torch.Size([128, 64])
recurrent_blocks.3.weight_hh_l0_reverse tensor([[ 0.1088,  0.1056,  0.0552,  ...,  0.2175, -0.1259, -0.0787],
        [-0.1033, -0.1131,  0.0871,  ...,  0.0345, -0.0423,  0.0018],
        [-0.0466,  0.1546,  0.0288,  ...,  0.0858,  0.1605, -0.0090],
        ...,
        [ 0.0169, -0.0194, -0.0030,  ..., -0.0969,  0.2139,  0.1800],
        [-0.0659,  0.0744,  0.0310,  ...,  0.0440,  0.0434,  0.2190],
        [-0.0700, -0.0980, -0.0500,  ...,  0.0908,  0.0396,  0.0239]],
       device='cuda:0') torch.Size([128, 32])
recurrent_blocks.3.bias_ih_l0_reverse tensor([-0.0072,  0.1514,  0.1363, -0.0735,  0.1711,  0.0754,  0.1717,  0.0240,
         0.1259, -0.0317, -0.0555, -0.0441,  0.1282,  0.1102, -0.0177,  0.1092,
         0.0556, -0.1134, -0.0029,  0.1289,  0.0605,  0.0465, -0.0062, -0.0442,
        -0.0033, -0.1027,  0.0418,  0.2283, -0.1285,  0.0433,  0.0198,  0.0040,
         0.0807,  0.0586,  0.2071, -0.0706, -0.0236, -0.0749,  0.0362, -0.2039,
        -0.1253, -0.0181, -0.0172,  0.1452, -0.1053,  0.1783, -0.1515, -0.0083,
        -0.0503,  0.1468, -0.0923,  0.1171,  0.1092,  0.0600, -0.0908,  0.1125,
         0.0854, -0.0193, -0.0440,  0.1481,  0.0279,  0.0575, -0.0843, -0.1047,
        -0.1613, -0.2094,  0.2244, -0.0394, -0.1590, -0.0636, -0.1072, -0.0097,
         0.1338, -0.0154, -0.0906,  0.0375, -0.1017, -0.1622,  0.0311, -0.1400,
        -0.1100,  0.2430,  0.1015, -0.0195,  0.1407, -0.0862,  0.1709, -0.1812,
         0.0200, -0.0260, -0.1172,  0.1690,  0.1227,  0.0607, -0.0906, -0.0596,
         0.1183, -0.0771,  0.0257, -0.0691,  0.2026, -0.1144,  0.0771, -0.1871,
        -0.0430,  0.1134,  0.1650,  0.1209, -0.0632,  0.1443,  0.0265, -0.0738,
        -0.1582, -0.0326,  0.1336, -0.1180, -0.0173,  0.1207,  0.0482, -0.0469,
        -0.0732, -0.0458, -0.1239,  0.1662,  0.1459, -0.2197,  0.0707, -0.0656],
       device='cuda:0') torch.Size([128])
recurrent_blocks.3.bias_hh_l0_reverse tensor([-0.0157, -0.0827, -0.0144, -0.0338, -0.0013, -0.1176,  0.1885,  0.0792,
         0.1507, -0.1759,  0.0668,  0.0187, -0.0214, -0.0584,  0.0338, -0.0468,
         0.1919, -0.0606,  0.1010,  0.1389,  0.1559,  0.1374,  0.1568, -0.0862,
        -0.0673,  0.1266, -0.0207, -0.0095, -0.0812, -0.0722,  0.0983,  0.1282,
        -0.1048, -0.1271,  0.2100,  0.0101,  0.0035,  0.0231,  0.1331, -0.0739,
         0.0482,  0.1212,  0.0384,  0.1685,  0.1190, -0.0949, -0.0461, -0.0559,
        -0.0014, -0.0585, -0.1603,  0.1259, -0.0618,  0.1525, -0.1029,  0.0940,
        -0.2255,  0.0329, -0.0729,  0.1561, -0.0064,  0.0819,  0.0903, -0.0143,
         0.1230,  0.0431, -0.1008,  0.0779, -0.2232,  0.0011, -0.2048,  0.2134,
        -0.0797,  0.0882,  0.2189, -0.0666,  0.0932, -0.1996, -0.1707, -0.0284,
         0.0674,  0.0393,  0.0935, -0.0398,  0.1518, -0.0969, -0.0870,  0.0813,
         0.0602, -0.1703,  0.1645,  0.0230, -0.1898,  0.0691, -0.0688, -0.0591,
        -0.0204,  0.0867, -0.0640, -0.1066, -0.1103,  0.1612,  0.1505, -0.0161,
        -0.0177, -0.0256, -0.0800, -0.1159,  0.0157,  0.0170,  0.0700, -0.0134,
         0.1619,  0.1198, -0.0897,  0.1432,  0.1470,  0.1276,  0.1316, -0.1069,
         0.0839,  0.0053, -0.0960,  0.1817,  0.1755,  0.0163,  0.0417, -0.1340],
       device='cuda:0') torch.Size([128])
fc_blocks.0.0.weight tensor([[ 0.0674,  0.0490, -0.0503,  ..., -0.0964, -0.0290, -0.0190],
        [ 0.0524,  0.0798, -0.0108,  ...,  0.0362, -0.0311,  0.0217],
        [ 0.0998,  0.1076,  0.0268,  ..., -0.1468,  0.1380,  0.1120],
        ...,
        [-0.0850,  0.0611,  0.0858,  ...,  0.1536,  0.0105,  0.0890],
        [-0.1743, -0.0509, -0.1148,  ...,  0.0488,  0.0124, -0.1571],
        [ 0.0998,  0.1640, -0.0292,  ...,  0.0313,  0.1791,  0.1085]],
       device='cuda:0') torch.Size([32, 64])
fc_blocks.0.0.bias tensor([ 0.0566,  0.1339,  0.1651, -0.1359, -0.1546, -0.0040, -0.0307,  0.1384,
        -0.0510,  0.0115, -0.0661, -0.0486, -0.1518, -0.0309, -0.1127,  0.0564,
         0.0756,  0.0894, -0.0291, -0.0526,  0.0469, -0.0409, -0.0332, -0.1659,
         0.1856, -0.0686,  0.0085,  0.0776, -0.0374, -0.0488,  0.0439,  0.0253],
       device='cuda:0') torch.Size([32])
fc_blocks.1.0.weight tensor([[-1.0285e-01,  3.3202e-02,  2.4552e-02,  1.8435e-01,  1.8246e-01,
          3.1401e-02, -9.5108e-02, -9.4822e-02,  9.7847e-02,  8.2493e-02,
          1.2615e-01, -6.2749e-02, -1.0049e-01, -1.0873e-01, -8.4750e-02,
         -1.5230e-01, -1.9555e-01,  7.4695e-02, -1.6003e-01, -1.1381e-01,
         -4.4679e-03,  1.3096e-01,  4.4755e-03,  7.3839e-02,  2.4407e-02,
          9.5449e-02,  1.1037e-01,  6.1532e-02, -5.0988e-02, -1.5189e-02,
         -1.0902e-01, -5.6252e-02],
        [ 9.5388e-03,  1.9320e-01,  1.4806e-01,  5.4844e-02, -8.7684e-02,
          1.0303e-01, -6.2714e-02,  1.1580e-01, -3.6936e-02, -1.7724e-01,
         -1.1048e-01, -1.1433e-01,  6.4737e-03, -2.4883e-02, -1.1467e-01,
         -1.2355e-02,  9.3727e-03,  1.7002e-01, -7.3688e-03, -1.5045e-01,
         -7.1162e-02, -1.8215e-01,  2.2784e-01, -1.6728e-01, -5.1400e-02,
          7.3953e-02,  8.2906e-02, -1.8707e-01,  5.2834e-03,  7.7515e-02,
         -1.8469e-01,  1.8789e-01],
        [ 9.4888e-02, -2.0926e-01, -6.3534e-02, -1.2800e-01, -1.1291e-01,
         -1.4912e-02, -1.0306e-01, -1.0857e-01,  1.9355e-02,  1.2604e-01,
          4.9826e-02, -9.8123e-02, -2.5762e-04,  1.2941e-01, -7.2032e-02,
         -1.9517e-01, -7.9619e-02,  1.0185e-01,  1.3522e-01, -1.0523e-01,
          1.3053e-02,  9.1419e-02,  1.3364e-02,  1.1104e-01,  3.0802e-03,
          4.4351e-02, -1.3489e-02, -1.6776e-01, -1.9755e-01,  1.3340e-02,
          1.0154e-01, -1.0933e-01],
        [ 1.9630e-01,  1.2227e-01,  1.1978e-01, -3.2390e-02, -6.3980e-02,
          2.2031e-02,  2.2349e-01,  1.8456e-01, -4.5209e-02,  7.2211e-03,
          5.6225e-02, -8.3930e-02, -1.4883e-01,  3.7641e-02, -1.6057e-01,
          1.9416e-01,  2.3319e-01,  1.3787e-01, -5.5636e-02,  1.2756e-01,
         -1.1541e-01,  9.0847e-02,  1.4113e-01,  4.5278e-02,  1.0111e-01,
          1.3162e-01,  9.8732e-02,  4.6967e-02, -5.6754e-03, -1.0532e-01,
         -7.0327e-02,  1.8256e-01],
        [-7.5901e-02,  2.9298e-02,  8.7050e-02, -1.4503e-01, -2.0494e-01,
         -1.0492e-01, -2.4646e-02, -3.6866e-02, -6.1031e-02,  8.4982e-02,
          1.0353e-01,  3.1745e-02, -5.9369e-02,  1.5575e-01, -2.1716e-01,
          2.3870e-01,  6.2135e-02, -9.9091e-02, -1.3550e-01, -1.1211e-01,
          2.2466e-02,  1.7785e-02, -5.6977e-02,  1.2558e-02,  8.6935e-02,
          8.8610e-02, -1.6740e-01,  6.0331e-03,  1.6326e-01, -9.6926e-04,
          3.0187e-02,  1.5819e-01],
        [-2.4626e-02,  3.9185e-02,  1.2788e-01,  6.7022e-02,  8.2988e-02,
          3.2313e-03,  1.6225e-01, -6.9928e-02,  1.5709e-01,  2.4711e-02,
          1.9180e-01,  7.0310e-02, -1.6251e-01,  1.6226e-04,  2.0040e-01,
          1.0129e-01,  8.6975e-02, -8.9769e-02,  1.9052e-02, -1.1576e-02,
          1.3657e-01,  4.8946e-02, -7.8431e-02,  2.0495e-02,  4.4730e-03,
         -4.1691e-02, -1.1093e-01, -1.4083e-02,  1.2521e-01,  1.5172e-01,
         -7.0411e-03, -1.1192e-01],
        [-1.3987e-01, -2.1262e-01, -3.8933e-02,  7.0413e-02,  8.8485e-02,
          7.3100e-02, -1.2112e-01,  2.0035e-03,  1.1732e-01, -1.6187e-01,
         -5.4117e-02, -9.8980e-02, -1.4254e-01, -4.0880e-02,  9.7961e-02,
         -2.8275e-02, -1.4141e-01,  8.2799e-02,  1.4570e-01,  9.5094e-02,
          9.3395e-02, -8.9040e-02,  9.7192e-02, -4.1220e-04, -6.4721e-02,
         -1.0954e-02,  9.9209e-02, -5.7149e-02,  1.9150e-01, -1.2224e-01,
          5.7297e-02,  6.5129e-02],
        [ 1.4951e-01, -1.4474e-01, -8.9604e-02,  1.1369e-01, -5.4248e-02,
         -1.1602e-02, -1.1933e-02, -7.9363e-03,  2.7340e-02,  5.2062e-02,
          1.8202e-01,  8.8651e-02, -7.7923e-02,  1.3111e-01, -3.6094e-02,
          3.1432e-02,  6.9138e-02,  1.3231e-01, -8.7554e-02,  4.7507e-02,
          2.1619e-01,  5.2949e-02, -2.3611e-02,  2.2493e-01,  6.6296e-02,
         -9.7783e-02,  1.2795e-01,  1.6001e-01, -1.2961e-01,  1.3111e-01,
          1.1589e-01, -6.0463e-02],
        [-1.6374e-01, -6.3097e-02,  1.0782e-01, -6.0149e-02,  1.8248e-01,
          1.1400e-01,  4.1110e-02, -6.4393e-02,  4.2985e-02,  5.8521e-02,
          1.1889e-01,  1.2231e-01,  1.6520e-01,  9.8884e-03,  1.4197e-01,
          3.4356e-02, -3.9177e-02,  3.0050e-02, -7.1098e-02, -3.6095e-02,
          1.1164e-01,  1.0768e-01, -1.7820e-01,  9.0376e-02,  1.3286e-01,
         -7.1179e-03,  1.0224e-01,  7.4638e-02,  1.2093e-01,  1.2630e-01,
         -7.9879e-02,  4.8894e-02],
        [-8.5482e-02,  5.2004e-02, -1.3571e-01,  1.9768e-01,  2.0177e-01,
          1.4145e-01, -1.9706e-01, -1.0255e-01,  3.4665e-02, -2.4970e-02,
          6.9076e-02, -1.2247e-03,  7.2753e-02, -9.1815e-02,  8.3988e-02,
         -7.3053e-02,  7.8489e-02, -1.5977e-01,  3.7542e-02,  1.6474e-02,
          1.1006e-02, -9.0941e-02,  1.8317e-02, -9.3975e-02, -1.8099e-01,
         -1.0694e-02,  7.8574e-02, -5.5200e-03,  1.2364e-01, -7.6433e-02,
          1.6521e-01,  6.8150e-03],
        [-6.4362e-02, -2.5054e-02,  1.3751e-01, -2.1960e-01,  5.3156e-02,
          4.7596e-02, -1.0299e-01,  1.9339e-01,  2.0070e-01, -3.0641e-02,
          9.7333e-02, -1.3883e-01, -1.5399e-01,  1.4440e-01, -1.5253e-01,
          1.5952e-01,  2.5555e-01,  1.5157e-01,  6.8659e-02,  1.3260e-01,
          1.7530e-01, -8.6007e-02,  4.0279e-02, -8.5492e-02,  2.1362e-01,
          1.0704e-01, -1.3374e-01, -1.2923e-01,  1.3658e-02, -6.8996e-02,
         -2.2161e-01,  1.0254e-01],
        [ 1.3850e-01,  6.9524e-02,  6.6387e-02, -9.7381e-02,  2.1787e-02,
         -1.4199e-01,  1.3148e-01,  2.2035e-01,  1.5553e-01,  1.5187e-01,
          7.3130e-02, -2.8756e-02, -3.2786e-02,  3.4021e-02, -6.3067e-02,
         -1.1456e-01, -6.9492e-02,  1.2431e-01,  9.6613e-02, -5.2800e-02,
          1.1260e-01,  7.4291e-02,  2.2369e-01, -1.4660e-02, -1.0742e-04,
          1.9525e-01,  4.6950e-02,  1.7482e-01, -1.5625e-01, -1.5964e-01,
          1.4796e-01,  1.6522e-01],
        [-8.1960e-02,  1.7145e-01, -6.2238e-02,  1.6104e-01, -1.2086e-01,
          1.2268e-01,  5.9819e-02,  1.2881e-01,  1.2111e-01, -8.5966e-02,
         -9.1211e-02, -1.0921e-01,  1.4198e-01,  5.8160e-02,  1.6243e-01,
         -5.9296e-02, -7.6344e-02,  1.5039e-01, -1.0012e-01, -1.5133e-01,
          8.2168e-02,  9.9324e-02, -1.3038e-01, -9.4788e-02,  8.2147e-02,
         -2.4427e-02,  1.5630e-01, -7.6877e-02,  6.6510e-02,  1.4498e-01,
          3.2781e-02,  1.5042e-01],
        [-8.9118e-02,  8.1243e-02,  8.5072e-02, -1.4415e-01,  1.1560e-02,
          7.6123e-02, -1.6715e-01,  2.9946e-02, -8.4436e-02, -1.3794e-01,
          1.1374e-01, -1.3171e-02,  1.5242e-01,  6.6366e-02,  1.7400e-01,
         -2.2784e-01, -2.1069e-01,  1.0869e-01, -5.2667e-03,  5.2874e-03,
          6.1225e-02, -1.0916e-01, -8.6171e-02,  7.6617e-02, -4.2618e-02,
          7.6150e-02,  5.7475e-02, -2.9491e-02, -3.1346e-02,  7.9789e-02,
         -5.7273e-02, -1.5474e-01],
        [-1.2550e-01, -1.7732e-01, -8.4715e-02,  7.6741e-02,  6.0301e-02,
         -5.6932e-02,  1.2156e-01, -2.4316e-02, -1.4711e-02, -2.0638e-01,
         -1.4744e-01, -1.8698e-01,  2.2742e-02, -6.1128e-02, -3.9089e-02,
         -2.5296e-02,  6.4836e-02, -8.4237e-02,  6.6936e-02,  9.6151e-02,
          1.5624e-02, -4.2894e-02, -1.3558e-01, -1.7827e-01, -1.3163e-01,
         -6.0162e-02, -8.8479e-02,  2.5379e-02, -4.7239e-02, -5.4479e-02,
          2.5030e-02, -1.3691e-01],
        [-2.1780e-01, -8.1862e-02, -2.2030e-01,  4.5841e-02,  1.8884e-01,
          2.8937e-02,  3.9042e-02,  1.1300e-01,  1.0221e-01, -1.1848e-02,
         -1.5762e-01,  1.9128e-01,  1.4365e-01, -7.2146e-02,  1.0776e-02,
          6.7211e-02,  1.1890e-01,  8.8317e-02,  1.2830e-01,  1.1838e-01,
         -8.6853e-02,  1.8391e-01,  8.2642e-02,  2.0207e-03, -1.7257e-01,
          1.5303e-01,  8.0737e-02,  5.7413e-02, -7.9502e-02, -8.8990e-02,
          1.7390e-01, -1.2647e-01]], device='cuda:0') torch.Size([16, 32])
fc_blocks.1.0.bias tensor([ 0.0987,  0.1256, -0.1176,  0.1939,  0.0200,  0.0338, -0.0733, -0.1090,
        -0.1020,  0.0050,  0.0581,  0.1998,  0.0111,  0.0074,  0.0489, -0.1731],
       device='cuda:0') torch.Size([16])
fc_blocks.2.0.weight tensor([[-0.0442,  0.1754, -0.1709,  0.1706,  0.1271,  0.0926, -0.0311,  0.0742,
         -0.0622, -0.0350,  0.2099,  0.1379,  0.0927, -0.0878, -0.1556, -0.1990],
        [-0.1918,  0.1680, -0.0531, -0.1191, -0.0727, -0.0476, -0.0229, -0.0005,
          0.1563, -0.1580, -0.0037, -0.1316, -0.1021, -0.1807, -0.0991, -0.2312],
        [ 0.0528, -0.0181,  0.1466, -0.0297,  0.2705,  0.0417, -0.1377,  0.2953,
         -0.2756, -0.0177, -0.1458, -0.0529,  0.0783, -0.0376, -0.0347,  0.1024],
        [ 0.0638, -0.1656,  0.1505, -0.1906, -0.1724,  0.0778, -0.2547,  0.1600,
         -0.0447,  0.0082,  0.0036, -0.1110,  0.1883,  0.1262,  0.1499,  0.2045],
        [-0.2738, -0.2788,  0.0909, -0.0013,  0.0629,  0.3019,  0.1385, -0.2891,
          0.0638,  0.1528, -0.0904,  0.1414, -0.0913, -0.0813,  0.1309, -0.2378],
        [ 0.0447,  0.0805,  0.2362,  0.0075, -0.0233,  0.0955,  0.0061, -0.1261,
          0.2011, -0.2125,  0.1447,  0.1289, -0.1263, -0.1460,  0.2085,  0.1028],
        [ 0.0562,  0.0501, -0.2991,  0.0398,  0.1934, -0.0281,  0.0262, -0.0894,
          0.1190, -0.2351,  0.1976, -0.0992, -0.1301, -0.1993,  0.1276, -0.2762],
        [-0.2782, -0.2403, -0.2334,  0.0425, -0.0098,  0.2990, -0.2037,  0.0246,
          0.0541,  0.1525,  0.0895,  0.1302, -0.2409, -0.0286, -0.1437, -0.0388]],
       device='cuda:0') torch.Size([8, 16])
fc_blocks.2.0.bias tensor([ 0.2895, -0.0142, -0.2330, -0.1493, -0.2951, -0.0510, -0.0892, -0.1563],
       device='cuda:0') torch.Size([8])
fc_blocks.3.0.weight tensor([[ 0.2437,  0.2603,  0.1069, -0.0077, -0.1733,  0.1882,  0.0870, -0.2297],
        [-0.1871,  0.0257,  0.2569, -0.0704,  0.2140,  0.1271,  0.2600,  0.1321],
        [ 0.1564, -0.0041, -0.0278, -0.1913, -0.1442,  0.1390,  0.0358, -0.1031],
        [ 0.0654,  0.3566, -0.0416,  0.3226,  0.1828,  0.0476,  0.2773,  0.2520]],
       device='cuda:0') torch.Size([4, 8])
fc_blocks.3.0.bias tensor([ 0.2774,  0.0045,  0.4143, -0.3983], device='cuda:0') torch.Size([4])
fc_blocks.4.0.weight tensor([[-0.2027,  0.0417,  0.2410, -0.5634],
        [ 0.5086, -0.2042,  0.0724, -0.5191]], device='cuda:0') torch.Size([2, 4])
fc_blocks.4.0.bias tensor([-0.3009, -0.4028], device='cuda:0') torch.Size([2])
Train Loss : 142.387, Val Loss : 2466.264
======> Trajectory Loss : 36.154, Gravity Loss : 0.000, EndOfTrajectory Loss : 1.003, BelowGroundPenalize Loss : 5.926
===> [Minibatch 10/129].........recurrent_blocks.0.weight_ih_l0 tensor([[ 0.1648,  0.0470, -0.1112],
        [-0.0921, -0.0500,  0.2056],
        [ 0.0524,  0.0756,  0.1102],
        [ 0.0149, -0.1040,  0.0747],
        [-0.0354, -0.0912, -0.0721],
        [ 0.0158, -0.1507,  0.1771],
        [-0.0610, -0.1795,  0.1845],
        [ 0.1291,  0.1578, -0.0443],
        [-0.1352, -0.1285, -0.0021],
        [ 0.1453,  0.0664,  0.1371],
        [-0.1254, -0.2145,  0.0807],
        [-0.0205,  0.1170, -0.0130],
        [-0.1230,  0.1844,  0.0548],
        [-0.1364, -0.1173,  0.1339],
        [-0.1653,  0.0432, -0.0471],
        [-0.1070, -0.0223,  0.2323],
        [ 0.0528, -0.1696, -0.0797],
        [ 0.0973,  0.1267,  0.0057],
        [-0.0587, -0.0135, -0.0252],
        [-0.2180, -0.2076, -0.0073],
        [-0.0858,  0.0503,  0.1909],
        [ 0.0659,  0.0189,  0.2392],
        [ 0.0075, -0.0987, -0.1011],
        [ 0.0308, -0.1585, -0.0025],
        [-0.1365, -0.1717,  0.0666],
        [-0.2004, -0.1604, -0.0467],
        [-0.0883,  0.1388,  0.1199],
        [ 0.0954, -0.2096, -0.1576],
        [ 0.0518, -0.0995,  0.1275],
        [-0.1571, -0.0761,  0.1732],
        [ 0.0538, -0.1218, -0.1241],
        [-0.0082, -0.0146, -0.0084],
        [-0.1218,  0.0794, -0.1877],
        [ 0.0385,  0.0104,  0.0257],
        [-0.0193,  0.1653,  0.0782],
        [ 0.2007,  0.1020, -0.0473],
        [-0.1334, -0.0119,  0.0861],
        [-0.0431, -0.1450, -0.1178],
        [-0.0633, -0.1819,  0.0894],
        [ 0.1533,  0.1154,  0.1599],
        [ 0.1789, -0.0834, -0.0206],
        [ 0.0580,  0.0974, -0.0859],
        [-0.1151,  0.0799,  0.1223],
        [ 0.2034,  0.1006,  0.2463],
        [-0.1227,  0.0133, -0.1723],
        [-0.0158, -0.0780, -0.1351],
        [-0.1023, -0.0553,  0.1494],
        [-0.1308, -0.0124, -0.0193],
        [ 0.0658, -0.1107,  0.0300],
        [-0.0006, -0.1819,  0.1108],
        [-0.2101,  0.1369,  0.0579],
        [-0.0493, -0.1849,  0.0040],
        [-0.1921, -0.0725,  0.2211],
        [ 0.0763, -0.0400,  0.1157],
        [-0.0870, -0.1748,  0.1887],
        [ 0.1821,  0.0874,  0.2159],
        [-0.2072, -0.0346, -0.0933],
        [ 0.0505, -0.1763, -0.1110],
        [ 0.0353,  0.1459, -0.0214],
        [-0.0239, -0.0892,  0.1440],
        [ 0.1553,  0.0376,  0.2341],
        [-0.1979, -0.1132, -0.0055],
        [-0.0769,  0.0170, -0.0655],
        [-0.0477, -0.2118, -0.0084],
        [ 0.0430,  0.0817,  0.0059],
        [-0.1472,  0.0596, -0.0408],
        [-0.0463, -0.1715, -0.1995],
        [ 0.0744,  0.0887,  0.0032],
        [-0.1293, -0.2060, -0.0043],
        [-0.0347, -0.2167,  0.1516],
        [-0.0094,  0.0306, -0.1193],
        [ 0.1211,  0.0168,  0.0415],
        [-0.1837,  0.1844,  0.1289],
        [-0.0359, -0.0964, -0.0419],
        [-0.0924, -0.1579, -0.0834],
        [ 0.0873,  0.0428,  0.1003],
        [ 0.0820,  0.1325, -0.1712],
        [-0.1692,  0.1803,  0.0576],
        [-0.1256,  0.0462,  0.0129],
        [ 0.0006,  0.1468, -0.1811],
        [-0.0377, -0.0554, -0.0200],
        [ 0.1266, -0.1507,  0.1650],
        [ 0.0125,  0.1015, -0.0391],
        [ 0.0469,  0.2057,  0.0471],
        [-0.1309, -0.1097,  0.0763],
        [-0.1612,  0.1901, -0.0527],
        [-0.0853,  0.2109, -0.1748],
        [ 0.0285, -0.1650,  0.0240],
        [ 0.0472,  0.1527, -0.1083],
        [ 0.0926, -0.0433, -0.0526],
        [-0.1625,  0.1123, -0.0903],
        [-0.1663,  0.0186,  0.1198],
        [ 0.0374, -0.0919,  0.1744],
        [ 0.0793, -0.1065,  0.0672],
        [-0.0740,  0.0564,  0.0168],
        [-0.0717, -0.0667,  0.2169],
        [-0.0721, -0.0221, -0.1182],
        [-0.2067, -0.1937,  0.1467],
        [ 0.1649, -0.0543, -0.1381],
        [-0.0330,  0.0058,  0.1937],
        [-0.1656, -0.0987, -0.1548],
        [ 0.1015,  0.0218, -0.0639],
        [-0.0442,  0.1324, -0.0885],
        [ 0.0327,  0.0183, -0.0603],
        [-0.0405, -0.1250,  0.1269],
        [ 0.0921,  0.0260,  0.1633],
        [-0.1516, -0.0319,  0.1489],
        [ 0.1994,  0.0676,  0.0893],
        [-0.0520, -0.1060, -0.1512],
        [ 0.1738, -0.1320,  0.1131],
        [-0.0478, -0.0656, -0.0177],
        [ 0.0133,  0.0146,  0.0389],
        [ 0.1236, -0.1371,  0.2236],
        [-0.0919, -0.1457, -0.0076],
        [-0.0843, -0.0411, -0.0260],
        [ 0.0710,  0.0666,  0.1223],
        [ 0.0165,  0.0419, -0.0742],
        [ 0.2027, -0.1450,  0.1910],
        [ 0.0626, -0.1912,  0.1661],
        [-0.0549, -0.1164, -0.0660],
        [ 0.0173, -0.2310, -0.0163],
        [-0.1031, -0.0584,  0.1250],
        [ 0.0585, -0.1064,  0.1008],
        [-0.2003, -0.2080,  0.1473],
        [ 0.1896, -0.2221, -0.0498],
        [-0.0977,  0.0825,  0.0807],
        [ 0.1922, -0.1790,  0.1673],
        [ 0.0046,  0.0005, -0.0130]], device='cuda:0') torch.Size([128, 3])
recurrent_blocks.0.weight_hh_l0 tensor([[ 0.0395,  0.0693, -0.0998,  ...,  0.1295,  0.1632,  0.0741],
        [ 0.0103,  0.0567,  0.0555,  ...,  0.0965,  0.0202, -0.0531],
        [ 0.0562, -0.0528, -0.0474,  ..., -0.1736, -0.1841,  0.0090],
        ...,
        [-0.1408,  0.0439, -0.0415,  ..., -0.1016,  0.0596,  0.0164],
        [ 0.0623,  0.0256, -0.1404,  ...,  0.0208, -0.0844,  0.1910],
        [-0.0585,  0.1389, -0.0935,  ..., -0.1729, -0.0124, -0.0309]],
       device='cuda:0') torch.Size([128, 32])
recurrent_blocks.0.bias_ih_l0 tensor([-0.0979,  0.0978, -0.1410,  0.1517,  0.1361,  0.2234, -0.0927,  0.0017,
         0.1135,  0.0380, -0.1028,  0.1537, -0.2193,  0.0145,  0.1456,  0.1318,
         0.1124,  0.1230,  0.0209,  0.1353,  0.0022,  0.0512, -0.0722,  0.1505,
        -0.1063,  0.2043,  0.0852,  0.0196,  0.1068,  0.1320, -0.0791, -0.0190,
        -0.0181, -0.0612,  0.0845,  0.1724, -0.0016, -0.0707,  0.1073,  0.1061,
         0.0167,  0.0911,  0.1464,  0.1972, -0.1991,  0.0142,  0.0147, -0.0545,
         0.1255,  0.0381,  0.1257,  0.0489,  0.1112,  0.0494, -0.0489,  0.0825,
         0.1923,  0.0559,  0.1067, -0.1352, -0.0883,  0.1075,  0.0598,  0.0885,
        -0.0336,  0.1441, -0.1259,  0.1583,  0.1990,  0.0945,  0.0619,  0.0288,
        -0.1288,  0.0408,  0.2097,  0.1748,  0.0052,  0.0676,  0.0352, -0.1432,
         0.1426,  0.1038,  0.1216, -0.1725,  0.0477, -0.2448,  0.0173,  0.1630,
        -0.1983, -0.1905,  0.1859, -0.0320,  0.2527, -0.1960, -0.2118,  0.1774,
         0.0042,  0.1885,  0.0768,  0.1072, -0.0470,  0.0682, -0.1003,  0.0866,
        -0.0264,  0.0744,  0.2472,  0.1969, -0.0425,  0.0079, -0.0473,  0.0874,
         0.0017,  0.0024,  0.0655, -0.1033,  0.0978,  0.1092,  0.0788, -0.0409,
        -0.0544,  0.1815,  0.0239, -0.0839,  0.2016, -0.0312,  0.1877, -0.0545],
       device='cuda:0') torch.Size([128])
recurrent_blocks.0.bias_hh_l0 tensor([-0.0063, -0.0173, -0.0154,  0.1371, -0.0766,  0.1950,  0.0876,  0.0761,
        -0.1479,  0.0318,  0.1753,  0.0596, -0.0402, -0.1850, -0.0495,  0.0341,
         0.1044,  0.1311, -0.1289,  0.1495,  0.0339,  0.2200,  0.0745,  0.1255,
         0.1542, -0.1208, -0.0842,  0.1375,  0.0563,  0.0508, -0.0040, -0.0883,
        -0.1569,  0.2059, -0.0638, -0.0724,  0.0595,  0.1164, -0.1136,  0.0180,
         0.1236,  0.0799,  0.0105,  0.2154, -0.2009,  0.0875,  0.1037,  0.0748,
        -0.0622, -0.1222,  0.0647, -0.0517,  0.1331,  0.0906, -0.0347,  0.1802,
        -0.1074,  0.1484,  0.0087,  0.1163,  0.1136,  0.1626, -0.0705,  0.1033,
        -0.0012,  0.2341, -0.2033,  0.0857,  0.1037, -0.0099, -0.1956,  0.1507,
         0.0454, -0.2286,  0.1460,  0.1915,  0.0255, -0.1455,  0.2559, -0.0569,
         0.1324,  0.2049,  0.1916, -0.1899,  0.1574,  0.0418, -0.2016,  0.0758,
        -0.0348, -0.1554,  0.1763,  0.1656, -0.0320, -0.0930, -0.0912,  0.1103,
         0.0013, -0.0863,  0.1787,  0.1748, -0.0142, -0.0501, -0.0046,  0.1679,
         0.1690,  0.2311,  0.1152,  0.0860, -0.0317, -0.0281,  0.0168,  0.0088,
         0.0259, -0.1152, -0.1012,  0.0447, -0.0195,  0.1901, -0.0220, -0.0313,
        -0.1229,  0.1743,  0.1093,  0.0136, -0.0200, -0.0299, -0.0481,  0.0899],
       device='cuda:0') torch.Size([128])
recurrent_blocks.0.weight_ih_l0_reverse tensor([[ 0.0336, -0.1971, -0.0025],
        [ 0.0222, -0.0356, -0.0264],
        [-0.0446,  0.0201,  0.0849],
        [-0.1494, -0.0400,  0.1130],
        [ 0.2320,  0.1609, -0.0259],
        [-0.0804, -0.0734,  0.2157],
        [ 0.0659,  0.0435, -0.0783],
        [ 0.0166,  0.0248,  0.1330],
        [ 0.0628, -0.0602, -0.1023],
        [-0.0765,  0.2112, -0.2528],
        [-0.0923,  0.0258,  0.0713],
        [-0.1661,  0.0230, -0.1845],
        [ 0.1271,  0.0664,  0.0320],
        [-0.0485, -0.0323,  0.1460],
        [ 0.0912, -0.1090,  0.0122],
        [-0.0461, -0.1106,  0.0134],
        [-0.0805,  0.0053,  0.0310],
        [-0.0921,  0.0076, -0.0694],
        [-0.2094, -0.0049, -0.0710],
        [ 0.0817, -0.1092,  0.1772],
        [-0.0390,  0.0987, -0.1046],
        [-0.1242, -0.1456,  0.0150],
        [-0.0848,  0.0872,  0.0206],
        [ 0.0096,  0.1253, -0.1435],
        [-0.1926,  0.0118,  0.0091],
        [-0.2106, -0.2023,  0.0370],
        [-0.0492,  0.0687, -0.0922],
        [-0.2216,  0.0688,  0.0916],
        [-0.0653,  0.1805,  0.2345],
        [ 0.1479,  0.0414, -0.1758],
        [-0.0901,  0.1388, -0.1612],
        [-0.1788, -0.2004, -0.0502],
        [-0.1932, -0.0972,  0.0976],
        [-0.1918,  0.0329,  0.1964],
        [-0.1922,  0.1468,  0.1575],
        [ 0.0057, -0.0650, -0.1163],
        [ 0.2026,  0.1046,  0.1922],
        [-0.0479,  0.0551,  0.1511],
        [ 0.1019, -0.0046,  0.1108],
        [-0.1833, -0.0676,  0.0929],
        [ 0.0758,  0.0006,  0.0684],
        [ 0.1785, -0.0132, -0.1614],
        [-0.2240, -0.0561, -0.1163],
        [ 0.1446,  0.1599, -0.0810],
        [ 0.0615,  0.1344,  0.0770],
        [ 0.1441, -0.1642, -0.0871],
        [-0.1602,  0.1132, -0.1422],
        [ 0.0404, -0.2457, -0.0064],
        [-0.1427, -0.1188, -0.2106],
        [-0.0877,  0.1786,  0.1721],
        [-0.0124,  0.1249,  0.1381],
        [ 0.0326, -0.1209,  0.0911],
        [-0.0619, -0.0926,  0.0670],
        [ 0.0006, -0.2325,  0.2420],
        [-0.0830,  0.1291, -0.1813],
        [-0.0507, -0.0662,  0.1262],
        [-0.0613,  0.0147,  0.1507],
        [ 0.0037, -0.1139,  0.2034],
        [ 0.0012,  0.0771,  0.0612],
        [-0.2192,  0.0065, -0.0024],
        [-0.1003,  0.1095,  0.1663],
        [-0.0872, -0.0077, -0.2198],
        [-0.0948,  0.0119, -0.0561],
        [-0.2381,  0.0710,  0.1780],
        [ 0.1670,  0.0074, -0.1947],
        [ 0.0209, -0.1348, -0.0959],
        [-0.1003, -0.0108, -0.0246],
        [-0.1442, -0.0899, -0.1812],
        [-0.0925, -0.0791, -0.1870],
        [ 0.0251, -0.0935,  0.0386],
        [-0.0453, -0.0391, -0.2331],
        [-0.1404,  0.0213,  0.1914],
        [ 0.0128,  0.2232, -0.1217],
        [-0.0993, -0.2261, -0.0708],
        [-0.0068,  0.0369, -0.0278],
        [-0.0443, -0.0878,  0.0827],
        [-0.0304,  0.0294, -0.0760],
        [-0.0667, -0.0384,  0.1455],
        [-0.1656, -0.1554,  0.1049],
        [ 0.0825, -0.0070,  0.0835],
        [ 0.0542, -0.1253,  0.0915],
        [ 0.0399, -0.0631, -0.0870],
        [-0.0316, -0.1676,  0.2112],
        [ 0.0911,  0.1689, -0.1228],
        [ 0.1432,  0.1558, -0.2150],
        [ 0.0163, -0.1722,  0.2312],
        [ 0.0695, -0.0316,  0.1424],
        [-0.0726,  0.0786,  0.1317],
        [ 0.0372, -0.0091, -0.0440],
        [ 0.1113, -0.0763,  0.0707],
        [-0.1352, -0.1016, -0.1244],
        [-0.1301, -0.0933,  0.2238],
        [-0.0602,  0.1481,  0.1661],
        [-0.1236, -0.0167, -0.1441],
        [-0.1611,  0.0466,  0.2079],
        [-0.0963, -0.2058,  0.1609],
        [-0.0446, -0.1687,  0.1225],
        [-0.0595, -0.0800,  0.0514],
        [-0.1248, -0.0754,  0.0752],
        [ 0.1814, -0.0158, -0.1276],
        [ 0.0819,  0.1456, -0.0461],
        [ 0.1074, -0.2254,  0.0379],
        [-0.0266,  0.0204,  0.2414],
        [ 0.0444,  0.0848,  0.0945],
        [-0.0335, -0.2257,  0.0821],
        [ 0.1019,  0.0442,  0.0346],
        [ 0.0265,  0.0357,  0.1871],
        [ 0.1239, -0.1003, -0.0941],
        [ 0.1631, -0.0977,  0.1420],
        [ 0.0133, -0.1550,  0.1267],
        [ 0.0981,  0.0029,  0.1531],
        [ 0.0572, -0.1285, -0.1237],
        [ 0.1564,  0.0654, -0.2138],
        [-0.1629, -0.0558,  0.0994],
        [ 0.0409,  0.0630,  0.1726],
        [ 0.1316, -0.2251, -0.0531],
        [ 0.0529,  0.0549, -0.0555],
        [-0.1988, -0.0461,  0.2124],
        [ 0.1003, -0.1690,  0.0122],
        [-0.1503, -0.0545, -0.0026],
        [ 0.0792, -0.1054, -0.0842],
        [-0.1731,  0.1003,  0.1065],
        [ 0.0084, -0.0567, -0.0056],
        [-0.1264, -0.0709,  0.0905],
        [ 0.0115, -0.0377, -0.1046],
        [ 0.1374, -0.0011,  0.0109],
        [-0.0124, -0.0245,  0.1001],
        [-0.0589, -0.1764, -0.0789]], device='cuda:0') torch.Size([128, 3])
recurrent_blocks.0.weight_hh_l0_reverse tensor([[ 0.0129,  0.1261, -0.1358,  ..., -0.0667, -0.0513,  0.0600],
        [-0.0251, -0.0663,  0.2123,  ..., -0.1504,  0.0356,  0.0585],
        [-0.1924,  0.0266,  0.2035,  ...,  0.1877,  0.0189,  0.1266],
        ...,
        [ 0.1188,  0.1110, -0.0985,  ..., -0.1649, -0.0242,  0.0961],
        [ 0.0665,  0.1943,  0.2004,  ..., -0.0879,  0.1884,  0.0208],
        [ 0.0033, -0.0839,  0.0096,  ..., -0.0871,  0.2413,  0.0939]],
       device='cuda:0') torch.Size([128, 32])
recurrent_blocks.0.bias_ih_l0_reverse tensor([ 0.1754, -0.0479, -0.0313,  0.1100, -0.0052,  0.0947,  0.1015, -0.1208,
        -0.0511, -0.1576,  0.1307,  0.1317,  0.2242,  0.0851, -0.0616,  0.0728,
        -0.1308, -0.0445,  0.1974, -0.0977, -0.0979,  0.1989, -0.1752, -0.1643,
         0.1742, -0.0644,  0.1499, -0.0464,  0.1269,  0.0056, -0.0574,  0.1075,
         0.1547,  0.1743, -0.0127,  0.0436,  0.1350,  0.0682,  0.0934, -0.1241,
         0.1358, -0.0203, -0.1013, -0.0977, -0.0851,  0.1265,  0.0797,  0.0826,
        -0.1799, -0.0651, -0.0356,  0.2041,  0.0982,  0.2193,  0.1102, -0.0907,
         0.0148,  0.1374, -0.1099,  0.1002, -0.1087, -0.0164, -0.1830, -0.0299,
        -0.1781, -0.1351,  0.1033, -0.1406, -0.1864,  0.1613, -0.2265,  0.0973,
        -0.0550,  0.0598, -0.1688,  0.0030, -0.2531,  0.0644,  0.0015,  0.1414,
        -0.0121, -0.0162,  0.1555,  0.0664, -0.1040,  0.1792, -0.0839,  0.0289,
        -0.0252, -0.0816, -0.0841,  0.0146,  0.1291,  0.0583, -0.0380,  0.0962,
         0.0150,  0.1559,  0.2041, -0.1291,  0.1617, -0.0706,  0.2197,  0.1910,
        -0.0190, -0.1497,  0.1812, -0.1233,  0.2310,  0.0815, -0.1156,  0.0129,
         0.0469,  0.0439,  0.1624,  0.1646,  0.0532,  0.2157,  0.0367, -0.0626,
        -0.0442,  0.1863, -0.0947,  0.1532, -0.0625, -0.0897, -0.0937, -0.0203],
       device='cuda:0') torch.Size([128])
recurrent_blocks.0.bias_hh_l0_reverse tensor([ 0.1553,  0.1158,  0.0849, -0.1290, -0.0689,  0.0699,  0.0363,  0.1002,
         0.0347,  0.0063, -0.0364,  0.1085, -0.0598, -0.1170, -0.1070, -0.0822,
        -0.2259, -0.1018,  0.1372, -0.1162,  0.1159, -0.0591, -0.1723,  0.1199,
         0.0260, -0.0453,  0.0780,  0.0611,  0.0729,  0.0943, -0.1094,  0.0821,
        -0.0321,  0.1773,  0.0703,  0.1479,  0.0392,  0.0742,  0.0719, -0.0863,
         0.1783, -0.2285, -0.1263,  0.0722,  0.1579, -0.0752,  0.0597,  0.0404,
        -0.2163, -0.0525, -0.1200, -0.0814, -0.0310,  0.0366, -0.1231, -0.0299,
         0.0929, -0.0385,  0.1232, -0.0840, -0.0574,  0.0599, -0.0096,  0.1926,
        -0.1205, -0.1649,  0.0775,  0.0222, -0.0827,  0.0848,  0.0313, -0.0450,
        -0.1490, -0.0837, -0.0431,  0.1696, -0.2457,  0.1790,  0.1718,  0.0945,
        -0.0485, -0.2117, -0.1040, -0.1643, -0.0068,  0.0173,  0.0912, -0.0343,
        -0.1317, -0.1920, -0.0420,  0.2371,  0.1428, -0.0544,  0.0888,  0.0208,
         0.1518, -0.0800,  0.0057, -0.1857,  0.1840, -0.0698, -0.0331, -0.0540,
         0.1883, -0.0390,  0.0109, -0.1440,  0.0839, -0.0398, -0.1674,  0.1505,
         0.0529, -0.0914,  0.1233,  0.1797, -0.0775,  0.0640, -0.1884, -0.0215,
         0.0394, -0.0088, -0.0025, -0.0812,  0.1478,  0.0812,  0.0712,  0.0136],
       device='cuda:0') torch.Size([128])
recurrent_blocks.1.weight_ih_l0 tensor([[-0.1655,  0.1009,  0.0713,  ..., -0.0529,  0.2412, -0.0701],
        [-0.0767,  0.0623, -0.0232,  ...,  0.0152, -0.0730,  0.1977],
        [ 0.1824, -0.0695, -0.0538,  ..., -0.0638,  0.0060,  0.0907],
        ...,
        [ 0.1563, -0.0048,  0.0927,  ..., -0.1092,  0.0471,  0.1360],
        [ 0.0087,  0.2066,  0.0322,  ..., -0.2325,  0.0247,  0.0497],
        [-0.1952,  0.1722, -0.0580,  ..., -0.0471, -0.0426,  0.0433]],
       device='cuda:0') torch.Size([128, 64])
recurrent_blocks.1.weight_hh_l0 tensor([[-0.1523,  0.1817, -0.1492,  ...,  0.1244,  0.0815,  0.0325],
        [ 0.0722,  0.1662,  0.0457,  ...,  0.2218, -0.0928,  0.1228],
        [ 0.2007, -0.1086, -0.0606,  ...,  0.0500,  0.0800, -0.1011],
        ...,
        [ 0.0547, -0.0404, -0.0295,  ..., -0.0068, -0.1621, -0.1178],
        [ 0.0058,  0.1694, -0.0191,  ..., -0.1022, -0.1358,  0.0257],
        [ 0.1623, -0.0020,  0.0302,  ...,  0.1453, -0.1253,  0.0628]],
       device='cuda:0') torch.Size([128, 32])
recurrent_blocks.1.bias_ih_l0 tensor([ 0.0946,  0.1784,  0.1062, -0.0077,  0.1254, -0.0183,  0.0081, -0.0484,
         0.0746, -0.1218, -0.1069,  0.1470,  0.0051,  0.0881,  0.0669,  0.2494,
         0.1165,  0.1286, -0.0825,  0.2239,  0.0404,  0.0043,  0.0111, -0.1174,
         0.0929, -0.0251, -0.2072,  0.1609,  0.1480, -0.2282, -0.0440, -0.0960,
        -0.0056,  0.0935,  0.1238,  0.0655, -0.1194, -0.0891,  0.2202,  0.2023,
         0.0828,  0.0023,  0.0235, -0.0103,  0.0695, -0.1168,  0.0214,  0.0874,
         0.0792,  0.0799,  0.1773, -0.0593,  0.0799, -0.1185,  0.1826, -0.1520,
         0.0788,  0.1036, -0.2033, -0.0036,  0.0788,  0.0999,  0.0849,  0.0265,
         0.0220,  0.2544,  0.1154,  0.1161, -0.0429,  0.0944,  0.0513, -0.1998,
         0.0389,  0.0267, -0.0064, -0.0664,  0.0458,  0.1617, -0.0151, -0.1598,
        -0.1156, -0.0464, -0.0020,  0.0399,  0.2026, -0.0432,  0.0350,  0.0421,
        -0.1124, -0.0393, -0.0018, -0.1386,  0.0914, -0.0793,  0.1112,  0.1562,
         0.1071,  0.0345,  0.1564,  0.0158, -0.0651,  0.0035,  0.1424, -0.0762,
        -0.1127, -0.1235,  0.0951, -0.0042, -0.0047,  0.1269,  0.0454,  0.1628,
        -0.1493,  0.1030,  0.0197,  0.0535,  0.2432, -0.0701,  0.2084, -0.1242,
         0.1678, -0.0241,  0.0231, -0.0538,  0.1512, -0.0271, -0.1111,  0.1034],
       device='cuda:0') torch.Size([128])
recurrent_blocks.1.bias_hh_l0 tensor([-0.0423,  0.1802,  0.0700,  0.1596,  0.0271,  0.2198,  0.0390,  0.2122,
        -0.0368, -0.0506, -0.0414,  0.0183, -0.0212,  0.0024, -0.1281,  0.2271,
         0.1386,  0.1162,  0.0623, -0.0406,  0.2401,  0.1317,  0.2078, -0.1535,
         0.1487,  0.1445, -0.0484, -0.1060,  0.0430, -0.1920, -0.0050, -0.0791,
         0.0560, -0.1263,  0.0711, -0.0189, -0.0859,  0.0197, -0.0112,  0.1034,
         0.0101, -0.0807,  0.1515,  0.0419, -0.0196,  0.2141,  0.1688,  0.0242,
        -0.0762,  0.0382, -0.0214,  0.1018, -0.0095,  0.0272,  0.1029,  0.1079,
         0.1667, -0.0087, -0.1308,  0.2001, -0.0141, -0.1856,  0.0867, -0.0984,
         0.1047, -0.0679,  0.1881,  0.2081, -0.1722,  0.0471, -0.2368,  0.1084,
         0.1544, -0.1651, -0.0153, -0.0937, -0.0386,  0.0978,  0.1272, -0.0121,
        -0.0628, -0.0734,  0.1957,  0.1750,  0.2370, -0.0161, -0.1614,  0.1885,
        -0.1591, -0.1913,  0.1402, -0.0499,  0.1298,  0.0175, -0.0253, -0.0688,
        -0.0104,  0.1225,  0.0455,  0.1428,  0.0977, -0.0556,  0.1925, -0.0780,
        -0.0864,  0.0643,  0.1662, -0.0509, -0.0225, -0.0562, -0.1063,  0.0568,
        -0.2016,  0.1589,  0.2009,  0.2107,  0.1606, -0.0503, -0.0206, -0.1272,
         0.0103, -0.1205, -0.1171, -0.0865, -0.0561, -0.1355,  0.1415,  0.1655],
       device='cuda:0') torch.Size([128])
recurrent_blocks.1.weight_ih_l0_reverse tensor([[-0.0131,  0.0505, -0.0155,  ...,  0.0776, -0.1188,  0.0575],
        [ 0.0631,  0.0166,  0.0319,  ...,  0.1128, -0.0165,  0.0830],
        [-0.2304, -0.0847, -0.0132,  ..., -0.0972,  0.0828,  0.0793],
        ...,
        [-0.1547,  0.0963, -0.2216,  ..., -0.0467, -0.0195, -0.0728],
        [ 0.0498,  0.2245,  0.0003,  ..., -0.0796, -0.1279, -0.0842],
        [ 0.0183,  0.0594, -0.0992,  ..., -0.0598, -0.0631, -0.0471]],
       device='cuda:0') torch.Size([128, 64])
recurrent_blocks.1.weight_hh_l0_reverse tensor([[ 0.0833,  0.0724,  0.0986,  ...,  0.1336, -0.2105, -0.1712],
        [-0.0317, -0.0531, -0.0073,  ...,  0.0741, -0.0645,  0.0998],
        [-0.0606, -0.1053,  0.0864,  ...,  0.1059, -0.1436,  0.0657],
        ...,
        [ 0.1539, -0.1736,  0.1231,  ..., -0.0833,  0.1013, -0.0971],
        [-0.0501,  0.0538,  0.0956,  ..., -0.0167,  0.0246,  0.0538],
        [ 0.0544, -0.1642,  0.2064,  ..., -0.0061,  0.1927,  0.0807]],
       device='cuda:0') torch.Size([128, 32])
recurrent_blocks.1.bias_ih_l0_reverse tensor([-1.4315e-01,  1.7103e-01,  6.4497e-02, -1.0616e-01,  8.7503e-02,
         1.3209e-02,  2.2621e-01,  1.2940e-01,  1.2992e-01, -2.4153e-02,
         5.7461e-02,  2.4648e-01,  9.3452e-02,  6.5290e-02, -1.8870e-02,
        -1.4493e-01,  1.7400e-01,  6.2856e-03,  9.4592e-02,  1.2278e-01,
         1.2229e-01, -1.3439e-02,  1.4792e-01, -1.4782e-01, -1.2537e-01,
        -3.9346e-02,  2.0221e-01,  2.5396e-02,  5.6979e-02,  1.0604e-02,
         9.3822e-03, -8.0859e-02,  9.2184e-02,  2.1380e-02, -3.3087e-02,
        -1.4201e-01, -1.0412e-01,  1.4584e-01, -7.3876e-02,  2.0564e-01,
        -7.1710e-02, -5.9518e-02,  2.3670e-01, -2.8728e-02,  2.2529e-01,
         1.4300e-01, -9.5533e-02,  7.4666e-02, -2.7055e-02, -4.8434e-02,
        -1.7980e-01,  7.0229e-02, -7.7880e-02, -9.9766e-02,  1.8803e-01,
        -1.4370e-01,  7.3211e-02,  1.8200e-02,  2.3296e-01,  2.9073e-02,
         7.6238e-02,  1.3241e-01,  1.7134e-01,  1.9268e-01, -5.3223e-02,
        -5.2590e-02,  2.1024e-01, -1.9763e-01, -8.8224e-02, -6.6934e-05,
        -1.6334e-01,  1.5466e-01, -2.2543e-01,  7.6503e-02,  9.7394e-02,
        -5.3694e-02, -2.3172e-01, -1.6022e-01,  2.1701e-02,  1.4631e-01,
        -2.5851e-02,  9.5473e-02, -1.5898e-01, -2.6596e-02, -2.4317e-02,
        -6.7972e-02,  2.3283e-02, -1.5138e-01, -2.6274e-03,  3.7816e-02,
         1.5042e-01,  1.7443e-01, -1.7012e-01, -1.6127e-01,  4.7243e-03,
        -4.6118e-03,  5.8990e-02, -9.5751e-02, -6.2033e-02,  3.6947e-02,
        -1.9818e-01,  1.3752e-01,  2.3184e-01,  1.4852e-01, -8.8712e-02,
        -1.0827e-01, -4.2313e-02,  1.5739e-01, -1.0020e-01, -6.1704e-02,
         3.2115e-02, -9.2079e-02,  1.9506e-01,  6.9546e-03, -1.2593e-01,
         1.9010e-01,  1.3459e-01, -7.3539e-02,  1.6721e-01,  8.5040e-02,
        -1.5843e-01,  1.1492e-01,  7.0476e-02, -9.2989e-02,  6.8363e-02,
         5.4521e-02, -7.3806e-02,  2.2282e-01], device='cuda:0') torch.Size([128])
recurrent_blocks.1.bias_hh_l0_reverse tensor([-0.1223,  0.0668, -0.0353,  0.0611, -0.1627,  0.1533,  0.0220,  0.0120,
         0.2005,  0.1449, -0.0148,  0.1687,  0.2165,  0.1363,  0.0081, -0.0672,
        -0.0992,  0.0636,  0.0435, -0.0237, -0.0085,  0.1818, -0.0465,  0.1654,
         0.0660, -0.0140,  0.1146, -0.0127, -0.0817,  0.1976, -0.0716, -0.0646,
        -0.1211,  0.1000, -0.1459,  0.1844,  0.0453, -0.0525, -0.0087,  0.0999,
         0.1542,  0.0184, -0.0314, -0.0953,  0.0798,  0.0862, -0.0314,  0.0810,
         0.2171, -0.0991,  0.0903, -0.0327,  0.0600,  0.0848,  0.0947, -0.1470,
        -0.1042, -0.0140,  0.0248,  0.0145,  0.0140,  0.1674,  0.1137,  0.2009,
        -0.0902, -0.1522, -0.0521, -0.1252, -0.0154,  0.1704, -0.0738,  0.0217,
        -0.0449, -0.1416,  0.1230,  0.2163, -0.0568, -0.0592, -0.1918,  0.1526,
        -0.0547,  0.1282,  0.1414, -0.1220,  0.1088,  0.1987,  0.0677, -0.1038,
         0.0024,  0.0663,  0.1914,  0.0238, -0.1267, -0.2104,  0.2452,  0.2517,
        -0.1750,  0.0235,  0.0267, -0.0234, -0.1071,  0.0845,  0.2410, -0.1015,
        -0.0399,  0.0560,  0.0492, -0.0382,  0.1720,  0.1400, -0.1005, -0.1436,
         0.0920,  0.1282, -0.1323,  0.0982,  0.1504,  0.1093,  0.1717,  0.1624,
         0.0019,  0.1269,  0.2389,  0.1978,  0.1354, -0.0814, -0.0354, -0.0710],
       device='cuda:0') torch.Size([128])
recurrent_blocks.2.weight_ih_l0 tensor([[-0.1233, -0.1054, -0.0244,  ..., -0.1329,  0.0188, -0.0515],
        [ 0.1416,  0.0796,  0.2541,  ...,  0.0120,  0.1581, -0.1256],
        [-0.1043,  0.1122,  0.1112,  ...,  0.1089,  0.0832,  0.1188],
        ...,
        [-0.1446, -0.0417,  0.2190,  ..., -0.1229, -0.0928, -0.0615],
        [-0.0814,  0.0748, -0.1068,  ..., -0.0091, -0.0696,  0.2050],
        [ 0.1016, -0.1259, -0.0673,  ...,  0.0123,  0.1024,  0.1160]],
       device='cuda:0') torch.Size([128, 64])
recurrent_blocks.2.weight_hh_l0 tensor([[-0.0998, -0.0864, -0.1400,  ..., -0.0209, -0.0014,  0.0796],
        [ 0.0980,  0.0201, -0.0911,  ..., -0.1231, -0.1035,  0.0785],
        [-0.0285, -0.1576, -0.0611,  ...,  0.1732, -0.1619, -0.1080],
        ...,
        [ 0.0165,  0.2199, -0.1344,  ...,  0.1424, -0.0370, -0.0291],
        [-0.0096, -0.0711, -0.0957,  ..., -0.1406, -0.0894, -0.0352],
        [-0.0632,  0.0940, -0.1417,  ...,  0.0692, -0.1166,  0.1558]],
       device='cuda:0') torch.Size([128, 32])
recurrent_blocks.2.bias_ih_l0 tensor([-0.0439,  0.1909, -0.0962, -0.0761,  0.1859,  0.1094, -0.1378,  0.0773,
         0.0678,  0.0096,  0.0852,  0.1115, -0.0977, -0.0468,  0.0573, -0.0694,
         0.0636,  0.0117,  0.1412, -0.1499,  0.0426, -0.0722, -0.0835, -0.1224,
        -0.0333, -0.0563,  0.2180, -0.1494,  0.0848, -0.0774, -0.0030,  0.0093,
         0.1185, -0.0060,  0.0033, -0.0789, -0.0624,  0.0794,  0.2031, -0.0540,
         0.0041,  0.1643, -0.0961, -0.0408,  0.1928,  0.1231,  0.0330,  0.0629,
         0.1043,  0.0883,  0.0368, -0.0897, -0.0374, -0.1550,  0.1728, -0.1505,
        -0.0728, -0.0846,  0.2018,  0.0073,  0.0158, -0.0920,  0.1920,  0.1719,
         0.0129,  0.1206, -0.1382,  0.0408, -0.0682,  0.1631, -0.1620,  0.0150,
         0.1888, -0.0868,  0.0478, -0.0402,  0.1627,  0.1183,  0.0096, -0.0867,
         0.0931, -0.0113,  0.0938, -0.1117,  0.1284,  0.0252, -0.1615, -0.0697,
         0.0913, -0.1921, -0.1447,  0.0068,  0.1448, -0.1996,  0.1888,  0.0746,
        -0.1722, -0.0422, -0.1251,  0.0251, -0.1062,  0.0633,  0.1974,  0.0451,
         0.1390,  0.2016, -0.1466,  0.1123,  0.1611,  0.1259, -0.0215,  0.2144,
        -0.0213, -0.0325,  0.2086,  0.0709,  0.1209, -0.0813, -0.0383, -0.2049,
        -0.0308,  0.1077, -0.0830,  0.0453,  0.2166, -0.1384, -0.0616,  0.1562],
       device='cuda:0') torch.Size([128])
recurrent_blocks.2.bias_hh_l0 tensor([-0.2035,  0.2022, -0.1435,  0.0334, -0.0508,  0.1286,  0.0658,  0.0888,
        -0.1038, -0.0812,  0.1149, -0.0921,  0.1061, -0.1205, -0.0306, -0.0166,
         0.1998,  0.1442,  0.1056, -0.1117, -0.0778, -0.0108, -0.0878,  0.0696,
         0.1733, -0.0387,  0.0770, -0.1537,  0.0861, -0.0373, -0.0402,  0.0648,
        -0.0708,  0.1397,  0.0517,  0.0241,  0.0258,  0.0697,  0.1819,  0.1065,
        -0.1264,  0.1710, -0.1604, -0.0679, -0.0583,  0.1164,  0.0757,  0.0315,
        -0.0165,  0.1444,  0.1244, -0.0429, -0.0862, -0.2256,  0.1120, -0.1085,
         0.1484, -0.1161,  0.1088, -0.0892,  0.2115,  0.0580, -0.0243, -0.0550,
         0.1338,  0.0511,  0.0040, -0.0380, -0.1182, -0.0213,  0.0246, -0.1646,
         0.1449, -0.0578, -0.1153,  0.1674,  0.1582, -0.0171, -0.0284, -0.1561,
         0.1275, -0.1811,  0.1448,  0.0639,  0.1344, -0.0341,  0.0554, -0.1310,
        -0.1538, -0.0469, -0.1716,  0.1573,  0.2141, -0.1720, -0.0196,  0.0589,
         0.1057,  0.0953, -0.1326, -0.0873, -0.0852,  0.1188,  0.1639,  0.0808,
        -0.1725,  0.0578,  0.0895, -0.1035,  0.2478,  0.0683,  0.1553,  0.1715,
        -0.0394,  0.0835,  0.0187,  0.1139, -0.1040, -0.0159,  0.1852, -0.0418,
         0.0275,  0.2249, -0.0672, -0.1847,  0.2549,  0.1654,  0.2129,  0.1556],
       device='cuda:0') torch.Size([128])
recurrent_blocks.2.weight_ih_l0_reverse tensor([[-0.0482, -0.0832,  0.1622,  ...,  0.0963, -0.0039,  0.0031],
        [ 0.1151,  0.1409,  0.1585,  ..., -0.1605, -0.0462,  0.0224],
        [ 0.1810,  0.1545,  0.1018,  ...,  0.0838,  0.1300, -0.1119],
        ...,
        [-0.1472, -0.1344, -0.1915,  ...,  0.1291,  0.0359,  0.0393],
        [-0.0612,  0.0243,  0.1249,  ..., -0.1956,  0.1245,  0.0188],
        [-0.0978,  0.0678,  0.1025,  ..., -0.0043,  0.0561,  0.1919]],
       device='cuda:0') torch.Size([128, 64])
recurrent_blocks.2.weight_hh_l0_reverse tensor([[ 0.1448, -0.0287, -0.0193,  ..., -0.1598, -0.1834,  0.0334],
        [-0.0564,  0.0034,  0.0922,  ..., -0.1091,  0.0258,  0.0550],
        [-0.0032,  0.0444,  0.0054,  ..., -0.1426,  0.1537,  0.1623],
        ...,
        [-0.0352, -0.0342, -0.0181,  ..., -0.1876,  0.0385,  0.1035],
        [ 0.2104, -0.0328,  0.1821,  ...,  0.0635,  0.1895,  0.0122],
        [ 0.0255,  0.1395,  0.1777,  ..., -0.0345,  0.1806, -0.0072]],
       device='cuda:0') torch.Size([128, 32])
recurrent_blocks.2.bias_ih_l0_reverse tensor([-0.2052, -0.1415, -0.0081, -0.0912,  0.0991,  0.0578,  0.0164,  0.1079,
         0.1184,  0.0192,  0.0609,  0.0431, -0.0626,  0.0850, -0.0751,  0.0144,
         0.0484,  0.2334, -0.0088, -0.0053, -0.0585,  0.1224,  0.1174, -0.0575,
        -0.1071, -0.1495,  0.1132, -0.0809, -0.0955, -0.0614, -0.0475,  0.0289,
         0.0637,  0.0912, -0.0072,  0.0673, -0.2135,  0.1701,  0.0582,  0.1544,
         0.1943,  0.0925,  0.1736, -0.0173, -0.0612,  0.1687,  0.0115,  0.1001,
         0.2215, -0.0659, -0.0502,  0.0145, -0.1022,  0.0252,  0.2035,  0.0642,
        -0.0683, -0.1225, -0.0367, -0.0109, -0.0101,  0.1483,  0.1201,  0.0425,
        -0.0993,  0.0006,  0.1507, -0.1391, -0.0400,  0.2368, -0.1690, -0.0572,
        -0.0975, -0.1026,  0.1213, -0.0343, -0.0756,  0.1220, -0.0935,  0.1984,
        -0.2081,  0.1385, -0.1572, -0.0710, -0.1928,  0.0840,  0.1390,  0.0499,
         0.0452,  0.0892,  0.0705,  0.1972,  0.0337,  0.0539,  0.0749,  0.1672,
         0.1030,  0.0117,  0.0439,  0.1311,  0.1347,  0.1570, -0.0850,  0.1221,
        -0.0072, -0.0342, -0.1280,  0.2146,  0.1712,  0.1072,  0.1262, -0.0903,
         0.1786,  0.2318, -0.0666,  0.2188,  0.0507,  0.2301,  0.0452,  0.0159,
        -0.1704,  0.0060,  0.0180,  0.2037, -0.0207,  0.1358,  0.0962,  0.0609],
       device='cuda:0') torch.Size([128])
recurrent_blocks.2.bias_hh_l0_reverse tensor([ 0.1161,  0.0233, -0.0590,  0.1023,  0.0612,  0.2141,  0.1034,  0.0813,
         0.1032,  0.1050,  0.0964, -0.1116,  0.0475, -0.0703, -0.1522,  0.0134,
         0.0117,  0.1343,  0.0652,  0.0984, -0.1128,  0.0954,  0.1980, -0.2049,
        -0.2308,  0.1602,  0.1822,  0.1958,  0.1087,  0.1332,  0.1386,  0.0578,
         0.0779,  0.0535,  0.1633,  0.1535, -0.0586,  0.0225, -0.0186, -0.0387,
         0.0035, -0.0196,  0.1234,  0.0407, -0.0368, -0.0676, -0.1384, -0.0619,
         0.2184,  0.1984, -0.0681,  0.0343, -0.0148,  0.2355,  0.1569,  0.1286,
        -0.0341, -0.0274,  0.2001, -0.0469,  0.1418, -0.0522,  0.2178,  0.2458,
         0.0768, -0.0571,  0.2062, -0.1554, -0.0390,  0.0120, -0.1545,  0.2080,
        -0.1891, -0.0086, -0.0769,  0.2060, -0.0585,  0.0179, -0.0280,  0.2050,
        -0.0143,  0.1115, -0.1233, -0.1508, -0.1409,  0.0662,  0.1980,  0.0894,
         0.0880, -0.1594, -0.0324,  0.1460, -0.0994,  0.1466,  0.1461,  0.1628,
        -0.0846,  0.1454, -0.1022, -0.1373,  0.1299, -0.0279,  0.0043,  0.1081,
         0.0230, -0.0561,  0.0634,  0.2476,  0.2375,  0.1701,  0.1274, -0.0741,
        -0.0792,  0.2184,  0.0838,  0.1027, -0.1058, -0.0617,  0.0383,  0.0886,
         0.0523, -0.0237, -0.0926, -0.0751,  0.1057, -0.1419, -0.0689,  0.0508],
       device='cuda:0') torch.Size([128])
recurrent_blocks.3.weight_ih_l0 tensor([[-0.0696,  0.1719, -0.1504,  ..., -0.1052, -0.0581,  0.1234],
        [ 0.0396,  0.1005, -0.1464,  ..., -0.1118,  0.1197,  0.0856],
        [ 0.0119,  0.0380,  0.0346,  ..., -0.0871,  0.1460,  0.1299],
        ...,
        [ 0.0736, -0.0909,  0.1584,  ..., -0.1733, -0.0432,  0.1983],
        [ 0.0857, -0.1593, -0.1617,  ...,  0.1142, -0.0431,  0.1665],
        [-0.0301, -0.1437,  0.0235,  ..., -0.0732, -0.0791, -0.0893]],
       device='cuda:0') torch.Size([128, 64])
recurrent_blocks.3.weight_hh_l0 tensor([[-0.0031,  0.1445, -0.1091,  ..., -0.0595,  0.1078,  0.1633],
        [ 0.1221,  0.0152, -0.0861,  ..., -0.0679, -0.0712, -0.0740],
        [-0.0033, -0.0124, -0.1057,  ..., -0.1987, -0.0305,  0.1293],
        ...,
        [-0.0746,  0.0874,  0.1157,  ..., -0.1834,  0.0018,  0.0205],
        [ 0.1309, -0.1134, -0.1078,  ..., -0.2011,  0.0765, -0.1364],
        [-0.1199, -0.0285,  0.1616,  ...,  0.0023, -0.0387,  0.2032]],
       device='cuda:0') torch.Size([128, 32])
recurrent_blocks.3.bias_ih_l0 tensor([ 0.0374,  0.0013,  0.0928, -0.2215, -0.0483,  0.2124,  0.1989, -0.1032,
         0.1439, -0.0684, -0.0033, -0.0870,  0.1406, -0.0150,  0.0801, -0.1408,
         0.1594,  0.1035,  0.1484, -0.0683, -0.0345,  0.2018,  0.0748, -0.1288,
        -0.0011, -0.0840,  0.0166,  0.1219, -0.0094, -0.1272, -0.0623, -0.1048,
         0.0505, -0.0679,  0.1257, -0.0732,  0.0747,  0.0491, -0.0033, -0.2006,
        -0.0991, -0.0430,  0.1024,  0.1671,  0.2375, -0.0656, -0.0339,  0.0483,
        -0.0892, -0.0675,  0.1645,  0.1202,  0.1055,  0.1501,  0.0104,  0.1630,
         0.1649,  0.1504,  0.1994, -0.1730, -0.0171,  0.0901, -0.0723, -0.0019,
         0.1655,  0.0121,  0.1127, -0.0093,  0.1271,  0.1503, -0.2091,  0.0741,
        -0.0911, -0.0287, -0.0334, -0.0542,  0.2191, -0.0337, -0.1023, -0.0253,
         0.1970,  0.0779,  0.0509, -0.1180, -0.0212, -0.1148, -0.1070, -0.0726,
        -0.1943, -0.1921,  0.0012,  0.0952,  0.1746,  0.1168,  0.1095, -0.0827,
         0.0721,  0.0546, -0.1087,  0.0464, -0.0274, -0.0115,  0.0136, -0.0439,
        -0.0786,  0.0579, -0.1576, -0.0584,  0.0646,  0.0624, -0.1708,  0.0253,
        -0.1324,  0.0660,  0.0633,  0.0703,  0.1928,  0.1720,  0.1359,  0.1690,
         0.1494,  0.2235,  0.0679,  0.1306, -0.1129,  0.1587,  0.1151, -0.0357],
       device='cuda:0') torch.Size([128])
recurrent_blocks.3.bias_hh_l0 tensor([-0.1099,  0.0819,  0.1455,  0.0889,  0.0671, -0.0330,  0.1931,  0.0216,
         0.1154,  0.1316,  0.0654,  0.1281, -0.0832,  0.0115,  0.1298,  0.1298,
         0.1269,  0.1179,  0.0713,  0.0646,  0.1051, -0.0474,  0.1048, -0.1492,
        -0.0388,  0.0371,  0.1941, -0.1174,  0.1170, -0.1107,  0.1184, -0.0624,
        -0.1319, -0.0895,  0.1297, -0.2130, -0.0125,  0.2152,  0.2356, -0.2114,
         0.2166,  0.1277, -0.1393,  0.0511, -0.0944,  0.1111, -0.0247,  0.0548,
         0.1955,  0.0298,  0.0898, -0.1966,  0.0353, -0.0195, -0.0705,  0.1881,
         0.1114,  0.0143, -0.0919,  0.0893, -0.0493,  0.1138,  0.1539, -0.0935,
         0.0040, -0.0397,  0.0090,  0.0171, -0.1134,  0.0572,  0.0128,  0.0249,
        -0.1999, -0.1988, -0.0614,  0.1545,  0.0828,  0.0101, -0.0895,  0.0463,
         0.2073, -0.0586,  0.0037,  0.1352, -0.0036, -0.1166,  0.0223,  0.0528,
        -0.1063, -0.0750, -0.1417,  0.0059,  0.1797, -0.1766,  0.1178, -0.1448,
         0.1829,  0.2158, -0.1441,  0.1026, -0.0978,  0.0590,  0.2083, -0.2021,
         0.0957,  0.1744, -0.0720, -0.0256, -0.0991, -0.0330,  0.0768, -0.1875,
        -0.0882,  0.0234,  0.2418, -0.1155,  0.2157,  0.2078, -0.0698, -0.0094,
         0.0799,  0.2209, -0.0475,  0.0102, -0.0733,  0.1377, -0.0651, -0.1158],
       device='cuda:0') torch.Size([128])
recurrent_blocks.3.weight_ih_l0_reverse tensor([[ 0.1804, -0.0057,  0.0663,  ...,  0.0860,  0.1751,  0.0070],
        [ 0.0267,  0.0175, -0.1020,  ..., -0.0016, -0.1225, -0.0496],
        [ 0.1605, -0.0594, -0.1246,  ...,  0.0043,  0.0359, -0.0122],
        ...,
        [ 0.1147,  0.1038,  0.0309,  ...,  0.0309, -0.0199,  0.0148],
        [-0.1045,  0.1412, -0.2005,  ..., -0.1217,  0.0713, -0.0774],
        [-0.1035,  0.0075, -0.1712,  ..., -0.0250,  0.0901, -0.0312]],
       device='cuda:0') torch.Size([128, 64])
recurrent_blocks.3.weight_hh_l0_reverse tensor([[ 0.1088,  0.1047,  0.0570,  ...,  0.2233, -0.1258, -0.0776],
        [-0.1062, -0.1170,  0.0917,  ...,  0.0389, -0.0378,  0.0063],
        [-0.0500,  0.1498,  0.0338,  ...,  0.0879,  0.1648, -0.0041],
        ...,
        [ 0.0175, -0.0174, -0.0052,  ..., -0.0978,  0.2156,  0.1800],
        [-0.0690,  0.0698,  0.0358,  ...,  0.0439,  0.0487,  0.2241],
        [-0.0745, -0.1021, -0.0456,  ...,  0.0954,  0.0415,  0.0269]],
       device='cuda:0') torch.Size([128, 32])
recurrent_blocks.3.bias_ih_l0_reverse tensor([-0.0054,  0.1565,  0.1417, -0.0721,  0.1767,  0.0796,  0.1753,  0.0210,
         0.1299, -0.0307, -0.0503, -0.0398,  0.1323,  0.1143, -0.0223,  0.1136,
         0.0603, -0.1089, -0.0044,  0.1334,  0.0647,  0.0505, -0.0020, -0.0416,
        -0.0057, -0.0979,  0.0393,  0.2330, -0.1231,  0.0406,  0.0217,  0.0093,
         0.0794,  0.0610,  0.2125, -0.0697, -0.0181, -0.0704,  0.0401, -0.2073,
        -0.1216, -0.0164, -0.0123,  0.1491, -0.1013,  0.1833, -0.1550, -0.0038,
        -0.0456,  0.1511, -0.0951,  0.1213,  0.1131,  0.0641, -0.0866,  0.1151,
         0.0825, -0.0139, -0.0474,  0.1526,  0.0335,  0.0548, -0.0858, -0.0991,
        -0.1633, -0.2141,  0.2281, -0.0378, -0.1628, -0.0601, -0.1106, -0.0055,
         0.1301, -0.0185, -0.0852,  0.0413, -0.1054, -0.1666,  0.0317, -0.1363,
        -0.1136,  0.2474,  0.0978, -0.0226,  0.1448, -0.0819,  0.1749, -0.1809,
         0.0217, -0.0285, -0.1178,  0.1732,  0.1203,  0.0629, -0.0869, -0.0558,
         0.1177, -0.0722,  0.0314, -0.0738,  0.2083, -0.1093,  0.0828, -0.1902,
        -0.0378,  0.1142,  0.1690,  0.1262, -0.0573,  0.1504,  0.0221, -0.0684,
        -0.1538, -0.0270,  0.1315, -0.1124, -0.0113,  0.1266,  0.0536, -0.0413,
        -0.0756, -0.0400, -0.1266,  0.1723,  0.1515, -0.2223,  0.0750, -0.0607],
       device='cuda:0') torch.Size([128])
recurrent_blocks.3.bias_hh_l0_reverse tensor([-0.0139, -0.0776, -0.0090, -0.0324,  0.0044, -0.1134,  0.1922,  0.0762,
         0.1547, -0.1749,  0.0720,  0.0229, -0.0173, -0.0544,  0.0292, -0.0424,
         0.1965, -0.0561,  0.0995,  0.1433,  0.1602,  0.1415,  0.1610, -0.0837,
        -0.0697,  0.1313, -0.0232, -0.0049, -0.0758, -0.0749,  0.1002,  0.1336,
        -0.1061, -0.1248,  0.2154,  0.0111,  0.0090,  0.0276,  0.1370, -0.0773,
         0.0519,  0.1229,  0.0432,  0.1724,  0.1230, -0.0899, -0.0495, -0.0515,
         0.0032, -0.0542, -0.1631,  0.1301, -0.0579,  0.1566, -0.0987,  0.0965,
        -0.2284,  0.0383, -0.0763,  0.1607, -0.0008,  0.0792,  0.0888, -0.0087,
         0.1210,  0.0384, -0.0972,  0.0795, -0.2271,  0.0045, -0.2082,  0.2176,
        -0.0834,  0.0851,  0.2243, -0.0628,  0.0896, -0.2039, -0.1701, -0.0246,
         0.0638,  0.0437,  0.0898, -0.0429,  0.1559, -0.0927, -0.0829,  0.0816,
         0.0619, -0.1728,  0.1639,  0.0273, -0.1922,  0.0714, -0.0651, -0.0553,
        -0.0209,  0.0916, -0.0583, -0.1113, -0.1046,  0.1663,  0.1562, -0.0192,
        -0.0125, -0.0249, -0.0760, -0.1106,  0.0217,  0.0231,  0.0655, -0.0081,
         0.1662,  0.1253, -0.0919,  0.1487,  0.1530,  0.1335,  0.1370, -0.1013,
         0.0815,  0.0111, -0.0986,  0.1878,  0.1812,  0.0137,  0.0460, -0.1291],
       device='cuda:0') torch.Size([128])
fc_blocks.0.0.weight tensor([[ 0.0610,  0.0424, -0.0552,  ..., -0.0896, -0.0351, -0.0252],
        [ 0.0554,  0.0830, -0.0091,  ...,  0.0331, -0.0272,  0.0253],
        [ 0.1053,  0.1132,  0.0321,  ..., -0.1519,  0.1440,  0.1179],
        ...,
        [-0.0886,  0.0586,  0.0843,  ...,  0.1571,  0.0089,  0.0867],
        [-0.1804, -0.0565, -0.1198,  ...,  0.0544,  0.0062, -0.1634],
        [ 0.1046,  0.1690, -0.0246,  ...,  0.0265,  0.1847,  0.1140]],
       device='cuda:0') torch.Size([32, 64])
fc_blocks.0.0.bias tensor([ 0.0540,  0.1388,  0.1716, -0.1412, -0.1578, -0.0058, -0.0327,  0.1444,
        -0.0526,  0.0092, -0.0679, -0.0513, -0.1562, -0.0324, -0.1193,  0.0618,
         0.0817,  0.0933, -0.0309, -0.0550,  0.0451, -0.0429, -0.0271, -0.1688,
         0.1904, -0.0699,  0.0050,  0.0753, -0.0352, -0.0502,  0.0389,  0.0315],
       device='cuda:0') torch.Size([32])
fc_blocks.1.0.weight tensor([[-1.0613e-01,  3.0137e-02,  2.2322e-02,  1.8707e-01,  1.8562e-01,
          3.0020e-02, -9.7874e-02, -9.7927e-02,  9.5985e-02,  8.0621e-02,
          1.2428e-01, -6.4406e-02, -9.7186e-02, -1.1070e-01, -8.1672e-02,
         -1.5509e-01, -1.9873e-01,  7.1483e-02, -1.6168e-01, -1.1645e-01,
         -6.3113e-03,  1.2922e-01,  1.5116e-03,  7.1661e-02,  2.0817e-02,
          9.3657e-02,  1.1403e-01,  5.9651e-02, -5.1860e-02, -1.3889e-02,
         -1.0700e-01, -5.8505e-02],
        [ 1.4840e-02,  1.9849e-01,  1.5335e-01,  4.9549e-02, -9.3129e-02,
          9.7538e-02, -6.1296e-02,  1.2118e-01, -4.2268e-02, -1.8211e-01,
         -1.1571e-01, -1.1961e-01,  1.1683e-03, -2.5137e-02, -1.2000e-01,
         -7.0633e-03,  1.4803e-02,  1.7526e-01, -1.2911e-02, -1.5218e-01,
         -7.6395e-02, -1.8758e-01,  2.3320e-01, -1.7133e-01, -4.5941e-02,
          6.8712e-02,  8.5831e-02, -1.9232e-01,  1.6115e-03,  7.2215e-02,
         -1.9004e-01,  1.9325e-01],
        [ 9.2999e-02, -2.1174e-01, -6.4851e-02, -1.2651e-01, -1.1065e-01,
         -1.6769e-02, -1.0496e-01, -1.1075e-01,  1.7471e-02,  1.2415e-01,
          4.7944e-02, -9.9964e-02,  1.7124e-03,  1.2780e-01, -6.9832e-02,
         -1.9618e-01, -8.1862e-02,  9.9196e-02,  1.3335e-01, -1.0712e-01,
          1.1169e-02,  8.9545e-02,  1.1376e-02,  1.1025e-01,  8.8354e-04,
          4.2521e-02, -1.0077e-02, -1.6963e-01, -1.9717e-01,  1.1901e-02,
          1.0106e-01, -1.1064e-01],
        [ 2.0221e-01,  1.2714e-01,  1.2460e-01, -3.7676e-02, -6.9139e-02,
          1.8279e-02,  2.2595e-01,  1.8962e-01, -4.4095e-02,  8.5036e-03,
          5.7389e-02, -8.7037e-02, -1.5448e-01,  3.8738e-02, -1.6549e-01,
          1.9911e-01,  2.3838e-01,  1.4263e-01, -5.6921e-02,  1.2888e-01,
         -1.1411e-01,  9.0207e-02,  1.4614e-01,  4.2585e-02,  1.0644e-01,
          1.3212e-01,  1.0191e-01,  4.7208e-02, -1.2083e-02, -1.1072e-01,
         -7.5220e-02,  1.8758e-01],
        [-6.8513e-02,  3.3456e-02,  9.0702e-02, -1.4853e-01, -2.0940e-01,
         -1.0999e-01, -2.7730e-02, -3.2593e-02, -6.7137e-02,  8.1272e-02,
          9.9150e-02,  2.7986e-02, -6.3020e-02,  1.5163e-01, -2.2058e-01,
          2.4214e-01,  6.5670e-02, -9.5004e-02, -1.4047e-01, -1.1621e-01,
          1.7942e-02,  1.3427e-02, -5.2732e-02,  9.0561e-03,  9.0601e-02,
          8.2863e-02, -1.6469e-01,  2.1623e-03,  1.6219e-01, -4.7329e-03,
          2.6567e-02,  1.6234e-01],
        [-2.0748e-02,  4.2607e-02,  1.3128e-01,  6.3448e-02,  7.9926e-02,
          2.0413e-03,  1.6484e-01, -6.6395e-02,  1.5851e-01,  2.6176e-02,
          1.9349e-01,  6.9257e-02, -1.6656e-01,  4.2859e-03,  1.9918e-01,
          1.0478e-01,  9.0728e-02, -8.6424e-02,  1.8863e-02, -9.9182e-03,
          1.3807e-01,  4.9283e-02, -7.4947e-02,  1.9092e-02,  8.2420e-03,
         -3.9733e-02, -1.1329e-01, -1.3168e-02,  1.2615e-01,  1.5026e-01,
         -1.0564e-02, -1.0845e-01],
        [-1.4289e-01, -2.1530e-01, -4.1710e-02,  7.3427e-02,  9.1189e-02,
          7.5967e-02, -1.2147e-01, -8.7584e-04,  1.1817e-01, -1.6220e-01,
         -5.3217e-02, -9.6507e-02, -1.3950e-01, -4.5693e-02,  1.0091e-01,
         -3.0979e-02, -1.4437e-01,  8.0031e-02,  1.4853e-01,  9.5732e-02,
          9.4427e-02, -8.6587e-02,  9.4346e-02, -8.4602e-05, -6.7793e-02,
         -9.0112e-03,  1.0250e-01, -5.5163e-02,  1.9280e-01, -1.1930e-01,
          6.0215e-02,  6.2303e-02],
        [ 1.4371e-01, -1.5142e-01, -9.6270e-02,  1.2021e-01, -4.7566e-02,
         -5.1420e-03, -5.9287e-03, -1.4595e-02,  3.3727e-02,  5.8876e-02,
          1.8875e-01,  9.5304e-02, -7.1567e-02,  1.3860e-01, -2.9445e-02,
          2.4779e-02,  6.2482e-02,  1.2567e-01, -8.1045e-02,  5.4199e-02,
          2.2283e-01,  5.9573e-02, -3.0273e-02,  2.3166e-01,  5.9714e-02,
         -9.1876e-02,  1.2508e-01,  1.6670e-01, -1.3323e-01,  1.3748e-01,
          1.2254e-01, -6.7104e-02],
        [-1.6427e-01, -6.7814e-02,  1.0314e-01, -5.5503e-02,  1.8718e-01,
          1.1453e-01,  3.9541e-02, -6.9067e-02,  4.1179e-02,  5.7015e-02,
          1.1729e-01,  1.2422e-01,  1.6994e-01,  4.7289e-03,  1.4669e-01,
          2.9667e-02, -4.3965e-02,  2.5325e-02, -7.1987e-02, -3.7162e-02,
          1.0994e-01,  1.0688e-01, -1.8287e-01,  9.4862e-02,  1.2807e-01,
         -1.1379e-02,  1.0761e-01,  7.3690e-02,  1.1611e-01,  1.3037e-01,
         -7.5282e-02,  4.4243e-02],
        [-9.0519e-02,  4.5912e-02, -1.4124e-01,  2.0151e-01,  2.0619e-01,
          1.4004e-01, -1.9987e-01, -1.0770e-01,  3.2809e-02, -2.6809e-02,
          6.7220e-02, -2.7598e-03,  7.6630e-02, -9.3365e-02,  8.9631e-02,
         -7.8066e-02,  7.4640e-02, -1.6564e-01,  3.5872e-02,  1.3853e-02,
          9.1560e-03, -9.2674e-02,  1.2353e-02, -9.5874e-02, -1.8582e-01,
         -1.2438e-02,  7.6227e-02, -7.3619e-03,  1.2445e-01, -7.5453e-02,
          1.6891e-01,  8.8247e-04],
        [-5.7627e-02, -1.9326e-02,  1.4296e-01, -2.2524e-01,  4.7266e-02,
          4.2300e-02, -1.0084e-01,  1.9926e-01,  2.0118e-01, -3.0096e-02,
          9.7763e-02, -1.4352e-01, -1.5993e-01,  1.4071e-01, -1.5791e-01,
          1.6493e-01,  2.6114e-01,  1.5723e-01,  6.5458e-02,  1.3250e-01,
          1.7609e-01, -8.8493e-02,  4.6095e-02, -8.9826e-02,  2.1936e-01,
          1.0433e-01, -1.3075e-01, -1.3055e-01,  1.2290e-02, -7.4928e-02,
         -2.2708e-01,  1.0832e-01],
        [ 1.4128e-01,  7.0161e-02,  6.7104e-02, -9.8430e-02,  2.0454e-02,
         -1.4320e-01,  1.3403e-01,  2.2114e-01,  1.5647e-01,  1.5335e-01,
          7.4434e-02, -2.9109e-02, -3.4091e-02,  3.8008e-02, -6.3869e-02,
         -1.1367e-01, -6.8564e-02,  1.2469e-01,  9.6228e-02, -5.1427e-02,
          1.1391e-01,  7.4347e-02,  2.2450e-01, -1.4925e-02,  9.2227e-04,
          1.9954e-01,  5.0117e-02,  1.7538e-01, -1.5574e-01, -1.6071e-01,
          1.4716e-01,  1.6615e-01],
        [-8.3044e-02,  1.6865e-01, -6.4666e-02,  1.6271e-01, -1.1815e-01,
          1.2486e-01,  6.1703e-02,  1.2613e-01,  1.2354e-01, -8.2880e-02,
         -8.8629e-02, -1.0682e-01,  1.4329e-01,  6.2155e-02,  1.6463e-01,
         -6.1352e-02, -7.8547e-02,  1.4736e-01, -9.7786e-02, -1.4877e-01,
          8.4619e-02,  1.0173e-01, -1.3304e-01, -9.2328e-02,  8.0148e-02,
         -1.9537e-02,  1.5918e-01, -7.4469e-02,  6.7214e-02,  1.4649e-01,
          3.5154e-02,  1.4798e-01],
        [-9.3413e-02,  7.5659e-02,  7.9821e-02, -1.4034e-01,  1.6196e-02,
          7.4528e-02, -1.6899e-01,  2.4329e-02, -8.6301e-02, -1.3981e-01,
          1.1187e-01, -1.4892e-02,  1.5713e-01,  6.4640e-02,  1.7907e-01,
         -2.3316e-01, -2.1543e-01,  1.0326e-01, -7.0241e-03,  3.3781e-03,
          5.9364e-02, -1.1096e-01, -9.1796e-02,  7.4897e-02, -4.7149e-02,
          7.4359e-02,  5.5514e-02, -3.1320e-02, -3.0907e-02,  7.9480e-02,
         -5.4534e-02, -1.5999e-01],
        [-1.2732e-01, -1.7882e-01, -8.3127e-02,  7.7908e-02,  6.2619e-02,
         -5.8621e-02,  1.1875e-01, -2.6038e-02, -1.6590e-02, -2.0824e-01,
         -1.4932e-01, -1.8876e-01,  2.4817e-02, -6.3075e-02, -3.7470e-02,
         -2.6565e-02,  6.2494e-02, -8.6009e-02,  6.5158e-02,  9.3448e-02,
          1.3756e-02, -4.4713e-02, -1.3688e-01, -1.8050e-01, -1.3403e-01,
         -6.2020e-02, -8.4498e-02,  2.3456e-02, -4.8734e-02, -5.4272e-02,
          2.5074e-02, -1.3440e-01],
        [-2.2351e-01, -8.6242e-02, -2.2438e-01,  4.8615e-02,  1.9138e-01,
          3.1388e-02,  3.6965e-02,  1.0987e-01,  1.0231e-01, -1.0956e-02,
         -1.5670e-01,  1.9453e-01,  1.4618e-01, -6.7570e-02,  1.4360e-02,
          6.3942e-02,  1.1637e-01,  8.4379e-02,  1.3041e-01,  1.1628e-01,
         -8.6275e-02,  1.8587e-01,  7.8917e-02,  2.2270e-05, -1.7559e-01,
          1.5645e-01,  8.2352e-02,  5.7517e-02, -7.8323e-02, -8.6905e-02,
          1.7705e-01, -1.3104e-01]], device='cuda:0') torch.Size([16, 32])
fc_blocks.1.0.bias tensor([ 0.0951,  0.1315, -0.1196,  0.2003,  0.0258,  0.0388, -0.0766, -0.1143,
        -0.1054,  0.0019,  0.0655,  0.2036,  0.0113,  0.0045,  0.0461, -0.1753],
       device='cuda:0') torch.Size([16])
fc_blocks.2.0.weight tensor([[-4.1237e-02,  1.8011e-01, -1.7290e-01,  1.7577e-01,  1.3001e-01,
          8.6857e-02, -2.8980e-02,  7.9851e-02, -6.0999e-02, -3.2752e-02,
          2.1467e-01,  1.4299e-01,  9.7191e-02, -8.6342e-02, -1.5408e-01,
         -1.9793e-01],
        [-1.8892e-01,  1.7249e-01, -5.5814e-02, -1.1437e-01, -7.1363e-02,
         -5.5765e-02, -2.2031e-02,  6.5096e-03,  1.5471e-01, -1.5638e-01,
          1.8445e-04, -1.2621e-01, -9.6859e-02, -1.7970e-01, -9.8969e-02,
         -2.3140e-01],
        [ 5.2986e-02, -1.5547e-02,  1.4315e-01, -2.6720e-02,  2.7161e-01,
          3.7242e-02, -1.3497e-01,  3.0052e-01, -2.7693e-01, -2.0662e-02,
         -1.4333e-01, -5.0021e-02,  8.0553e-02, -4.0038e-02, -3.8688e-02,
          9.9229e-02],
        [ 6.4559e-02, -1.6424e-01,  1.4993e-01, -1.8942e-01, -1.7207e-01,
          7.5973e-02, -2.5732e-01,  1.5866e-01, -4.8349e-02,  8.9000e-03,
          4.6806e-03, -1.0940e-01,  1.9023e-01,  1.2683e-01,  1.4966e-01,
          2.0456e-01],
        [-2.7671e-01, -2.7871e-01,  9.0515e-02, -1.6573e-03,  6.2787e-02,
          3.0351e-01,  1.3593e-01, -2.9304e-01,  6.0529e-02,  1.5013e-01,
         -9.0512e-02,  1.4130e-01, -9.0861e-02, -8.3060e-02,  1.2848e-01,
         -2.3926e-01],
        [ 4.1574e-02,  8.4388e-02,  2.3201e-01,  1.1647e-02, -2.0881e-02,
          9.0812e-02,  2.7331e-03, -1.2097e-01,  1.9879e-01, -2.1583e-01,
          1.4859e-01,  1.3294e-01, -1.2246e-01, -1.4983e-01,  2.0436e-01,
          9.8329e-02],
        [ 5.4344e-02,  5.2698e-02, -3.0127e-01,  4.2427e-02,  1.9404e-01,
         -3.3910e-02,  2.4221e-02, -8.4113e-02,  1.1239e-01, -2.3695e-01,
          1.9970e-01, -9.5986e-02, -1.2674e-01, -2.0079e-01,  1.2478e-01,
         -2.7703e-01],
        [-2.7814e-01, -2.4329e-01, -2.3041e-01,  3.9432e-02, -1.2131e-02,
          3.0213e-01, -2.0262e-01,  2.1525e-02,  5.6652e-02,  1.5436e-01,
          8.6529e-02,  1.2723e-01, -2.4380e-01, -2.6158e-02, -1.4094e-01,
         -3.5795e-02]], device='cuda:0') torch.Size([8, 16])
fc_blocks.2.0.bias tensor([ 0.2959, -0.0070, -0.2288, -0.1491, -0.2995, -0.0462, -0.0855, -0.1596],
       device='cuda:0') torch.Size([8])
fc_blocks.3.0.weight tensor([[ 0.2475,  0.2553,  0.1012, -0.0113, -0.1775,  0.1897,  0.0878, -0.2270],
        [-0.1902,  0.0286,  0.2599, -0.0673,  0.2170,  0.1261,  0.2606,  0.1342],
        [ 0.1603, -0.0091, -0.0335, -0.1949, -0.1484,  0.1405,  0.0366, -0.1004],
        [ 0.0674,  0.3534, -0.0444,  0.3205,  0.1804,  0.0493,  0.2772,  0.2496]],
       device='cuda:0') torch.Size([4, 8])
fc_blocks.3.0.bias tensor([ 0.2836,  0.0016,  0.4206, -0.3959], device='cuda:0') torch.Size([4])
fc_blocks.4.0.weight tensor([[-0.1976,  0.0437,  0.2467, -0.5628],
        [ 0.5137, -0.2021,  0.0781, -0.5186]], device='cuda:0') torch.Size([2, 4])
fc_blocks.4.0.bias tensor([-0.2948, -0.3967], device='cuda:0') torch.Size([2])
Train Loss : 656.874, Val Loss : 2216.645
======> Trajectory Loss : 559.018, Gravity Loss : 0.001, EndOfTrajectory Loss : 0.979, BelowGroundPenalize Loss : 0.000
===> [Minibatch 11/129].........recurrent_blocks.0.weight_ih_l0 tensor([[ 1.6711e-01,  5.0441e-02, -1.1655e-01],
        [-9.4464e-02, -5.6028e-02,  2.1094e-01],
        [ 5.6167e-02,  7.5201e-02,  1.1462e-01],
        [ 1.8235e-02, -1.0969e-01,  8.0013e-02],
        [-3.9180e-02, -9.3313e-02, -6.8182e-02],
        [ 1.1239e-02, -1.5907e-01,  1.8107e-01],
        [-5.9653e-02, -1.8717e-01,  1.8816e-01],
        [ 1.3205e-01,  1.5956e-01, -4.1418e-02],
        [-1.3278e-01, -1.3412e-01,  1.0638e-04],
        [ 1.4592e-01,  6.3088e-02,  1.4227e-01],
        [-1.2472e-01, -2.2102e-01,  8.6139e-02],
        [-1.8192e-02,  1.1112e-01, -7.4104e-03],
        [-1.1827e-01,  1.8545e-01,  4.6079e-02],
        [-1.3181e-01, -1.1997e-01,  1.3307e-01],
        [-1.6603e-01,  3.7441e-02, -4.1832e-02],
        [-1.0336e-01, -2.7612e-02,  2.3773e-01],
        [ 5.0125e-02, -1.7534e-01, -7.4416e-02],
        [ 1.0224e-01,  1.2064e-01,  1.0821e-02],
        [-6.0518e-02, -1.9221e-02, -2.0387e-02],
        [-2.2143e-01, -2.1403e-01, -2.5692e-03],
        [-8.7018e-02,  4.4687e-02,  1.9588e-01],
        [ 7.0152e-02,  1.4580e-02,  2.4454e-01],
        [ 1.1492e-02, -1.0520e-01, -9.6676e-02],
        [ 3.3781e-02, -1.6529e-01,  1.9193e-03],
        [-1.3551e-01, -1.7946e-01,  7.1595e-02],
        [-1.9905e-01, -1.6778e-01, -4.1716e-02],
        [-9.4280e-02,  1.4328e-01,  1.2141e-01],
        [ 9.1812e-02, -2.1579e-01, -1.5555e-01],
        [ 5.6115e-02, -1.0594e-01,  1.3266e-01],
        [-1.6307e-01, -8.0154e-02,  1.7765e-01],
        [ 5.8387e-02, -1.2340e-01, -1.1912e-01],
        [-1.0680e-02, -2.1218e-02, -3.3295e-03],
        [-1.1954e-01,  8.3704e-02, -1.9210e-01],
        [ 3.5548e-02,  4.0790e-03,  3.0849e-02],
        [-1.5119e-02,  1.6579e-01,  8.2528e-02],
        [ 2.0525e-01,  9.5781e-02, -4.2033e-02],
        [-1.3707e-01, -1.3267e-02,  8.9496e-02],
        [-4.8300e-02, -1.5314e-01, -1.1444e-01],
        [-6.5465e-02, -1.8993e-01,  9.2572e-02],
        [ 1.5591e-01,  1.1750e-01,  1.6257e-01],
        [ 1.8073e-01, -8.8319e-02, -1.9046e-02],
        [ 6.1726e-02,  9.3688e-02, -8.0826e-02],
        [-1.1681e-01,  7.3398e-02,  1.2762e-01],
        [ 2.0628e-01,  9.4784e-02,  2.5183e-01],
        [-1.1754e-01,  1.4101e-02, -1.8010e-01],
        [-1.1640e-02, -8.0095e-02, -1.3629e-01],
        [-1.0454e-01, -6.1223e-02,  1.5458e-01],
        [-1.2897e-01, -1.7723e-02, -1.3928e-02],
        [ 6.5093e-02, -1.1698e-01,  3.5073e-02],
        [ 4.4830e-03, -1.8811e-01,  1.1578e-01],
        [-2.1538e-01,  1.3127e-01,  6.2449e-02],
        [-5.2778e-02, -1.9102e-01,  8.6142e-03],
        [-1.9427e-01, -7.8253e-02,  2.2593e-01],
        [ 8.0474e-02, -4.3822e-02,  1.2084e-01],
        [-8.4568e-02, -1.8163e-01,  1.9237e-01],
        [ 1.8569e-01,  8.0666e-02,  2.1994e-01],
        [-2.1155e-01, -4.2624e-02, -8.8850e-02],
        [ 4.9606e-02, -1.8372e-01, -1.0616e-01],
        [ 2.9502e-02,  1.4914e-01, -2.0380e-02],
        [-2.7877e-02, -9.4193e-02,  1.4589e-01],
        [ 1.6040e-01,  3.0563e-02,  2.3885e-01],
        [-2.0419e-01, -1.1891e-01, -1.4579e-03],
        [-7.2434e-02,  1.5841e-02, -6.0721e-02],
        [-5.0844e-02, -2.1920e-01, -3.5932e-03],
        [ 4.0776e-02,  7.4775e-02,  5.2800e-03],
        [-1.4477e-01,  5.3993e-02, -3.5361e-02],
        [-5.0714e-02, -1.6775e-01, -2.0393e-01],
        [ 7.2361e-02,  8.2666e-02,  8.3763e-03],
        [-1.2935e-01, -2.0883e-01,  4.0079e-04],
        [-3.3486e-02, -2.2340e-01,  1.5691e-01],
        [-8.7937e-03,  3.7928e-02, -1.2486e-01],
        [ 1.2378e-01,  1.4930e-02,  4.5376e-02],
        [-1.8726e-01,  1.8987e-01,  1.2642e-01],
        [-4.0785e-02, -9.0551e-02, -4.7308e-02],
        [-8.8755e-02, -1.6232e-01, -7.7986e-02],
        [ 8.3159e-02,  3.6633e-02,  1.0581e-01],
        [ 8.1277e-02,  1.2590e-01, -1.7069e-01],
        [-1.7127e-01,  1.8364e-01,  5.6004e-02],
        [-1.2131e-01,  4.0398e-02,  1.8318e-02],
        [-3.0622e-03,  1.5144e-01, -1.8644e-01],
        [-3.3401e-02, -5.9953e-02, -1.4349e-02],
        [ 1.2559e-01, -1.5553e-01,  1.7034e-01],
        [ 9.3222e-03,  9.5339e-02, -3.4038e-02],
        [ 4.3949e-02,  2.1133e-01,  4.1898e-02],
        [-1.2608e-01, -1.1232e-01,  8.1539e-02],
        [-1.5894e-01,  1.9181e-01, -5.8371e-02],
        [-8.2529e-02,  2.1863e-01, -1.7983e-01],
        [ 2.7395e-02, -1.7129e-01,  2.9020e-02],
        [ 4.6824e-02,  1.5936e-01, -1.1381e-01],
        [ 8.9757e-02, -3.7056e-02, -5.8185e-02],
        [-1.5847e-01,  1.0948e-01, -8.5639e-02],
        [-1.6455e-01,  1.3177e-02,  1.2362e-01],
        [ 4.0042e-02, -9.7754e-02,  1.8003e-01],
        [ 8.2406e-02, -9.9832e-02,  6.1819e-02],
        [-7.1123e-02,  6.0750e-02,  1.1598e-02],
        [-6.7512e-02, -7.1137e-02,  2.2239e-01],
        [-7.0379e-02, -1.8405e-02, -1.2348e-01],
        [-2.0934e-01, -2.0131e-01,  1.5156e-01],
        [ 1.6926e-01, -5.6755e-02, -1.3395e-01],
        [-2.8566e-02, -1.5552e-03,  1.9852e-01],
        [-1.6924e-01, -1.0020e-01, -1.5100e-01],
        [ 9.6522e-02,  1.4612e-02, -6.0676e-02],
        [-4.7893e-02,  1.2515e-01, -8.5931e-02],
        [ 3.5327e-02,  1.9066e-02, -5.8261e-02],
        [-3.9503e-02, -1.2879e-01,  1.2837e-01],
        [ 9.3743e-02,  2.0889e-02,  1.6812e-01],
        [-1.5378e-01, -3.9654e-02,  1.5403e-01],
        [ 2.0389e-01,  5.9867e-02,  9.4171e-02],
        [-4.6881e-02, -1.0649e-01, -1.5905e-01],
        [ 1.7833e-01, -1.3431e-01,  1.1218e-01],
        [-5.2606e-02, -7.3544e-02, -1.3357e-02],
        [ 9.8341e-03,  6.5328e-03,  4.3691e-02],
        [ 1.1902e-01, -1.4548e-01,  2.2795e-01],
        [-8.6707e-02, -1.5237e-01, -2.6488e-03],
        [-8.5918e-02, -4.8683e-02, -2.2113e-02],
        [ 6.6577e-02,  6.0515e-02,  1.2719e-01],
        [ 1.1234e-02,  3.4314e-02, -6.9965e-02],
        [ 2.0736e-01, -1.5348e-01,  1.9529e-01],
        [ 6.5781e-02, -1.9802e-01,  1.7030e-01],
        [-5.0889e-02, -1.2357e-01, -6.1822e-02],
        [ 1.3483e-02, -2.3911e-01, -1.2638e-02],
        [-1.0606e-01, -6.5999e-02,  1.2991e-01],
        [ 5.2323e-02, -1.0490e-01,  1.0244e-01],
        [-2.0462e-01, -2.1398e-01,  1.4932e-01],
        [ 1.9277e-01, -2.3032e-01, -4.5324e-02],
        [-1.0359e-01,  7.5499e-02,  8.4515e-02],
        [ 1.9649e-01, -1.8114e-01,  1.7235e-01],
        [-6.9775e-05, -7.6238e-03, -8.5901e-03]], device='cuda:0') torch.Size([128, 3])
recurrent_blocks.0.weight_hh_l0 tensor([[ 0.0421,  0.0622, -0.0924,  ...,  0.1374,  0.1710,  0.0669],
        [ 0.0077,  0.0617,  0.0505,  ...,  0.0920,  0.0154, -0.0482],
        [ 0.0589, -0.0487, -0.0515,  ..., -0.1771, -0.1878,  0.0130],
        ...,
        [-0.1427,  0.0470, -0.0439,  ..., -0.1031,  0.0575,  0.0190],
        [ 0.0616,  0.0302, -0.1454,  ...,  0.0170, -0.0886,  0.1954],
        [-0.0616,  0.1424, -0.0965,  ..., -0.1750, -0.0152, -0.0276]],
       device='cuda:0') torch.Size([128, 32])
recurrent_blocks.0.bias_ih_l0 tensor([-0.1031,  0.1031, -0.1366,  0.1570,  0.1400,  0.2274, -0.0890,  0.0045,
         0.1157,  0.0432, -0.0974,  0.1593, -0.2281,  0.0137,  0.1509,  0.1372,
         0.1178,  0.1281,  0.0257,  0.1400,  0.0071,  0.0565, -0.0678,  0.1550,
        -0.1013,  0.2093,  0.0866,  0.0216,  0.1119,  0.1365, -0.0741, -0.0139,
        -0.0225, -0.0560,  0.0888,  0.1778,  0.0019, -0.0672,  0.1106,  0.1086,
         0.0184,  0.0961,  0.1517,  0.2027, -0.2069,  0.0130,  0.0199, -0.0491,
         0.1306,  0.0431,  0.1302,  0.0536,  0.1161,  0.0545, -0.0452,  0.0866,
         0.1967,  0.0607,  0.1075, -0.1333, -0.0835,  0.1116,  0.0647,  0.0933,
        -0.0342,  0.1495, -0.1303,  0.1635,  0.2037,  0.0998,  0.0563,  0.0326,
        -0.1313,  0.0354,  0.2151,  0.1804,  0.0057,  0.0661,  0.0406, -0.1486,
         0.1483,  0.1090,  0.1267, -0.1777,  0.0530, -0.2505,  0.0123,  0.1680,
        -0.2038, -0.1960,  0.1905, -0.0283,  0.2584, -0.2014, -0.2169,  0.1829,
        -0.0009,  0.1934,  0.0810,  0.1120, -0.0433,  0.0715, -0.0977,  0.0885,
        -0.0250,  0.0793,  0.2523,  0.2018, -0.0508,  0.0069, -0.0429,  0.0922,
         0.0061,  0.0073,  0.0694, -0.0984,  0.1021,  0.1135,  0.0830, -0.0367,
        -0.0508,  0.1865,  0.0253, -0.0819,  0.2062, -0.0273,  0.1928, -0.0500],
       device='cuda:0') torch.Size([128])
recurrent_blocks.0.bias_hh_l0 tensor([-0.0115, -0.0119, -0.0110,  0.1424, -0.0727,  0.1990,  0.0913,  0.0788,
        -0.1457,  0.0370,  0.1807,  0.0652, -0.0491, -0.1858, -0.0442,  0.0395,
         0.1098,  0.1362, -0.1241,  0.1542,  0.0389,  0.2254,  0.0789,  0.1300,
         0.1592, -0.1158, -0.0829,  0.1395,  0.0614,  0.0553,  0.0009, -0.0832,
        -0.1613,  0.2111, -0.0594, -0.0671,  0.0630,  0.1199, -0.1103,  0.0205,
         0.1252,  0.0849,  0.0159,  0.2209, -0.2087,  0.0864,  0.1089,  0.0802,
        -0.0571, -0.1172,  0.0693, -0.0470,  0.1380,  0.0957, -0.0309,  0.1843,
        -0.1029,  0.1533,  0.0095,  0.1182,  0.1183,  0.1667, -0.0656,  0.1082,
        -0.0018,  0.2395, -0.2077,  0.0908,  0.1084, -0.0046, -0.2012,  0.1546,
         0.0430, -0.2340,  0.1514,  0.1970,  0.0260, -0.1470,  0.2613, -0.0623,
         0.1381,  0.2102,  0.1966, -0.1952,  0.1627,  0.0362, -0.2066,  0.0808,
        -0.0404, -0.1609,  0.1809,  0.1694, -0.0264, -0.0983, -0.0964,  0.1158,
        -0.0039, -0.0815,  0.1828,  0.1796, -0.0105, -0.0468, -0.0020,  0.1698,
         0.1705,  0.2359,  0.1203,  0.0910, -0.0400, -0.0291,  0.0211,  0.0137,
         0.0303, -0.1103, -0.0973,  0.0495, -0.0152,  0.1945, -0.0178, -0.0271,
        -0.1193,  0.1793,  0.1108,  0.0155, -0.0154, -0.0261, -0.0430,  0.0944],
       device='cuda:0') torch.Size([128])
recurrent_blocks.0.weight_ih_l0_reverse tensor([[ 2.7935e-02, -2.0401e-01,  1.4482e-03],
        [ 1.7430e-02, -3.9154e-02, -2.1777e-02],
        [-4.8557e-02,  1.5015e-02,  9.0015e-02],
        [-1.4555e-01, -3.9337e-02,  1.1258e-01],
        [ 2.3847e-01,  1.5840e-01, -2.0988e-02],
        [-7.7191e-02, -7.9969e-02,  2.2069e-01],
        [ 7.1742e-02,  3.6880e-02, -7.3664e-02],
        [ 9.3466e-03,  1.8349e-02,  1.3727e-01],
        [ 5.8248e-02, -6.7786e-02, -9.7636e-02],
        [-7.9243e-02,  2.0884e-01, -2.5883e-01],
        [-9.6476e-02,  1.9038e-02,  7.5513e-02],
        [-1.6956e-01,  1.7396e-02, -1.8539e-01],
        [ 1.2963e-01,  6.0102e-02,  3.7460e-02],
        [-5.2078e-02, -3.0813e-02,  1.5026e-01],
        [ 8.9009e-02, -1.1244e-01,  1.4847e-02],
        [-4.1404e-02, -1.1908e-01,  1.7501e-02],
        [-7.5209e-02,  4.7955e-03,  2.5196e-02],
        [-9.3713e-02,  6.4955e-03, -6.5627e-02],
        [-2.1399e-01, -1.0750e-02, -6.7004e-02],
        [ 7.6557e-02, -1.1603e-01,  1.8071e-01],
        [-4.3641e-02,  9.2589e-02, -9.9479e-02],
        [-1.2594e-01, -1.5251e-01,  2.0221e-02],
        [-8.5094e-02,  8.0420e-02,  2.1691e-02],
        [ 4.2870e-03,  1.1846e-01, -1.4448e-01],
        [-1.9929e-01,  4.6480e-03,  1.2716e-02],
        [-2.1760e-01, -2.0748e-01,  4.0827e-02],
        [-4.5188e-02,  6.9284e-02, -8.8960e-02],
        [-2.2733e-01,  6.2045e-02,  9.6801e-02],
        [-6.6633e-02,  1.7895e-01,  2.3861e-01],
        [ 1.5053e-01,  3.6910e-02, -1.7862e-01],
        [-9.5156e-02,  1.3172e-01, -1.6009e-01],
        [-1.8388e-01, -2.0734e-01, -4.5769e-02],
        [-1.9870e-01, -1.0396e-01,  1.0150e-01],
        [-1.9793e-01,  2.7340e-02,  2.0075e-01],
        [-1.9732e-01,  1.4185e-01,  1.6239e-01],
        [ 1.0002e-02, -6.3240e-02, -1.1694e-01],
        [ 2.0930e-01,  1.0072e-01,  1.9693e-01],
        [-4.6287e-02,  4.7879e-02,  1.5578e-01],
        [ 1.0775e-01, -1.2010e-02,  1.1507e-01],
        [-1.9096e-01, -7.4862e-02,  9.6713e-02],
        [ 7.2098e-02, -7.6091e-03,  7.2748e-02],
        [ 1.7584e-01, -1.4891e-02, -1.6715e-01],
        [-2.3241e-01, -6.2618e-02, -1.1327e-01],
        [ 1.4183e-01,  1.5280e-01, -8.2988e-02],
        [ 6.5672e-02,  1.2814e-01,  8.2233e-02],
        [ 1.4167e-01, -1.6235e-01, -8.3102e-02],
        [-1.6229e-01,  1.0982e-01, -1.3969e-01],
        [ 4.5055e-02, -2.5465e-01, -2.6574e-03],
        [-1.3878e-01, -1.1774e-01, -2.1581e-01],
        [-9.0963e-02,  1.7733e-01,  1.7529e-01],
        [-1.7500e-02,  1.1949e-01,  1.4197e-01],
        [ 2.7568e-02, -1.2789e-01,  9.4439e-02],
        [-6.7000e-02, -9.8581e-02,  7.1841e-02],
        [-2.3385e-03, -2.3997e-01,  2.4698e-01],
        [-8.2815e-02,  1.2131e-01, -1.8071e-01],
        [-5.6320e-02, -7.2895e-02,  1.2388e-01],
        [-6.8060e-02,  7.2151e-03,  1.5389e-01],
        [-3.2692e-03, -1.2111e-01,  2.0684e-01],
        [ 4.1786e-03,  7.5555e-02,  6.3865e-02],
        [-2.2600e-01, -3.5548e-04,  2.5121e-03],
        [-1.0221e-01,  1.0743e-01,  1.7011e-01],
        [-8.4247e-02, -1.1395e-02, -2.2264e-01],
        [-9.9251e-02,  5.0942e-03, -5.5064e-02],
        [-2.4409e-01,  6.3744e-02,  1.8200e-01],
        [ 1.6365e-01,  1.4486e-02, -1.9937e-01],
        [ 2.0516e-02, -1.2863e-01, -1.0106e-01],
        [-9.7910e-02, -1.6453e-02, -1.8965e-02],
        [-1.4296e-01, -8.2575e-02, -1.8557e-01],
        [-9.7192e-02, -7.2580e-02, -1.9199e-01],
        [ 2.9095e-02, -9.9124e-02,  4.4168e-02],
        [-4.5948e-02, -3.2404e-02, -2.3872e-01],
        [-1.3806e-01,  1.4358e-02,  1.9705e-01],
        [ 9.0731e-03,  2.2885e-01, -1.2696e-01],
        [-9.5677e-02, -2.2263e-01, -6.8856e-02],
        [-8.8519e-03,  3.8690e-02, -3.3122e-02],
        [-4.5708e-02, -9.6265e-02,  8.7880e-02],
        [-3.1827e-02,  3.5253e-02, -8.1664e-02],
        [-6.2810e-02, -4.0898e-02,  1.5039e-01],
        [-1.6321e-01, -1.5867e-01,  1.0833e-01],
        [ 8.0091e-02, -1.4246e-02,  8.8374e-02],
        [ 5.5869e-02, -1.1992e-01,  9.1419e-02],
        [ 3.7013e-02, -6.1284e-02, -9.1584e-02],
        [-2.9610e-02, -1.7113e-01,  2.1631e-01],
        [ 8.6642e-02,  1.7639e-01, -1.2771e-01],
        [ 1.4034e-01,  1.5871e-01, -2.2046e-01],
        [ 1.8047e-02, -1.7665e-01,  2.3712e-01],
        [ 7.0050e-02, -3.8865e-02,  1.4794e-01],
        [-7.2941e-02,  7.1546e-02,  1.3473e-01],
        [ 3.4718e-02, -3.3692e-03, -4.9169e-02],
        [ 1.1310e-01, -6.9453e-02,  6.5592e-02],
        [-1.3326e-01, -9.5268e-02, -1.2875e-01],
        [-1.3032e-01, -9.9324e-02,  2.2944e-01],
        [-5.6005e-02,  1.4513e-01,  1.7060e-01],
        [-1.2399e-01, -1.1118e-02, -1.4723e-01],
        [-1.6256e-01,  3.9986e-02,  2.1224e-01],
        [-9.6307e-02, -2.1163e-01,  1.6643e-01],
        [-4.9784e-02, -1.7543e-01,  1.2644e-01],
        [-6.4080e-02, -8.5939e-02,  5.5209e-02],
        [-1.3119e-01, -8.2234e-02,  7.9236e-02],
        [ 1.8550e-01, -1.4985e-02, -1.2935e-01],
        [ 8.6882e-02,  1.4114e-01, -4.1523e-02],
        [ 1.0610e-01, -2.3396e-01,  4.1587e-02],
        [-2.2801e-02,  1.2682e-02,  2.4518e-01],
        [ 3.7582e-02,  7.7784e-02,  9.8600e-02],
        [-3.7172e-02, -2.3367e-01,  8.6105e-02],
        [ 9.9423e-02,  4.2117e-02,  2.8505e-02],
        [ 1.8820e-02,  2.8361e-02,  1.9003e-01],
        [ 1.2183e-01, -1.0567e-01, -9.6271e-02],
        [ 1.6455e-01, -1.0561e-01,  1.4669e-01],
        [ 1.0317e-02, -1.5407e-01,  1.3113e-01],
        [ 9.6269e-02,  1.9366e-04,  1.5570e-01],
        [ 6.1073e-02, -1.3720e-01, -1.1999e-01],
        [ 1.6203e-01,  6.4728e-02, -2.2007e-01],
        [-1.6579e-01, -5.7439e-02,  1.0265e-01],
        [ 3.6114e-02,  5.7398e-02,  1.7662e-01],
        [ 1.2625e-01, -2.3250e-01, -4.9772e-02],
        [ 4.7267e-02,  4.8925e-02, -5.0694e-02],
        [-2.0270e-01, -5.4509e-02,  2.1687e-01],
        [ 9.9803e-02, -1.7705e-01,  1.2481e-02],
        [-1.5611e-01, -6.0640e-02, -5.2407e-03],
        [ 7.3329e-02, -1.1320e-01, -8.1188e-02],
        [-1.8019e-01,  9.2756e-02,  1.0983e-01],
        [ 1.0855e-02, -5.8699e-02, -3.2225e-03],
        [-1.3289e-01, -7.8987e-02,  9.4979e-02],
        [ 8.3408e-03, -3.9619e-02, -1.0042e-01],
        [ 1.4004e-01, -5.3170e-03,  7.8988e-03],
        [-1.6532e-02, -3.1286e-02,  1.0070e-01],
        [-6.5182e-02, -1.8499e-01, -7.5741e-02]], device='cuda:0') torch.Size([128, 3])
recurrent_blocks.0.weight_hh_l0_reverse tensor([[ 0.0095,  0.1235, -0.1333,  ..., -0.0662, -0.0485,  0.0623],
        [-0.0290, -0.0697,  0.2155,  ..., -0.1519,  0.0389,  0.0613],
        [-0.1972,  0.0221,  0.2079,  ...,  0.1849,  0.0234,  0.1309],
        ...,
        [ 0.1244,  0.1155, -0.1026,  ..., -0.1645, -0.0300,  0.0914],
        [ 0.0662,  0.1953,  0.2001,  ..., -0.0803,  0.1882,  0.0202],
        [ 0.0011, -0.0849,  0.0112,  ..., -0.0839,  0.2422,  0.0953]],
       device='cuda:0') torch.Size([128, 32])
recurrent_blocks.0.bias_ih_l0_reverse tensor([ 0.1793, -0.0433, -0.0262,  0.1093, -0.0003,  0.0996,  0.1061, -0.1165,
        -0.0464, -0.1635,  0.1349,  0.1308,  0.2297,  0.0893, -0.0589,  0.0769,
        -0.1363, -0.0408,  0.2014, -0.0942, -0.0927,  0.2042, -0.1741, -0.1653,
         0.1778, -0.0606,  0.1530, -0.0412,  0.1310,  0.0027, -0.0563,  0.1119,
         0.1587,  0.1786, -0.0078,  0.0427,  0.1397,  0.0729,  0.0977, -0.1203,
         0.1402, -0.0259, -0.0984, -0.0997, -0.0798,  0.1304,  0.0823,  0.0865,
        -0.1850, -0.0619, -0.0317,  0.2074,  0.1031,  0.2243,  0.1108, -0.0929,
         0.0181,  0.1408, -0.1074,  0.1051, -0.1048, -0.0194, -0.1820, -0.0259,
        -0.1828, -0.1403,  0.1089, -0.1448, -0.1914,  0.1669, -0.2321,  0.1029,
        -0.0602,  0.0615, -0.1741,  0.0081, -0.2588,  0.0692,  0.0049,  0.1463,
        -0.0121, -0.0207,  0.1606,  0.0615, -0.1093,  0.1851, -0.0783,  0.0320,
        -0.0305, -0.0867, -0.0884,  0.0203,  0.1336,  0.0552, -0.0336,  0.1018,
         0.0190,  0.1598,  0.2082, -0.1310,  0.1663, -0.0669,  0.2235,  0.1951,
        -0.0150, -0.1556,  0.1841, -0.1256,  0.2357,  0.0859, -0.1130,  0.0167,
         0.0410,  0.0471,  0.1664,  0.1680,  0.0580,  0.2202,  0.0371, -0.0652,
        -0.0411,  0.1897, -0.0924,  0.1578, -0.0583, -0.0928, -0.0930, -0.0171],
       device='cuda:0') torch.Size([128])
recurrent_blocks.0.bias_hh_l0_reverse tensor([ 0.1592,  0.1204,  0.0900, -0.1296, -0.0641,  0.0749,  0.0409,  0.1045,
         0.0394,  0.0004, -0.0322,  0.1076, -0.0544, -0.1128, -0.1043, -0.0781,
        -0.2313, -0.0981,  0.1412, -0.1127,  0.1210, -0.0539, -0.1712,  0.1189,
         0.0296, -0.0414,  0.0811,  0.0663,  0.0770,  0.0913, -0.1083,  0.0865,
        -0.0282,  0.1817,  0.0751,  0.1471,  0.0439,  0.0789,  0.0761, -0.0825,
         0.1827, -0.2341, -0.1234,  0.0701,  0.1632, -0.0713,  0.0622,  0.0442,
        -0.2213, -0.0493, -0.1161, -0.0780, -0.0261,  0.0416, -0.1225, -0.0321,
         0.0961, -0.0351,  0.1257, -0.0791, -0.0535,  0.0569, -0.0086,  0.1966,
        -0.1252, -0.1700,  0.0832,  0.0179, -0.0877,  0.0903,  0.0257, -0.0394,
        -0.1543, -0.0819, -0.0484,  0.1747, -0.2513,  0.1838,  0.1752,  0.0994,
        -0.0486, -0.2162, -0.0990, -0.1692, -0.0122,  0.0232,  0.0968, -0.0313,
        -0.1369, -0.1971, -0.0463,  0.2428,  0.1473, -0.0575,  0.0931,  0.0264,
         0.1558, -0.0761,  0.0098, -0.1876,  0.1886, -0.0661, -0.0294, -0.0498,
         0.1924, -0.0450,  0.0138, -0.1462,  0.0886, -0.0354, -0.1647,  0.1543,
         0.0471, -0.0883,  0.1274,  0.1831, -0.0727,  0.0685, -0.1880, -0.0240,
         0.0425, -0.0054, -0.0003, -0.0766,  0.1520,  0.0781,  0.0719,  0.0169],
       device='cuda:0') torch.Size([128])
recurrent_blocks.1.weight_ih_l0 tensor([[-0.1656,  0.1049,  0.0675,  ..., -0.0561,  0.2450, -0.0664],
        [-0.0792,  0.0672, -0.0282,  ...,  0.0115, -0.0685,  0.2025],
        [ 0.1836, -0.0647, -0.0585,  ..., -0.0691,  0.0103,  0.0953],
        ...,
        [ 0.1589, -0.0080,  0.0966,  ..., -0.1090,  0.0465,  0.1344],
        [ 0.0090,  0.2068,  0.0333,  ..., -0.2309,  0.0223,  0.0484],
        [-0.1979,  0.1745, -0.0595,  ..., -0.0470, -0.0422,  0.0444]],
       device='cuda:0') torch.Size([128, 64])
recurrent_blocks.1.weight_hh_l0 tensor([[-1.4887e-01,  1.8563e-01, -1.4561e-01,  ...,  1.2584e-01,
          8.4993e-02,  3.6299e-02],
        [ 7.6706e-02,  1.7095e-01,  5.0835e-02,  ...,  2.2593e-01,
         -8.7866e-02,  1.2749e-01],
        [ 2.0497e-01, -1.0381e-01, -5.6330e-02,  ...,  5.2238e-02,
          8.4180e-02, -9.6444e-02],
        ...,
        [ 5.4070e-02, -4.2747e-02, -3.2721e-02,  ..., -1.0918e-02,
         -1.6482e-01, -1.1978e-01],
        [ 4.8286e-03,  1.6973e-01, -2.0002e-02,  ..., -1.0224e-01,
         -1.3782e-01,  2.5638e-02],
        [ 1.6312e-01,  7.2213e-05,  3.1220e-02,  ...,  1.4836e-01,
         -1.2512e-01,  6.4544e-02]], device='cuda:0') torch.Size([128, 32])
recurrent_blocks.1.bias_ih_l0 tensor([ 0.0988,  0.1833,  0.1104, -0.0022,  0.1305, -0.0131,  0.0132, -0.0434,
         0.0758, -0.1167, -0.1041,  0.1508,  0.0088,  0.0931,  0.0718,  0.2540,
         0.1119,  0.1313, -0.0777,  0.2287,  0.0453,  0.0092,  0.0156, -0.1189,
         0.0977, -0.0202, -0.2099,  0.1656,  0.1525, -0.2322, -0.0392, -0.0909,
        -0.0017,  0.0984,  0.1280,  0.0708, -0.1143, -0.0840,  0.2251,  0.2072,
         0.0825,  0.0071,  0.0256, -0.0067,  0.0728, -0.1117,  0.0264,  0.0920,
         0.0756,  0.0821,  0.1820, -0.0543,  0.0849, -0.1135,  0.1872, -0.1542,
         0.0838,  0.1082, -0.2065,  0.0011,  0.0829,  0.0956,  0.0898,  0.0311,
         0.0273,  0.2596,  0.1191,  0.1202, -0.0472,  0.0996,  0.0465, -0.2049,
         0.0413,  0.0217, -0.0021, -0.0618,  0.0515,  0.1669, -0.0104, -0.1646,
        -0.1126, -0.0494,  0.0030,  0.0440,  0.2071, -0.0479,  0.0302,  0.0464,
        -0.1168, -0.0451, -0.0021, -0.1417,  0.0973, -0.0835,  0.1158,  0.1619,
         0.1096,  0.0387,  0.1603,  0.0209, -0.0623,  0.0074,  0.1474, -0.0716,
        -0.1121, -0.1187,  0.0958, -0.0019, -0.0026,  0.1313,  0.0501,  0.1682,
        -0.1538,  0.1047,  0.0250,  0.0580,  0.2489, -0.0675,  0.2133, -0.1260,
         0.1723, -0.0201,  0.0204, -0.0495,  0.1546, -0.0311, -0.1095,  0.1067],
       device='cuda:0') torch.Size([128])
recurrent_blocks.1.bias_hh_l0 tensor([-3.8097e-02,  1.8511e-01,  7.4260e-02,  1.6513e-01,  3.2184e-02,
         2.2500e-01,  4.4068e-02,  2.1719e-01, -3.5587e-02, -4.5548e-02,
        -3.8617e-02,  2.2043e-02, -1.7441e-02,  7.3907e-03, -1.2324e-01,
         2.3163e-01,  1.3400e-01,  1.1884e-01,  6.7118e-02, -3.5794e-02,
         2.4503e-01,  1.3652e-01,  2.1232e-01, -1.5507e-01,  1.5356e-01,
         1.4942e-01, -5.1056e-02, -1.0143e-01,  4.7409e-02, -1.9602e-01,
        -1.8888e-04, -7.4087e-02,  5.9910e-02, -1.2144e-01,  7.5313e-02,
        -1.3541e-02, -8.0797e-02,  2.4799e-02, -6.2622e-03,  1.0835e-01,
         9.8214e-03, -7.5837e-02,  1.5360e-01,  4.5466e-02, -1.6259e-02,
         2.1920e-01,  1.7379e-01,  2.8783e-02, -7.9755e-02,  4.0376e-02,
        -1.6604e-02,  1.0674e-01, -4.4818e-03,  3.2174e-02,  1.0745e-01,
         1.0569e-01,  1.7169e-01, -4.0836e-03, -1.3394e-01,  2.0484e-01,
        -9.9466e-03, -1.8984e-01,  9.1524e-02, -9.3756e-02,  1.0996e-01,
        -6.2636e-02,  1.9180e-01,  2.1221e-01, -1.7649e-01,  5.2270e-02,
        -2.4168e-01,  1.0328e-01,  1.5677e-01, -1.7000e-01, -1.0986e-02,
        -8.9070e-02, -3.2975e-02,  1.0298e-01,  1.3197e-01, -1.6848e-02,
        -5.9825e-02, -7.6398e-02,  2.0074e-01,  1.7914e-01,  2.4151e-01,
        -2.0789e-02, -1.6617e-01,  1.9279e-01, -1.6348e-01, -1.9702e-01,
         1.3993e-01, -5.3104e-02,  1.3567e-01,  1.3315e-02, -2.0684e-02,
        -6.3140e-02, -7.9042e-03,  1.2680e-01,  4.9497e-02,  1.4782e-01,
         1.0047e-01, -5.1773e-02,  1.9751e-01, -7.3377e-02, -8.5770e-02,
         6.9021e-02,  1.6693e-01, -4.8593e-02, -2.0362e-02, -5.1777e-02,
        -1.0157e-01,  6.2139e-02, -2.0612e-01,  1.6054e-01,  2.0629e-01,
         2.1522e-01,  1.6626e-01, -4.7734e-02, -1.5633e-02, -1.2904e-01,
         1.4846e-02, -1.1652e-01, -1.1970e-01, -8.2090e-02, -5.2676e-02,
        -1.3942e-01,  1.4309e-01,  1.6884e-01], device='cuda:0') torch.Size([128])
recurrent_blocks.1.weight_ih_l0_reverse tensor([[-0.0091,  0.0485, -0.0134,  ...,  0.0741, -0.1198,  0.0560],
        [ 0.0606,  0.0200,  0.0289,  ...,  0.1111, -0.0146,  0.0853],
        [-0.2319, -0.0798, -0.0181,  ..., -0.1014,  0.0870,  0.0838],
        ...,
        [-0.1563,  0.1009, -0.2258,  ..., -0.0474, -0.0170, -0.0695],
        [ 0.0476,  0.2295, -0.0046,  ..., -0.0826, -0.1244, -0.0800],
        [ 0.0166,  0.0646, -0.1045,  ..., -0.0635, -0.0586, -0.0423]],
       device='cuda:0') torch.Size([128, 64])
recurrent_blocks.1.weight_hh_l0_reverse tensor([[ 0.0800,  0.0734,  0.0978,  ...,  0.1357, -0.2123, -0.1731],
        [-0.0268, -0.0559, -0.0045,  ...,  0.0710, -0.0609,  0.1034],
        [-0.0556, -0.1100,  0.0911,  ...,  0.1010, -0.1387,  0.0707],
        ...,
        [ 0.1589, -0.1774,  0.1270,  ..., -0.0875,  0.1059, -0.0924],
        [-0.0450,  0.0493,  0.1000,  ..., -0.0216,  0.0295,  0.0588],
        [ 0.0593, -0.1692,  0.2113,  ..., -0.0114,  0.1978,  0.0859]],
       device='cuda:0') torch.Size([128, 32])
recurrent_blocks.1.bias_ih_l0_reverse tensor([-1.4578e-01,  1.7517e-01,  6.9691e-02, -1.0055e-01,  8.6093e-02,
         1.8256e-02,  2.3087e-01,  1.3397e-01,  1.3473e-01, -2.1574e-02,
         6.2603e-02,  2.5105e-01,  9.8123e-02,  6.9841e-02, -1.4593e-02,
        -1.4129e-01,  1.7880e-01,  1.1483e-02,  9.8598e-02,  1.2725e-01,
         1.2466e-01, -7.9450e-03,  1.5261e-01, -1.5237e-01, -1.2573e-01,
        -3.6729e-02,  2.0644e-01,  3.0430e-02,  6.1103e-02,  1.6016e-02,
         1.4358e-02, -7.6050e-02,  8.9365e-02,  2.5000e-02, -2.8060e-02,
        -1.3604e-01, -1.0635e-01,  1.5096e-01, -6.9295e-02,  2.1027e-01,
        -6.6822e-02, -5.7706e-02,  2.4201e-01, -2.4087e-02,  2.3011e-01,
         1.4752e-01, -9.1158e-02,  7.7688e-02, -2.2232e-02, -4.3230e-02,
        -1.7818e-01,  7.4312e-02, -7.6488e-02, -9.4152e-02,  1.9238e-01,
        -1.4833e-01,  7.1864e-02,  1.9599e-02,  2.3728e-01,  3.4033e-02,
         8.0670e-02,  1.3812e-01,  1.7642e-01,  1.9752e-01, -5.4705e-02,
        -5.8046e-02,  2.1502e-01, -2.0250e-01, -9.2431e-02,  5.1481e-03,
        -1.6825e-01,  1.5999e-01, -2.3014e-01,  7.3592e-02,  1.0230e-01,
        -4.9367e-02, -2.3607e-01, -1.6500e-01,  1.9430e-02,  1.5138e-01,
        -3.0029e-02,  1.0058e-01, -1.6154e-01, -3.1744e-02, -2.1461e-02,
        -6.2751e-02,  2.8779e-02, -1.4948e-01, -3.9085e-03,  3.5383e-02,
         1.5421e-01,  1.7916e-01, -1.7336e-01, -1.6481e-01,  9.5198e-03,
        -4.1524e-05,  5.6374e-02, -9.2257e-02, -5.7339e-02,  4.1066e-02,
        -1.9960e-01,  1.4276e-01,  2.3724e-01,  1.5252e-01, -8.3309e-02,
        -1.0639e-01, -3.7418e-02,  1.6288e-01, -9.4734e-02, -5.7831e-02,
         3.6370e-02, -8.9734e-02,  1.9959e-01,  1.2119e-02, -1.2343e-01,
         1.9391e-01,  1.3436e-01, -6.8176e-02,  1.7096e-01,  8.0639e-02,
        -1.5797e-01,  1.1710e-01,  7.5393e-02, -8.7808e-02,  7.2897e-02,
         5.9868e-02, -6.8314e-02,  2.2836e-01], device='cuda:0') torch.Size([128])
recurrent_blocks.1.bias_hh_l0_reverse tensor([-0.1249,  0.0709, -0.0301,  0.0668, -0.1641,  0.1583,  0.0266,  0.0166,
         0.2053,  0.1474, -0.0097,  0.1733,  0.2212,  0.1408,  0.0123, -0.0635,
        -0.0944,  0.0688,  0.0475, -0.0192, -0.0061,  0.1873, -0.0418,  0.1608,
         0.0656, -0.0114,  0.1189, -0.0077, -0.0775,  0.2031, -0.0666, -0.0598,
        -0.1239,  0.1036, -0.1408,  0.1904,  0.0431, -0.0474, -0.0041,  0.1045,
         0.1591,  0.0202, -0.0261, -0.0907,  0.0846,  0.0908, -0.0270,  0.0841,
         0.2219, -0.0939,  0.0920, -0.0286,  0.0614,  0.0904,  0.0990, -0.1516,
        -0.1056, -0.0126,  0.0291,  0.0195,  0.0184,  0.1731,  0.1188,  0.2057,
        -0.0917, -0.1577, -0.0474, -0.1300, -0.0196,  0.1756, -0.0787,  0.0270,
        -0.0496, -0.1445,  0.1279,  0.2206, -0.0611, -0.0640, -0.1940,  0.1577,
        -0.0589,  0.1333,  0.1388, -0.1271,  0.1116,  0.2039,  0.0731, -0.1019,
         0.0011,  0.0639,  0.1952,  0.0285, -0.1299, -0.2139,  0.2499,  0.2563,
        -0.1777,  0.0270,  0.0314, -0.0193, -0.1086,  0.0898,  0.2464, -0.0975,
        -0.0345,  0.0579,  0.0541, -0.0327,  0.1774,  0.1438, -0.0962, -0.1412,
         0.0966,  0.1333, -0.1298,  0.1020,  0.1502,  0.1147,  0.1754,  0.1580,
         0.0024,  0.1291,  0.2439,  0.2030,  0.1399, -0.0761, -0.0299, -0.0655],
       device='cuda:0') torch.Size([128])
recurrent_blocks.2.weight_ih_l0 tensor([[-0.1238, -0.1042, -0.0251,  ..., -0.1327,  0.0200, -0.0506],
        [ 0.1461,  0.0844,  0.2589,  ...,  0.0072,  0.1629, -0.1208],
        [-0.1093,  0.1076,  0.1075,  ...,  0.1136,  0.0786,  0.1142],
        ...,
        [-0.1410, -0.0373,  0.2220,  ..., -0.1273, -0.0882, -0.0570],
        [-0.0775,  0.0792, -0.1031,  ..., -0.0134, -0.0651,  0.2094],
        [ 0.1024, -0.1237, -0.0672,  ...,  0.0104,  0.1049,  0.1182]],
       device='cuda:0') torch.Size([128, 64])
recurrent_blocks.2.weight_hh_l0 tensor([[-1.0101e-01, -8.4850e-02, -1.4180e-01,  ..., -2.2386e-02,
          1.0007e-04,  7.9808e-02],
        [ 1.0087e-01,  2.4960e-02, -9.5635e-02,  ..., -1.2772e-01,
         -9.8916e-02,  8.3316e-02],
        [-3.0693e-02, -1.6213e-01, -5.7133e-02,  ...,  1.7797e-01,
         -1.6634e-01, -1.1311e-01],
        ...,
        [ 1.9194e-02,  2.2429e-01, -1.3920e-01,  ...,  1.3811e-01,
         -3.2613e-02, -2.4971e-02],
        [-5.7536e-03, -6.6658e-02, -1.0034e-01,  ..., -1.4503e-01,
         -8.5031e-02, -3.1034e-02],
        [-6.2503e-02,  9.6190e-02, -1.4616e-01,  ...,  6.6823e-02,
         -1.1418e-01,  1.5728e-01]], device='cuda:0') torch.Size([128, 32])
recurrent_blocks.2.bias_ih_l0 tensor([-0.0443,  0.1956, -0.0993, -0.0799,  0.1904,  0.1147, -0.1338,  0.0819,
         0.0649,  0.0132,  0.0866,  0.1159, -0.0933, -0.0425,  0.0599, -0.0654,
         0.0688,  0.0156,  0.1457, -0.1502,  0.0463, -0.0719, -0.0799, -0.1260,
        -0.0284, -0.0510,  0.2221, -0.1523,  0.0887, -0.0734,  0.0008,  0.0139,
         0.1164, -0.0011,  0.0009, -0.0817, -0.0575,  0.0847,  0.2074, -0.0491,
         0.0013,  0.1683, -0.0945, -0.0363,  0.1976,  0.1276,  0.0360,  0.0670,
         0.1099,  0.0924,  0.0413, -0.0908, -0.0338, -0.1578,  0.1764, -0.1536,
        -0.0676, -0.0789,  0.2059,  0.0045,  0.0198, -0.0878,  0.1955,  0.1760,
         0.0151,  0.1253, -0.1387,  0.0418, -0.0723,  0.1676, -0.1656,  0.0115,
         0.1895, -0.0903,  0.0508, -0.0359,  0.1663,  0.1215,  0.0112, -0.0910,
         0.0976, -0.0138,  0.0981, -0.1122,  0.1325,  0.0234, -0.1653, -0.0664,
         0.0871, -0.1964, -0.1486,  0.0065,  0.1483, -0.2035,  0.1929,  0.0782,
        -0.1729, -0.0384, -0.1274,  0.0207, -0.1005,  0.0667,  0.2024,  0.0504,
         0.1354,  0.2067, -0.1485,  0.1164,  0.1667,  0.1291, -0.0166,  0.2196,
        -0.0157, -0.0281,  0.2129,  0.0702,  0.1233, -0.0832, -0.0337, -0.2084,
        -0.0255,  0.1129, -0.0781,  0.0426,  0.2222, -0.1335, -0.0569,  0.1595],
       device='cuda:0') torch.Size([128])
recurrent_blocks.2.bias_hh_l0 tensor([-0.2039,  0.2068, -0.1467,  0.0296, -0.0463,  0.1338,  0.0698,  0.0934,
        -0.1066, -0.0776,  0.1163, -0.0877,  0.1104, -0.1163, -0.0280, -0.0126,
         0.2051,  0.1481,  0.1101, -0.1120, -0.0741, -0.0104, -0.0842,  0.0661,
         0.1783, -0.0334,  0.0810, -0.1566,  0.0900, -0.0333, -0.0364,  0.0694,
        -0.0728,  0.1446,  0.0493,  0.0213,  0.0308,  0.0750,  0.1862,  0.1115,
        -0.1292,  0.1749, -0.1588, -0.0634, -0.0535,  0.1208,  0.0787,  0.0357,
        -0.0109,  0.1485,  0.1289, -0.0440, -0.0827, -0.2284,  0.1156, -0.1115,
         0.1537, -0.1104,  0.1129, -0.0919,  0.2156,  0.0621, -0.0207, -0.0510,
         0.1360,  0.0559,  0.0035, -0.0370, -0.1223, -0.0169,  0.0211, -0.1681,
         0.1457, -0.0613, -0.1122,  0.1717,  0.1619, -0.0139, -0.0268, -0.1603,
         0.1320, -0.1836,  0.1491,  0.0634,  0.1385, -0.0360,  0.0516, -0.1278,
        -0.1580, -0.0511, -0.1754,  0.1570,  0.2177, -0.1759, -0.0155,  0.0625,
         0.1049,  0.0992, -0.1349, -0.0917, -0.0795,  0.1222,  0.1689,  0.0861,
        -0.1761,  0.0630,  0.0876, -0.0994,  0.2534,  0.0715,  0.1602,  0.1767,
        -0.0338,  0.0879,  0.0230,  0.1131, -0.1016, -0.0177,  0.1898, -0.0453,
         0.0328,  0.2300, -0.0623, -0.1873,  0.2605,  0.1703,  0.2175,  0.1589],
       device='cuda:0') torch.Size([128])
recurrent_blocks.2.weight_ih_l0_reverse tensor([[-0.0499, -0.0841,  0.1608,  ...,  0.0981, -0.0046,  0.0019],
        [ 0.1187,  0.1452,  0.1626,  ..., -0.1643, -0.0421,  0.0267],
        [ 0.1855,  0.1595,  0.1065,  ...,  0.0786,  0.1350, -0.1068],
        ...,
        [-0.1502, -0.1384, -0.1955,  ...,  0.1325,  0.0319,  0.0351],
        [-0.0568,  0.0296,  0.1303,  ..., -0.2009,  0.1296,  0.0240],
        [-0.0935,  0.0732,  0.1070,  ..., -0.0098,  0.0614,  0.1973]],
       device='cuda:0') torch.Size([128, 64])
recurrent_blocks.2.weight_hh_l0_reverse tensor([[ 0.1435, -0.0308, -0.0202,  ..., -0.1605, -0.1835,  0.0330],
        [-0.0527, -0.0014,  0.0966,  ..., -0.1116,  0.0297,  0.0590],
        [ 0.0014,  0.0398,  0.0104,  ..., -0.1416,  0.1587,  0.1673],
        ...,
        [-0.0395, -0.0315, -0.0218,  ..., -0.1891,  0.0347,  0.0998],
        [ 0.2149, -0.0377,  0.1874,  ...,  0.0662,  0.1945,  0.0174],
        [ 0.0303,  0.1344,  0.1830,  ..., -0.0329,  0.1860, -0.0018]],
       device='cuda:0') torch.Size([128, 32])
recurrent_blocks.2.bias_ih_l0_reverse tensor([-0.2065, -0.1382, -0.0029, -0.0890,  0.0998,  0.0622,  0.0210,  0.1121,
         0.1224,  0.0209,  0.0662,  0.0465, -0.0584,  0.0892, -0.0715,  0.0195,
         0.0531,  0.2376, -0.0050, -0.0004, -0.0564,  0.1270,  0.1225, -0.0606,
        -0.1100, -0.1444,  0.1176, -0.0761, -0.0945, -0.0634, -0.0434,  0.0331,
         0.0617,  0.0946, -0.0017,  0.0701, -0.2145,  0.1743,  0.0624,  0.1586,
         0.1983,  0.0924,  0.1789, -0.0141, -0.0572,  0.1728,  0.0156,  0.1054,
         0.2262, -0.0619, -0.0459,  0.0196, -0.1013,  0.0296,  0.2085,  0.0618,
        -0.0710, -0.1173, -0.0323, -0.0064, -0.0116,  0.1467,  0.1240,  0.0469,
        -0.0979, -0.0024,  0.1552, -0.1405, -0.0443,  0.2398, -0.1734, -0.0538,
        -0.1016, -0.1058,  0.1263, -0.0307, -0.0793,  0.1185, -0.0969,  0.2026,
        -0.2126,  0.1426, -0.1603, -0.0753, -0.1955,  0.0878,  0.1437,  0.0490,
         0.0449,  0.0850,  0.0747,  0.2026,  0.0332,  0.0540,  0.0788,  0.1713,
         0.1011,  0.0111,  0.0491,  0.1340,  0.1353,  0.1619, -0.0795,  0.1276,
        -0.0019, -0.0338, -0.1235,  0.2196,  0.1765,  0.1112,  0.1301, -0.0851,
         0.1822,  0.2374, -0.0618,  0.2240,  0.0519,  0.2357,  0.0504,  0.0126,
        -0.1733,  0.0107,  0.0195,  0.2085, -0.0228,  0.1339,  0.1016,  0.0665],
       device='cuda:0') torch.Size([128])
recurrent_blocks.2.bias_hh_l0_reverse tensor([ 0.1148,  0.0265, -0.0537,  0.1045,  0.0619,  0.2185,  0.1079,  0.0855,
         0.1072,  0.1067,  0.1017, -0.1082,  0.0516, -0.0661, -0.1487,  0.0186,
         0.0165,  0.1385,  0.0689,  0.1033, -0.1106,  0.0999,  0.2031, -0.2080,
        -0.2337,  0.1653,  0.1866,  0.2005,  0.1097,  0.1312,  0.1427,  0.0620,
         0.0758,  0.0568,  0.1688,  0.1563, -0.0596,  0.0267, -0.0144, -0.0345,
         0.0075, -0.0197,  0.1287,  0.0440, -0.0328, -0.0634, -0.1343, -0.0566,
         0.2232,  0.2025, -0.0637,  0.0394, -0.0138,  0.2399,  0.1619,  0.1262,
        -0.0368, -0.0222,  0.2045, -0.0424,  0.1404, -0.0537,  0.2217,  0.2502,
         0.0783, -0.0602,  0.2107, -0.1567, -0.0432,  0.0149, -0.1589,  0.2114,
        -0.1931, -0.0118, -0.0718,  0.2097, -0.0622,  0.0143, -0.0314,  0.2091,
        -0.0188,  0.1156, -0.1264, -0.1551, -0.1435,  0.0699,  0.2027,  0.0886,
         0.0877, -0.1635, -0.0281,  0.1514, -0.0999,  0.1467,  0.1500,  0.1669,
        -0.0865,  0.1447, -0.0970, -0.1344,  0.1305, -0.0230,  0.0099,  0.1136,
         0.0283, -0.0557,  0.0680,  0.2526,  0.2428,  0.1741,  0.1313, -0.0689,
        -0.0755,  0.2240,  0.0885,  0.1078, -0.1046, -0.0561,  0.0435,  0.0853,
         0.0494, -0.0190, -0.0911, -0.0703,  0.1036, -0.1439, -0.0636,  0.0564],
       device='cuda:0') torch.Size([128])
recurrent_blocks.3.weight_ih_l0 tensor([[-0.0669,  0.1765, -0.1547,  ..., -0.1097, -0.0535,  0.1280],
        [ 0.0432,  0.1046, -0.1501,  ..., -0.1157,  0.1237,  0.0897],
        [ 0.0159,  0.0426,  0.0315,  ..., -0.0919,  0.1506,  0.1345],
        ...,
        [ 0.0777, -0.0857,  0.1547,  ..., -0.1784, -0.0380,  0.2035],
        [ 0.0902, -0.1553, -0.1602,  ...,  0.1106, -0.0398,  0.1701],
        [-0.0322, -0.1437,  0.0161,  ..., -0.0724, -0.0782, -0.0890]],
       device='cuda:0') torch.Size([128, 64])
recurrent_blocks.3.weight_hh_l0 tensor([[ 0.0013,  0.1489, -0.1043,  ..., -0.0639,  0.1122,  0.1676],
        [ 0.1261,  0.0192, -0.0819,  ..., -0.0719, -0.0673, -0.0702],
        [ 0.0012, -0.0079, -0.1018,  ..., -0.2033, -0.0260,  0.1344],
        ...,
        [-0.0696,  0.0924,  0.1210,  ..., -0.1884,  0.0069,  0.0257],
        [ 0.1347, -0.1095, -0.1037,  ..., -0.2048,  0.0797, -0.1326],
        [-0.1191, -0.0280,  0.1613,  ...,  0.0011, -0.0390,  0.2010]],
       device='cuda:0') torch.Size([128, 32])
recurrent_blocks.3.bias_ih_l0 tensor([ 4.2039e-02,  5.3184e-03,  9.6220e-02, -2.2384e-01, -4.9880e-02,
         2.1660e-01,  2.0208e-01, -1.0142e-01,  1.4590e-01, -6.4913e-02,
        -3.0482e-03, -8.3204e-02,  1.4391e-01, -1.7152e-02,  7.6695e-02,
        -1.4260e-01,  1.6318e-01,  1.0444e-01,  1.5205e-01, -6.6497e-02,
        -3.1060e-02,  2.0591e-01,  7.7529e-02, -1.2462e-01,  2.3228e-03,
        -8.0458e-02,  2.0382e-02,  1.2101e-01, -5.0948e-03, -1.2283e-01,
        -5.9588e-02, -1.0100e-01,  5.5191e-02, -6.3580e-02,  1.2850e-01,
        -7.5407e-02,  7.1037e-02,  5.4015e-02,  4.8993e-05, -2.0366e-01,
        -9.6865e-02, -3.9413e-02,  1.0216e-01,  1.7097e-01,  2.4070e-01,
        -6.7523e-02, -3.5932e-02,  4.5304e-02, -8.5301e-02, -6.8691e-02,
         1.6804e-01,  1.1915e-01,  1.0926e-01,  1.5445e-01,  1.3302e-02,
         1.6621e-01,  1.6868e-01,  1.5399e-01,  2.0342e-01, -1.7402e-01,
        -1.1799e-02,  9.4719e-02, -6.8854e-02,  1.2926e-03,  1.6921e-01,
         1.6901e-02,  1.1319e-01, -1.1478e-02,  1.2568e-01,  1.5406e-01,
        -2.1157e-01,  7.1074e-02, -9.3099e-02, -3.2097e-02, -3.3096e-02,
        -5.0490e-02,  2.2238e-01, -3.2237e-02, -1.0118e-01, -2.8644e-02,
         2.0117e-01,  7.6474e-02,  5.4285e-02, -1.1637e-01, -1.8210e-02,
        -1.1801e-01, -1.1034e-01, -6.9922e-02, -1.9754e-01, -1.9595e-01,
        -1.9478e-03,  9.4470e-02,  1.7831e-01,  1.1435e-01,  1.1178e-01,
        -8.0072e-02,  7.7441e-02,  5.9291e-02, -1.0627e-01,  4.4027e-02,
        -3.1132e-02, -6.4271e-03,  1.8765e-02, -4.3235e-02, -7.4303e-02,
         6.2599e-02, -1.5640e-01, -5.3163e-02,  7.0099e-02,  6.0143e-02,
        -1.7392e-01,  2.3029e-02, -1.2689e-01,  6.6519e-02,  6.8425e-02,
         7.1742e-02,  1.9804e-01,  1.7695e-01,  1.4060e-01,  1.7132e-01,
         1.5472e-01,  2.2777e-01,  7.3234e-02,  1.2823e-01, -1.0755e-01,
         1.6389e-01,  1.1805e-01, -3.4136e-02], device='cuda:0') torch.Size([128])
recurrent_blocks.3.bias_hh_l0 tensor([-0.1052,  0.0860,  0.1489,  0.0866,  0.0656, -0.0287,  0.1963,  0.0234,
         0.1175,  0.1350,  0.0656,  0.1319, -0.0798,  0.0094,  0.1264,  0.1281,
         0.1307,  0.1188,  0.0750,  0.0664,  0.1086, -0.0433,  0.1075, -0.1451,
        -0.0353,  0.0407,  0.1978, -0.1183,  0.1213, -0.1063,  0.1210, -0.0585,
        -0.1272, -0.0851,  0.1325, -0.2152, -0.0162,  0.2202,  0.2390, -0.2144,
         0.2188,  0.1313, -0.1395,  0.0550, -0.0912,  0.1091, -0.0268,  0.0518,
         0.1994,  0.0286,  0.0933, -0.1977,  0.0390, -0.0151, -0.0676,  0.1913,
         0.1151,  0.0179, -0.0879,  0.0883, -0.0441,  0.1184,  0.1574, -0.0903,
         0.0077, -0.0349,  0.0095,  0.0149, -0.1149,  0.0609,  0.0104,  0.0219,
        -0.2019, -0.2021, -0.0612,  0.1582,  0.0860,  0.0115, -0.0884,  0.0430,
         0.2115, -0.0600,  0.0071,  0.1369, -0.0007, -0.1199,  0.0189,  0.0555,
        -0.1095, -0.0788, -0.1448,  0.0052,  0.1834, -0.1790,  0.1201, -0.1422,
         0.1882,  0.2205, -0.1417,  0.1003, -0.1016,  0.0641,  0.2134, -0.2014,
         0.0999,  0.1791, -0.0708, -0.0204, -0.0936, -0.0352,  0.0736, -0.1899,
        -0.0827,  0.0240,  0.2469, -0.1141,  0.2209,  0.2128, -0.0651, -0.0071,
         0.0852,  0.2252, -0.0423,  0.0079, -0.0679,  0.1429, -0.0622, -0.1143],
       device='cuda:0') torch.Size([128])
recurrent_blocks.3.weight_ih_l0_reverse tensor([[ 0.1813, -0.0040,  0.0632,  ...,  0.0842,  0.1773,  0.0089],
        [ 0.0294,  0.0215, -0.1058,  ..., -0.0056, -0.1181, -0.0454],
        [ 0.1643, -0.0549, -0.1293,  ..., -0.0003,  0.0405, -0.0076],
        ...,
        [ 0.1113,  0.1016,  0.0295,  ...,  0.0323, -0.0215,  0.0129],
        [-0.1021,  0.1456, -0.2051,  ..., -0.1260,  0.0760, -0.0730],
        [-0.1016,  0.0106, -0.1737,  ..., -0.0276,  0.0937, -0.0280]],
       device='cuda:0') torch.Size([128, 64])
recurrent_blocks.3.weight_hh_l0_reverse tensor([[ 1.0855e-01,  1.0347e-01,  5.8849e-02,  ...,  2.2864e-01,
         -1.2528e-01, -7.5929e-02],
        [-1.0881e-01, -1.2060e-01,  9.5781e-02,  ...,  4.2855e-02,
         -3.3872e-02,  1.0300e-02],
        [-5.3090e-02,  1.4544e-01,  3.8275e-02,  ...,  8.9905e-02,
          1.6860e-01,  1.7707e-04],
        ...,
        [ 1.7932e-02, -1.5497e-02, -7.2183e-03,  ..., -9.8653e-02,
          2.1708e-01,  1.7999e-01],
        [-7.1799e-02,  6.5690e-02,  4.0103e-02,  ...,  4.3760e-02,
          5.3453e-02,  2.2866e-01],
        [-7.7890e-02, -1.0482e-01, -4.2352e-02,  ...,  9.9571e-02,
          4.1802e-02,  2.7885e-02]], device='cuda:0') torch.Size([128, 32])
recurrent_blocks.3.bias_ih_l0_reverse tensor([-3.5877e-03,  1.6114e-01,  1.4660e-01, -7.0850e-02,  1.8177e-01,
         8.3327e-02,  1.7859e-01,  1.8290e-02,  1.3351e-01, -2.9793e-02,
        -4.5594e-02, -3.6014e-02,  1.3590e-01,  1.1792e-01, -2.6421e-02,
         1.1761e-01,  6.4431e-02, -1.0485e-01, -6.1682e-03,  1.3734e-01,
         6.8573e-02,  5.4196e-02,  1.7168e-03, -3.9364e-02, -7.6933e-03,
        -9.3690e-02,  3.7008e-02,  2.3717e-01, -1.1818e-01,  3.8225e-02,
         2.2816e-02,  1.4082e-02,  7.8641e-02,  6.3165e-02,  2.1740e-01,
        -6.8795e-02, -1.3197e-02, -6.6474e-02,  4.3508e-02, -2.1035e-01,
        -1.1825e-01, -1.4879e-02, -8.0261e-03,  1.5256e-01, -9.7741e-02,
         1.8787e-01, -1.5807e-01,  1.4467e-04, -4.1420e-02,  1.5490e-01,
        -9.7771e-02,  1.2511e-01,  1.1669e-01,  6.7826e-02, -8.2932e-02,
         1.1738e-01,  7.9885e-02, -9.0863e-03, -5.0493e-02,  1.5673e-01,
         3.8553e-02,  5.2325e-02, -8.7867e-02, -9.4099e-02, -1.6502e-01,
        -2.1828e-01,  2.3138e-01, -3.6436e-02, -1.6625e-01, -5.7004e-02,
        -1.1361e-01, -1.6914e-03,  1.2676e-01, -2.1288e-02, -8.0344e-02,
         4.4684e-02, -1.0868e-01, -1.7050e-01,  3.2190e-02, -1.3289e-01,
        -1.1681e-01,  2.5130e-01,  9.4521e-02, -2.5318e-02,  1.4841e-01,
        -7.8147e-02,  1.7861e-01, -1.8069e-01,  2.3247e-02, -3.0757e-02,
        -1.1832e-01,  1.7704e-01,  1.1821e-01,  6.4980e-02, -8.3641e-02,
        -5.2300e-02,  1.1811e-01, -6.7819e-02,  3.6489e-02, -7.7993e-02,
         2.1348e-01, -1.0481e-01,  8.7944e-02, -1.9297e-01, -3.3161e-02,
         1.1466e-01,  1.7268e-01,  1.3088e-01, -5.2004e-02,  1.5583e-01,
         1.8103e-02, -6.3595e-02, -1.5000e-01, -2.2047e-02,  1.2911e-01,
        -1.0736e-01, -5.9817e-03,  1.3190e-01,  5.8347e-02, -3.6304e-02,
        -7.7601e-02, -3.4896e-02, -1.2896e-01,  1.7770e-01,  1.5657e-01,
        -2.2473e-01,  7.8902e-02, -5.6782e-02], device='cuda:0') torch.Size([128])
recurrent_blocks.3.bias_hh_l0_reverse tensor([-0.0121, -0.0730, -0.0041, -0.0312,  0.0094, -0.1097,  0.1955,  0.0735,
         0.1583, -0.1740,  0.0766,  0.0267, -0.0137, -0.0507,  0.0251, -0.0384,
         0.2007, -0.0521,  0.0978,  0.1473,  0.1640,  0.1452,  0.1648, -0.0814,
        -0.0717,  0.1355, -0.0255, -0.0007, -0.0709, -0.0773,  0.1014,  0.1383,
        -0.1069, -0.1226,  0.2203,  0.0120,  0.0139,  0.0315,  0.1404, -0.0803,
         0.0553,  0.1244,  0.0475,  0.1759,  0.1266, -0.0854, -0.0526, -0.0475,
         0.0074, -0.0504, -0.1657,  0.1339, -0.0543,  0.1603, -0.0950,  0.0988,
        -0.2310,  0.0432, -0.0794,  0.1648,  0.0042,  0.0768,  0.0867, -0.0037,
         0.1193,  0.0342, -0.0939,  0.0809, -0.2305,  0.0077, -0.2112,  0.2214,
        -0.0867,  0.0823,  0.2291, -0.0594,  0.0863, -0.2079, -0.1696, -0.0213,
         0.0606,  0.0477,  0.0866, -0.0456,  0.1595, -0.0889, -0.0793,  0.0818,
         0.0635, -0.1751,  0.1634,  0.0311, -0.1943,  0.0734, -0.0618, -0.0518,
        -0.0205,  0.0959, -0.0532, -0.1154, -0.0995,  0.1708,  0.1614, -0.0220,
        -0.0079, -0.0244, -0.0723, -0.1059,  0.0270,  0.0286,  0.0616, -0.0032,
         0.1700,  0.1303, -0.0943,  0.1538,  0.1583,  0.1388,  0.1418, -0.0963,
         0.0795,  0.0162, -0.1010,  0.1932,  0.1862,  0.0113,  0.0499, -0.1253],
       device='cuda:0') torch.Size([128])
fc_blocks.0.0.weight tensor([[ 0.0553,  0.0365, -0.0597,  ..., -0.0834, -0.0405, -0.0308],
        [ 0.0591,  0.0869, -0.0063,  ...,  0.0292, -0.0230,  0.0295],
        [ 0.1097,  0.1178,  0.0362,  ..., -0.1558,  0.1489,  0.1225],
        ...,
        [-0.0913,  0.0571,  0.0837,  ...,  0.1595,  0.0080,  0.0852],
        [-0.1847, -0.0603, -0.1228,  ...,  0.0579,  0.0016, -0.1678],
        [ 0.1089,  0.1736, -0.0205,  ...,  0.0223,  0.1896,  0.1188]],
       device='cuda:0') torch.Size([32, 64])
fc_blocks.0.0.bias tensor([ 0.0517,  0.1437,  0.1772, -0.1453, -0.1600, -0.0074, -0.0346,  0.1502,
        -0.0540,  0.0071, -0.0696, -0.0538, -0.1594, -0.0353, -0.1243,  0.0651,
         0.0864,  0.0972, -0.0326, -0.0572,  0.0434, -0.0447, -0.0214, -0.1714,
         0.1941, -0.0709,  0.0019,  0.0732, -0.0347, -0.0513,  0.0348,  0.0371],
       device='cuda:0') torch.Size([32])
fc_blocks.1.0.weight tensor([[-1.0907e-01,  2.7121e-02,  1.9993e-02,  1.8966e-01,  1.8857e-01,
          2.8793e-02, -1.0035e-01, -1.0088e-01,  9.4317e-02,  7.8944e-02,
          1.2262e-01, -6.5869e-02, -9.4123e-02, -1.1254e-01, -7.8610e-02,
         -1.5787e-01, -2.0170e-01,  6.8349e-02, -1.6315e-01, -1.1881e-01,
         -7.9626e-03,  1.2767e-01, -1.3621e-03,  6.9739e-02,  1.7468e-02,
          9.2014e-02,  1.1735e-01,  5.7970e-02, -5.4732e-02, -1.2666e-02,
         -1.0498e-01, -6.0766e-02],
        [ 1.9591e-02,  2.0339e-01,  1.5827e-01,  4.4642e-02, -9.8130e-02,
          9.2541e-02, -6.0050e-02,  1.2615e-01, -4.7104e-02, -1.8666e-01,
         -1.2052e-01, -1.2451e-01, -3.7303e-03, -2.2179e-02, -1.2497e-01,
         -2.1400e-03,  1.9853e-02,  1.8013e-01, -1.7961e-02, -1.5381e-01,
         -8.1185e-02, -1.9257e-01,  2.3814e-01, -1.7516e-01, -4.0889e-02,
          6.5857e-02,  8.8447e-02, -1.9720e-01,  1.5313e-03,  6.7322e-02,
         -1.9501e-01,  1.9818e-01],
        [ 9.1304e-02, -2.1238e-01, -6.3665e-02, -1.2747e-01, -1.0947e-01,
         -1.8472e-02, -1.0668e-01, -1.1069e-01,  1.5781e-02,  1.2246e-01,
          4.6253e-02, -1.0169e-01,  2.1327e-03,  1.2658e-01, -6.9560e-02,
         -1.9470e-01, -8.2604e-02,  9.8363e-02,  1.3166e-01, -1.0883e-01,
          9.4788e-03,  8.7849e-02,  1.1692e-02,  1.0782e-01,  9.7334e-06,
          4.1023e-02, -7.2407e-03, -1.7133e-01, -1.9394e-01,  9.8221e-03,
          9.9015e-02, -1.0966e-01],
        [ 2.0751e-01,  1.3159e-01,  1.2900e-01, -4.2503e-02, -7.3820e-02,
          1.4882e-02,  2.2814e-01,  1.9422e-01, -4.3105e-02,  9.6423e-03,
          5.8423e-02, -8.9894e-02, -1.5964e-01,  4.0198e-02, -1.7000e-01,
          2.0364e-01,  2.4311e-01,  1.4697e-01, -5.8097e-02,  1.3004e-01,
         -1.1296e-01,  8.9605e-02,  1.5068e-01,  4.0087e-02,  1.1129e-01,
          1.3271e-01,  1.0474e-01,  4.7397e-02, -1.5765e-02, -1.1564e-01,
         -7.9694e-02,  1.9215e-01],
        [-6.1879e-02,  3.4861e-02,  9.1430e-02, -1.4898e-01, -2.1109e-01,
         -1.1265e-01, -2.7885e-02, -3.1046e-02, -7.1882e-02,  8.0427e-02,
          9.7393e-02,  2.7175e-02, -6.3554e-02,  1.4581e-01, -2.2099e-01,
          2.4262e-01,  6.6223e-02, -9.3608e-02, -1.4304e-01, -1.1753e-01,
          1.5987e-02,  1.1795e-02, -5.1228e-02,  8.6069e-03,  9.1363e-02,
          7.6451e-02, -1.6155e-01,  1.1849e-03,  1.5843e-01, -5.4318e-03,
          2.5903e-02,  1.6370e-01],
        [-1.7580e-02,  4.7567e-02,  1.3622e-01,  5.8510e-02,  7.4952e-02,
         -2.8695e-03,  1.6248e-01, -6.1421e-02,  1.5771e-01,  2.2142e-02,
          1.9021e-01,  6.4392e-02, -1.7152e-01,  9.1688e-03,  1.9432e-01,
          1.0971e-01,  9.5674e-02, -8.1471e-02,  1.4081e-02, -1.4355e-02,
          1.3515e-01,  4.4555e-02, -6.9977e-02,  1.4220e-02,  1.3199e-02,
         -3.4880e-02, -1.1846e-01, -1.7797e-02,  1.3098e-01,  1.4537e-01,
         -1.5505e-02, -1.0348e-01],
        [-1.4559e-01, -2.1785e-01, -4.4379e-02,  7.6245e-02,  9.3735e-02,
          7.8587e-02, -1.2173e-01, -3.5760e-03,  1.1895e-01, -1.6234e-01,
         -5.2342e-02, -9.4130e-02, -1.3669e-01, -5.1665e-02,  1.0373e-01,
         -3.3587e-02, -1.4718e-01,  7.7379e-02,  1.5111e-01,  9.6401e-02,
          9.5393e-02, -8.4307e-02,  9.1673e-02,  4.1609e-04, -7.0651e-02,
         -8.1691e-03,  1.0547e-01, -5.3253e-02,  1.9125e-01, -1.1659e-01,
          6.2984e-02,  5.9655e-02],
        [ 1.3851e-01, -1.5738e-01, -1.0222e-01,  1.2603e-01, -4.1595e-02,
          6.3533e-04, -5.7666e-04, -2.0544e-02,  3.9448e-02,  6.4958e-02,
          1.9476e-01,  1.0124e-01, -6.5895e-02,  1.4644e-01, -2.3514e-02,
          1.8843e-02,  5.6543e-02,  1.1973e-01, -7.5224e-02,  6.0177e-02,
          2.2877e-01,  6.5492e-02, -3.6224e-02,  2.3767e-01,  5.3838e-02,
         -8.6246e-02,  1.2252e-01,  1.7268e-01, -1.3631e-01,  1.4316e-01,
          1.2847e-01, -7.3036e-02],
        [-1.6474e-01, -7.2083e-02,  9.8901e-02, -5.1295e-02,  1.9142e-01,
          1.1502e-01,  3.8137e-02, -7.3296e-02,  3.9561e-02,  5.5670e-02,
          1.1586e-01,  1.2596e-01,  1.7422e-01,  7.2904e-05,  1.5097e-01,
          2.5423e-02, -4.8298e-02,  2.1050e-02, -7.2775e-02, -3.8111e-02,
          1.0842e-01,  1.0617e-01, -1.8709e-01,  9.8926e-02,  1.2373e-01,
         -1.5260e-02,  1.1246e-01,  7.2849e-02,  1.1175e-01,  1.3405e-01,
         -7.1120e-02,  4.0033e-02],
        [-9.5035e-02,  4.1889e-02, -1.4404e-01,  2.0403e-01,  2.0961e-01,
          1.3874e-01, -2.0239e-01, -1.1139e-01,  3.1144e-02, -2.8464e-02,
          6.5552e-02, -4.2271e-03,  7.9540e-02, -9.4483e-02,  9.2817e-02,
         -8.1066e-02,  7.1724e-02, -1.6958e-01,  3.4358e-02,  1.1490e-02,
          7.4944e-03, -9.4247e-02,  8.3538e-03, -9.7704e-02, -1.8932e-01,
         -1.3839e-02,  7.3997e-02, -9.0305e-03,  1.2801e-01, -7.4865e-02,
          1.7101e-01, -2.5998e-03],
        [-5.1586e-02, -1.5519e-02,  1.4626e-01, -2.2861e-01,  4.3122e-02,
          3.8310e-02, -9.8747e-02,  2.0326e-01,  2.0165e-01, -2.9278e-02,
          9.8386e-02, -1.4626e-01, -1.6361e-01,  1.3526e-01, -1.6102e-01,
          1.6812e-01,  2.6450e-01,  1.6094e-01,  6.3161e-02,  1.3293e-01,
          1.7694e-01, -9.0003e-02,  5.0037e-02, -9.2111e-02,  2.2297e-01,
          9.9047e-02, -1.2785e-01, -1.3103e-01,  8.3296e-03, -7.8645e-02,
         -2.3038e-01,  1.1220e-01],
        [ 1.4377e-01,  7.2410e-02,  6.9622e-02, -1.0132e-01,  1.7718e-02,
         -1.4550e-01,  1.3582e-01,  2.2348e-01,  1.5715e-01,  1.5376e-01,
          7.4922e-02, -3.1301e-02, -3.7195e-02,  4.3752e-02, -6.6560e-02,
         -1.1095e-01, -6.5821e-02,  1.2671e-01,  9.4752e-02, -5.1441e-02,
          1.1463e-01,  7.2990e-02,  2.2686e-01, -1.7165e-02,  3.6710e-03,
          2.0550e-01,  5.0650e-02,  1.7439e-01, -1.5238e-01, -1.6358e-01,
          1.4455e-01,  1.6866e-01],
        [-8.4023e-02,  1.6819e-01, -6.4580e-02,  1.6196e-01, -1.1769e-01,
          1.2535e-01,  6.1071e-02,  1.2571e-01,  1.2514e-01, -8.2396e-02,
         -8.8146e-02, -1.0693e-01,  1.4229e-01,  6.7885e-02,  1.6423e-01,
         -6.0913e-02, -7.8220e-02,  1.4669e-01, -9.7202e-02, -1.4851e-01,
          8.5081e-02,  1.0199e-01, -1.3343e-01, -9.2541e-02,  8.0517e-02,
         -1.3417e-02,  1.6158e-01, -7.4479e-02,  7.0683e-02,  1.4571e-01,
          3.4990e-02,  1.4781e-01],
        [-9.7264e-02,  7.1682e-02,  7.6591e-02, -1.3786e-01,  1.9668e-02,
          7.3072e-02, -1.7065e-01,  2.0289e-02, -8.7972e-02, -1.4150e-01,
          1.1020e-01, -1.6490e-02,  1.6065e-01,  6.3256e-02,  1.8234e-01,
         -2.3632e-01, -2.1890e-01,  9.9366e-02, -8.6095e-03,  1.6578e-03,
          5.7695e-02, -1.1258e-01, -9.5773e-02,  7.3070e-02, -5.0612e-02,
          7.2850e-02,  5.3528e-02, -3.2970e-02, -2.7716e-02,  7.8981e-02,
         -5.3015e-02, -1.6359e-01],
        [-1.2894e-01, -1.8070e-01, -8.3430e-02,  7.9206e-02,  6.4842e-02,
         -6.0120e-02,  1.1623e-01, -2.7858e-02, -1.8274e-02, -2.0990e-01,
         -1.5100e-01, -1.9034e-01,  2.6831e-02, -6.4899e-02, -3.5355e-02,
         -2.8187e-02,  6.0251e-02, -8.8048e-02,  6.3569e-02,  9.1029e-02,
          1.2084e-02, -4.6337e-02, -1.3851e-01, -1.8246e-01, -1.3641e-01,
         -6.3732e-02, -8.0824e-02,  2.1738e-02, -5.2321e-02, -5.4004e-02,
          2.5475e-02, -1.3386e-01],
        [-2.2863e-01, -8.8528e-02, -2.2552e-01,  5.0539e-02,  1.9332e-01,
          3.3333e-02,  3.5100e-02,  1.0765e-01,  1.0234e-01, -1.0401e-02,
         -1.5626e-01,  1.9681e-01,  1.4810e-01, -6.1468e-02,  1.5952e-02,
          6.2069e-02,  1.1444e-01,  8.2065e-02,  1.3212e-01,  1.1439e-01,
         -8.5920e-02,  1.8732e-01,  7.6570e-02, -1.8598e-03, -1.7764e-01,
          1.6191e-01,  8.3393e-02,  5.6222e-02, -7.4493e-02, -8.5267e-02,
          1.7901e-01, -1.3280e-01]], device='cuda:0') torch.Size([16, 32])
fc_blocks.1.0.bias tensor([ 0.0918,  0.1369, -0.1213,  0.2061,  0.0294,  0.0444, -0.0797, -0.1191,
        -0.1084, -0.0008,  0.0717,  0.2079,  0.0123,  0.0020,  0.0435, -0.1772],
       device='cuda:0') torch.Size([16])
fc_blocks.2.0.weight tensor([[-0.0387,  0.1852, -0.1753,  0.1811,  0.1346,  0.0865, -0.0275,  0.0849,
         -0.0599, -0.0309,  0.2199,  0.1481,  0.1018, -0.0852, -0.1529, -0.1972],
        [-0.1861,  0.1740, -0.0561, -0.1126, -0.0732, -0.0620, -0.0197,  0.0128,
          0.1534, -0.1541,  0.0010, -0.1234, -0.0940, -0.1779, -0.0979, -0.2298],
        [ 0.0529, -0.0116,  0.1384, -0.0225,  0.2752,  0.0403, -0.1334,  0.3052,
         -0.2782, -0.0241, -0.1393, -0.0461,  0.0838, -0.0430, -0.0432,  0.0958],
        [ 0.0663, -0.1654,  0.1519, -0.1907, -0.1747,  0.0710, -0.2568,  0.1575,
         -0.0514,  0.0116,  0.0031, -0.1100,  0.1901,  0.1296,  0.1514,  0.2075],
        [-0.2791, -0.2808,  0.0923, -0.0040,  0.0599,  0.2991,  0.1358, -0.2965,
          0.0577,  0.1486, -0.0929,  0.1394, -0.0921, -0.0837,  0.1273, -0.2394],
        [ 0.0375,  0.0888,  0.2273,  0.0162, -0.0167,  0.0915, -0.0017, -0.1164,
          0.1966, -0.2201,  0.1531,  0.1373, -0.1184, -0.1546,  0.1999,  0.0930],
        [ 0.0555,  0.0525, -0.3005,  0.0422,  0.1916, -0.0394,  0.0256, -0.0793,
          0.1067, -0.2357,  0.1989, -0.0954, -0.1257, -0.1991,  0.1246, -0.2747],
        [-0.2779, -0.2461, -0.2276,  0.0366, -0.0159,  0.3043, -0.2013,  0.0188,
          0.0589,  0.1564,  0.0836,  0.1244, -0.2465, -0.0237, -0.1384, -0.0330]],
       device='cuda:0') torch.Size([8, 16])
fc_blocks.2.0.bias tensor([ 0.3018, -0.0013, -0.2247, -0.1504, -0.3042, -0.0415, -0.0841, -0.1626],
       device='cuda:0') torch.Size([8])
fc_blocks.3.0.weight tensor([[ 0.2524,  0.2502,  0.0956, -0.0159, -0.1824,  0.1932,  0.0914, -0.2248],
        [-0.1932,  0.0312,  0.2625, -0.0646,  0.2197,  0.1234,  0.2583,  0.1361],
        [ 0.1651, -0.0142, -0.0391, -0.1996, -0.1534,  0.1440,  0.0402, -0.0982],
        [ 0.0666,  0.3521, -0.0452,  0.3210,  0.1805,  0.0479,  0.2742,  0.2500]],
       device='cuda:0') torch.Size([4, 8])
fc_blocks.3.0.bias tensor([ 0.2895, -0.0009,  0.4265, -0.3955], device='cuda:0') torch.Size([4])
fc_blocks.4.0.weight tensor([[-0.1919,  0.0455,  0.2528, -0.5593],
        [ 0.5195, -0.2004,  0.0842, -0.5150]], device='cuda:0') torch.Size([2, 4])
fc_blocks.4.0.bias tensor([-0.2892, -0.3911], device='cuda:0') torch.Size([2])
Train Loss : 497.313, Val Loss : 185.248
======> Trajectory Loss : 405.072, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.922, BelowGroundPenalize Loss : 0.000
===> [Minibatch 12/129].........recurrent_blocks.0.weight_ih_l0 tensor([[ 0.1695,  0.0542, -0.1215],
        [-0.0966, -0.0613,  0.2158],
        [ 0.0597,  0.0758,  0.1186],
        [ 0.0212, -0.1143,  0.0848],
        [-0.0427, -0.0941, -0.0651],
        [ 0.0070, -0.1669,  0.1845],
        [-0.0585, -0.1936,  0.1915],
        [ 0.1352,  0.1629, -0.0388],
        [-0.1307, -0.1402,  0.0020],
        [ 0.1464,  0.0605,  0.1470],
        [-0.1242, -0.2266,  0.0910],
        [-0.0160,  0.1061, -0.0024],
        [-0.1138,  0.1867,  0.0383],
        [-0.1278, -0.1220,  0.1325],
        [-0.1667,  0.0326, -0.0370],
        [-0.1000, -0.0321,  0.2426],
        [ 0.0477, -0.1800, -0.0696],
        [ 0.1069,  0.1157,  0.0154],
        [-0.0618, -0.0243, -0.0161],
        [-0.2248, -0.2199,  0.0016],
        [-0.0881,  0.0397,  0.2004],
        [ 0.0741,  0.0107,  0.2493],
        [ 0.0150, -0.1111, -0.0927],
        [ 0.0364, -0.1715,  0.0059],
        [-0.1348, -0.1864,  0.0761],
        [-0.1981, -0.1742, -0.0373],
        [-0.0994,  0.1492,  0.1230],
        [ 0.0881, -0.2230, -0.1542],
        [ 0.0600, -0.1115,  0.1373],
        [-0.1685, -0.0834,  0.1817],
        [ 0.0625, -0.1224, -0.1157],
        [-0.0131, -0.0267,  0.0013],
        [-0.1173,  0.0877, -0.1961],
        [ 0.0329, -0.0017,  0.0355],
        [-0.0112,  0.1671,  0.0863],
        [ 0.2093,  0.0903, -0.0372],
        [-0.1403, -0.0130,  0.0921],
        [-0.0530, -0.1612, -0.1116],
        [-0.0672, -0.1972,  0.0954],
        [ 0.1586,  0.1210,  0.1651],
        [ 0.1821, -0.0942, -0.0176],
        [ 0.0650,  0.0906, -0.0763],
        [-0.1185,  0.0674,  0.1324],
        [ 0.2089,  0.0896,  0.2568],
        [-0.1128,  0.0150, -0.1870],
        [-0.0080, -0.0814, -0.1372],
        [-0.1066, -0.0663,  0.1593],
        [-0.1272, -0.0223, -0.0090],
        [ 0.0644, -0.1223,  0.0397],
        [ 0.0092, -0.1927,  0.1203],
        [-0.2198,  0.1254,  0.0666],
        [-0.0560, -0.1968,  0.0127],
        [-0.1963, -0.0835,  0.2303],
        [ 0.0842, -0.0471,  0.1255],
        [-0.0825, -0.1879,  0.1956],
        [ 0.1887,  0.0742,  0.2235],
        [-0.2157, -0.0499, -0.0849],
        [ 0.0485, -0.1906, -0.1019],
        [ 0.0245,  0.1539, -0.0192],
        [-0.0319, -0.1007,  0.1471],
        [ 0.1648,  0.0243,  0.2431],
        [-0.2098, -0.1239,  0.0022],
        [-0.0683,  0.0174, -0.0577],
        [-0.0539, -0.2256,  0.0007],
        [ 0.0388,  0.0681,  0.0047],
        [-0.1426,  0.0490, -0.0304],
        [-0.0548, -0.1650, -0.2079],
        [ 0.0705,  0.0774,  0.0130],
        [-0.1299, -0.2117,  0.0045],
        [-0.0325, -0.2288,  0.1617],
        [-0.0083,  0.0440, -0.1299],
        [ 0.1263,  0.0144,  0.0489],
        [-0.1898,  0.1945,  0.1241],
        [-0.0452, -0.0856, -0.0522],
        [-0.0854, -0.1659, -0.0731],
        [ 0.0795,  0.0313,  0.1108],
        [ 0.0804,  0.1198, -0.1701],
        [-0.1731,  0.1860,  0.0545],
        [-0.1174,  0.0354,  0.0232],
        [-0.0064,  0.1551, -0.1913],
        [-0.0295, -0.0636, -0.0092],
        [ 0.1247, -0.1593,  0.1751],
        [ 0.0065,  0.0899, -0.0295],
        [ 0.0414,  0.2158,  0.0372],
        [-0.1218, -0.1142,  0.0863],
        [-0.1569,  0.1928, -0.0635],
        [-0.0800,  0.2251, -0.1843],
        [ 0.0265, -0.1765,  0.0335],
        [ 0.0466,  0.1647, -0.1188],
        [ 0.0872, -0.0317, -0.0632],
        [-0.1551,  0.1084, -0.0814],
        [-0.1627,  0.0079,  0.1270],
        [ 0.0424, -0.1027,  0.1851],
        [ 0.0852, -0.0939,  0.0570],
        [-0.0688,  0.0642,  0.0070],
        [-0.0637, -0.0745,  0.2274],
        [-0.0685, -0.0145, -0.1284],
        [-0.2117, -0.2086,  0.1558],
        [ 0.1736, -0.0582, -0.1304],
        [-0.0246, -0.0088,  0.2029],
        [-0.1722, -0.0996, -0.1483],
        [ 0.0919,  0.0068, -0.0582],
        [-0.0515,  0.1171, -0.0836],
        [ 0.0375,  0.0224, -0.0558],
        [-0.0384, -0.1340,  0.1299],
        [ 0.0951,  0.0154,  0.1723],
        [-0.1558, -0.0469,  0.1586],
        [ 0.2077,  0.0525,  0.0986],
        [-0.0421, -0.1065, -0.1660],
        [ 0.1824, -0.1359,  0.1115],
        [-0.0572, -0.0812, -0.0095],
        [ 0.0065, -0.0013,  0.0480],
        [ 0.1143, -0.1538,  0.2320],
        [-0.0821, -0.1570,  0.0019],
        [-0.0877, -0.0567, -0.0187],
        [ 0.0626,  0.0549,  0.1314],
        [ 0.0063,  0.0269, -0.0661],
        [ 0.2112, -0.1619,  0.1993],
        [ 0.0684, -0.2048,  0.1738],
        [-0.0476, -0.1311, -0.0586],
        [ 0.0099, -0.2474, -0.0096],
        [-0.1088, -0.0731,  0.1342],
        [ 0.0472, -0.1018,  0.1043],
        [-0.2087, -0.2210,  0.1507],
        [ 0.1950, -0.2380, -0.0413],
        [-0.1091,  0.0680,  0.0879],
        [ 0.2010, -0.1811,  0.1762],
        [-0.0044, -0.0156, -0.0046]], device='cuda:0') torch.Size([128, 3])
recurrent_blocks.0.weight_hh_l0 tensor([[ 0.0445,  0.0554, -0.0853,  ...,  0.1450,  0.1790,  0.0600],
        [ 0.0053,  0.0663,  0.0459,  ...,  0.0880,  0.0111, -0.0438],
        [ 0.0616, -0.0451, -0.0550,  ..., -0.1800, -0.1907,  0.0164],
        ...,
        [-0.1444,  0.0495, -0.0455,  ..., -0.1040,  0.0562,  0.0209],
        [ 0.0615,  0.0329, -0.1481,  ...,  0.0156, -0.0898,  0.1976],
        [-0.0644,  0.1456, -0.0992,  ..., -0.1768, -0.0177, -0.0248]],
       device='cuda:0') torch.Size([128, 32])
recurrent_blocks.0.bias_ih_l0 tensor([-0.1080,  0.1079, -0.1327,  0.1618,  0.1430,  0.2308, -0.0857,  0.0070,
         0.1177,  0.0479, -0.0925,  0.1643, -0.2360,  0.0131,  0.1557,  0.1420,
         0.1226,  0.1327,  0.0300,  0.1442,  0.0117,  0.0613, -0.0638,  0.1589,
        -0.0967,  0.2138,  0.0880,  0.0229,  0.1166,  0.1406, -0.0708, -0.0092,
        -0.0265, -0.0514,  0.0926,  0.1825,  0.0044, -0.0644,  0.1134,  0.1110,
         0.0200,  0.1007,  0.1566,  0.2077, -0.2140,  0.0121,  0.0246, -0.0442,
         0.1353,  0.0476,  0.1344,  0.0577,  0.1204,  0.0592, -0.0419,  0.0902,
         0.2007,  0.0650,  0.1085, -0.1321, -0.0792,  0.1152,  0.0675,  0.0977,
        -0.0347,  0.1544, -0.1342,  0.1681,  0.2077,  0.1046,  0.0512,  0.0361,
        -0.1335,  0.0306,  0.2200,  0.1854,  0.0062,  0.0648,  0.0455, -0.1534,
         0.1534,  0.1138,  0.1313, -0.1825,  0.0577, -0.2557,  0.0078,  0.1725,
        -0.2088, -0.2010,  0.1946, -0.0249,  0.2635, -0.2062, -0.2215,  0.1878,
        -0.0057,  0.1976,  0.0845,  0.1165, -0.0406,  0.0741, -0.0953,  0.0909,
        -0.0233,  0.0834,  0.2570,  0.2063, -0.0581,  0.0062, -0.0390,  0.0966,
         0.0102,  0.0118,  0.0729, -0.0941,  0.1059,  0.1175,  0.0865, -0.0335,
        -0.0477,  0.1908,  0.0270, -0.0806,  0.2102, -0.0239,  0.1966, -0.0460],
       device='cuda:0') torch.Size([128])
recurrent_blocks.0.bias_hh_l0 tensor([-1.6416e-02, -7.1121e-03, -7.1160e-03,  1.4722e-01, -6.9667e-02,
         2.0246e-01,  9.4682e-02,  8.1387e-02, -1.4372e-01,  4.1687e-02,
         1.8557e-01,  7.0231e-02, -5.6954e-02, -1.8641e-01, -3.9377e-02,
         4.4377e-02,  1.1461e-01,  1.4081e-01, -1.1976e-01,  1.5839e-01,
         4.3374e-02,  2.3015e-01,  8.2921e-02,  1.3399e-01,  1.6371e-01,
        -1.1138e-01, -8.1420e-02,  1.4081e-01,  6.6028e-02,  5.9440e-02,
         4.2409e-03, -7.8548e-02, -1.6532e-01,  2.1579e-01, -5.5667e-02,
        -6.2308e-02,  6.5486e-02,  1.2272e-01, -1.0747e-01,  2.2886e-02,
         1.2680e-01,  8.9466e-02,  2.0726e-02,  2.2591e-01, -2.1578e-01,
         8.5432e-02,  1.1356e-01,  8.5113e-02, -5.2408e-02, -1.1274e-01,
         7.3402e-02, -4.2915e-02,  1.4233e-01,  1.0036e-01, -2.7636e-02,
         1.8790e-01, -9.8891e-02,  1.5753e-01,  1.0490e-02,  1.1943e-01,
         1.2266e-01,  1.7041e-01, -6.2762e-02,  1.1254e-01, -2.2840e-03,
         2.4445e-01, -2.1164e-01,  9.5439e-02,  1.1247e-01,  1.9666e-04,
        -2.0632e-01,  1.5804e-01,  4.0698e-02, -2.3889e-01,  1.5624e-01,
         2.0199e-01,  2.6504e-02, -1.4833e-01,  2.6626e-01, -6.7137e-02,
         1.4319e-01,  2.1494e-01,  2.0119e-01, -1.9993e-01,  1.6748e-01,
         3.1023e-02, -2.1115e-01,  8.5327e-02, -4.5390e-02, -1.6596e-01,
         1.8498e-01,  1.7273e-01, -2.1239e-02, -1.0312e-01, -1.0098e-01,
         1.2075e-01, -8.6818e-03, -7.7219e-02,  1.8634e-01,  1.8402e-01,
        -7.8125e-03, -4.4231e-02,  4.3582e-04,  1.7221e-01,  1.7217e-01,
         2.4007e-01,  1.2496e-01,  9.5414e-02, -4.7312e-02, -2.9793e-02,
         2.5075e-02,  1.7983e-02,  3.4423e-02, -1.0576e-01, -9.3812e-02,
         5.3798e-02, -1.1374e-02,  1.9849e-01, -1.4252e-02, -2.3879e-02,
        -1.1620e-01,  1.8366e-01,  1.1251e-01,  1.6867e-02, -1.1362e-02,
        -2.2685e-02, -3.9197e-02,  9.8352e-02], device='cuda:0') torch.Size([128])
recurrent_blocks.0.weight_ih_l0_reverse tensor([[ 2.3085e-02, -2.1059e-01,  4.6884e-03],
        [ 1.3166e-02, -4.2734e-02, -1.7687e-02],
        [-5.2183e-02,  1.0405e-02,  9.4578e-02],
        [-1.4163e-01, -3.9018e-02,  1.1314e-01],
        [ 2.4401e-01,  1.5495e-01, -1.6608e-02],
        [-7.4296e-02, -8.5941e-02,  2.2513e-01],
        [ 7.6756e-02,  3.0684e-02, -6.9517e-02],
        [ 3.1395e-03,  1.2211e-02,  1.4108e-01],
        [ 5.4029e-02, -7.4508e-02, -9.3472e-02],
        [-8.1974e-02,  2.0751e-01, -2.6416e-01],
        [-1.0146e-01,  1.5447e-02,  7.9814e-02],
        [-1.7049e-01,  1.0560e-02, -1.8550e-01],
        [ 1.3171e-01,  5.4255e-02,  4.2361e-02],
        [-5.5220e-02, -2.8994e-02,  1.5411e-01],
        [ 8.7627e-02, -1.1333e-01,  1.6469e-02],
        [-3.7325e-02, -1.2668e-01,  2.1064e-02],
        [-7.1098e-02,  4.9479e-03,  1.9493e-02],
        [-9.5109e-02,  8.2121e-03, -6.2100e-02],
        [-2.1828e-01, -1.5048e-02, -6.3476e-02],
        [ 7.1967e-02, -1.2256e-01,  1.8351e-01],
        [-4.7989e-02,  8.7755e-02, -9.4755e-02],
        [-1.2762e-01, -1.5845e-01,  2.4923e-02],
        [-8.4953e-02,  7.2885e-02,  2.2463e-02],
        [-1.0353e-03,  1.1067e-01, -1.4503e-01],
        [-2.0485e-01, -2.1389e-03,  1.5950e-02],
        [-2.2363e-01, -2.1189e-01,  4.4207e-02],
        [-4.1544e-02,  7.0516e-02, -8.6074e-02],
        [-2.3207e-01,  5.5802e-02,  1.0146e-01],
        [-6.8367e-02,  1.8095e-01,  2.4177e-01],
        [ 1.5335e-01,  3.1526e-02, -1.8035e-01],
        [-1.0006e-01,  1.2421e-01, -1.5930e-01],
        [-1.8817e-01, -2.1346e-01, -4.1838e-02],
        [-2.0326e-01, -1.1074e-01,  1.0467e-01],
        [-2.0328e-01,  2.1885e-02,  2.0461e-01],
        [-2.0192e-01,  1.3730e-01,  1.6673e-01],
        [ 1.4176e-02, -6.2068e-02, -1.1683e-01],
        [ 2.1496e-01,  9.5910e-02,  2.0116e-01],
        [-4.4848e-02,  4.1236e-02,  1.6001e-01],
        [ 1.1263e-01, -1.9229e-02,  1.1889e-01],
        [-1.9728e-01, -8.1935e-02,  1.0016e-01],
        [ 6.8404e-02, -1.4921e-02,  7.6705e-02],
        [ 1.7318e-01, -1.6133e-02, -1.7235e-01],
        [-2.4095e-01, -6.4046e-02, -1.0965e-01],
        [ 1.4113e-01,  1.4488e-01, -8.4199e-02],
        [ 6.9231e-02,  1.2202e-01,  8.6988e-02],
        [ 1.3967e-01, -1.5973e-01, -7.9472e-02],
        [-1.6342e-01,  1.0917e-01, -1.3829e-01],
        [ 4.9045e-02, -2.6285e-01,  5.2051e-04],
        [-1.3540e-01, -1.1647e-01, -2.2067e-01],
        [-9.2771e-02,  1.7888e-01,  1.7840e-01],
        [-2.2054e-02,  1.1629e-01,  1.4540e-01],
        [ 2.3225e-02, -1.3476e-01,  9.7085e-02],
        [-7.1786e-02, -1.0284e-01,  7.6404e-02],
        [-5.0556e-03, -2.4631e-01,  2.5149e-01],
        [-8.3009e-02,  1.1307e-01, -1.8049e-01],
        [-6.2083e-02, -8.0405e-02,  1.2229e-01],
        [-7.3720e-02,  3.1499e-05,  1.5687e-01],
        [-9.1251e-03, -1.2756e-01,  2.0987e-01],
        [ 6.9863e-03,  7.5261e-02,  6.6263e-02],
        [-2.3156e-01, -6.7728e-03,  6.9341e-03],
        [-1.0376e-01,  1.0941e-01,  1.7287e-01],
        [-8.1313e-02, -1.5709e-02, -2.2464e-01],
        [-1.0363e-01, -1.8349e-03, -5.4256e-02],
        [-2.4905e-01,  5.7254e-02,  1.8561e-01],
        [ 1.6051e-01,  2.1169e-02, -2.0350e-01],
        [ 2.0164e-02, -1.2303e-01, -1.0572e-01],
        [-9.5791e-02, -2.1570e-02, -1.3874e-02],
        [-1.4162e-01, -7.5550e-02, -1.8963e-01],
        [-1.0099e-01, -6.6328e-02, -1.9649e-01],
        [ 3.2643e-02, -1.0424e-01,  4.9115e-02],
        [-4.6459e-02, -2.6317e-02, -2.4374e-01],
        [-1.3589e-01,  7.9784e-03,  2.0207e-01],
        [ 5.8998e-03,  2.3352e-01, -1.3170e-01],
        [-9.2484e-02, -2.1951e-01, -6.7085e-02],
        [-1.0626e-02,  3.9843e-02, -3.7981e-02],
        [-4.6810e-02, -1.0416e-01,  9.2519e-02],
        [-3.3105e-02,  4.0551e-02, -8.6742e-02],
        [-5.9352e-02, -4.3140e-02,  1.5481e-01],
        [-1.6155e-01, -1.6156e-01,  1.1133e-01],
        [ 7.7848e-02, -2.0768e-02,  9.2725e-02],
        [ 5.7364e-02, -1.1435e-01,  9.1406e-02],
        [ 3.4320e-02, -6.1716e-02, -9.5727e-02],
        [-2.7899e-02, -1.7423e-01,  2.2091e-01],
        [ 8.2804e-02,  1.8325e-01, -1.3206e-01],
        [ 1.3783e-01,  1.6125e-01, -2.2533e-01],
        [ 1.9534e-02, -1.8054e-01,  2.4239e-01],
        [ 7.0433e-02, -4.5520e-02,  1.5290e-01],
        [-7.3049e-02,  6.4454e-02,  1.3746e-01],
        [ 3.2437e-02,  1.8112e-03, -5.3826e-02],
        [ 1.1449e-01, -6.3246e-02,  6.1040e-02],
        [-1.3181e-01, -8.9928e-02, -1.3267e-01],
        [-1.3051e-01, -1.0477e-01,  2.3453e-01],
        [-5.2505e-02,  1.4368e-01,  1.7454e-01],
        [-1.2434e-01, -5.7841e-03, -1.5010e-01],
        [-1.6366e-01,  3.3657e-02,  2.1609e-01],
        [-9.6346e-02, -2.1679e-01,  1.7138e-01],
        [-5.4380e-02, -1.8224e-01,  1.2965e-01],
        [-6.8188e-02, -9.1734e-02,  5.8487e-02],
        [-1.3681e-01, -8.8828e-02,  8.2849e-02],
        [ 1.8957e-01, -1.4507e-02, -1.2976e-01],
        [ 9.1362e-02,  1.3596e-01, -3.7533e-02],
        [ 1.0414e-01, -2.4191e-01,  4.5048e-02],
        [-1.9448e-02,  4.5485e-03,  2.4842e-01],
        [ 3.1462e-02,  7.0501e-02,  1.0228e-01],
        [-4.0294e-02, -2.4148e-01,  8.9853e-02],
        [ 9.6947e-02,  4.0966e-02,  2.3132e-02],
        [ 1.2603e-02,  2.8292e-02,  1.9366e-01],
        [ 1.2000e-01, -1.1247e-01, -9.7175e-02],
        [ 1.6533e-01, -1.1342e-01,  1.5093e-01],
        [ 7.9826e-03, -1.5019e-01,  1.3491e-01],
        [ 9.5462e-02,  3.5228e-04,  1.5721e-01],
        [ 6.4518e-02, -1.4629e-01, -1.1697e-01],
        [ 1.6669e-01,  6.4833e-02, -2.2619e-01],
        [-1.6795e-01, -5.5906e-02,  1.0585e-01],
        [ 3.1973e-02,  5.3857e-02,  1.8019e-01],
        [ 1.2166e-01, -2.4005e-01, -4.7298e-02],
        [ 4.2551e-02,  4.6804e-02, -4.6096e-02],
        [-2.0563e-01, -6.2827e-02,  2.2102e-01],
        [ 9.8919e-02, -1.8561e-01,  1.2293e-02],
        [-1.6177e-01, -6.7109e-02, -7.2654e-03],
        [ 6.8023e-02, -1.2081e-01, -7.8418e-02],
        [-1.8622e-01,  8.4625e-02,  1.1280e-01],
        [ 1.3083e-02, -5.9671e-02, -1.0155e-03],
        [-1.3847e-01, -8.6762e-02,  9.9062e-02],
        [ 6.2634e-03, -3.7787e-02, -9.7404e-02],
        [ 1.4280e-01, -1.0199e-02,  5.9668e-03],
        [-2.0703e-02, -3.8234e-02,  1.0104e-01],
        [-7.0499e-02, -1.9314e-01, -7.2737e-02]], device='cuda:0') torch.Size([128, 3])
recurrent_blocks.0.weight_hh_l0_reverse tensor([[ 0.0072,  0.1219, -0.1317,  ..., -0.0646, -0.0467,  0.0636],
        [-0.0324, -0.0727,  0.2184,  ..., -0.1531,  0.0417,  0.0638],
        [-0.2014,  0.0181,  0.2118,  ...,  0.1824,  0.0274,  0.1348],
        ...,
        [ 0.1275,  0.1180, -0.1049,  ..., -0.1649, -0.0339,  0.0889],
        [ 0.0662,  0.1966,  0.1996,  ..., -0.0730,  0.1878,  0.0193],
        [-0.0012, -0.0862,  0.0128,  ..., -0.0817,  0.2433,  0.0970]],
       device='cuda:0') torch.Size([128, 32])
recurrent_blocks.0.bias_ih_l0_reverse tensor([ 0.1826, -0.0392, -0.0216,  0.1098,  0.0040,  0.1041,  0.1103, -0.1127,
        -0.0422, -0.1687,  0.1392,  0.1308,  0.2346,  0.0931, -0.0574,  0.0805,
        -0.1417, -0.0373,  0.2050, -0.0913, -0.0880,  0.2089, -0.1734, -0.1658,
         0.1811, -0.0572,  0.1558, -0.0365,  0.1341,  0.0010, -0.0554,  0.1159,
         0.1618,  0.1825, -0.0035,  0.0428,  0.1439,  0.0771,  0.1015, -0.1168,
         0.1443, -0.0309, -0.0947, -0.1008, -0.0750,  0.1340,  0.0836,  0.0897,
        -0.1897, -0.0589, -0.0282,  0.2101,  0.1077,  0.2288,  0.1110, -0.0943,
         0.0211,  0.1439, -0.1051,  0.1096, -0.1021, -0.0214, -0.1811, -0.0223,
        -0.1869, -0.1449,  0.1141, -0.1488, -0.1959,  0.1718, -0.2372,  0.1080,
        -0.0650,  0.0632, -0.1789,  0.0128, -0.2639,  0.0736,  0.0079,  0.1506,
        -0.0121, -0.0248,  0.1652,  0.0571, -0.1142,  0.1904, -0.0733,  0.0347,
        -0.0352, -0.0912, -0.0923,  0.0254,  0.1375,  0.0524, -0.0298,  0.1067,
         0.0222,  0.1630,  0.2118, -0.1314,  0.1703, -0.0633,  0.2268,  0.1988,
        -0.0111, -0.1608,  0.1877, -0.1263,  0.2400,  0.0896, -0.1116,  0.0198,
         0.0352,  0.0503,  0.1700,  0.1704,  0.0627,  0.2244,  0.0369, -0.0670,
        -0.0383,  0.1927, -0.0903,  0.1619, -0.0554, -0.0948, -0.0926, -0.0140],
       device='cuda:0') torch.Size([128])
recurrent_blocks.0.bias_hh_l0_reverse tensor([ 0.1625,  0.1245,  0.0946, -0.1292, -0.0597,  0.0794,  0.0451,  0.1083,
         0.0436, -0.0048, -0.0279,  0.1076, -0.0494, -0.1090, -0.1028, -0.0745,
        -0.2368, -0.0946,  0.1447, -0.1099,  0.1258, -0.0491, -0.1705,  0.1184,
         0.0328, -0.0380,  0.0839,  0.0710,  0.0801,  0.0896, -0.1074,  0.0905,
        -0.0250,  0.1855,  0.0795,  0.1471,  0.0481,  0.0831,  0.0800, -0.0790,
         0.1867, -0.2391, -0.1197,  0.0690,  0.1680, -0.0677,  0.0636,  0.0474,
        -0.2260, -0.0462, -0.1126, -0.0754, -0.0215,  0.0461, -0.1223, -0.0336,
         0.0991, -0.0320,  0.1280, -0.0747, -0.0508,  0.0549, -0.0077,  0.2002,
        -0.1293, -0.1747,  0.0883,  0.0139, -0.0922,  0.0953,  0.0206, -0.0343,
        -0.1591, -0.0803, -0.0532,  0.1794, -0.2564,  0.1882,  0.1781,  0.1037,
        -0.0486, -0.2203, -0.0944, -0.1736, -0.0170,  0.0285,  0.1018, -0.0286,
        -0.1416, -0.2017, -0.0502,  0.2479,  0.1513, -0.0603,  0.0970,  0.0313,
         0.1589, -0.0728,  0.0134, -0.1880,  0.1926, -0.0626, -0.0261, -0.0461,
         0.1962, -0.0502,  0.0174, -0.1469,  0.0928, -0.0317, -0.1633,  0.1574,
         0.0412, -0.0851,  0.1309,  0.1856, -0.0680,  0.0727, -0.1882, -0.0259,
         0.0453, -0.0024,  0.0019, -0.0725,  0.1549,  0.0762,  0.0723,  0.0200],
       device='cuda:0') torch.Size([128])
recurrent_blocks.1.weight_ih_l0 tensor([[-0.1656,  0.1085,  0.0640,  ..., -0.0592,  0.2484, -0.0630],
        [-0.0814,  0.0716, -0.0326,  ...,  0.0081, -0.0643,  0.2068],
        [ 0.1847, -0.0604, -0.0628,  ..., -0.0738,  0.0143,  0.0995],
        ...,
        [ 0.1612, -0.0108,  0.1002,  ..., -0.1089,  0.0459,  0.1330],
        [ 0.0092,  0.2083,  0.0328,  ..., -0.2309,  0.0218,  0.0489],
        [-0.2003,  0.1766, -0.0608,  ..., -0.0470, -0.0419,  0.0453]],
       device='cuda:0') torch.Size([128, 64])
recurrent_blocks.1.weight_hh_l0 tensor([[-0.1457,  0.1891, -0.1424,  ...,  0.1269,  0.0881,  0.0397],
        [ 0.0807,  0.1752,  0.0554,  ...,  0.2296, -0.0834,  0.1317],
        [ 0.2088, -0.0995, -0.0525,  ...,  0.0543,  0.0880, -0.0922],
        ...,
        [ 0.0535, -0.0449, -0.0357,  ..., -0.0146, -0.1674, -0.1216],
        [ 0.0054,  0.1712, -0.0194,  ..., -0.1025, -0.1380,  0.0268],
        [ 0.1638,  0.0019,  0.0321,  ...,  0.1511, -0.1250,  0.0661]],
       device='cuda:0') torch.Size([128, 32])
recurrent_blocks.1.bias_ih_l0 tensor([ 1.0258e-01,  1.8774e-01,  1.1424e-01,  2.8559e-03,  1.3509e-01,
        -8.4665e-03,  1.7743e-02, -3.8838e-02,  7.5990e-02, -1.1214e-01,
        -1.0147e-01,  1.5424e-01,  1.2223e-02,  9.7632e-02,  7.6110e-02,
         2.5803e-01,  1.0806e-01,  1.3370e-01, -7.3341e-02,  2.3306e-01,
         4.9814e-02,  1.3565e-02,  1.9685e-02, -1.2092e-01,  1.0210e-01,
        -1.5724e-02, -2.1227e-01,  1.6972e-01,  1.5645e-01, -2.3583e-01,
        -3.4894e-02, -8.6377e-02,  1.8299e-03,  1.0279e-01,  1.3178e-01,
         7.5594e-02, -1.0965e-01, -7.9456e-02,  2.2951e-01,  2.1159e-01,
         8.1475e-02,  1.1462e-02,  2.7745e-02, -3.5271e-03,  7.5862e-02,
        -1.0715e-01,  3.0914e-02,  9.6073e-02,  7.2460e-02,  8.4136e-02,
         1.8633e-01, -4.9892e-02,  8.9433e-02, -1.0905e-01,  1.9129e-01,
        -1.5639e-01,  8.8223e-02,  1.1234e-01, -2.0929e-01,  5.4461e-03,
         8.6597e-02,  9.1760e-02,  9.4097e-02,  3.5265e-02,  3.2051e-02,
         2.6434e-01,  1.2236e-01,  1.2388e-01, -5.1001e-02,  1.0418e-01,
         4.2073e-02, -2.0944e-01,  4.3232e-02,  1.7283e-02,  1.7636e-03,
        -5.7716e-02,  5.6565e-02,  1.7149e-01, -6.0834e-03, -1.6887e-01,
        -1.0989e-01, -5.2088e-02,  7.4656e-03,  4.7792e-02,  2.1112e-01,
        -5.2069e-02,  2.5850e-02,  5.0248e-02, -1.2082e-01, -5.0239e-02,
        -2.4124e-03, -1.4461e-01,  1.0255e-01, -8.7273e-02,  1.1990e-01,
         1.6700e-01,  1.1198e-01,  4.2512e-02,  1.6404e-01,  2.5543e-02,
        -5.9307e-02,  1.0711e-02,  1.5189e-01, -6.7531e-02, -1.1241e-01,
        -1.1452e-01,  9.7194e-02,  2.1044e-04, -4.3519e-04,  1.3521e-01,
         5.4371e-02,  1.7297e-01, -1.5767e-01,  1.0594e-01,  2.9839e-02,
         6.2130e-02,  2.5400e-01, -6.4598e-02,  2.1782e-01, -1.2836e-01,
         1.7627e-01, -1.7012e-02,  1.8006e-02, -4.5312e-02,  1.5779e-01,
        -3.4630e-02, -1.0715e-01,  1.0969e-01], device='cuda:0') torch.Size([128])
recurrent_blocks.1.bias_hh_l0 tensor([-3.4307e-02,  1.8952e-01,  7.8060e-02,  1.7015e-01,  3.6783e-02,
         2.2965e-01,  4.8660e-02,  2.2173e-01, -3.5430e-02, -4.0986e-02,
        -3.5974e-02,  2.5457e-02, -1.4032e-02,  1.1913e-02, -1.1889e-01,
         2.3570e-01,  1.3014e-01,  1.2126e-01,  7.1472e-02, -3.1439e-02,
         2.4950e-01,  1.4091e-01,  2.1639e-01, -1.5706e-01,  1.5793e-01,
         1.5386e-01, -5.3458e-02, -9.7264e-02,  5.1398e-02, -1.9962e-01,
         4.1562e-03, -6.9524e-02,  6.3438e-02, -1.1704e-01,  7.9066e-02,
        -8.7313e-03, -7.6193e-02,  2.9383e-02, -1.8560e-03,  1.1276e-01,
         8.8283e-03, -7.1487e-02,  1.5572e-01,  4.8659e-02, -1.3213e-02,
         2.2376e-01,  1.7828e-01,  3.2875e-02, -8.2912e-02,  4.2369e-02,
        -1.2309e-02,  1.1118e-01,  1.5750e-05,  3.6635e-02,  1.1155e-01,
         1.0346e-01,  1.7613e-01,  5.4167e-05, -1.3677e-01,  2.0915e-01,
        -6.2390e-03, -1.9369e-01,  9.5859e-02, -8.9608e-02,  1.1471e-01,
        -5.7941e-02,  1.9509e-01,  2.1590e-01, -1.8033e-01,  5.6893e-02,
        -2.4607e-01,  9.8697e-02,  1.5871e-01, -1.7445e-01, -7.1286e-03,
        -8.4937e-02, -2.7889e-02,  1.0760e-01,  1.3626e-01, -2.1152e-02,
        -5.7098e-02, -7.9114e-02,  2.0523e-01,  1.8289e-01,  2.4557e-01,
        -2.5001e-02, -1.7051e-01,  1.9665e-01, -1.6745e-01, -2.0219e-01,
         1.3966e-01, -5.5973e-02,  1.4096e-01,  9.5532e-03, -1.6539e-02,
        -5.8007e-02, -5.5370e-03,  1.3057e-01,  5.3183e-02,  1.5249e-01,
         1.0348e-01, -4.8450e-02,  2.0200e-01, -6.9287e-02, -8.6116e-02,
         7.3236e-02,  1.6829e-01, -4.6472e-02, -1.8244e-02, -4.7862e-02,
        -9.7282e-02,  6.6938e-02, -2.0996e-01,  1.6183e-01,  2.1109e-01,
         2.1934e-01,  1.7137e-01, -4.4787e-02, -1.1166e-02, -1.3139e-01,
         1.8836e-02, -1.1342e-01, -1.2211e-01, -7.7935e-02, -4.9519e-02,
        -1.4298e-01,  1.4546e-01,  1.7181e-01], device='cuda:0') torch.Size([128])
recurrent_blocks.1.weight_ih_l0_reverse tensor([[-0.0055,  0.0469, -0.0116,  ...,  0.0708, -0.1203,  0.0550],
        [ 0.0583,  0.0229,  0.0265,  ...,  0.1098, -0.0131,  0.0871],
        [-0.2332, -0.0755, -0.0225,  ..., -0.1051,  0.0908,  0.0878],
        ...,
        [-0.1577,  0.1054, -0.2299,  ..., -0.0485, -0.0143, -0.0660],
        [ 0.0457,  0.2339, -0.0091,  ..., -0.0854, -0.1213, -0.0763],
        [ 0.0152,  0.0694, -0.1093,  ..., -0.0669, -0.0545, -0.0380]],
       device='cuda:0') torch.Size([128, 64])
recurrent_blocks.1.weight_hh_l0_reverse tensor([[ 0.0770,  0.0741,  0.0973,  ...,  0.1375, -0.2138, -0.1747],
        [-0.0224, -0.0583, -0.0022,  ...,  0.0683, -0.0578,  0.1065],
        [-0.0511, -0.1142,  0.0952,  ...,  0.0966, -0.1343,  0.0751],
        ...,
        [ 0.1634, -0.1812,  0.1308,  ..., -0.0917,  0.1103, -0.0879],
        [-0.0404,  0.0453,  0.1041,  ..., -0.0260,  0.0339,  0.0632],
        [ 0.0638, -0.1737,  0.2157,  ..., -0.0161,  0.2025,  0.0906]],
       device='cuda:0') torch.Size([128, 32])
recurrent_blocks.1.bias_ih_l0_reverse tensor([-0.1481,  0.1788,  0.0744, -0.0955,  0.0847,  0.0228,  0.2351,  0.1381,
         0.1390, -0.0195,  0.0672,  0.2552,  0.1023,  0.0739, -0.0108, -0.1381,
         0.1831,  0.0162,  0.1022,  0.1313,  0.1265, -0.0030,  0.1568, -0.1564,
        -0.1256, -0.0344,  0.2102,  0.0350,  0.0648,  0.0209,  0.0188, -0.0717,
         0.0868,  0.0281, -0.0235, -0.1307, -0.1084,  0.1556, -0.0652,  0.2144,
        -0.0624, -0.0564,  0.2468, -0.0199,  0.2344,  0.1516, -0.0872,  0.0804,
        -0.0179, -0.0386, -0.1765,  0.0780, -0.0755, -0.0891,  0.1963, -0.1525,
         0.0710,  0.0209,  0.2412,  0.0385,  0.0847,  0.1432,  0.1810,  0.2019,
        -0.0560, -0.0629,  0.2193, -0.2069, -0.0962,  0.0098, -0.1727,  0.1648,
        -0.2344,  0.0710,  0.1067, -0.0455, -0.2400, -0.1693,  0.0174,  0.1559,
        -0.0338,  0.1052, -0.1638, -0.0364, -0.0189, -0.0581,  0.0337, -0.1477,
        -0.0051,  0.0332,  0.1576,  0.1834, -0.1763, -0.1680,  0.0138,  0.0041,
         0.0541, -0.0896, -0.0531,  0.0452, -0.2010,  0.1475,  0.2421,  0.1561,
        -0.0784, -0.1051, -0.0330,  0.1678, -0.0898, -0.0543,  0.0404, -0.0884,
         0.2036,  0.0168, -0.1210,  0.1971,  0.1333, -0.0633,  0.1741,  0.0767,
        -0.1573,  0.1190,  0.0798, -0.0832,  0.0772,  0.0648, -0.0634,  0.2334],
       device='cuda:0') torch.Size([128])
recurrent_blocks.1.bias_hh_l0_reverse tensor([-1.2728e-01,  7.4592e-02, -2.5450e-02,  7.1806e-02, -1.6547e-01,
         1.6284e-01,  3.0817e-02,  2.0673e-02,  2.0960e-01,  1.4956e-01,
        -5.0744e-03,  1.7740e-01,  2.2541e-01,  1.4490e-01,  1.6188e-02,
        -6.0311e-02, -9.0130e-02,  7.3503e-02,  5.1133e-02, -1.5167e-02,
        -4.2868e-03,  1.9225e-01, -3.7606e-02,  1.5679e-01,  6.5737e-02,
        -9.0930e-03,  1.2265e-01, -3.1789e-03, -7.3855e-02,  2.0792e-01,
        -6.2174e-02, -5.5445e-02, -1.2643e-01,  1.0668e-01, -1.3631e-01,
         1.9576e-01,  4.1080e-02, -4.2794e-02, -4.4681e-06,  1.0869e-01,
         1.6353e-01,  2.1549e-02, -2.1290e-02, -8.6496e-02,  8.8936e-02,
         9.4842e-02, -2.3097e-02,  8.6787e-02,  2.2625e-01, -8.9260e-02,
         9.3654e-02, -2.4909e-02,  6.2341e-02,  9.5442e-02,  1.0291e-01,
        -1.5576e-01, -1.0642e-01, -1.1382e-02,  3.3009e-02,  2.3925e-02,
         2.2416e-02,  1.7826e-01,  1.2335e-01,  2.1006e-01, -9.2971e-02,
        -1.6260e-01, -4.3059e-02, -1.3442e-01, -2.3383e-02,  1.8033e-01,
        -8.3091e-02,  3.1827e-02, -5.3876e-02, -1.4712e-01,  1.3232e-01,
         2.2452e-01, -6.5031e-02, -6.8296e-02, -1.9606e-01,  1.6224e-01,
        -6.2616e-02,  1.3784e-01,  1.3650e-01, -1.3173e-01,  1.1419e-01,
         2.0863e-01,  7.8089e-02, -1.0014e-01, -4.9273e-05,  6.1677e-02,
         1.9859e-01,  3.2798e-02, -1.3283e-01, -2.1709e-01,  2.5426e-01,
         2.6040e-01, -1.7997e-01,  2.9722e-02,  3.5599e-02, -1.5108e-02,
        -1.0992e-01,  9.4500e-02,  2.5130e-01, -9.3967e-02, -2.9601e-02,
         5.9219e-02,  5.8448e-02, -2.7720e-02,  1.8236e-01,  1.4741e-01,
        -9.2193e-02, -1.3993e-01,  1.0061e-01,  1.3797e-01, -1.2736e-01,
         1.0521e-01,  1.4914e-01,  1.1960e-01,  1.7858e-01,  1.5413e-01,
         3.0494e-03,  1.3095e-01,  2.4827e-01,  2.0766e-01,  1.4417e-01,
        -7.1139e-02, -2.4976e-02, -6.0494e-02], device='cuda:0') torch.Size([128])
recurrent_blocks.2.weight_ih_l0 tensor([[-0.1240, -0.1029, -0.0253,  ..., -0.1329,  0.0213, -0.0495],
        [ 0.1502,  0.0888,  0.2631,  ...,  0.0028,  0.1672, -0.1165],
        [-0.1139,  0.1035,  0.1041,  ...,  0.1178,  0.0746,  0.1101],
        ...,
        [-0.1378, -0.0333,  0.2248,  ..., -0.1313, -0.0841, -0.0530],
        [-0.0737,  0.0833, -0.0994,  ..., -0.0174, -0.0610,  0.2135],
        [ 0.1030, -0.1217, -0.0670,  ...,  0.0087,  0.1072,  0.1202]],
       device='cuda:0') torch.Size([128, 64])
recurrent_blocks.2.weight_hh_l0 tensor([[-0.1021, -0.0833, -0.1434,  ..., -0.0238,  0.0016,  0.0802],
        [ 0.1034,  0.0293, -0.0997,  ..., -0.1319, -0.0948,  0.0876],
        [-0.0327, -0.1662, -0.0536,  ...,  0.1822, -0.1703, -0.1177],
        ...,
        [ 0.0216,  0.2282, -0.1435,  ...,  0.1342, -0.0287, -0.0213],
        [-0.0021, -0.0625, -0.1045,  ..., -0.1492, -0.0810, -0.0270],
        [-0.0619,  0.0981, -0.1502,  ...,  0.0647, -0.1120,  0.1586]],
       device='cuda:0') torch.Size([128, 32])
recurrent_blocks.2.bias_ih_l0 tensor([-0.0445,  0.1998, -0.1020, -0.0825,  0.1945,  0.1194, -0.1302,  0.0861,
         0.0623,  0.0164,  0.0879,  0.1198, -0.0894, -0.0387,  0.0623, -0.0618,
         0.0736,  0.0191,  0.1497, -0.1507,  0.0497, -0.0712, -0.0766, -0.1291,
        -0.0240, -0.0463,  0.2258, -0.1549,  0.0922, -0.0698,  0.0042,  0.0181,
         0.1146,  0.0033, -0.0012, -0.0841, -0.0530,  0.0895,  0.2113, -0.0446,
        -0.0012,  0.1718, -0.0931, -0.0323,  0.2019,  0.1316,  0.0387,  0.0707,
         0.1149,  0.0960,  0.0453, -0.0919, -0.0307, -0.1602,  0.1797, -0.1564,
        -0.0629, -0.0739,  0.2096,  0.0020,  0.0235, -0.0840,  0.1987,  0.1796,
         0.0172,  0.1296, -0.1392,  0.0427, -0.0759,  0.1716, -0.1687,  0.0084,
         0.1902, -0.0934,  0.0535, -0.0320,  0.1696,  0.1244,  0.0127, -0.0948,
         0.1016, -0.0161,  0.1019, -0.1125,  0.1363,  0.0217, -0.1687, -0.0635,
         0.0834, -0.2001, -0.1521,  0.0062,  0.1515, -0.2070,  0.1967,  0.0814,
        -0.1734, -0.0351, -0.1295,  0.0177, -0.0953,  0.0695,  0.2069,  0.0551,
         0.1321,  0.2113, -0.1491,  0.1201,  0.1717,  0.1317, -0.0121,  0.2243,
        -0.0107, -0.0241,  0.2168,  0.0694,  0.1255, -0.0837, -0.0295, -0.2116,
        -0.0207,  0.1174, -0.0736,  0.0402,  0.2272, -0.1291, -0.0526,  0.1624],
       device='cuda:0') torch.Size([128])
recurrent_blocks.2.bias_hh_l0 tensor([-0.2041,  0.2110, -0.1494,  0.0270, -0.0422,  0.1386,  0.0735,  0.0976,
        -0.1092, -0.0744,  0.1176, -0.0837,  0.1143, -0.1124, -0.0256, -0.0090,
         0.2098,  0.1516,  0.1141, -0.1125, -0.0708, -0.0098, -0.0809,  0.0629,
         0.1827, -0.0287,  0.0847, -0.1592,  0.0936, -0.0297, -0.0330,  0.0736,
        -0.0746,  0.1490,  0.0472,  0.0190,  0.0352,  0.0798,  0.1901,  0.1159,
        -0.1317,  0.1784, -0.1574, -0.0594, -0.0491,  0.1248,  0.0814,  0.0394,
        -0.0059,  0.1522,  0.1329, -0.0451, -0.0795, -0.2308,  0.1189, -0.1143,
         0.1584, -0.1053,  0.1166, -0.0944,  0.2192,  0.0659, -0.0175, -0.0473,
         0.1380,  0.0602,  0.0030, -0.0361, -0.1260, -0.0129,  0.0179, -0.1712,
         0.1464, -0.0645, -0.1095,  0.1756,  0.1651, -0.0110, -0.0253, -0.1642,
         0.1360, -0.1859,  0.1530,  0.0631,  0.1423, -0.0377,  0.0482, -0.1249,
        -0.1617, -0.0549, -0.1789,  0.1568,  0.2208, -0.1794, -0.0117,  0.0657,
         0.1045,  0.1025, -0.1370, -0.0948, -0.0743,  0.1251,  0.1734,  0.0908,
        -0.1794,  0.0676,  0.0870, -0.0957,  0.2584,  0.0741,  0.1646,  0.1814,
        -0.0288,  0.0919,  0.0270,  0.1123, -0.0994, -0.0182,  0.1939, -0.0485,
         0.0376,  0.2345, -0.0579, -0.1898,  0.2655,  0.1748,  0.2219,  0.1618],
       device='cuda:0') torch.Size([128])
recurrent_blocks.2.weight_ih_l0_reverse tensor([[-0.0499, -0.0836,  0.1608,  ...,  0.0983, -0.0040,  0.0022],
        [ 0.1218,  0.1491,  0.1663,  ..., -0.1677, -0.0383,  0.0305],
        [ 0.1895,  0.1640,  0.1106,  ...,  0.0740,  0.1395, -0.1023],
        ...,
        [-0.1521, -0.1412, -0.1983,  ...,  0.1349,  0.0291,  0.0321],
        [-0.0530,  0.0343,  0.1351,  ..., -0.2057,  0.1342,  0.0287],
        [-0.0895,  0.0780,  0.1111,  ..., -0.0147,  0.0663,  0.2022]],
       device='cuda:0') torch.Size([128, 64])
recurrent_blocks.2.weight_hh_l0_reverse tensor([[ 0.1430, -0.0334, -0.0196,  ..., -0.1615, -0.1824,  0.0339],
        [-0.0494, -0.0057,  0.1006,  ..., -0.1138,  0.0333,  0.0626],
        [ 0.0055,  0.0356,  0.0148,  ..., -0.1407,  0.1632,  0.1718],
        ...,
        [-0.0432, -0.0293, -0.0243,  ..., -0.1905,  0.0319,  0.0970],
        [ 0.2190, -0.0422,  0.1922,  ...,  0.0686,  0.1991,  0.0221],
        [ 0.0347,  0.1298,  0.1878,  ..., -0.0316,  0.1909,  0.0031]],
       device='cuda:0') torch.Size([128, 32])
recurrent_blocks.2.bias_ih_l0_reverse tensor([-0.2069, -0.1352,  0.0018, -0.0870,  0.1000,  0.0661,  0.0250,  0.1159,
         0.1260,  0.0223,  0.0709,  0.0495, -0.0547,  0.0930, -0.0684,  0.0241,
         0.0574,  0.2413, -0.0016,  0.0041, -0.0543,  0.1311,  0.1270, -0.0634,
        -0.1126, -0.1398,  0.1216, -0.0719, -0.0936, -0.0650, -0.0397,  0.0368,
         0.0600,  0.0976,  0.0032,  0.0727, -0.2156,  0.1781,  0.0663,  0.1624,
         0.2019,  0.0922,  0.1836, -0.0111, -0.0536,  0.1766,  0.0192,  0.1101,
         0.2305, -0.0583, -0.0420,  0.0242, -0.1000,  0.0336,  0.2129,  0.0596,
        -0.0735, -0.1127, -0.0284, -0.0023, -0.0126,  0.1454,  0.1275,  0.0508,
        -0.0966, -0.0052,  0.1593, -0.1416, -0.0481,  0.2424, -0.1774, -0.0508,
        -0.1053, -0.1086,  0.1309, -0.0274, -0.0826,  0.1153, -0.0999,  0.2063,
        -0.2166,  0.1463, -0.1630, -0.0793, -0.1979,  0.0911,  0.1479,  0.0483,
         0.0446,  0.0813,  0.0786,  0.2075,  0.0327,  0.0541,  0.0822,  0.1750,
         0.1004,  0.0100,  0.0538,  0.1372,  0.1357,  0.1664, -0.0745,  0.1325,
         0.0029, -0.0339, -0.1195,  0.2242,  0.1812,  0.1147,  0.1338, -0.0805,
         0.1855,  0.2425, -0.0576,  0.2286,  0.0533,  0.2409,  0.0551,  0.0097,
        -0.1758,  0.0149,  0.0208,  0.2129, -0.0235,  0.1323,  0.1064,  0.0715],
       device='cuda:0') torch.Size([128])
recurrent_blocks.2.bias_hh_l0_reverse tensor([ 0.1145,  0.0295, -0.0490,  0.1065,  0.0622,  0.2225,  0.1120,  0.0893,
         0.1107,  0.1081,  0.1065, -0.1052,  0.0554, -0.0623, -0.1455,  0.0232,
         0.0208,  0.1423,  0.0723,  0.1078, -0.1086,  0.1040,  0.2076, -0.2108,
        -0.2362,  0.1698,  0.1906,  0.2048,  0.1107,  0.1296,  0.1464,  0.0657,
         0.0742,  0.0599,  0.1737,  0.1589, -0.0608,  0.0305, -0.0105, -0.0307,
         0.0111, -0.0200,  0.1334,  0.0469, -0.0292, -0.0597, -0.1307, -0.0519,
         0.2274,  0.2061, -0.0598,  0.0440, -0.0125,  0.2439,  0.1664,  0.1241,
        -0.0393, -0.0176,  0.2084, -0.0383,  0.1394, -0.0551,  0.2252,  0.2541,
         0.0796, -0.0630,  0.2148, -0.1579, -0.0470,  0.0176, -0.1629,  0.2144,
        -0.1968, -0.0147, -0.0673,  0.2129, -0.0655,  0.0111, -0.0344,  0.2128,
        -0.0229,  0.1192, -0.1291, -0.1590, -0.1460,  0.0733,  0.2069,  0.0879,
         0.0875, -0.1673, -0.0243,  0.1562, -0.1003,  0.1467,  0.1534,  0.1706,
        -0.0872,  0.1437, -0.0923, -0.1312,  0.1309, -0.0185,  0.0148,  0.1185,
         0.0331, -0.0558,  0.0720,  0.2572,  0.2476,  0.1776,  0.1351, -0.0643,
        -0.0723,  0.2290,  0.0928,  0.1125, -0.1032, -0.0509,  0.0482,  0.0823,
         0.0469, -0.0147, -0.0898, -0.0659,  0.1028, -0.1455, -0.0588,  0.0615],
       device='cuda:0') torch.Size([128])
recurrent_blocks.3.weight_ih_l0 tensor([[-0.0644,  0.1806, -0.1585,  ..., -0.1136, -0.0494,  0.1322],
        [ 0.0464,  0.1083, -0.1535,  ..., -0.1192,  0.1273,  0.0933],
        [ 0.0196,  0.0467,  0.0287,  ..., -0.0962,  0.1548,  0.1385],
        ...,
        [ 0.0814, -0.0811,  0.1514,  ..., -0.1830, -0.0334,  0.2082],
        [ 0.0944, -0.1517, -0.1587,  ...,  0.1072, -0.0367,  0.1734],
        [-0.0341, -0.1438,  0.0098,  ..., -0.0716, -0.0774, -0.0887]],
       device='cuda:0') torch.Size([128, 64])
recurrent_blocks.3.weight_hh_l0 tensor([[ 5.3369e-03,  1.5280e-01, -9.9975e-02,  ..., -6.7913e-02,
          1.1614e-01,  1.7158e-01],
        [ 1.2971e-01,  2.2853e-02, -7.8013e-02,  ..., -7.5488e-02,
         -6.3920e-02, -6.6768e-02],
        [ 5.3620e-03, -3.7617e-03, -9.8408e-02,  ..., -2.0739e-01,
         -2.1905e-02,  1.3904e-01],
        ...,
        [-6.5119e-02,  9.6850e-02,  1.2577e-01,  ..., -1.9283e-01,
          1.1479e-02,  3.0324e-02],
        [ 1.3814e-01, -1.0601e-01, -9.9974e-02,  ..., -2.0812e-01,
          8.2674e-02, -1.2911e-01],
        [-1.1839e-01, -2.7636e-02,  1.6090e-01,  ...,  1.7974e-04,
         -3.9348e-02,  1.9886e-01]], device='cuda:0') torch.Size([128, 32])
recurrent_blocks.3.bias_ih_l0 tensor([ 0.0462,  0.0090,  0.0993, -0.2259, -0.0503,  0.2204,  0.2049, -0.1001,
         0.1477, -0.0618, -0.0031, -0.0798,  0.1469, -0.0191,  0.0737, -0.1442,
         0.1666,  0.1054,  0.1553, -0.0647, -0.0280,  0.2096,  0.0800, -0.1209,
         0.0054, -0.0773,  0.0238,  0.1202, -0.0012, -0.1189, -0.0572, -0.0976,
         0.0594, -0.0597,  0.1310, -0.0773,  0.0678,  0.0585,  0.0031, -0.2072,
        -0.0949, -0.0362,  0.1016,  0.1744,  0.2436, -0.0693, -0.0378,  0.0426,
        -0.0818, -0.0698,  0.1712,  0.1183,  0.1126,  0.1584,  0.0159,  0.1691,
         0.1720,  0.1572,  0.2070, -0.1749, -0.0071,  0.0988, -0.0658,  0.0042,
         0.1725,  0.0212,  0.1136, -0.0134,  0.1243,  0.1574, -0.2138,  0.0684,
        -0.0949, -0.0351, -0.0328, -0.0472,  0.2253, -0.0310, -0.1002, -0.0316,
         0.2049,  0.0752,  0.0573, -0.1149, -0.0155, -0.1209, -0.1133, -0.0675,
        -0.2005, -0.1994, -0.0048,  0.0938,  0.1816,  0.1122,  0.1139, -0.0777,
         0.0822,  0.0635, -0.1041,  0.0419, -0.0333, -0.0019,  0.0234, -0.0430,
        -0.0705,  0.0668, -0.1561, -0.0485,  0.0750,  0.0581, -0.1767,  0.0209,
        -0.1219,  0.0670,  0.0730,  0.0736,  0.2027,  0.1814,  0.1448,  0.1730,
         0.1595,  0.2316,  0.0780,  0.1259, -0.1028,  0.1685,  0.1207, -0.0328],
       device='cuda:0') torch.Size([128])
recurrent_blocks.3.bias_hh_l0 tensor([-0.1010,  0.0896,  0.1520,  0.0845,  0.0651, -0.0249,  0.1991,  0.0247,
         0.1193,  0.1381,  0.0655,  0.1353, -0.0768,  0.0075,  0.1234,  0.1265,
         0.1342,  0.1198,  0.0782,  0.0682,  0.1117, -0.0395,  0.1100, -0.1414,
        -0.0322,  0.0439,  0.2012, -0.1192,  0.1252, -0.1025,  0.1234, -0.0551,
        -0.1229, -0.0812,  0.1350, -0.2171, -0.0194,  0.2246,  0.2420, -0.2180,
         0.2208,  0.1345, -0.1401,  0.0584, -0.0883,  0.1074, -0.0286,  0.0491,
         0.2028,  0.0275,  0.0964, -0.1986,  0.0423, -0.0112, -0.0650,  0.1943,
         0.1185,  0.0211, -0.0843,  0.0874, -0.0393,  0.1226,  0.1605, -0.0874,
         0.0110, -0.0306,  0.0099,  0.0129, -0.1163,  0.0643,  0.0081,  0.0192,
        -0.2037, -0.2052, -0.0609,  0.1615,  0.0890,  0.0128, -0.0875,  0.0401,
         0.2152, -0.0613,  0.0102,  0.1384,  0.0020, -0.1228,  0.0159,  0.0579,
        -0.1124, -0.0823, -0.1477,  0.0046,  0.1867, -0.1812,  0.1222, -0.1398,
         0.1930,  0.2248, -0.1395,  0.0981, -0.1037,  0.0686,  0.2180, -0.2012,
         0.1038,  0.1833, -0.0705, -0.0157, -0.0887, -0.0372,  0.0708, -0.1919,
        -0.0777,  0.0244,  0.2515, -0.1122,  0.2256,  0.2173, -0.0609, -0.0054,
         0.0900,  0.2291, -0.0375,  0.0055, -0.0631,  0.1475, -0.0595, -0.1129],
       device='cuda:0') torch.Size([128])
recurrent_blocks.3.weight_ih_l0_reverse tensor([[ 0.1818, -0.0028,  0.0600,  ...,  0.0830,  0.1790,  0.0103],
        [ 0.0318,  0.0250, -0.1093,  ..., -0.0092, -0.1141, -0.0416],
        [ 0.1677, -0.0508, -0.1335,  ..., -0.0045,  0.0447, -0.0034],
        ...,
        [ 0.1083,  0.0997,  0.0283,  ...,  0.0336, -0.0228,  0.0112],
        [-0.1000,  0.1495, -0.2092,  ..., -0.1299,  0.0801, -0.0689],
        [-0.0995,  0.0137, -0.1752,  ..., -0.0303,  0.0971, -0.0247]],
       device='cuda:0') torch.Size([128, 64])
recurrent_blocks.3.weight_hh_l0_reverse tensor([[ 0.1085,  0.1027,  0.0603,  ...,  0.2335, -0.1250, -0.0750],
        [-0.1111, -0.1238,  0.0995,  ...,  0.0465, -0.0303,  0.0139],
        [-0.0558,  0.1416,  0.0423,  ...,  0.0917,  0.1720,  0.0041],
        ...,
        [ 0.0184, -0.0138, -0.0090,  ..., -0.0994,  0.2184,  0.1800],
        [-0.0743,  0.0620,  0.0440,  ...,  0.0437,  0.0577,  0.2327],
        [-0.0812, -0.1076, -0.0392,  ...,  0.1034,  0.0424,  0.0294]],
       device='cuda:0') torch.Size([128, 32])
recurrent_blocks.3.bias_ih_l0_reverse tensor([-0.0021,  0.1653,  0.1510, -0.0697,  0.1863,  0.0867,  0.1815,  0.0159,
         0.1368, -0.0290, -0.0414, -0.0326,  0.1392,  0.1212, -0.0301,  0.1212,
         0.0682, -0.1012, -0.0076,  0.1409,  0.0720,  0.0575,  0.0051, -0.0373,
        -0.0096, -0.0899,  0.0349,  0.2409, -0.1138,  0.0361,  0.0236,  0.0184,
         0.0776,  0.0651,  0.2218, -0.0680, -0.0088, -0.0629,  0.0466, -0.2131,
        -0.1153, -0.0135, -0.0041,  0.1557, -0.0945,  0.1919, -0.1608,  0.0037,
        -0.0377,  0.1583, -0.1001,  0.1285,  0.1199,  0.0712, -0.0796,  0.1194,
         0.0776, -0.0047, -0.0533,  0.1604,  0.0431,  0.0501, -0.0901, -0.0896,
        -0.1666, -0.2221,  0.2343, -0.0352, -0.1693, -0.0542, -0.1163,  0.0017,
         0.1238, -0.0238, -0.0760,  0.0477, -0.1116, -0.1740,  0.0326, -0.1299,
        -0.1197,  0.2548,  0.0916, -0.0278,  0.1517, -0.0747,  0.1819, -0.1805,
         0.0246, -0.0328, -0.1188,  0.1805,  0.1163,  0.0668, -0.0807, -0.0492,
         0.1176, -0.0639,  0.0411, -0.0817,  0.2181, -0.1007,  0.0926, -0.1955,
        -0.0290,  0.1147,  0.1759,  0.1351, -0.0472,  0.1607,  0.0146, -0.0593,
        -0.1466, -0.0176,  0.1271, -0.1029, -0.0012,  0.1367,  0.0627, -0.0318,
        -0.0795, -0.0303, -0.1311,  0.1826,  0.1611, -0.2269,  0.0824, -0.0531],
       device='cuda:0') torch.Size([128])
recurrent_blocks.3.bias_hh_l0_reverse tensor([-1.0628e-02, -6.8855e-02,  2.2007e-04, -3.0028e-02,  1.3920e-02,
        -1.0630e-01,  1.9843e-01,  7.1116e-02,  1.6159e-01, -1.7322e-01,
         8.0823e-02,  3.0168e-02, -1.0419e-02, -4.7442e-02,  2.1388e-02,
        -3.4804e-02,  2.0445e-01, -4.8435e-02,  9.6304e-02,  1.5084e-01,
         1.6745e-01,  1.4844e-01,  1.6813e-01, -7.9357e-02, -7.3583e-02,
         1.3935e-01, -2.7587e-02,  3.0383e-03, -6.6478e-02, -7.9441e-02,
         1.0211e-01,  1.4264e-01, -1.0792e-01, -1.2072e-01,  2.2466e-01,
         1.2782e-02,  1.8356e-02,  3.5117e-02,  1.4354e-01, -8.3075e-02,
         5.8267e-02,  1.2575e-01,  5.1429e-02,  1.7898e-01,  1.2977e-01,
        -8.1301e-02, -5.5355e-02, -4.3940e-02,  1.1164e-02, -4.7012e-02,
        -1.6811e-01,  1.3731e-01, -5.1113e-02,  1.6367e-01, -9.1722e-02,
         1.0086e-01, -2.3331e-01,  4.7530e-02, -8.2153e-02,  1.6843e-01,
         8.6905e-03,  7.4563e-02,  8.4542e-02,  7.5943e-04,  1.1771e-01,
         3.0423e-02, -9.0913e-02,  8.2162e-02, -2.3358e-01,  1.0465e-02,
        -2.1398e-01,  2.2474e-01, -8.9732e-02,  7.9818e-02,  2.3347e-01,
        -5.6321e-02,  8.3324e-02, -2.1139e-01, -1.6915e-01, -1.8226e-02,
         5.7698e-02,  5.1225e-02,  8.3596e-02, -4.8106e-02,  1.6276e-01,
        -8.5456e-02, -7.5964e-02,  8.2034e-02,  6.4852e-02, -1.7710e-01,
         1.6291e-01,  3.4525e-02, -1.9620e-01,  7.5247e-02, -5.8858e-02,
        -4.8694e-02, -2.1008e-02,  9.9857e-02, -4.8621e-02, -1.1919e-01,
        -9.4866e-02,  1.7490e-01,  1.6598e-01, -2.4455e-02, -3.7331e-03,
        -2.4299e-02, -6.9039e-02, -1.0171e-01,  3.1716e-02,  3.3477e-02,
         5.8041e-02,  1.1006e-03,  1.7346e-01,  1.3474e-01, -9.6313e-02,
         1.5827e-01,  1.6314e-01,  1.4355e-01,  1.4610e-01, -9.1759e-02,
         7.7627e-02,  2.0821e-02, -1.0321e-01,  1.9810e-01,  1.9078e-01,
         9.1176e-03,  5.3415e-02, -1.2157e-01], device='cuda:0') torch.Size([128])
fc_blocks.0.0.weight tensor([[ 0.0501,  0.0312, -0.0637,  ..., -0.0779, -0.0454, -0.0358],
        [ 0.0612,  0.0892, -0.0052,  ...,  0.0270, -0.0200,  0.0322],
        [ 0.1138,  0.1221,  0.0402,  ..., -0.1596,  0.1535,  0.1269],
        ...,
        [-0.0941,  0.0553,  0.0827,  ...,  0.1622,  0.0068,  0.0835],
        [-0.1892, -0.0646, -0.1264,  ...,  0.0620, -0.0031, -0.1725],
        [ 0.1126,  0.1775, -0.0171,  ...,  0.0187,  0.1940,  0.1231]],
       device='cuda:0') torch.Size([32, 64])
fc_blocks.0.0.bias tensor([ 0.0497,  0.1476,  0.1824, -0.1494, -0.1624, -0.0088, -0.0362,  0.1550,
        -0.0553,  0.0053, -0.0711, -0.0560, -0.1627, -0.0369, -0.1294,  0.0691,
         0.0911,  0.1003, -0.0340, -0.0591,  0.0419, -0.0463, -0.0166, -0.1737,
         0.1978, -0.0728, -0.0009,  0.0712, -0.0332, -0.0524,  0.0309,  0.0421],
       device='cuda:0') torch.Size([32])
fc_blocks.1.0.weight tensor([[-1.1172e-01,  2.4676e-02,  1.8222e-02,  1.9184e-01,  1.9112e-01,
          2.7680e-02, -1.0258e-01, -1.0337e-01,  9.2818e-02,  7.7435e-02,
          1.2111e-01, -6.7206e-02, -9.1466e-02, -1.1416e-01, -7.6155e-02,
         -1.6011e-01, -2.0426e-01,  6.5779e-02, -1.6448e-01, -1.2094e-01,
         -9.4480e-03,  1.2627e-01, -3.7352e-03,  6.7981e-02,  1.4580e-02,
          9.0598e-02,  1.2029e-01,  5.6454e-02, -5.5352e-02, -1.1623e-02,
         -1.0337e-01, -6.2567e-02],
        [ 2.3863e-02,  2.0745e-01,  1.6230e-01,  4.0582e-02, -1.0238e-01,
          8.8199e-02, -5.8877e-02,  1.3032e-01, -5.1372e-02, -1.9033e-01,
         -1.2460e-01, -1.2853e-01, -7.8227e-03, -2.1986e-02, -1.2900e-01,
          1.9050e-03,  2.3997e-02,  1.8414e-01, -2.2340e-02, -1.5510e-01,
         -8.5293e-02, -1.9680e-01,  2.4228e-01, -1.7817e-01, -3.6683e-02,
          6.0465e-02,  9.0814e-02, -2.0123e-01, -2.0371e-03,  6.3234e-02,
         -1.9908e-01,  2.0233e-01],
        [ 8.9783e-02, -2.1425e-01, -6.4574e-02, -1.2645e-01, -1.0773e-01,
         -1.9969e-02, -1.0822e-01, -1.1225e-01,  1.4262e-02,  1.2095e-01,
          4.4737e-02, -1.0317e-01,  3.6660e-03,  1.2541e-01, -6.7932e-02,
         -1.9534e-01, -8.4326e-02,  9.6381e-02,  1.3015e-01, -1.1035e-01,
          7.9614e-03,  8.6339e-02,  1.0287e-02,  1.0737e-01, -1.6775e-03,
          3.9455e-02, -4.4762e-03, -1.7284e-01, -1.9361e-01,  8.7197e-03,
          9.8701e-02, -1.1058e-01],
        [ 2.1227e-01,  1.3522e-01,  1.3253e-01, -4.6390e-02, -7.7761e-02,
          1.1989e-02,  2.3015e-01,  1.9803e-01, -4.2199e-02,  1.0720e-02,
          5.9390e-02, -9.2100e-02, -1.6384e-01,  4.0715e-02, -1.7357e-01,
          2.0727e-01,  2.4693e-01,  1.5051e-01, -5.9054e-02,  1.3117e-01,
         -1.1190e-01,  8.9193e-02,  1.5444e-01,  3.8258e-02,  1.1526e-01,
          1.3145e-01,  1.0738e-01,  4.7689e-02, -2.1604e-02, -1.1965e-01,
         -8.3280e-02,  1.9592e-01],
        [-5.5931e-02,  3.7690e-02,  9.3808e-02, -1.5120e-01, -2.1405e-01,
         -1.1624e-01, -2.9866e-02, -2.8134e-02, -7.6330e-02,  7.7946e-02,
          9.4377e-02,  2.4689e-02, -6.5894e-02,  1.4154e-01, -2.2316e-01,
          2.4478e-01,  6.8482e-02, -9.0839e-02, -1.4654e-01, -1.2028e-01,
          1.2874e-02,  8.8309e-03, -4.8348e-02,  6.3135e-03,  9.3711e-02,
          7.6977e-02, -1.5945e-01, -1.3727e-03,  1.5757e-01, -7.8639e-03,
          2.3563e-02,  1.6649e-01],
        [-1.4259e-02,  4.6945e-02,  1.3561e-01,  5.9108e-02,  7.5301e-02,
         -2.4355e-03,  1.6408e-01, -6.2003e-02,  1.5818e-01,  2.3184e-02,
          1.9132e-01,  6.5126e-02, -1.7087e-01,  1.1409e-02,  1.9495e-01,
          1.0922e-01,  9.5100e-02, -8.2028e-02,  1.4510e-02, -1.3530e-02,
          1.3620e-01,  4.5223e-02, -7.0547e-02,  1.5012e-02,  1.2707e-02,
         -3.7156e-02, -1.1781e-01, -1.7029e-02,  1.3055e-01,  1.4606e-01,
         -1.4903e-02, -1.0404e-01],
        [-1.4802e-01, -2.1998e-01, -4.6588e-02,  7.8656e-02,  9.5904e-02,
          8.0894e-02, -1.2202e-01, -5.8781e-03,  1.1965e-01, -1.6264e-01,
         -5.1625e-02, -9.2166e-02, -1.3426e-01, -5.6184e-02,  1.0608e-01,
         -3.5743e-02, -1.4954e-01,  7.5174e-02,  1.5339e-01,  9.6902e-02,
          9.6220e-02, -8.2342e-02,  8.9398e-02,  6.4099e-04, -7.3114e-02,
         -5.9629e-03,  1.0811e-01, -5.1672e-02,  1.9218e-01, -1.1423e-01,
          6.5311e-02,  5.7394e-02],
        [ 1.3384e-01, -1.6276e-01, -1.0759e-01,  1.3128e-01, -3.6212e-02,
          5.8402e-03,  4.2611e-03, -2.5909e-02,  4.4592e-02,  7.0448e-02,
          2.0018e-01,  1.0660e-01, -6.0774e-02,  1.5300e-01, -1.8157e-02,
          1.3484e-02,  5.1181e-02,  1.1438e-01, -6.9980e-02,  6.5569e-02,
          2.3413e-01,  7.0829e-02, -4.1591e-02,  2.4309e-01,  4.8535e-02,
         -8.1746e-02,  1.2021e-01,  1.7807e-01, -1.3921e-01,  1.4829e-01,
          1.3383e-01, -7.8386e-02],
        [-1.6516e-01, -7.5888e-02,  9.5127e-02, -4.7548e-02,  1.9521e-01,
          1.1545e-01,  3.6872e-02, -7.7066e-02,  3.8106e-02,  5.4457e-02,
          1.1458e-01,  1.2751e-01,  1.7804e-01, -4.1040e-03,  1.5478e-01,
          2.1641e-02, -5.2160e-02,  1.7239e-02, -7.3490e-02, -3.8971e-02,
          1.0706e-01,  1.0552e-01, -1.9086e-01,  1.0254e-01,  1.1986e-01,
         -1.8662e-02,  1.1679e-01,  7.2086e-02,  1.0786e-01,  1.3733e-01,
         -6.7413e-02,  3.6281e-02],
        [-9.9092e-02,  3.7296e-02, -1.4792e-01,  2.0700e-01,  2.1309e-01,
          1.3760e-01, -2.0465e-01, -1.1539e-01,  2.9647e-02, -2.9946e-02,
          6.4057e-02, -5.4646e-03,  8.2620e-02, -9.5571e-02,  9.6889e-02,
         -8.4770e-02,  6.8675e-02, -1.7403e-01,  3.3010e-02,  9.3776e-03,
          6.0032e-03, -9.5644e-02,  3.8397e-03, -9.9232e-02, -1.9308e-01,
         -1.5335e-02,  7.2112e-02, -1.0515e-02,  1.2873e-01, -7.4085e-02,
          1.7381e-01, -6.9017e-03],
        [-4.6159e-02, -1.1247e-02,  1.5021e-01, -2.3267e-01,  3.8707e-02,
          3.4221e-02, -9.7003e-02,  2.0766e-01,  2.0207e-01, -2.8809e-02,
          9.8761e-02, -1.4969e-01, -1.6793e-01,  1.3116e-01, -1.6486e-01,
          1.7197e-01,  2.6853e-01,  1.6513e-01,  6.0700e-02,  1.3291e-01,
          1.7760e-01, -9.1887e-02,  5.4389e-02, -9.5244e-02,  2.2714e-01,
          9.9229e-02, -1.2543e-01, -1.3199e-01,  7.0649e-03, -8.2973e-02,
         -2.3433e-01,  1.1650e-01],
        [ 1.4601e-01,  7.2678e-02,  6.9925e-02, -1.0183e-01,  1.6806e-02,
         -1.4635e-01,  1.3791e-01,  2.2388e-01,  1.5784e-01,  1.5502e-01,
          7.6012e-02, -3.1312e-02, -3.7837e-02,  4.7761e-02, -6.6909e-02,
         -1.1048e-01, -6.5367e-02,  1.2683e-01,  9.4499e-02, -5.0288e-02,
          1.1571e-01,  7.3158e-02,  2.2728e-01, -1.7062e-02,  4.2529e-03,
          2.0428e-01,  5.3099e-02,  1.7495e-01, -1.5219e-01, -1.6409e-01,
          1.4418e-01,  1.6916e-01],
        [-8.4892e-02,  1.6616e-01, -6.6286e-02,  1.6314e-01, -1.1581e-01,
          1.2696e-01,  6.2410e-02,  1.2376e-01,  1.2680e-01, -8.0193e-02,
         -8.6259e-02, -1.0521e-01,  1.4327e-01,  7.1997e-02,  1.6575e-01,
         -6.2300e-02, -7.9748e-02,  1.4453e-01, -9.5506e-02, -1.4668e-01,
          8.6854e-02,  1.0374e-01, -1.3535e-01, -9.0774e-02,  7.9141e-02,
         -1.4341e-02,  1.6392e-01, -7.2761e-02,  7.1176e-02,  1.4682e-01,
          3.6648e-02,  1.4606e-01],
        [-1.0073e-01,  6.7364e-02,  7.2682e-02, -1.3493e-01,  2.3280e-02,
          7.1785e-02, -1.7213e-01,  1.5943e-02, -8.9475e-02, -1.4301e-01,
          1.0869e-01, -1.7878e-02,  1.6436e-01,  6.1962e-02,  1.8616e-01,
         -2.4020e-01, -2.2261e-01,  9.5166e-02, -1.0027e-02,  1.1875e-04,
          5.6195e-02, -1.1403e-01, -1.0010e-01,  7.1686e-02, -5.4176e-02,
          7.1354e-02,  5.1955e-02, -3.4444e-02, -2.7166e-02,  7.8724e-02,
         -5.0918e-02, -1.6761e-01],
        [-1.3040e-01, -1.8188e-01, -8.2246e-02,  8.0139e-02,  6.6715e-02,
         -6.1480e-02,  1.1396e-01, -2.9235e-02, -1.9789e-02, -2.1140e-01,
         -1.5252e-01, -1.9178e-01,  2.8495e-02, -6.6513e-02, -3.4088e-02,
         -2.9204e-02,  5.8368e-02, -8.9459e-02,  6.2136e-02,  8.8851e-02,
          1.0579e-02, -4.7803e-02, -1.3953e-01, -1.8426e-01, -1.3834e-01,
         -6.5197e-02, -7.7628e-02,  2.0189e-02, -5.3376e-02, -5.3840e-02,
          2.5503e-02, -1.3201e-01],
        [-2.3323e-01, -9.1778e-02, -2.2824e-01,  5.2743e-02,  1.9534e-01,
          3.5290e-02,  3.3426e-02,  1.0516e-01,  1.0239e-01, -9.6792e-03,
         -1.5553e-01,  1.9939e-01,  1.5013e-01, -5.6934e-02,  1.8594e-02,
          5.9566e-02,  1.1242e-01,  7.9059e-02,  1.3380e-01,  1.1270e-01,
         -8.5461e-02,  1.8889e-01,  7.3676e-02, -3.4662e-03, -1.8002e-01,
          1.6199e-01,  8.4712e-02,  5.6299e-02, -7.3641e-02, -8.3588e-02,
          1.8148e-01, -1.3594e-01]], device='cuda:0') torch.Size([16, 32])
fc_blocks.1.0.bias tensor([ 0.0889,  0.1417, -0.1228,  0.2113,  0.0336,  0.0444, -0.0824, -0.1234,
        -0.1111, -0.0032,  0.0775,  0.2109,  0.0125, -0.0002,  0.0413, -0.1790],
       device='cuda:0') torch.Size([16])
fc_blocks.2.0.weight tensor([[-0.0363,  0.1885, -0.1768,  0.1849,  0.1360,  0.0820, -0.0256,  0.0895,
         -0.0589, -0.0290,  0.2233,  0.1520,  0.1052, -0.0840, -0.1517, -0.1963],
        [-0.1839,  0.1772, -0.0580, -0.1092, -0.0723, -0.0593, -0.0194,  0.0184,
          0.1520, -0.1529,  0.0037, -0.1195, -0.0901, -0.1773, -0.0979, -0.2301],
        [ 0.0531, -0.0099,  0.1361, -0.0205,  0.2758,  0.0367, -0.1311,  0.3094,
         -0.2791, -0.0263, -0.1377, -0.0441,  0.0855, -0.0449, -0.0463,  0.0933],
        [ 0.0668, -0.1643,  0.1514, -0.1897, -0.1744,  0.0741, -0.2588,  0.1565,
         -0.0546,  0.0118,  0.0040, -0.1087,  0.1916,  0.1298,  0.1511,  0.2074],
        [-0.2815, -0.2806,  0.0919, -0.0041,  0.0600,  0.3024,  0.1336, -0.2997,
          0.0549,  0.1465, -0.0928,  0.1396, -0.0917, -0.0852,  0.1253, -0.2406],
        [ 0.0355,  0.0916,  0.2243,  0.0192, -0.0155,  0.0873, -0.0035, -0.1122,
          0.1948, -0.2222,  0.1558,  0.1403, -0.1155, -0.1569,  0.1969,  0.0900],
        [ 0.0542,  0.0543, -0.3019,  0.0440,  0.1920, -0.0364,  0.0240, -0.0751,
          0.1011, -0.2370,  0.2004, -0.0931, -0.1232, -0.2001,  0.1227, -0.2752],
        [-0.2778, -0.2485, -0.2252,  0.0342, -0.0174,  0.3078, -0.2005,  0.0164,
          0.0610,  0.1578,  0.0812,  0.1220, -0.2489, -0.0218, -0.1362, -0.0306]],
       device='cuda:0') torch.Size([8, 16])
fc_blocks.2.0.bias tensor([ 0.3069,  0.0044, -0.2214, -0.1503, -0.3077, -0.0377, -0.0815, -0.1653],
       device='cuda:0') torch.Size([8])
fc_blocks.3.0.weight tensor([[ 0.2550,  0.2463,  0.0911, -0.0183, -0.1855,  0.1937,  0.0916, -0.2226],
        [-0.1957,  0.0336,  0.2649, -0.0622,  0.2221,  0.1230,  0.2587,  0.1378],
        [ 0.1677, -0.0182, -0.0436, -0.2020, -0.1564,  0.1445,  0.0404, -0.0960],
        [ 0.0680,  0.3497, -0.0471,  0.3195,  0.1788,  0.0493,  0.2743,  0.2482]],
       device='cuda:0') torch.Size([4, 8])
fc_blocks.3.0.bias tensor([ 0.2946, -0.0032,  0.4316, -0.3938], device='cuda:0') torch.Size([4])
fc_blocks.4.0.weight tensor([[-0.1882,  0.0471,  0.2571, -0.5592],
        [ 0.5231, -0.1988,  0.0885, -0.5150]], device='cuda:0') torch.Size([2, 4])
fc_blocks.4.0.bias tensor([-0.2843, -0.3862], device='cuda:0') torch.Size([2])
Train Loss : 121.699, Val Loss : 388.339
======> Trajectory Loss : 31.204, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.863, BelowGroundPenalize Loss : 4.226
===> [Minibatch 13/129].........recurrent_blocks.0.weight_ih_l0 tensor([[ 1.7192e-01,  5.7572e-02, -1.2601e-01],
        [-9.8503e-02, -6.5537e-02,  2.2012e-01],
        [ 6.3251e-02,  7.7771e-02,  1.2213e-01],
        [ 2.4058e-02, -1.1751e-01,  8.9193e-02],
        [-4.6373e-02, -9.4885e-02, -6.2634e-02],
        [ 3.4596e-03, -1.7337e-01,  1.8754e-01],
        [-5.5464e-02, -1.9690e-01,  1.9460e-01],
        [ 1.3836e-01,  1.6680e-01, -3.6266e-02],
        [-1.2773e-01, -1.4562e-01,  3.8023e-03],
        [ 1.4700e-01,  5.9187e-02,  1.5126e-01],
        [-1.2340e-01, -2.3093e-01,  9.5450e-02],
        [-1.3740e-02,  1.0178e-01,  2.1799e-03],
        [-1.0938e-01,  1.8867e-01,  3.1890e-02],
        [-1.2387e-01, -1.2429e-01,  1.3236e-01],
        [-1.6700e-01,  2.8990e-02, -3.2674e-02],
        [-9.6691e-02, -3.5469e-02,  2.4704e-01],
        [ 4.5885e-02, -1.8313e-01, -6.5175e-02],
        [ 1.1136e-01,  1.1152e-01,  1.9622e-02],
        [-6.2015e-02, -2.8163e-02, -1.2104e-02],
        [-2.2771e-01, -2.2529e-01,  5.3264e-03],
        [-8.8959e-02,  3.5735e-02,  2.0443e-01],
        [ 7.7839e-02,  7.4400e-03,  2.5366e-01],
        [ 1.8606e-02, -1.1615e-01, -8.9112e-02],
        [ 3.9050e-02, -1.7679e-01,  9.4473e-03],
        [-1.3363e-01, -1.9215e-01,  8.0160e-02],
        [-1.9645e-01, -1.7841e-01, -3.3258e-02],
        [-1.0461e-01,  1.5539e-01,  1.2494e-01],
        [ 8.4714e-02, -2.2901e-01, -1.5357e-01],
        [ 6.3612e-02, -1.1612e-01,  1.4148e-01],
        [-1.7245e-01, -8.4454e-02,  1.8550e-01],
        [ 6.5045e-02, -1.2067e-01, -1.1341e-01],
        [-1.4780e-02, -3.0566e-02,  5.5151e-03],
        [-1.1535e-01,  9.0795e-02, -1.9988e-01],
        [ 3.0549e-02, -6.4588e-03,  3.9717e-02],
        [-7.5761e-03,  1.6930e-01,  8.9668e-02],
        [ 2.1287e-01,  8.6016e-02, -3.2914e-02],
        [-1.4379e-01, -1.2561e-02,  9.4010e-02],
        [-5.5930e-02, -1.6779e-01, -1.0925e-01],
        [-6.6262e-02, -2.0185e-01,  9.8036e-02],
        [ 1.6105e-01,  1.2482e-01,  1.6745e-01],
        [ 1.8429e-01, -9.9575e-02, -1.6211e-02],
        [ 6.8141e-02,  8.8423e-02, -7.2129e-02],
        [-1.1976e-01,  6.2237e-02,  1.3677e-01],
        [ 2.1111e-01,  8.4925e-02,  2.6129e-01],
        [-1.0849e-01,  1.6332e-02, -1.9308e-01],
        [-4.7107e-03, -8.2885e-02, -1.3783e-01],
        [-1.0823e-01, -7.0378e-02,  1.6350e-01],
        [-1.2532e-01, -2.5908e-02, -4.6334e-03],
        [ 6.4326e-02, -1.2638e-01,  4.3904e-02],
        [ 1.3602e-02, -1.9631e-01,  1.2440e-01],
        [-2.2280e-01,  1.2049e-01,  7.0318e-02],
        [-5.8935e-02, -2.0181e-01,  1.6306e-02],
        [-1.9771e-01, -8.7803e-02,  2.3417e-01],
        [ 8.7683e-02, -4.9770e-02,  1.2964e-01],
        [-7.9949e-02, -1.9319e-01,  1.9862e-01],
        [ 1.9152e-01,  6.8764e-02,  2.2664e-01],
        [-2.1881e-01, -5.5991e-02, -8.1276e-02],
        [ 4.8434e-02, -1.9572e-01, -9.8102e-02],
        [ 1.9657e-02,  1.5873e-01, -1.7739e-02],
        [-3.5496e-02, -1.0688e-01,  1.4768e-01],
        [ 1.6876e-01,  1.9012e-02,  2.4703e-01],
        [-2.1428e-01, -1.2718e-01,  5.5787e-03],
        [-6.5952e-02,  1.9846e-02, -5.5947e-02],
        [-5.6173e-02, -2.3049e-01,  4.6957e-03],
        [ 3.7179e-02,  6.1807e-02,  4.2445e-03],
        [-1.4061e-01,  4.4730e-02, -2.6001e-02],
        [-5.8606e-02, -1.6301e-01, -2.1146e-01],
        [ 6.8944e-02,  7.2906e-02,  1.7247e-02],
        [-1.3100e-01, -2.1497e-01,  8.1101e-03],
        [-3.1044e-02, -2.3162e-01,  1.6607e-01],
        [-8.0681e-03,  4.8402e-02, -1.3451e-01],
        [ 1.2873e-01,  1.5058e-02,  5.2145e-02],
        [-1.9191e-01,  1.9710e-01,  1.2197e-01],
        [-4.9217e-02, -8.1461e-02, -5.6592e-02],
        [-8.2291e-02, -1.6812e-01, -6.8684e-02],
        [ 7.6154e-02,  2.6729e-02,  1.1533e-01],
        [ 7.9685e-02,  1.1495e-01, -1.6962e-01],
        [-1.7489e-01,  1.8730e-01,  5.3113e-02],
        [-1.1362e-01,  3.1332e-02,  2.7695e-02],
        [-9.6525e-03,  1.5731e-01, -1.9577e-01],
        [-2.5747e-02, -6.6194e-02, -4.5162e-03],
        [ 1.2408e-01, -1.6157e-01,  1.7949e-01],
        [ 4.0279e-03,  8.5297e-02, -2.5311e-02],
        [ 3.8833e-02,  2.1822e-01,  3.2866e-02],
        [-1.1759e-01, -1.1459e-01,  9.0639e-02],
        [-1.5533e-01,  1.9264e-01, -6.8193e-02],
        [-7.8043e-02,  2.2947e-01, -1.8846e-01],
        [ 2.5985e-02, -1.7994e-01,  3.7626e-02],
        [ 4.6080e-02,  1.6812e-01, -1.2336e-01],
        [ 8.4715e-02, -2.7182e-02, -6.7754e-02],
        [-1.5229e-01,  1.0805e-01, -7.7614e-02],
        [-1.6035e-01,  3.4986e-03,  1.3004e-01],
        [ 4.4714e-02, -1.0635e-01,  1.8978e-01],
        [ 8.7440e-02, -8.8838e-02,  5.2624e-02],
        [-6.6724e-02,  6.7029e-02,  2.9158e-03],
        [-6.0005e-02, -7.6312e-02,  2.3190e-01],
        [-6.6476e-02, -1.1188e-02, -1.3283e-01],
        [-2.1245e-01, -2.1375e-01,  1.5954e-01],
        [ 1.7835e-01, -5.7623e-02, -1.2739e-01],
        [-2.0300e-02, -1.3615e-02,  2.0708e-01],
        [-1.7524e-01, -9.8603e-02, -1.4630e-01],
        [ 8.9170e-02, -1.2883e-04, -5.6337e-02],
        [-5.1174e-02,  1.0998e-01, -8.1478e-02],
        [ 3.9011e-02,  2.6646e-02, -5.2785e-02],
        [-3.5699e-02, -1.3923e-01,  1.3153e-01],
        [ 9.7980e-02,  1.2630e-02,  1.7594e-01],
        [-1.5710e-01, -5.2712e-02,  1.6285e-01],
        [ 2.1145e-01,  4.7114e-02,  1.0261e-01],
        [-3.7310e-02, -1.0543e-01, -1.7156e-01],
        [ 1.8617e-01, -1.3781e-01,  1.1131e-01],
        [-6.0379e-02, -8.6439e-02, -5.9269e-03],
        [ 4.7362e-03, -7.3851e-03,  5.1898e-02],
        [ 1.1195e-01, -1.6034e-01,  2.3585e-01],
        [-7.7758e-02, -1.6017e-01,  6.0240e-03],
        [-8.6831e-02, -6.2215e-02, -1.5512e-02],
        [ 5.9090e-02,  4.9946e-02,  1.3516e-01],
        [ 2.4288e-03,  2.0701e-02, -6.2667e-02],
        [ 2.1534e-01, -1.6863e-01,  2.0300e-01],
        [ 7.1622e-02, -2.1075e-01,  1.7682e-01],
        [-4.3294e-02, -1.3742e-01, -5.6098e-02],
        [ 8.1162e-03, -2.5422e-01, -7.0879e-03],
        [-1.1021e-01, -7.8298e-02,  1.3806e-01],
        [ 4.2303e-02, -9.8146e-02,  1.0661e-01],
        [-2.1246e-01, -2.2692e-01,  1.5144e-01],
        [ 1.9798e-01, -2.4361e-01, -3.7606e-02],
        [-1.1240e-01,  6.2783e-02,  9.0807e-02],
        [ 2.0510e-01, -1.8025e-01,  1.7926e-01],
        [-7.1888e-03, -2.1989e-02, -1.0385e-03]], device='cuda:0') torch.Size([128, 3])
recurrent_blocks.0.weight_hh_l0 tensor([[ 0.0466,  0.0493, -0.0791,  ...,  0.1519,  0.1863,  0.0539],
        [ 0.0034,  0.0704,  0.0417,  ...,  0.0843,  0.0072, -0.0398],
        [ 0.0640, -0.0419, -0.0581,  ..., -0.1825, -0.1931,  0.0193],
        ...,
        [-0.1454,  0.0514, -0.0468,  ..., -0.1044,  0.0560,  0.0224],
        [ 0.0621,  0.0341, -0.1492,  ...,  0.0159, -0.0891,  0.1985],
        [-0.0668,  0.1485, -0.1017,  ..., -0.1785, -0.0199, -0.0222]],
       device='cuda:0') torch.Size([128, 32])
recurrent_blocks.0.bias_ih_l0 tensor([-0.1124,  0.1123, -0.1291,  0.1662,  0.1454,  0.2339, -0.0825,  0.0094,
         0.1195,  0.0522, -0.0881,  0.1689, -0.2425,  0.0129,  0.1601,  0.1465,
         0.1271,  0.1369,  0.0340,  0.1480,  0.0157,  0.0657, -0.0602,  0.1625,
        -0.0926,  0.2178,  0.0898,  0.0234,  0.1208,  0.1444, -0.0687, -0.0050,
        -0.0302, -0.0471,  0.0959,  0.1869,  0.0062, -0.0620,  0.1161,  0.1133,
         0.0214,  0.1048,  0.1609,  0.2122, -0.2201,  0.0115,  0.0288, -0.0398,
         0.1395,  0.0517,  0.1381,  0.0613,  0.1243,  0.0634, -0.0389,  0.0933,
         0.2044,  0.0688,  0.1099, -0.1317, -0.0753,  0.1186,  0.0691,  0.1017,
        -0.0351,  0.1589, -0.1378,  0.1723,  0.2113,  0.1091,  0.0466,  0.0392,
        -0.1357,  0.0262,  0.2244,  0.1899,  0.0067,  0.0635,  0.0500, -0.1579,
         0.1581,  0.1182,  0.1354, -0.1868,  0.0621, -0.2603,  0.0036,  0.1766,
        -0.2134, -0.2056,  0.1983, -0.0219,  0.2681, -0.2105, -0.2256,  0.1924,
        -0.0101,  0.2014,  0.0874,  0.1206, -0.0388,  0.0759, -0.0931,  0.0939,
        -0.0216,  0.0871,  0.2612,  0.2103, -0.0640,  0.0060, -0.0354,  0.1005,
         0.0141,  0.0160,  0.0761, -0.0904,  0.1094,  0.1213,  0.0895, -0.0310,
        -0.0452,  0.1946,  0.0292, -0.0800,  0.2140, -0.0210,  0.1995, -0.0424],
       device='cuda:0') torch.Size([128])
recurrent_blocks.0.bias_hh_l0 tensor([-0.0208, -0.0027, -0.0036,  0.1516, -0.0673,  0.2055,  0.0979,  0.0838,
        -0.1419,  0.0460,  0.1900,  0.0748, -0.0635, -0.1866, -0.0350,  0.0488,
         0.1190,  0.1450, -0.1158,  0.1621,  0.0475,  0.2345,  0.0865,  0.1376,
         0.1678, -0.1073, -0.0796,  0.1413,  0.0702,  0.0632,  0.0063, -0.0743,
        -0.1690,  0.2200, -0.0524, -0.0580,  0.0673,  0.1251, -0.1048,  0.0252,
         0.1282,  0.0936,  0.0251,  0.2304, -0.2219,  0.0848,  0.1178,  0.0895,
        -0.0482, -0.1086,  0.0771, -0.0393,  0.1463,  0.1046, -0.0246,  0.1911,
        -0.0952,  0.1614,  0.0119,  0.1198,  0.1266,  0.1738, -0.0612,  0.1165,
        -0.0027,  0.2489, -0.2152,  0.0997,  0.1160,  0.0046, -0.2110,  0.1612,
         0.0385, -0.2433,  0.1607,  0.2065,  0.0270, -0.1496,  0.2707, -0.0716,
         0.1479,  0.2193,  0.2053, -0.2042,  0.1718,  0.0263, -0.2153,  0.0894,
        -0.0500, -0.1705,  0.1887,  0.1757, -0.0166, -0.1075, -0.1050,  0.1253,
        -0.0131, -0.0735,  0.1893,  0.1882, -0.0060, -0.0424,  0.0026,  0.1752,
         0.1739,  0.2437,  0.1292,  0.0995, -0.0532, -0.0300,  0.0286,  0.0219,
         0.0383, -0.1016, -0.0907,  0.0575, -0.0079,  0.2023, -0.0112, -0.0214,
        -0.1137,  0.1875,  0.1147,  0.0175, -0.0077, -0.0197, -0.0363,  0.1020],
       device='cuda:0') torch.Size([128])
recurrent_blocks.0.weight_ih_l0_reverse tensor([[ 0.0193, -0.2150,  0.0074],
        [ 0.0101, -0.0452, -0.0140],
        [-0.0553,  0.0064,  0.0987],
        [-0.1372, -0.0377,  0.1147],
        [ 0.2488,  0.1517, -0.0127],
        [-0.0712, -0.0911,  0.2291],
        [ 0.0813,  0.0254, -0.0658],
        [-0.0018,  0.0081,  0.1445],
        [ 0.0504, -0.0803, -0.0897],
        [-0.0837,  0.2075, -0.2681],
        [-0.1068,  0.0129,  0.0841],
        [-0.1689,  0.0039, -0.1852],
        [ 0.1336,  0.0490,  0.0467],
        [-0.0580, -0.0283,  0.1576],
        [ 0.0862, -0.1136,  0.0172],
        [-0.0330, -0.1318,  0.0243],
        [-0.0683,  0.0053,  0.0142],
        [-0.0968,  0.0109, -0.0587],
        [-0.2223, -0.0184, -0.0603],
        [ 0.0683, -0.1280,  0.1858],
        [-0.0519,  0.0839, -0.0904],
        [-0.1284, -0.1630,  0.0292],
        [-0.0823,  0.0664,  0.0230],
        [-0.0051,  0.1045, -0.1452],
        [-0.2090, -0.0074,  0.0189],
        [-0.2278, -0.2139,  0.0473],
        [-0.0381,  0.0724, -0.0834],
        [-0.2358,  0.0505,  0.1057],
        [-0.0715,  0.1842,  0.2443],
        [ 0.1572,  0.0283, -0.1809],
        [-0.1043,  0.1189, -0.1587],
        [-0.1915, -0.2185, -0.0383],
        [-0.2067, -0.1158,  0.1073],
        [-0.2072,  0.0177,  0.2081],
        [-0.2059,  0.1334,  0.1707],
        [ 0.0185, -0.0604, -0.1160],
        [ 0.2199,  0.0915,  0.2049],
        [-0.0428,  0.0356,  0.1638],
        [ 0.1171, -0.0251,  0.1223],
        [-0.2019, -0.0867,  0.1033],
        [ 0.0657, -0.0209,  0.0804],
        [ 0.1715, -0.0162, -0.1767],
        [-0.2498, -0.0647, -0.1056],
        [ 0.1428,  0.1377, -0.0848],
        [ 0.0725,  0.1165,  0.0913],
        [ 0.1379, -0.1583, -0.0762],
        [-0.1645,  0.1093, -0.1378],
        [ 0.0535, -0.2688,  0.0034],
        [-0.1326, -0.1152, -0.2251],
        [-0.0940,  0.1813,  0.1816],
        [-0.0261,  0.1143,  0.1485],
        [ 0.0201, -0.1405,  0.0992],
        [-0.0760, -0.1059,  0.0807],
        [-0.0067, -0.2511,  0.2556],
        [-0.0808,  0.1068, -0.1804],
        [-0.0663, -0.0861,  0.1213],
        [-0.0779, -0.0055,  0.1596],
        [-0.0133, -0.1315,  0.2127],
        [ 0.0098,  0.0762,  0.0686],
        [-0.2358, -0.0119,  0.0110],
        [-0.1063,  0.1128,  0.1749],
        [-0.0776, -0.0181, -0.2256],
        [-0.1076, -0.0067, -0.0536],
        [-0.2526,  0.0523,  0.1890],
        [ 0.1572,  0.0266, -0.2072],
        [ 0.0197, -0.1180, -0.1099],
        [-0.0938, -0.0261, -0.0093],
        [-0.1406, -0.0693, -0.1934],
        [-0.1042, -0.0606, -0.2005],
        [ 0.0360, -0.1087,  0.0536],
        [-0.0469, -0.0209, -0.2482],
        [-0.1334,  0.0026,  0.2066],
        [ 0.0025,  0.2365, -0.1360],
        [-0.0906, -0.2181, -0.0655],
        [-0.0123,  0.0405, -0.0424],
        [-0.0469, -0.1101,  0.0968],
        [-0.0343,  0.0453, -0.0913],
        [-0.0563, -0.0453,  0.1588],
        [-0.1597, -0.1630,  0.1140],
        [ 0.0762, -0.0262,  0.0966],
        [ 0.0585, -0.1092,  0.0914],
        [ 0.0319, -0.0630, -0.0995],
        [-0.0261, -0.1762,  0.2251],
        [ 0.0788,  0.1885, -0.1360],
        [ 0.1354,  0.1628, -0.2298],
        [ 0.0211, -0.1834,  0.2472],
        [ 0.0713, -0.0512,  0.1574],
        [-0.0723,  0.0589,  0.1400],
        [ 0.0299,  0.0061, -0.0580],
        [ 0.1151, -0.0580,  0.0569],
        [-0.1307, -0.0853, -0.1362],
        [-0.1304, -0.1092,  0.2391],
        [-0.0499,  0.1429,  0.1780],
        [-0.1252, -0.0020, -0.1528],
        [-0.1634,  0.0286,  0.2195],
        [-0.0957, -0.2204,  0.1759],
        [-0.0581, -0.1870,  0.1322],
        [-0.0699, -0.0946,  0.0614],
        [-0.1408, -0.0934,  0.0861],
        [ 0.1940, -0.0132, -0.1289],
        [ 0.0960,  0.1326, -0.0340],
        [ 0.1050, -0.2471,  0.0484],
        [-0.0150, -0.0011,  0.2513],
        [ 0.0264,  0.0651,  0.1056],
        [-0.0413, -0.2481,  0.0934],
        [ 0.0955,  0.0412,  0.0192],
        [ 0.0062,  0.0292,  0.1980],
        [ 0.1211, -0.1192, -0.0974],
        [ 0.1675, -0.1189,  0.1548],
        [ 0.0053, -0.1463,  0.1382],
        [ 0.0949,  0.0014,  0.1579],
        [ 0.0690, -0.1533, -0.1144],
        [ 0.1703,  0.0652, -0.2318],
        [-0.1700, -0.0535,  0.1092],
        [ 0.0283,  0.0512,  0.1834],
        [ 0.1183, -0.2463, -0.0455],
        [ 0.0384,  0.0457, -0.0416],
        [-0.2059, -0.0697,  0.2249],
        [ 0.1009, -0.1922,  0.0119],
        [-0.1651, -0.0712, -0.0086],
        [ 0.0640, -0.1265, -0.0758],
        [-0.1903,  0.0785,  0.1155],
        [ 0.0156, -0.0593,  0.0013],
        [-0.1425, -0.0923,  0.1028],
        [ 0.0045, -0.0352, -0.0953],
        [ 0.1466, -0.0127,  0.0053],
        [-0.0243, -0.0428,  0.1012],
        [-0.0742, -0.1994, -0.0698]], device='cuda:0') torch.Size([128, 3])
recurrent_blocks.0.weight_hh_l0_reverse tensor([[ 0.0059,  0.1210, -0.1308,  ..., -0.0626, -0.0456,  0.0641],
        [-0.0355, -0.0755,  0.2209,  ..., -0.1544,  0.0442,  0.0661],
        [-0.2053,  0.0144,  0.2154,  ...,  0.1802,  0.0310,  0.1382],
        ...,
        [ 0.1288,  0.1186, -0.1052,  ..., -0.1665, -0.0363,  0.0884],
        [ 0.0667,  0.1980,  0.1988,  ..., -0.0660,  0.1872,  0.0181],
        [-0.0036, -0.0878,  0.0147,  ..., -0.0807,  0.2448,  0.0988]],
       device='cuda:0') torch.Size([128, 32])
recurrent_blocks.0.bias_ih_l0_reverse tensor([ 0.1852, -0.0355, -0.0175,  0.1114,  0.0079,  0.1081,  0.1140, -0.1092,
        -0.0384, -0.1724,  0.1436,  0.1312,  0.2390,  0.0966, -0.0567,  0.0837,
        -0.1468, -0.0339,  0.2082, -0.0891, -0.0836,  0.2132, -0.1729, -0.1659,
         0.1841, -0.0541,  0.1584, -0.0322,  0.1366,  0.0006, -0.0549,  0.1195,
         0.1643,  0.1860,  0.0005,  0.0436,  0.1477,  0.0809,  0.1050, -0.1136,
         0.1480, -0.0350, -0.0905, -0.1013, -0.0707,  0.1372,  0.0840,  0.0925,
        -0.1940, -0.0555, -0.0251,  0.2121,  0.1121,  0.2330,  0.1110, -0.0953,
         0.0239,  0.1467, -0.1029,  0.1136, -0.1002, -0.0224, -0.1804, -0.0189,
        -0.1906, -0.1491,  0.1186, -0.1526, -0.1999,  0.1763, -0.2417,  0.1125,
        -0.0693,  0.0646, -0.1834,  0.0170, -0.2685,  0.0776,  0.0104,  0.1545,
        -0.0121, -0.0286,  0.1693,  0.0532, -0.1186,  0.1951, -0.0688,  0.0372,
        -0.0394, -0.0954, -0.0957,  0.0300,  0.1410,  0.0498, -0.0263,  0.1113,
         0.0247,  0.1660,  0.2151, -0.1305,  0.1737, -0.0600,  0.2297,  0.2021,
        -0.0075, -0.1645,  0.1923, -0.1264,  0.2439,  0.0928, -0.1111,  0.0223,
         0.0297,  0.0538,  0.1733,  0.1721,  0.0672,  0.2284,  0.0364, -0.0683,
        -0.0357,  0.1953, -0.0880,  0.1657, -0.0533, -0.0954, -0.0924, -0.0111],
       device='cuda:0') torch.Size([128])
recurrent_blocks.0.bias_hh_l0_reverse tensor([ 1.6514e-01,  1.2815e-01,  9.8714e-02, -1.2755e-01, -5.5794e-02,
         8.3369e-02,  4.8823e-02,  1.1175e-01,  4.7427e-02, -8.4645e-03,
        -2.3452e-02,  1.0804e-01, -4.5026e-02, -1.0549e-01, -1.0215e-01,
        -7.1280e-02, -2.4189e-01, -9.1175e-02,  1.4797e-01, -1.0765e-01,
         1.3018e-01, -4.4836e-02, -1.6999e-01,  1.1832e-01,  3.5824e-02,
        -3.4882e-02,  8.6444e-02,  7.5268e-02,  8.2583e-02,  8.9224e-02,
        -1.0688e-01,  9.4072e-02, -2.2539e-02,  1.8904e-01,  8.3402e-02,
         1.4792e-01,  5.1823e-02,  8.6977e-02,  8.3427e-02, -7.5824e-02,
         1.9044e-01, -2.4320e-01, -1.1544e-01,  6.8545e-02,  1.7230e-01,
        -6.4452e-02,  6.3938e-02,  5.0267e-02, -2.3031e-01, -4.2911e-02,
        -1.0946e-01, -7.3328e-02, -1.7169e-02,  5.0300e-02, -1.2225e-01,
        -3.4468e-02,  1.0192e-01, -2.9166e-02,  1.3023e-01, -7.0625e-02,
        -4.8926e-02,  5.3915e-02, -7.0334e-03,  2.0358e-01, -1.3298e-01,
        -1.7889e-01,  9.2927e-02,  1.0126e-02, -9.6244e-02,  9.9739e-02,
         1.6074e-02, -2.9767e-02, -1.6337e-01, -7.8794e-02, -5.7636e-02,
         1.8364e-01, -2.6102e-01,  1.9217e-01,  1.8068e-01,  1.0763e-01,
        -4.8499e-02, -2.2407e-01, -9.0224e-02, -1.7758e-01, -2.1433e-02,
         3.3302e-02,  1.0626e-01, -2.6056e-02, -1.4581e-01, -2.0583e-01,
        -5.3631e-02,  2.5251e-01,  1.5476e-01, -6.2898e-02,  1.0045e-01,
         3.5866e-02,  1.6147e-01, -6.9931e-02,  1.6714e-02, -1.8708e-01,
         1.9605e-01, -5.9154e-02, -2.3190e-02, -4.2792e-02,  1.9988e-01,
        -5.3865e-02,  2.1999e-02, -1.4703e-01,  9.6778e-02, -2.8441e-02,
        -1.6278e-01,  1.5985e-01,  3.5787e-02, -8.1609e-02,  1.3420e-01,
         1.8724e-01, -6.3476e-02,  7.6720e-02, -1.8866e-01, -2.7157e-02,
         4.7915e-02,  2.6051e-04,  4.1257e-03, -6.8675e-02,  1.5699e-01,
         7.5571e-02,  7.2496e-02,  2.2925e-02], device='cuda:0') torch.Size([128])
recurrent_blocks.1.weight_ih_l0 tensor([[-0.1655,  0.1117,  0.0608,  ..., -0.0620,  0.2515, -0.0599],
        [-0.0833,  0.0756, -0.0366,  ...,  0.0050, -0.0606,  0.2108],
        [ 0.1857, -0.0565, -0.0666,  ..., -0.0782,  0.0178,  0.1033],
        ...,
        [ 0.1635, -0.0134,  0.1034,  ..., -0.1090,  0.0455,  0.1319],
        [ 0.0099,  0.2108,  0.0310,  ..., -0.2323,  0.0225,  0.0506],
        [-0.2021,  0.1783, -0.0620,  ..., -0.0474, -0.0416,  0.0462]],
       device='cuda:0') torch.Size([128, 64])
recurrent_blocks.1.weight_hh_l0 tensor([[-0.1429,  0.1923, -0.1394,  ...,  0.1279,  0.0910,  0.0428],
        [ 0.0844,  0.1791,  0.0596,  ...,  0.2328, -0.0794,  0.1356],
        [ 0.2123, -0.0956, -0.0491,  ...,  0.0562,  0.0914, -0.0884],
        ...,
        [ 0.0531, -0.0468, -0.0383,  ..., -0.0180, -0.1696, -0.1232],
        [ 0.0072,  0.1736, -0.0176,  ..., -0.1026, -0.1368,  0.0291],
        [ 0.1644,  0.0036,  0.0328,  ...,  0.1537, -0.1250,  0.0675]],
       device='cuda:0') torch.Size([128, 32])
recurrent_blocks.1.bias_ih_l0 tensor([ 0.1060,  0.1917,  0.1177,  0.0074,  0.1393, -0.0043,  0.0219, -0.0347,
         0.0754, -0.1080, -0.0990,  0.1573,  0.0153,  0.1017,  0.0800,  0.2617,
         0.1047,  0.1359, -0.0694,  0.2370,  0.0538,  0.0175,  0.0234, -0.1231,
         0.1061, -0.0117, -0.2144,  0.1735,  0.1601, -0.2391, -0.0310, -0.0822,
         0.0050,  0.1068,  0.1352,  0.0799, -0.1055, -0.0753,  0.2335,  0.2156,
         0.0800,  0.0154,  0.0298, -0.0006,  0.0786, -0.1030,  0.0350,  0.0998,
         0.0696,  0.0859,  0.1902, -0.0459,  0.0935, -0.1050,  0.1950, -0.1585,
         0.0922,  0.1161, -0.2118,  0.0093,  0.0899,  0.0883,  0.0980,  0.0390,
         0.0363,  0.2686,  0.1253,  0.1272, -0.0545,  0.1084,  0.0381, -0.2136,
         0.0448,  0.0133,  0.0052, -0.0540,  0.0612,  0.1757, -0.0022, -0.1727,
        -0.1074, -0.0545,  0.0115,  0.0512,  0.2148, -0.0559,  0.0219,  0.0537,
        -0.1244, -0.0549, -0.0027, -0.1472,  0.1073, -0.0907,  0.1236,  0.1716,
         0.1142,  0.0459,  0.1675,  0.0299, -0.0561,  0.0136,  0.1559, -0.0639,
        -0.1135, -0.1107,  0.0990,  0.0021,  0.0016,  0.1387,  0.0583,  0.1773,
        -0.1610,  0.1068,  0.0342,  0.0659,  0.2586, -0.0613,  0.2218, -0.1309,
         0.1798, -0.0146,  0.0158, -0.0414,  0.1607, -0.0378, -0.1042,  0.1124],
       device='cuda:0') torch.Size([128])
recurrent_blocks.1.bias_hh_l0 tensor([-0.0309,  0.1935,  0.0815,  0.1747,  0.0410,  0.2338,  0.0528,  0.2258,
        -0.0360, -0.0369, -0.0335,  0.0286, -0.0109,  0.0160, -0.1150,  0.2394,
         0.1268,  0.1235,  0.0754, -0.0275,  0.2535,  0.1449,  0.2201, -0.1593,
         0.1619,  0.1579, -0.0556, -0.0935,  0.0550, -0.2028,  0.0081, -0.0654,
         0.0666, -0.1131,  0.0824, -0.0044, -0.0720,  0.0335,  0.0021,  0.1167,
         0.0074, -0.0676,  0.1578,  0.0515, -0.0104,  0.2279,  0.1823,  0.0366,
        -0.0857,  0.0442, -0.0084,  0.1152,  0.0041,  0.0407,  0.1152,  0.1013,
         0.1801,  0.0038, -0.1393,  0.2130, -0.0029, -0.1972,  0.0998, -0.0859,
         0.1190, -0.0537,  0.1981,  0.2192, -0.1838,  0.0611, -0.2500,  0.0946,
         0.1603, -0.1785, -0.0036, -0.0812, -0.0233,  0.1118,  0.1401, -0.0250,
        -0.0546, -0.0816,  0.2093,  0.1863,  0.2492, -0.0288, -0.1744,  0.2001,
        -0.1710, -0.2068,  0.1394, -0.0586,  0.1457,  0.0062, -0.0128, -0.0534,
        -0.0033,  0.1339,  0.0566,  0.1568,  0.1066, -0.0455,  0.2061, -0.0656,
        -0.0872,  0.0770,  0.1701, -0.0445, -0.0162, -0.0444, -0.0934,  0.0713,
        -0.2133,  0.1627,  0.2154,  0.2231,  0.1760, -0.0415, -0.0071, -0.1339,
         0.0224, -0.1110, -0.1243, -0.0740, -0.0466, -0.1462,  0.1484,  0.1745],
       device='cuda:0') torch.Size([128])
recurrent_blocks.1.weight_ih_l0_reverse tensor([[-0.0023,  0.0454, -0.0101,  ...,  0.0678, -0.1206,  0.0544],
        [ 0.0565,  0.0254,  0.0244,  ...,  0.1086, -0.0118,  0.0887],
        [-0.2344, -0.0716, -0.0264,  ..., -0.1085,  0.0942,  0.0914],
        ...,
        [-0.1589,  0.1096, -0.2339,  ..., -0.0499, -0.0115, -0.0625],
        [ 0.0440,  0.2379, -0.0130,  ..., -0.0879, -0.1185, -0.0729],
        [ 0.0139,  0.0736, -0.1136,  ..., -0.0700, -0.0508, -0.0340]],
       device='cuda:0') torch.Size([128, 64])
recurrent_blocks.1.weight_hh_l0_reverse tensor([[ 7.4314e-02,  7.4510e-02,  9.7041e-02,  ...,  1.3894e-01,
         -2.1505e-01, -1.7614e-01],
        [-1.8479e-02, -6.0310e-02, -1.7539e-04,  ...,  6.5897e-02,
         -5.5059e-02,  1.0923e-01],
        [-4.7029e-02, -1.1801e-01,  9.8939e-02,  ...,  9.2645e-02,
         -1.3037e-01,  7.9051e-02],
        ...,
        [ 1.6746e-01, -1.8493e-01,  1.3453e-01,  ..., -9.5703e-02,
          1.1444e-01, -8.3671e-02],
        [-3.6250e-02,  4.1602e-02,  1.0767e-01,  ..., -2.9979e-02,
          3.7928e-02,  6.7235e-02],
        [ 6.7878e-02, -1.7779e-01,  2.1978e-01,  ..., -2.0415e-02,
          2.0675e-01,  9.4874e-02]], device='cuda:0') torch.Size([128, 32])
recurrent_blocks.1.bias_ih_l0_reverse tensor([-0.1502,  0.1821,  0.0785, -0.0910,  0.0834,  0.0269,  0.2388,  0.1417,
         0.1429, -0.0178,  0.0714,  0.2588,  0.1061,  0.0776, -0.0073, -0.1352,
         0.1870,  0.0204,  0.1056,  0.1349,  0.1279,  0.0014,  0.1606, -0.1601,
        -0.1253, -0.0323,  0.2137,  0.0390,  0.0681,  0.0253,  0.0229, -0.0678,
         0.0846,  0.0307, -0.0195, -0.1258, -0.1102,  0.1597, -0.0615,  0.2182,
        -0.0585, -0.0555,  0.2511, -0.0161,  0.2384,  0.1553, -0.0837,  0.0829,
        -0.0140, -0.0343, -0.1747,  0.0813, -0.0749, -0.0845,  0.1998, -0.1562,
         0.0705,  0.0220,  0.2447,  0.0425,  0.0883,  0.1479,  0.1851,  0.2058,
        -0.0572, -0.0674,  0.2232, -0.2108, -0.0996,  0.0141, -0.1766,  0.1691,
        -0.2382,  0.0686,  0.1107, -0.0420, -0.2435, -0.1732,  0.0156,  0.1600,
        -0.0372,  0.1093, -0.1659, -0.0405, -0.0166, -0.0538,  0.0382, -0.1461,
        -0.0061,  0.0312,  0.1607,  0.1872, -0.1789, -0.1708,  0.0177,  0.0078,
         0.0520, -0.0876, -0.0493,  0.0494, -0.2023,  0.1518,  0.2465,  0.1593,
        -0.0740, -0.1043, -0.0291,  0.1723, -0.0854, -0.0510,  0.0442, -0.0879,
         0.2073,  0.0210, -0.1185,  0.1999,  0.1316, -0.0588,  0.1767,  0.0732,
        -0.1566,  0.1206,  0.0838, -0.0789,  0.0812,  0.0694, -0.0589,  0.2379],
       device='cuda:0') torch.Size([128])
recurrent_blocks.1.bias_hh_l0_reverse tensor([-0.1294,  0.0778, -0.0213,  0.0764, -0.1668,  0.1669,  0.0346,  0.0243,
         0.2135,  0.1513, -0.0009,  0.1811,  0.2292,  0.1486,  0.0196, -0.0574,
        -0.0863,  0.0777,  0.0544, -0.0116, -0.0029,  0.1967, -0.0338,  0.1532,
         0.0660, -0.0070,  0.1261,  0.0009, -0.0705,  0.2123, -0.0581, -0.0516,
        -0.1287,  0.1093, -0.1322,  0.2006,  0.0392, -0.0386,  0.0037,  0.1125,
         0.1675,  0.0224, -0.0170, -0.0827,  0.0928,  0.0985, -0.0195,  0.0892,
         0.2302, -0.0850,  0.0954, -0.0216,  0.0630,  0.1000,  0.1064, -0.1595,
        -0.1070, -0.0102,  0.0365,  0.0279,  0.0260,  0.1829,  0.1275,  0.2140,
        -0.0942, -0.1670, -0.0392, -0.1384, -0.0268,  0.1846, -0.0871,  0.0361,
        -0.0577, -0.1495,  0.1363,  0.2280, -0.0685, -0.0722, -0.1979,  0.1663,
        -0.0660,  0.1420,  0.1344, -0.1359,  0.1165,  0.2129,  0.0825, -0.0985,
        -0.0011,  0.0597,  0.2017,  0.0366, -0.1355, -0.2200,  0.2581,  0.2641,
        -0.1820,  0.0317,  0.0394, -0.0110, -0.1113,  0.0988,  0.2557, -0.0908,
        -0.0252,  0.0600,  0.0624, -0.0232,  0.1868,  0.1507, -0.0884, -0.1394,
         0.1043,  0.1422, -0.1249,  0.1080,  0.1474,  0.1241,  0.1812,  0.1506,
         0.0038,  0.1326,  0.2523,  0.2119,  0.1482, -0.0665, -0.0205, -0.0560],
       device='cuda:0') torch.Size([128])
recurrent_blocks.2.weight_ih_l0 tensor([[-0.1238, -0.1016, -0.0252,  ..., -0.1333,  0.0228, -0.0482],
        [ 0.1538,  0.0927,  0.2670,  ..., -0.0011,  0.1711, -0.1125],
        [-0.1180,  0.0998,  0.1011,  ...,  0.1217,  0.0709,  0.1065],
        ...,
        [-0.1350, -0.0298,  0.2273,  ..., -0.1349, -0.0804, -0.0493],
        [-0.0702,  0.0871, -0.0959,  ..., -0.0212, -0.0571,  0.2174],
        [ 0.1036, -0.1199, -0.0668,  ...,  0.0072,  0.1092,  0.1219]],
       device='cuda:0') torch.Size([128, 64])
recurrent_blocks.2.weight_hh_l0 tensor([[-0.1028, -0.0816, -0.1448,  ..., -0.0253,  0.0031,  0.0809],
        [ 0.1057,  0.0332, -0.1034,  ..., -0.1356, -0.0910,  0.0915],
        [-0.0344, -0.1699, -0.0504,  ...,  0.1861, -0.1739, -0.1219],
        ...,
        [ 0.0238,  0.2317, -0.1474,  ...,  0.1307, -0.0252, -0.0180],
        [ 0.0015, -0.0587, -0.1082,  ..., -0.1530, -0.0772, -0.0233],
        [-0.0614,  0.0998, -0.1538,  ...,  0.0628, -0.1101,  0.1597]],
       device='cuda:0') torch.Size([128, 32])
recurrent_blocks.2.bias_ih_l0 tensor([-4.4613e-02,  2.0363e-01, -1.0455e-01, -8.4350e-02,  1.9816e-01,
         1.2369e-01, -1.2692e-01,  8.9863e-02,  5.9915e-02,  1.9275e-02,
         8.9080e-02,  1.2344e-01, -8.5874e-02, -3.5280e-02,  6.4408e-02,
        -5.8522e-02,  7.7873e-02,  2.2211e-02,  1.5337e-01, -1.5143e-01,
         5.2704e-02, -7.0396e-02, -7.3662e-02, -1.3202e-01, -1.9960e-02,
        -4.1962e-02,  2.2911e-01, -1.5737e-01,  9.5377e-02, -6.6514e-02,
         7.3147e-03,  2.1898e-02,  1.1305e-01,  7.2091e-03, -3.0896e-03,
        -8.6164e-02, -4.8988e-02,  9.3844e-02,  2.1483e-01, -4.0579e-02,
        -3.4435e-03,  1.7493e-01, -9.1838e-02, -2.8645e-02,  2.0577e-01,
         1.3516e-01,  4.1107e-02,  7.4074e-02,  1.1945e-01,  9.9333e-02,
         4.8889e-02, -9.3006e-02, -2.7815e-02, -1.6225e-01,  1.8259e-01,
        -1.5884e-01, -5.8651e-02, -6.9284e-02,  2.1296e-01, -2.3059e-04,
         2.6781e-02, -8.0654e-02,  2.0163e-01,  1.8285e-01,  1.8976e-02,
         1.3352e-01, -1.3968e-01,  4.3550e-02, -7.9263e-02,  1.7514e-01,
        -1.7162e-01,  5.6459e-03,  1.9085e-01, -9.6285e-02,  5.5970e-02,
        -2.8542e-02,  1.7252e-01,  1.2700e-01,  1.4030e-02, -9.8285e-02,
         1.0524e-01, -1.8123e-02,  1.0541e-01, -1.1285e-01,  1.3963e-01,
         2.0111e-02, -1.7180e-01, -6.0894e-02,  7.9977e-02, -2.0355e-01,
        -1.5519e-01,  5.9695e-03,  1.5436e-01, -2.1016e-01,  2.0009e-01,
         8.4325e-02, -1.7353e-01, -3.2272e-02, -1.3135e-01,  1.5527e-02,
        -9.0550e-02,  7.1862e-02,  2.1099e-01,  5.9291e-02,  1.2919e-01,
         2.1544e-01, -1.4867e-01,  1.2344e-01,  1.7626e-01,  1.3393e-01,
        -8.1415e-03,  2.2855e-01, -6.2123e-03, -2.0616e-02,  2.2036e-01,
         6.8436e-02,  1.2754e-01, -8.3087e-02, -2.5815e-02, -2.1440e-01,
        -1.6352e-02,  1.2152e-01, -6.9649e-02,  3.8027e-02,  2.3171e-01,
        -1.2510e-01, -4.8630e-02,  1.6502e-01], device='cuda:0') torch.Size([128])
recurrent_blocks.2.bias_hh_l0 tensor([-0.2042,  0.2148, -0.1520,  0.0252, -0.0385,  0.1429,  0.0767,  0.1014,
        -0.1116, -0.0715,  0.1188, -0.0801,  0.1179, -0.1090, -0.0235, -0.0057,
         0.2141,  0.1547,  0.1178, -0.1133, -0.0678, -0.0089, -0.0780,  0.0600,
         0.1867, -0.0244,  0.0880, -0.1617,  0.0967, -0.0264, -0.0299,  0.0774,
        -0.0762,  0.1529,  0.0453,  0.0169,  0.0393,  0.0842,  0.1936,  0.1199,
        -0.1339,  0.1816, -0.1561, -0.0557, -0.0453,  0.1284,  0.0839,  0.0427,
        -0.0014,  0.1555,  0.1365, -0.0462, -0.0766, -0.2329,  0.1218, -0.1168,
         0.1626, -0.1008,  0.1200, -0.0966,  0.2225,  0.0693, -0.0146, -0.0441,
         0.1398,  0.0640,  0.0025, -0.0353, -0.1293, -0.0093,  0.0150, -0.1740,
         0.1470, -0.0673, -0.1071,  0.1791,  0.1680, -0.0084, -0.0240, -0.1676,
         0.1396, -0.1879,  0.1565,  0.0628,  0.1456, -0.0393,  0.0451, -0.1223,
        -0.1651, -0.0583, -0.1820,  0.1565,  0.2237, -0.1826, -0.0083,  0.0686,
         0.1043,  0.1053, -0.1388, -0.0969, -0.0696,  0.1274,  0.1775,  0.0950,
        -0.1824,  0.0717,  0.0874, -0.0924,  0.2630,  0.0764,  0.1686,  0.1856,
        -0.0243,  0.0954,  0.0305,  0.1113, -0.0974, -0.0177,  0.1976, -0.0513,
         0.0420,  0.2386, -0.0539, -0.1920,  0.2700,  0.1788,  0.2258,  0.1644],
       device='cuda:0') torch.Size([128])
recurrent_blocks.2.weight_ih_l0_reverse tensor([[-0.0489, -0.0821,  0.1618,  ...,  0.0974, -0.0024,  0.0035],
        [ 0.1246,  0.1526,  0.1695,  ..., -0.1708, -0.0350,  0.0339],
        [ 0.1931,  0.1680,  0.1144,  ...,  0.0699,  0.1435, -0.0982],
        ...,
        [-0.1533, -0.1432, -0.2005,  ...,  0.1365,  0.0271,  0.0300],
        [-0.0495,  0.0386,  0.1394,  ..., -0.2100,  0.1384,  0.0329],
        [-0.0859,  0.0823,  0.1147,  ..., -0.0192,  0.0706,  0.2065]],
       device='cuda:0') torch.Size([128, 64])
recurrent_blocks.2.weight_hh_l0_reverse tensor([[ 0.1431, -0.0361, -0.0180,  ..., -0.1625, -0.1805,  0.0356],
        [-0.0464, -0.0096,  0.1042,  ..., -0.1158,  0.0365,  0.0659],
        [ 0.0091,  0.0319,  0.0189,  ..., -0.1399,  0.1673,  0.1759],
        ...,
        [-0.0463, -0.0276, -0.0261,  ..., -0.1918,  0.0298,  0.0950],
        [ 0.2227, -0.0461,  0.1964,  ...,  0.0708,  0.2032,  0.0263],
        [ 0.0386,  0.1256,  0.1921,  ..., -0.0303,  0.1953,  0.0076]],
       device='cuda:0') torch.Size([128, 32])
recurrent_blocks.2.bias_ih_l0_reverse tensor([-0.2066, -0.1326,  0.0061, -0.0852,  0.0999,  0.0697,  0.0287,  0.1194,
         0.1292,  0.0236,  0.0752,  0.0522, -0.0514,  0.0964, -0.0655,  0.0283,
         0.0613,  0.2448,  0.0015,  0.0081, -0.0524,  0.1348,  0.1310, -0.0660,
        -0.1149, -0.1357,  0.1252, -0.0681, -0.0927, -0.0663, -0.0364,  0.0402,
         0.0586,  0.1003,  0.0076,  0.0749, -0.2169,  0.1815,  0.0697,  0.1659,
         0.2052,  0.0919,  0.1879, -0.0085, -0.0503,  0.1799,  0.0225,  0.1143,
         0.2343, -0.0550, -0.0384,  0.0283, -0.0984,  0.0372,  0.2170,  0.0576,
        -0.0757, -0.1085, -0.0248,  0.0013, -0.0132,  0.1442,  0.1307,  0.0544,
        -0.0954, -0.0077,  0.1630, -0.1427, -0.0515,  0.2448, -0.1809, -0.0481,
        -0.1086, -0.1112,  0.1350, -0.0245, -0.0857,  0.1124, -0.1026,  0.2096,
        -0.2203,  0.1496, -0.1655, -0.0828, -0.2001,  0.0941,  0.1517,  0.0476,
         0.0444,  0.0780,  0.0820,  0.2119,  0.0323,  0.0542,  0.0854,  0.1783,
         0.1006,  0.0087,  0.0580,  0.1406,  0.1360,  0.1704, -0.0700,  0.1370,
         0.0072, -0.0342, -0.1159,  0.2283,  0.1855,  0.1180,  0.1374, -0.0764,
         0.1884,  0.2470, -0.0537,  0.2327,  0.0547,  0.2455,  0.0593,  0.0070,
        -0.1781,  0.0188,  0.0217,  0.2168, -0.0232,  0.1309,  0.1107,  0.0761],
       device='cuda:0') torch.Size([128])
recurrent_blocks.2.bias_hh_l0_reverse tensor([ 0.1148,  0.0321, -0.0448,  0.1083,  0.0621,  0.2260,  0.1157,  0.0927,
         0.1140,  0.1094,  0.1108, -0.1024,  0.0587, -0.0589, -0.1427,  0.0273,
         0.0247,  0.1457,  0.0754,  0.1118, -0.1066,  0.1077,  0.2116, -0.2134,
        -0.2386,  0.1739,  0.1942,  0.2086,  0.1116,  0.1283,  0.1497,  0.0691,
         0.0728,  0.0626,  0.1781,  0.1611, -0.0620,  0.0339, -0.0071, -0.0272,
         0.0144, -0.0202,  0.1377,  0.0495, -0.0260, -0.0563, -0.1274, -0.0477,
         0.2313,  0.2093, -0.0563,  0.0481, -0.0109,  0.2475,  0.1704,  0.1221,
        -0.0415, -0.0134,  0.2120, -0.0346,  0.1388, -0.0563,  0.2283,  0.2577,
         0.0807, -0.0655,  0.2185, -0.1590, -0.0504,  0.0199, -0.1664,  0.2171,
        -0.2001, -0.0173, -0.0632,  0.2159, -0.0685,  0.0083, -0.0371,  0.2161,
        -0.0265,  0.1226, -0.1316, -0.1625, -0.1481,  0.0763,  0.2107,  0.0872,
         0.0872, -0.1706, -0.0208,  0.1606, -0.1007,  0.1468,  0.1565,  0.1739,
        -0.0870,  0.1424, -0.0881, -0.1279,  0.1312, -0.0145,  0.0193,  0.1230,
         0.0375, -0.0561,  0.0756,  0.2613,  0.2519,  0.1809,  0.1386, -0.0601,
        -0.0694,  0.2336,  0.0967,  0.1166, -0.1018, -0.0463,  0.0524,  0.0797,
         0.0446, -0.0109, -0.0889, -0.0620,  0.1031, -0.1468, -0.0545,  0.0660],
       device='cuda:0') torch.Size([128])
recurrent_blocks.3.weight_ih_l0 tensor([[-0.0622,  0.1843, -0.1620,  ..., -0.1172, -0.0457,  0.1360],
        [ 0.0493,  0.1116, -0.1565,  ..., -0.1224,  0.1305,  0.0966],
        [ 0.0229,  0.0504,  0.0262,  ..., -0.1001,  0.1585,  0.1422],
        ...,
        [ 0.0848, -0.0769,  0.1483,  ..., -0.1871, -0.0292,  0.2124],
        [ 0.0982, -0.1484, -0.1573,  ...,  0.1041, -0.0339,  0.1764],
        [-0.0360, -0.1440,  0.0040,  ..., -0.0709, -0.0767, -0.0886]],
       device='cuda:0') torch.Size([128, 64])
recurrent_blocks.3.weight_hh_l0 tensor([[ 8.9329e-03,  1.5634e-01, -9.6063e-02,  ..., -7.1493e-02,
          1.1969e-01,  1.7512e-01],
        [ 1.3296e-01,  2.6107e-02, -7.4546e-02,  ..., -7.8727e-02,
         -6.0833e-02, -6.3678e-02],
        [ 9.0798e-03, -7.1991e-05, -9.5306e-02,  ..., -2.1111e-01,
         -1.8245e-02,  1.4319e-01],
        ...,
        [-6.1078e-02,  1.0090e-01,  1.3008e-01,  ..., -1.9686e-01,
          1.5597e-02,  3.4529e-02],
        [ 1.4129e-01, -1.0282e-01, -9.6567e-02,  ..., -2.1117e-01,
          8.5362e-02, -1.2585e-01],
        [-1.1784e-01, -2.7365e-02,  1.6046e-01,  ..., -6.1666e-04,
         -3.9785e-02,  1.9669e-01]], device='cuda:0') torch.Size([128, 32])
recurrent_blocks.3.bias_ih_l0 tensor([ 0.0500,  0.0123,  0.1021, -0.2278, -0.0501,  0.2238,  0.2075, -0.0993,
         0.1494, -0.0590, -0.0034, -0.0767,  0.1497, -0.0208,  0.0709, -0.1455,
         0.1697,  0.1064,  0.1583, -0.0629, -0.0252,  0.2130,  0.0822, -0.1176,
         0.0082, -0.0744,  0.0268,  0.1194,  0.0023, -0.1154, -0.0550, -0.0944,
         0.0633, -0.0562,  0.1332, -0.0791,  0.0650,  0.0625,  0.0058, -0.2110,
        -0.0931, -0.0333,  0.1007,  0.1775,  0.2462, -0.0709, -0.0395,  0.0401,
        -0.0787, -0.0708,  0.1740,  0.1176,  0.1156,  0.1619,  0.0182,  0.1717,
         0.1750,  0.1601,  0.2102, -0.1757, -0.0028,  0.1026, -0.0630,  0.0067,
         0.1755,  0.0251,  0.1140, -0.0152,  0.1231,  0.1605, -0.2158,  0.0660,
        -0.0966, -0.0379, -0.0326, -0.0442,  0.2279, -0.0298, -0.0993, -0.0343,
         0.2083,  0.0740,  0.0601, -0.1135, -0.0131, -0.1236, -0.1161, -0.0653,
        -0.2031, -0.2025, -0.0074,  0.0932,  0.1847,  0.1102,  0.1157, -0.0755,
         0.0865,  0.0673, -0.1021,  0.0400, -0.0344,  0.0022,  0.0275, -0.0432,
        -0.0670,  0.0706, -0.1565, -0.0442,  0.0794,  0.0563, -0.1793,  0.0191,
        -0.1174,  0.0673,  0.0772,  0.0759,  0.2069,  0.1855,  0.1486,  0.1742,
         0.1639,  0.2351,  0.0823,  0.1236, -0.0984,  0.1727,  0.1232, -0.0316],
       device='cuda:0') torch.Size([128])
recurrent_blocks.3.bias_hh_l0 tensor([-0.0972,  0.0929,  0.1548,  0.0826,  0.0654, -0.0215,  0.2017,  0.0255,
         0.1209,  0.1409,  0.0652,  0.1384, -0.0741,  0.0057,  0.1207,  0.1251,
         0.1373,  0.1208,  0.0812,  0.0699,  0.1145, -0.0362,  0.1123, -0.1380,
        -0.0294,  0.0467,  0.2042, -0.1199,  0.1286, -0.0990,  0.1256, -0.0520,
        -0.1191, -0.0777,  0.1372, -0.2189, -0.0222,  0.2286,  0.2447, -0.2218,
         0.2226,  0.1375, -0.1410,  0.0615, -0.0857,  0.1058, -0.0303,  0.0466,
         0.2059,  0.0265,  0.0993, -0.1993,  0.0453, -0.0077, -0.0627,  0.1969,
         0.1215,  0.0240, -0.0811,  0.0866, -0.0350,  0.1263,  0.1632, -0.0848,
         0.0140, -0.0268,  0.0103,  0.0111, -0.1175,  0.0674,  0.0061,  0.0167,
        -0.2054, -0.2079, -0.0607,  0.1645,  0.0916,  0.0140, -0.0866,  0.0374,
         0.2186, -0.0625,  0.0129,  0.1398,  0.0044, -0.1254,  0.0132,  0.0601,
        -0.1150, -0.0854, -0.1502,  0.0040,  0.1897, -0.1832,  0.1240, -0.1377,
         0.1973,  0.2286, -0.1375,  0.0962, -0.1048,  0.0727,  0.2222, -0.2014,
         0.1073,  0.1871, -0.0709, -0.0115, -0.0843, -0.0390,  0.0683, -0.1938,
        -0.0732,  0.0247,  0.2556, -0.1100,  0.2298,  0.2213, -0.0571, -0.0042,
         0.0944,  0.2326, -0.0332,  0.0033, -0.0588,  0.1517, -0.0570, -0.1118],
       device='cuda:0') torch.Size([128])
recurrent_blocks.3.weight_ih_l0_reverse tensor([[ 0.1820, -0.0019,  0.0569,  ...,  0.0822,  0.1803,  0.0114],
        [ 0.0340,  0.0282, -0.1124,  ..., -0.0124, -0.1105, -0.0381],
        [ 0.1708, -0.0471, -0.1373,  ..., -0.0083,  0.0484,  0.0004],
        ...,
        [ 0.1056,  0.0979,  0.0272,  ...,  0.0348, -0.0241,  0.0096],
        [-0.0981,  0.1530, -0.2129,  ..., -0.1334,  0.0839, -0.0653],
        [-0.0973,  0.0166, -0.1763,  ..., -0.0330,  0.1004, -0.0216]],
       device='cuda:0') torch.Size([128, 64])
recurrent_blocks.3.weight_hh_l0_reverse tensor([[ 0.1087,  0.1022,  0.0614,  ...,  0.2378, -0.1249, -0.0746],
        [-0.1133, -0.1267,  0.1028,  ...,  0.0498, -0.0271,  0.0171],
        [-0.0583,  0.1381,  0.0460,  ...,  0.0933,  0.1751,  0.0075],
        ...,
        [ 0.0188, -0.0123, -0.0106,  ..., -0.1001,  0.2196,  0.1800],
        [-0.0765,  0.0587,  0.0475,  ...,  0.0436,  0.0616,  0.2364],
        [-0.0843, -0.1103, -0.0361,  ...,  0.1068,  0.0431,  0.0312]],
       device='cuda:0') torch.Size([128, 32])
recurrent_blocks.3.bias_ih_l0_reverse tensor([-0.0009,  0.1690,  0.1549, -0.0687,  0.1904,  0.0897,  0.1842,  0.0137,
         0.1397, -0.0283, -0.0376, -0.0295,  0.1421,  0.1241, -0.0334,  0.1244,
         0.0715, -0.0980, -0.0089,  0.1441,  0.0751,  0.0604,  0.0081, -0.0355,
        -0.0113, -0.0864,  0.0330,  0.2443, -0.1098,  0.0341,  0.0241,  0.0222,
         0.0764,  0.0668,  0.2257, -0.0673, -0.0048, -0.0597,  0.0494, -0.2156,
        -0.1126, -0.0123, -0.0006,  0.1585, -0.0917,  0.1956, -0.1633,  0.0070,
        -0.0343,  0.1614, -0.1023,  0.1316,  0.1228,  0.0742, -0.0766,  0.1213,
         0.0754, -0.0008, -0.0557,  0.1637,  0.0471,  0.0482, -0.0922, -0.0855,
        -0.1680, -0.2255,  0.2370, -0.0340, -0.1721, -0.0517, -0.1188,  0.0047,
         0.1211, -0.0261, -0.0721,  0.0505, -0.1143, -0.1772,  0.0330, -0.1271,
        -0.1223,  0.2580,  0.0889, -0.0300,  0.1546, -0.0717,  0.1849, -0.1803,
         0.0259, -0.0346, -0.1193,  0.1836,  0.1146,  0.0685, -0.0780, -0.0464,
         0.1164, -0.0604,  0.0452, -0.0851,  0.2223, -0.0970,  0.0967, -0.1977,
        -0.0252,  0.1144,  0.1788,  0.1389, -0.0429,  0.1652,  0.0113, -0.0554,
        -0.1435, -0.0136,  0.1253, -0.0988,  0.0032,  0.1410,  0.0665, -0.0277,
        -0.0812, -0.0261, -0.1331,  0.1870,  0.1652, -0.2288,  0.0855, -0.0497],
       device='cuda:0') torch.Size([128])
recurrent_blocks.3.bias_hh_l0_reverse tensor([-9.4286e-03, -6.5131e-02,  4.1450e-03, -2.9010e-02,  1.8004e-02,
        -1.0327e-01,  2.0109e-01,  6.8932e-02,  1.6452e-01, -1.7251e-01,
         8.4602e-02,  3.3249e-02, -7.4712e-03, -4.4492e-02,  1.8061e-02,
        -3.1577e-02,  2.0782e-01, -4.5169e-02,  9.5049e-02,  1.5405e-01,
         1.7056e-01,  1.5140e-01,  1.7117e-01, -7.7532e-02, -7.5333e-02,
         1.4278e-01, -2.9485e-02,  6.4121e-03, -6.2511e-02, -8.1380e-02,
         1.0261e-01,  1.4651e-01, -1.0914e-01, -1.1902e-01,  2.2860e-01,
         1.3492e-02,  2.2350e-02,  3.8346e-02,  1.4633e-01, -8.5549e-02,
         6.0966e-02,  1.2699e-01,  5.4929e-02,  1.8180e-01,  1.3265e-01,
        -7.7631e-02, -5.7855e-02, -4.0713e-02,  1.4552e-02, -4.3919e-02,
        -1.7022e-01,  1.4039e-01, -4.8235e-02,  1.6668e-01, -8.8724e-02,
         1.0272e-01, -2.3542e-01,  5.1452e-02, -8.4644e-02,  1.7175e-01,
         1.2759e-02,  7.2585e-02,  8.2423e-02,  4.8234e-03,  1.1629e-01,
         2.7004e-02, -8.8246e-02,  8.3298e-02, -2.3636e-01,  1.2996e-02,
        -2.1644e-01,  2.2779e-01, -9.2422e-02,  7.7556e-02,  2.3740e-01,
        -5.3565e-02,  8.0658e-02, -2.1457e-01, -1.6874e-01, -1.5498e-02,
         5.5084e-02,  5.4420e-02,  8.0932e-02, -5.0346e-02,  1.6570e-01,
        -8.2384e-02, -7.2996e-02,  8.2233e-02,  6.6092e-02, -1.7893e-01,
         1.6246e-01,  3.7614e-02, -1.9792e-01,  7.6902e-02, -5.6185e-02,
        -4.5891e-02, -2.2190e-02,  1.0339e-01, -4.4486e-02, -1.2259e-01,
        -9.0705e-02,  1.7858e-01,  1.7014e-01, -2.6708e-02,  2.2713e-05,
        -2.4645e-02, -6.6152e-02, -9.7893e-02,  3.6010e-02,  3.7899e-02,
         5.4838e-02,  5.0042e-03,  1.7653e-01,  1.3877e-01, -9.8056e-02,
         1.6232e-01,  1.6748e-01,  1.4785e-01,  1.4998e-01, -8.7699e-02,
         7.5871e-02,  2.4984e-02, -1.0520e-01,  2.0251e-01,  1.9488e-01,
         7.1764e-03,  5.6559e-02, -1.1813e-01], device='cuda:0') torch.Size([128])
fc_blocks.0.0.weight tensor([[ 0.0455,  0.0264, -0.0673,  ..., -0.0729, -0.0498, -0.0403],
        [ 0.0621,  0.0902, -0.0054,  ...,  0.0263, -0.0180,  0.0336],
        [ 0.1178,  0.1261,  0.0441,  ..., -0.1633,  0.1578,  0.1311],
        ...,
        [-0.0969,  0.0533,  0.0813,  ...,  0.1650,  0.0055,  0.0815],
        [-0.1940, -0.0691, -0.1304,  ...,  0.0665, -0.0079, -0.1774],
        [ 0.1158,  0.1809, -0.0142,  ...,  0.0157,  0.1978,  0.1267]],
       device='cuda:0') torch.Size([32, 64])
fc_blocks.0.0.bias tensor([ 0.0479,  0.1506,  0.1871, -0.1536, -0.1650, -0.0101, -0.0377,  0.1590,
        -0.0565,  0.0036, -0.0724, -0.0580, -0.1661, -0.0377, -0.1346,  0.0735,
         0.0958,  0.1027, -0.0354, -0.0609,  0.0406, -0.0478, -0.0125, -0.1758,
         0.2015, -0.0755, -0.0035,  0.0695, -0.0310, -0.0535,  0.0272,  0.0465],
       device='cuda:0') torch.Size([32])
fc_blocks.1.0.weight tensor([[-0.1141,  0.0227,  0.0169,  0.1937,  0.1933,  0.0267, -0.1046, -0.1055,
          0.0915,  0.0761,  0.1198, -0.0684, -0.0892, -0.1156, -0.0742, -0.1619,
         -0.2065,  0.0637, -0.1657, -0.1229, -0.0108,  0.1250, -0.0057,  0.0664,
          0.0121,  0.0894,  0.1229,  0.0551, -0.0543, -0.0107, -0.1021, -0.0640],
        [ 0.0277,  0.2108,  0.1655,  0.0373, -0.1060,  0.0844, -0.0578,  0.1338,
         -0.0550, -0.1932, -0.1280, -0.1317, -0.0112, -0.0226, -0.1322,  0.0051,
          0.0273,  0.1874, -0.0261, -0.1560, -0.0888, -0.2003,  0.2457, -0.1804,
         -0.0333,  0.0541,  0.0930, -0.2045, -0.0076,  0.0599, -0.2023,  0.2057],
        [ 0.0884, -0.2171, -0.0670, -0.1239, -0.1055, -0.0213, -0.1096, -0.1151,
          0.0129,  0.1196,  0.0434, -0.1044,  0.0061,  0.1243, -0.0652, -0.1975,
         -0.0869,  0.0935,  0.1288, -0.1117,  0.0066,  0.0850,  0.0076,  0.1085,
         -0.0040,  0.0379, -0.0018, -0.1742, -0.1953,  0.0085,  0.0998, -0.1129],
        [ 0.2166,  0.1381,  0.1352, -0.0494, -0.0810,  0.0096,  0.2320,  0.2011,
         -0.0413,  0.0118,  0.0603, -0.0937, -0.1671,  0.0409, -0.1762,  0.2100,
          0.2498,  0.1533, -0.0598,  0.1323, -0.1109,  0.0890,  0.1574,  0.0371,
          0.1184,  0.1294,  0.1099,  0.0481, -0.0287, -0.1227, -0.0860,  0.1989],
        [-0.0506,  0.0416,  0.0974, -0.1547, -0.2180, -0.1205, -0.0332, -0.0242,
         -0.0800,  0.0742,  0.0904,  0.0209, -0.0696,  0.1379, -0.2267,  0.2482,
          0.0720, -0.0870, -0.1507, -0.1241,  0.0089,  0.0049, -0.0444,  0.0026,
          0.0972,  0.0791, -0.1583, -0.0051,  0.1588, -0.0116,  0.0200,  0.1704],
        [-0.0107,  0.0438,  0.1324,  0.0623,  0.0782,  0.0005,  0.1679, -0.0651,
          0.1594,  0.0267,  0.1947,  0.0684, -0.1676,  0.0129,  0.1982,  0.1062,
          0.0919, -0.0851,  0.0174, -0.0102,  0.1394,  0.0484, -0.0737,  0.0184,
          0.0097, -0.0409, -0.1145, -0.0137,  0.1276,  0.1494, -0.0117, -0.1072],
        [-0.1502, -0.2218, -0.0484,  0.0807,  0.0978,  0.0829, -0.1223, -0.0078,
          0.1203, -0.1631, -0.0510, -0.0906, -0.1322, -0.0600,  0.1080, -0.0375,
         -0.1515,  0.0733,  0.1554,  0.0973,  0.0969, -0.0806,  0.0875,  0.0006,
         -0.0752, -0.0033,  0.1105, -0.0504,  0.1948, -0.1122,  0.0673,  0.0555],
        [ 0.1296, -0.1676, -0.1125,  0.1360, -0.0313,  0.0105,  0.0086, -0.0308,
          0.0492,  0.0754,  0.2051,  0.1115, -0.0561,  0.1588, -0.0133,  0.0086,
          0.0463,  0.1095, -0.0652,  0.0704,  0.2390,  0.0757, -0.0464,  0.2480,
          0.0437, -0.0779,  0.1181,  0.1829, -0.1419,  0.1529,  0.1387, -0.0832],
        [-0.1656, -0.0793,  0.0918, -0.0442,  0.1986,  0.1158,  0.0357, -0.0804,
          0.0368,  0.0534,  0.1134,  0.1289,  0.1814, -0.0079,  0.1582,  0.0183,
         -0.0556,  0.0138, -0.0741, -0.0398,  0.1058,  0.1049, -0.1942,  0.1058,
          0.1164, -0.0217,  0.1206,  0.0714,  0.1044,  0.1402, -0.0641,  0.0329],
        [-0.1027,  0.0323, -0.1526,  0.2103,  0.2166,  0.1366, -0.2067, -0.1197,
          0.0283, -0.0313,  0.0627, -0.0065,  0.0859, -0.0966,  0.1017, -0.0890,
          0.0655, -0.1789,  0.0318,  0.0075,  0.0047, -0.0969, -0.0011, -0.1005,
         -0.1971, -0.0168,  0.0705, -0.0118,  0.1274, -0.0731,  0.1772, -0.0118],
        [-0.0413, -0.0066,  0.1546, -0.2372,  0.0341,  0.0301, -0.0956,  0.2123,
          0.2025, -0.0286,  0.0989, -0.1537, -0.1728,  0.1277, -0.1693,  0.1763,
          0.2731,  0.1697,  0.0581,  0.1325,  0.1781, -0.0941,  0.0590, -0.0991,
          0.2317,  0.1009, -0.1234, -0.1334,  0.0077, -0.0878, -0.2388,  0.1211],
        [ 0.1481,  0.0714,  0.0685, -0.1005,  0.0174, -0.1460,  0.1403,  0.2228,
          0.1585,  0.1570,  0.0776, -0.0296, -0.0366,  0.0511, -0.0655, -0.1117,
         -0.0667,  0.1255,  0.0952, -0.0482,  0.1171,  0.0746,  0.2262, -0.0151,
          0.0032,  0.2014,  0.0571,  0.1768, -0.1542, -0.1628,  0.1456,  0.1681],
        [-0.0857,  0.1629, -0.0694,  0.1658, -0.1128,  0.1294,  0.0653,  0.1206,
          0.1282, -0.0767, -0.0833, -0.1021,  0.1458,  0.0754,  0.1687, -0.0651,
         -0.0827,  0.1412, -0.0930, -0.1436,  0.0897,  0.1067, -0.1384, -0.0875,
          0.0764, -0.0169,  0.1662, -0.0697,  0.0696,  0.1494,  0.0397,  0.1431],
        [-0.1038,  0.0628,  0.0682, -0.1316,  0.0270,  0.0706, -0.1735,  0.0114,
         -0.0908, -0.1444,  0.1073, -0.0191,  0.1682,  0.0608,  0.1905, -0.2447,
         -0.2265,  0.0907, -0.0113, -0.0013,  0.0548, -0.1153, -0.1047,  0.0707,
         -0.0578,  0.0699,  0.0508, -0.0358, -0.0285,  0.0787, -0.0483, -0.1720],
        [-0.1317, -0.1825, -0.0799,  0.0808,  0.0683, -0.0627,  0.1119, -0.0302,
         -0.0212, -0.2128, -0.1539, -0.1931,  0.0298, -0.0680, -0.0336, -0.0297,
          0.0568, -0.0903,  0.0608,  0.0869,  0.0092, -0.0491, -0.1400, -0.1859,
         -0.1399, -0.0665, -0.0749,  0.0188, -0.0526, -0.0538,  0.0252, -0.1291],
        [-0.2374, -0.0958, -0.2322,  0.0552,  0.1974,  0.0372,  0.0319,  0.1025,
          0.1024, -0.0088, -0.1546,  0.2022,  0.1523, -0.0531,  0.0221,  0.0566,
          0.1103,  0.0755,  0.1355,  0.1112, -0.0849,  0.1906,  0.0703, -0.0048,
         -0.1827,  0.1605,  0.0863,  0.0575, -0.0749, -0.0819,  0.1844, -0.1401]],
       device='cuda:0') torch.Size([16, 32])
fc_blocks.1.0.bias tensor([ 0.0863,  0.1459, -0.1242,  0.2158,  0.0383,  0.0419, -0.0848, -0.1273,
        -0.1135, -0.0055,  0.0831,  0.2127,  0.0119, -0.0023,  0.0393, -0.1806],
       device='cuda:0') torch.Size([16])
fc_blocks.2.0.weight tensor([[-0.0341,  0.1905, -0.1773,  0.1873,  0.1350,  0.0757, -0.0234,  0.0937,
         -0.0579, -0.0271,  0.2250,  0.1546,  0.1076, -0.0827, -0.1503, -0.1952],
        [-0.1821,  0.1815, -0.0613, -0.1048, -0.0696, -0.0542, -0.0208,  0.0234,
          0.1505, -0.1527,  0.0077, -0.1146, -0.0856, -0.1776, -0.0988, -0.2318],
        [ 0.0534, -0.0101,  0.1356, -0.0201,  0.2743,  0.0311, -0.1282,  0.3132,
         -0.2798, -0.0275, -0.1380, -0.0436,  0.0859, -0.0458, -0.0482,  0.0917],
        [ 0.0662, -0.1615,  0.1491, -0.1871, -0.1720,  0.0795, -0.2628,  0.1554,
         -0.0579,  0.0101,  0.0066, -0.1059,  0.1942,  0.1280,  0.1492,  0.2050],
        [-0.2840, -0.2785,  0.0899, -0.0023,  0.0622,  0.3078,  0.1298, -0.3026,
          0.0522,  0.1437, -0.0909,  0.1413, -0.0900, -0.0875,  0.1227, -0.2428],
        [ 0.0352,  0.0930,  0.2227,  0.0209, -0.0166,  0.0812, -0.0032, -0.1084,
          0.1936, -0.2224,  0.1570,  0.1423, -0.1135, -0.1572,  0.1950,  0.0892],
        [ 0.0512,  0.0576, -0.3048,  0.0472,  0.1944, -0.0312,  0.0205, -0.0715,
          0.0955, -0.2401,  0.2034, -0.0895, -0.1198, -0.2030,  0.1193, -0.2779],
        [-0.2780, -0.2505, -0.2232,  0.0321, -0.0172,  0.3124, -0.2002,  0.0142,
          0.0628,  0.1587,  0.0793,  0.1199, -0.2509, -0.0203, -0.1343, -0.0286]],
       device='cuda:0') torch.Size([8, 16])
fc_blocks.2.0.bias tensor([ 0.3114,  0.0101, -0.2187, -0.1490, -0.3101, -0.0344, -0.0780, -0.1676],
       device='cuda:0') torch.Size([8])
fc_blocks.3.0.weight tensor([[ 0.2556,  0.2432,  0.0875, -0.0189, -0.1868,  0.1919,  0.0894, -0.2204],
        [-0.1979,  0.0357,  0.2670, -0.0600,  0.2243,  0.1244,  0.2611,  0.1393],
        [ 0.1682, -0.0213, -0.0473, -0.2025, -0.1577,  0.1427,  0.0382, -0.0937],
        [ 0.0712,  0.3466, -0.0499,  0.3163,  0.1756,  0.0526,  0.2766,  0.2446]],
       device='cuda:0') torch.Size([4, 8])
fc_blocks.3.0.bias tensor([ 0.2988, -0.0053,  0.4358, -0.3909], device='cuda:0') torch.Size([4])
fc_blocks.4.0.weight tensor([[-0.1864,  0.0487,  0.2599, -0.5616],
        [ 0.5249, -0.1972,  0.0913, -0.5174]], device='cuda:0') torch.Size([2, 4])
fc_blocks.4.0.bias tensor([-0.2800, -0.3819], device='cuda:0') torch.Size([2])
Train Loss : 145.232, Val Loss : 434.856
======> Trajectory Loss : 55.828, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.827, BelowGroundPenalize Loss : 6.734
===> [Minibatch 14/129].........recurrent_blocks.0.weight_ih_l0 tensor([[ 0.1738,  0.0606, -0.1301],
        [-0.1001, -0.0697,  0.2240],
        [ 0.0664,  0.0785,  0.1253],
        [ 0.0268, -0.1211,  0.0931],
        [-0.0498, -0.0951, -0.0601],
        [ 0.0008, -0.1801,  0.1903],
        [-0.0525, -0.2014,  0.1973],
        [ 0.1409,  0.1702, -0.0340],
        [-0.1255, -0.1511,  0.0051],
        [ 0.1476,  0.0572,  0.1551],
        [-0.1227, -0.2352,  0.0994],
        [-0.0118,  0.0976,  0.0063],
        [-0.1050,  0.1897,  0.0255],
        [-0.1208, -0.1257,  0.1319],
        [-0.1673,  0.0253, -0.0288],
        [-0.0938, -0.0388,  0.2510],
        [ 0.0445, -0.1866, -0.0612],
        [ 0.1151,  0.1077,  0.0234],
        [-0.0624, -0.0322, -0.0086],
        [-0.2302, -0.2304,  0.0087],
        [-0.0896,  0.0318,  0.2081],
        [ 0.0811,  0.0044,  0.2576],
        [ 0.0217, -0.1209, -0.0859],
        [ 0.0418, -0.1821,  0.0126],
        [-0.1327, -0.1977,  0.0838],
        [-0.1949, -0.1831, -0.0297],
        [-0.1094,  0.1616,  0.1265],
        [ 0.0832, -0.2362, -0.1529],
        [ 0.0670, -0.1206,  0.1452],
        [-0.1761, -0.0864,  0.1889],
        [ 0.0675, -0.1188, -0.1106],
        [-0.0162, -0.0347,  0.0093],
        [-0.1137,  0.0938, -0.2032],
        [ 0.0286, -0.0109,  0.0435],
        [-0.0042,  0.1707,  0.0927],
        [ 0.2163,  0.0817, -0.0290],
        [-0.1472, -0.0117,  0.0962],
        [-0.0578, -0.1748, -0.1071],
        [-0.0646, -0.2074,  0.1003],
        [ 0.1630,  0.1286,  0.1696],
        [ 0.1861, -0.1050, -0.0153],
        [ 0.0711,  0.0862, -0.0684],
        [-0.1210,  0.0576,  0.1407],
        [ 0.2132,  0.0807,  0.2653],
        [-0.1043,  0.0172, -0.1988],
        [-0.0019, -0.0836, -0.1386],
        [-0.1097, -0.0743,  0.1673],
        [-0.1236, -0.0294, -0.0007],
        [ 0.0645, -0.1304,  0.0477],
        [ 0.0173, -0.1996,  0.1281],
        [-0.2259,  0.1158,  0.0737],
        [-0.0612, -0.2065,  0.0196],
        [-0.1991, -0.0917,  0.2377],
        [ 0.0908, -0.0522,  0.1334],
        [-0.0776, -0.1984,  0.2013],
        [ 0.1945,  0.0632,  0.2295],
        [-0.2220, -0.0618, -0.0780],
        [ 0.0488, -0.2011, -0.0947],
        [ 0.0149,  0.1646, -0.0165],
        [-0.0377, -0.1138,  0.1484],
        [ 0.1726,  0.0139,  0.2505],
        [-0.2185, -0.1307,  0.0086],
        [-0.0637,  0.0222, -0.0536],
        [-0.0582, -0.2353,  0.0082],
        [ 0.0357,  0.0560,  0.0038],
        [-0.1388,  0.0407, -0.0220],
        [-0.0620, -0.1608, -0.2147],
        [ 0.0675,  0.0686,  0.0210],
        [-0.1317, -0.2172,  0.0114],
        [-0.0297, -0.2353,  0.1700],
        [-0.0079,  0.0531, -0.1386],
        [ 0.1309,  0.0150,  0.0550],
        [-0.1948,  0.2009,  0.1202],
        [-0.0529, -0.0774, -0.0606],
        [-0.0794, -0.1707, -0.0647],
        [ 0.0732,  0.0223,  0.1194],
        [ 0.0793,  0.1099, -0.1692],
        [-0.1764,  0.1890,  0.0519],
        [-0.1103,  0.0274,  0.0317],
        [-0.0126,  0.1599, -0.1998],
        [-0.0224, -0.0690, -0.0003],
        [ 0.1236, -0.1642,  0.1834],
        [ 0.0018,  0.0809, -0.0216],
        [ 0.0365,  0.2214,  0.0290],
        [-0.1139, -0.1156,  0.0945],
        [-0.1540,  0.1931, -0.0724],
        [-0.0766,  0.2343, -0.1921],
        [ 0.0257, -0.1838,  0.0413],
        [ 0.0456,  0.1720, -0.1274],
        [ 0.0825, -0.0229, -0.0718],
        [-0.1497,  0.1077, -0.0742],
        [-0.1581, -0.0010,  0.1328],
        [ 0.0468, -0.1101,  0.1940],
        [ 0.0895, -0.0841,  0.0487],
        [-0.0647,  0.0695, -0.0008],
        [-0.0567, -0.0786,  0.2360],
        [-0.0650, -0.0082, -0.1368],
        [-0.2125, -0.2194,  0.1629],
        [ 0.1829, -0.0580, -0.1245],
        [-0.0162, -0.0191,  0.2107],
        [-0.1784, -0.0974, -0.1440],
        [ 0.0883, -0.0075, -0.0545],
        [-0.0493,  0.1024, -0.0797],
        [ 0.0399,  0.0310, -0.0504],
        [-0.0339, -0.1442,  0.1326],
        [ 0.1016,  0.0085,  0.1792],
        [-0.1581, -0.0585,  0.1666],
        [ 0.2154,  0.0412,  0.1062],
        [-0.0325, -0.1053, -0.1772],
        [ 0.1892, -0.1386,  0.1108],
        [-0.0625, -0.0925, -0.0028],
        [ 0.0038, -0.0138,  0.0554],
        [ 0.1109, -0.1673,  0.2391],
        [-0.0741, -0.1631,  0.0097],
        [-0.0849, -0.0687, -0.0128],
        [ 0.0562,  0.0452,  0.1386],
        [-0.0006,  0.0144, -0.0596],
        [ 0.2195, -0.1757,  0.2062],
        [ 0.0749, -0.2168,  0.1796],
        [-0.0388, -0.1442, -0.0537],
        [ 0.0077, -0.2616, -0.0048],
        [-0.1109, -0.0840,  0.1415],
        [ 0.0371, -0.0933,  0.1087],
        [-0.2146, -0.2340,  0.1523],
        [ 0.2017, -0.2499, -0.0344],
        [-0.1146,  0.0566,  0.0934],
        [ 0.2083, -0.1791,  0.1825],
        [-0.0093, -0.0287,  0.0021]], device='cuda:0') torch.Size([128, 3])
recurrent_blocks.0.weight_hh_l0 tensor([[ 0.0483,  0.0438, -0.0734,  ...,  0.1580,  0.1925,  0.0484],
        [ 0.0015,  0.0740,  0.0380,  ...,  0.0810,  0.0037, -0.0362],
        [ 0.0658, -0.0389, -0.0610,  ..., -0.1849, -0.1955,  0.0220],
        ...,
        [-0.1466,  0.0532, -0.0479,  ..., -0.1046,  0.0554,  0.0237],
        [ 0.0617,  0.0364, -0.1515,  ...,  0.0145, -0.0903,  0.2005],
        [-0.0691,  0.1510, -0.1038,  ..., -0.1798, -0.0217, -0.0200]],
       device='cuda:0') torch.Size([128, 32])
recurrent_blocks.0.bias_ih_l0 tensor([-1.1640e-01,  1.1624e-01, -1.2593e-01,  1.7011e-01,  1.4796e-01,
         2.3667e-01, -7.9804e-02,  1.1582e-02,  1.2087e-01,  5.5999e-02,
        -8.4104e-02,  1.7299e-01, -2.4907e-01,  1.2384e-02,  1.6403e-01,
         1.5045e-01,  1.3103e-01,  1.4065e-01,  3.7490e-02,  1.5137e-01,
         1.9421e-02,  6.9604e-02, -5.6955e-02,  1.6572e-01, -8.8929e-02,
         2.2146e-01,  9.1057e-02,  2.4123e-02,  1.2454e-01,  1.4778e-01,
        -6.5947e-02, -1.1885e-03, -3.3531e-02, -4.3336e-02,  9.8969e-02,
         1.9078e-01,  8.4547e-03, -5.9799e-02,  1.1834e-01,  1.1540e-01,
         2.2367e-02,  1.0856e-01,  1.6484e-01,  2.1628e-01, -2.2584e-01,
         1.0657e-02,  3.2657e-02, -3.5845e-02,  1.4328e-01,  5.5367e-02,
         1.4146e-01,  6.4619e-02,  1.2790e-01,  6.7134e-02, -3.6200e-02,
         9.6144e-02,  2.0765e-01,  7.2274e-02,  1.1093e-01, -1.3096e-01,
        -7.1757e-02,  1.2165e-01,  7.1474e-02,  1.0527e-01, -3.5529e-02,
         1.6287e-01, -1.4097e-01,  1.7610e-01,  2.1466e-01,  1.1297e-01,
         4.2452e-02,  4.2076e-02, -1.3747e-01,  2.2212e-02,  2.2834e-01,
         1.9394e-01,  7.0760e-03,  6.2363e-02,  5.4012e-02, -1.6185e-01,
         1.6226e-01,  1.2206e-01,  1.3913e-01, -1.9064e-01,  6.5994e-02,
        -2.6455e-01, -9.9151e-05,  1.8030e-01, -2.1748e-01, -2.0969e-01,
         2.0166e-01, -1.9192e-02,  2.7233e-01, -2.1447e-01, -2.2928e-01,
         1.9646e-01, -1.4059e-02,  2.0480e-01,  9.0367e-02,  1.2423e-01,
        -3.6438e-02,  7.7780e-02, -9.1369e-02,  9.6216e-02, -2.0532e-02,
         9.0289e-02,  2.6496e-01,  2.1391e-01, -7.0044e-02,  5.3434e-03,
        -3.2267e-02,  1.0400e-01,  1.7369e-02,  1.9706e-02,  7.8775e-02,
        -8.6978e-02,  1.1253e-01,  1.2453e-01,  9.2269e-02, -2.8558e-02,
        -4.2807e-02,  1.9813e-01,  3.1088e-02, -7.9109e-02,  2.1719e-01,
        -1.8343e-02,  2.0267e-01, -3.9191e-02], device='cuda:0') torch.Size([128])
recurrent_blocks.0.bias_hh_l0 tensor([-0.0248,  0.0012, -0.0004,  0.1555, -0.0647,  0.2083,  0.1005,  0.0859,
        -0.1405,  0.0498,  0.1940,  0.0789, -0.0701, -0.1871, -0.0311,  0.0528,
         0.1230,  0.1488, -0.1123,  0.1655,  0.0511,  0.2384,  0.0898,  0.1408,
         0.1715, -0.1037, -0.0784,  0.1420,  0.0740,  0.0666,  0.0091, -0.0705,
        -0.1723,  0.2238, -0.0493, -0.0541,  0.0695,  0.1273, -0.1026,  0.0273,
         0.1292,  0.0973,  0.0290,  0.2345, -0.2277,  0.0840,  0.1216,  0.0935,
        -0.0444, -0.1049,  0.0805, -0.0360,  0.1498,  0.1083, -0.0219,  0.1939,
        -0.0920,  0.1648,  0.0129,  0.1206,  0.1301,  0.1768, -0.0588,  0.1201,
        -0.0032,  0.2529, -0.2184,  0.1034,  0.1194,  0.0085, -0.2151,  0.1640,
         0.0368, -0.2473,  0.1646,  0.2106,  0.0274, -0.1507,  0.2747, -0.0756,
         0.1520,  0.2232,  0.2091, -0.2081,  0.1757,  0.0221, -0.2190,  0.0931,
        -0.0541, -0.1746,  0.1921,  0.1784, -0.0124, -0.1114, -0.1088,  0.1294,
        -0.0170, -0.0700,  0.1922,  0.1918, -0.0036, -0.0405,  0.0044,  0.1776,
         0.1749,  0.2470,  0.1330,  0.1031, -0.0592, -0.0306,  0.0318,  0.0254,
         0.0416, -0.0979, -0.0879,  0.0610, -0.0048,  0.2055, -0.0085, -0.0190,
        -0.1113,  0.1910,  0.1166,  0.0183, -0.0044, -0.0171, -0.0331,  0.1052],
       device='cuda:0') torch.Size([128])
recurrent_blocks.0.weight_ih_l0_reverse tensor([[ 0.0161, -0.2202,  0.0099],
        [ 0.0070, -0.0478, -0.0107],
        [-0.0582,  0.0027,  0.1024],
        [-0.1338, -0.0375,  0.1152],
        [ 0.2533,  0.1484, -0.0092],
        [-0.0685, -0.0958,  0.2327],
        [ 0.0856,  0.0203, -0.0624],
        [-0.0065,  0.0037,  0.1477],
        [ 0.0472, -0.0858, -0.0863],
        [-0.0858,  0.2074, -0.2718],
        [-0.1123,  0.0115,  0.0878],
        [-0.1681, -0.0028, -0.1855],
        [ 0.1353,  0.0442,  0.0507],
        [-0.0614, -0.0261,  0.1609],
        [ 0.0845, -0.1133,  0.0185],
        [-0.0291, -0.1375,  0.0271],
        [-0.0654,  0.0054,  0.0093],
        [-0.0992,  0.0141, -0.0555],
        [-0.2259, -0.0215, -0.0573],
        [ 0.0652, -0.1337,  0.1880],
        [-0.0555,  0.0806, -0.0865],
        [-0.1293, -0.1675,  0.0330],
        [-0.0800,  0.0598,  0.0235],
        [-0.0084,  0.0979, -0.1459],
        [-0.2132, -0.0127,  0.0216],
        [-0.2321, -0.2166,  0.0501],
        [-0.0351,  0.0740, -0.0810],
        [-0.2394,  0.0456,  0.1095],
        [-0.0733,  0.1863,  0.2468],
        [ 0.1599,  0.0242, -0.1822],
        [-0.1075,  0.1126, -0.1584],
        [-0.1949, -0.2233, -0.0351],
        [-0.2095, -0.1216,  0.1097],
        [-0.2112,  0.0136,  0.2113],
        [-0.2096,  0.1298,  0.1742],
        [ 0.0222, -0.0594, -0.1159],
        [ 0.2245,  0.0870,  0.2083],
        [-0.0412,  0.0304,  0.1673],
        [ 0.1216, -0.0310,  0.1254],
        [-0.2064, -0.0919,  0.1061],
        [ 0.0634, -0.0269,  0.0836],
        [ 0.1697, -0.0163, -0.1806],
        [-0.2590, -0.0636, -0.1022],
        [ 0.1439,  0.1301, -0.0860],
        [ 0.0755,  0.1115,  0.0951],
        [ 0.1350, -0.1552, -0.0730],
        [-0.1660,  0.1100, -0.1367],
        [ 0.0577, -0.2753,  0.0058],
        [-0.1299, -0.1142, -0.2291],
        [-0.0972,  0.1848,  0.1847],
        [-0.0301,  0.1127,  0.1515],
        [ 0.0174, -0.1465,  0.1012],
        [-0.0801, -0.1084,  0.0845],
        [-0.0083, -0.2559,  0.2593],
        [-0.0785,  0.0999, -0.1804],
        [-0.0696, -0.0924,  0.1198],
        [-0.0820, -0.0111,  0.1621],
        [-0.0173, -0.1361,  0.2152],
        [ 0.0120,  0.0770,  0.0707],
        [-0.2400, -0.0169,  0.0146],
        [-0.1082,  0.1152,  0.1771],
        [-0.0748, -0.0213, -0.2272],
        [-0.1104, -0.0125, -0.0532],
        [-0.2564,  0.0473,  0.1919],
        [ 0.1543,  0.0320, -0.2105],
        [ 0.0194, -0.1134, -0.1137],
        [-0.0920, -0.0302, -0.0051],
        [-0.1397, -0.0634, -0.1968],
        [-0.1073, -0.0554, -0.2042],
        [ 0.0391, -0.1127,  0.0576],
        [-0.0474, -0.0160, -0.2523],
        [-0.1315, -0.0024,  0.2107],
        [-0.0004,  0.2397, -0.1399],
        [-0.0887, -0.2159, -0.0640],
        [-0.0137,  0.0410, -0.0464],
        [-0.0472, -0.1162,  0.1005],
        [-0.0353,  0.0496, -0.0954],
        [-0.0538, -0.0470,  0.1624],
        [-0.1582, -0.1642,  0.1164],
        [ 0.0749, -0.0315,  0.1002],
        [ 0.0594, -0.1045,  0.0914],
        [ 0.0300, -0.0643, -0.1029],
        [-0.0246, -0.1781,  0.2288],
        [ 0.0755,  0.1937, -0.1395],
        [ 0.1333,  0.1644, -0.2337],
        [ 0.0225, -0.1862,  0.2515],
        [ 0.0720, -0.0565,  0.1614],
        [-0.0718,  0.0534,  0.1422],
        [ 0.0278,  0.0100, -0.0618],
        [ 0.1159, -0.0530,  0.0532],
        [-0.1296, -0.0811, -0.1394],
        [-0.1304, -0.1133,  0.2433],
        [-0.0472,  0.1419,  0.1812],
        [-0.1258,  0.0021, -0.1551],
        [-0.1635,  0.0237,  0.2227],
        [-0.0955, -0.2240,  0.1799],
        [-0.0611, -0.1927,  0.1347],
        [-0.0719, -0.0985,  0.0641],
        [-0.1446, -0.0984,  0.0891],
        [ 0.1976, -0.0129, -0.1292],
        [ 0.1004,  0.1283, -0.0309],
        [ 0.1068, -0.2533,  0.0511],
        [-0.0107, -0.0077,  0.2539],
        [ 0.0220,  0.0592,  0.1085],
        [-0.0417, -0.2551,  0.0963],
        [ 0.0936,  0.0414,  0.0155],
        [-0.0012,  0.0319,  0.2014],
        [ 0.1234, -0.1263, -0.0985],
        [ 0.1701, -0.1252,  0.1582],
        [ 0.0015, -0.1414,  0.1417],
        [ 0.0938,  0.0026,  0.1590],
        [ 0.0733, -0.1610, -0.1123],
        [ 0.1739,  0.0653, -0.2371],
        [-0.1743, -0.0495,  0.1125],
        [ 0.0247,  0.0490,  0.1864],
        [ 0.1157, -0.2532, -0.0437],
        [ 0.0338,  0.0460, -0.0377],
        [-0.2064, -0.0767,  0.2283],
        [ 0.1038, -0.1995,  0.0114],
        [-0.1675, -0.0763, -0.0105],
        [ 0.0604, -0.1326, -0.0736],
        [-0.1938,  0.0716,  0.1178],
        [ 0.0172, -0.0588,  0.0033],
        [-0.1461, -0.0985,  0.1061],
        [ 0.0017, -0.0307, -0.0927],
        [ 0.1493, -0.0163,  0.0037],
        [-0.0266, -0.0486,  0.1012],
        [-0.0773, -0.2063, -0.0675]], device='cuda:0') torch.Size([128, 3])
recurrent_blocks.0.weight_hh_l0_reverse tensor([[ 0.0043,  0.1200, -0.1297,  ..., -0.0612, -0.0445,  0.0648],
        [-0.0384, -0.0780,  0.2233,  ..., -0.1554,  0.0466,  0.0681],
        [-0.2088,  0.0111,  0.2186,  ...,  0.1782,  0.0343,  0.1414],
        ...,
        [ 0.1316,  0.1207, -0.1072,  ..., -0.1669, -0.0397,  0.0862],
        [ 0.0676,  0.1998,  0.1977,  ..., -0.0592,  0.1862,  0.0165],
        [-0.0052, -0.0885,  0.0158,  ..., -0.0789,  0.2453,  0.0998]],
       device='cuda:0') torch.Size([128, 32])
recurrent_blocks.0.bias_ih_l0_reverse tensor([ 0.1878, -0.0322, -0.0138,  0.1117,  0.0115,  0.1117,  0.1174, -0.1061,
        -0.0350, -0.1759,  0.1473,  0.1310,  0.2431,  0.0999, -0.0554,  0.0866,
        -0.1516, -0.0308,  0.2112, -0.0869, -0.0797,  0.2171, -0.1723, -0.1666,
         0.1867, -0.0513,  0.1607, -0.0284,  0.1391, -0.0009, -0.0545,  0.1227,
         0.1667,  0.1892,  0.0040,  0.0436,  0.1510,  0.0844,  0.1080, -0.1108,
         0.1512, -0.0388, -0.0872, -0.1025, -0.0668,  0.1405,  0.0851,  0.0950,
        -0.1979, -0.0524, -0.0221,  0.2142,  0.1159,  0.2367,  0.1111, -0.0968,
         0.0263,  0.1492, -0.1008,  0.1173, -0.0980, -0.0240, -0.1800, -0.0159,
        -0.1939, -0.1529,  0.1228, -0.1559, -0.2036,  0.1804, -0.2458,  0.1167,
        -0.0732,  0.0660, -0.1874,  0.0208, -0.2726,  0.0811,  0.0129,  0.1581,
        -0.0120, -0.0320,  0.1731,  0.0496, -0.1226,  0.1995, -0.0647,  0.0394,
        -0.0432, -0.0991, -0.0989,  0.0342,  0.1442,  0.0475, -0.0232,  0.1153,
         0.0271,  0.1686,  0.2181, -0.1309,  0.1769, -0.0572,  0.2323,  0.2051,
        -0.0046, -0.1680,  0.1955, -0.1275,  0.2473,  0.0964, -0.1099,  0.0245,
         0.0247,  0.0571,  0.1764,  0.1740,  0.0712,  0.2318,  0.0360, -0.0703,
        -0.0334,  0.1977, -0.0860,  0.1690, -0.0507, -0.0970, -0.0925, -0.0087],
       device='cuda:0') torch.Size([128])
recurrent_blocks.0.bias_hh_l0_reverse tensor([ 0.1677,  0.1315,  0.1024, -0.1272, -0.0522,  0.0870,  0.0522,  0.1149,
         0.0508, -0.0120, -0.0198,  0.1078, -0.0410, -0.1022, -0.1008, -0.0684,
        -0.2466, -0.0881,  0.1510, -0.1055,  0.1341, -0.0410, -0.1694,  0.1176,
         0.0385, -0.0321,  0.0888,  0.0791,  0.0851,  0.0878, -0.1065,  0.0973,
        -0.0201,  0.1922,  0.0870,  0.1479,  0.0552,  0.0904,  0.0865, -0.0730,
         0.1937, -0.2470, -0.1121,  0.0674,  0.1762, -0.0612,  0.0651,  0.0527,
        -0.2342, -0.0398, -0.1065, -0.0713, -0.0133,  0.0540, -0.1222, -0.0360,
         0.1044, -0.0267,  0.1323, -0.0670, -0.0467,  0.0523, -0.0066,  0.2066,
        -0.1363, -0.1827,  0.0971,  0.0069, -0.0999,  0.1038,  0.0120, -0.0256,
        -0.1673, -0.0774, -0.0616,  0.1874, -0.2652,  0.1958,  0.1831,  0.1112,
        -0.0485, -0.2275, -0.0865, -0.1812, -0.0254,  0.0376,  0.1103, -0.0238,
        -0.1496, -0.2096, -0.0568,  0.2567,  0.1580, -0.0652,  0.1036,  0.0399,
         0.1639, -0.0673,  0.0196, -0.1875,  0.1992, -0.0564, -0.0206, -0.0398,
         0.2028, -0.0573,  0.0253, -0.1481,  0.1002, -0.0249, -0.1616,  0.1621,
         0.0307, -0.0782,  0.1373,  0.1891, -0.0595,  0.0801, -0.1890, -0.0292,
         0.0501,  0.0026,  0.0062, -0.0654,  0.1596,  0.0739,  0.0724,  0.0253],
       device='cuda:0') torch.Size([128])
recurrent_blocks.1.weight_ih_l0 tensor([[-0.1655,  0.1146,  0.0580,  ..., -0.0645,  0.2543, -0.0572],
        [-0.0851,  0.0791, -0.0403,  ...,  0.0022, -0.0572,  0.2143],
        [ 0.1866, -0.0530, -0.0700,  ..., -0.0821,  0.0210,  0.1067],
        ...,
        [ 0.1654, -0.0158,  0.1063,  ..., -0.1089,  0.0450,  0.1307],
        [ 0.0104,  0.2117,  0.0309,  ..., -0.2322,  0.0217,  0.0507],
        [-0.2039,  0.1798, -0.0628,  ..., -0.0473, -0.0417,  0.0467]],
       device='cuda:0') torch.Size([128, 64])
recurrent_blocks.1.weight_hh_l0 tensor([[-0.1404,  0.1951, -0.1368,  ...,  0.1291,  0.0935,  0.0455],
        [ 0.0876,  0.1825,  0.0633,  ...,  0.2358, -0.0758,  0.1391],
        [ 0.2154, -0.0921, -0.0460,  ...,  0.0579,  0.0944, -0.0850],
        ...,
        [ 0.0526, -0.0486, -0.0407,  ..., -0.0210, -0.1718, -0.1247],
        [ 0.0074,  0.1746, -0.0174,  ..., -0.1026, -0.1372,  0.0297],
        [ 0.1648,  0.0049,  0.0333,  ...,  0.1561, -0.1253,  0.0685]],
       device='cuda:0') torch.Size([128, 32])
recurrent_blocks.1.bias_ih_l0 tensor([ 0.1091,  0.1953,  0.1208,  0.0115,  0.1430, -0.0005,  0.0256, -0.0310,
         0.0759, -0.1043, -0.0968,  0.1601,  0.0181,  0.1054,  0.0836,  0.2650,
         0.1016,  0.1379, -0.0659,  0.2405,  0.0575,  0.0211,  0.0267, -0.1249,
         0.1096, -0.0081, -0.2164,  0.1769,  0.1633, -0.2420, -0.0274, -0.0785,
         0.0079,  0.1103,  0.1382,  0.0839, -0.1017, -0.0716,  0.2371,  0.2191,
         0.0795,  0.0189,  0.0315,  0.0020,  0.0811, -0.0993,  0.0386,  0.1031,
         0.0671,  0.0876,  0.1937, -0.0423,  0.0971, -0.1014,  0.1983, -0.1604,
         0.0958,  0.1194, -0.2142,  0.0128,  0.0930,  0.0852,  0.1015,  0.0424,
         0.0402,  0.2724,  0.1280,  0.1302, -0.0576,  0.1121,  0.0345, -0.2173,
         0.0464,  0.0096,  0.0084, -0.0506,  0.0653,  0.1794,  0.0013, -0.1763,
        -0.1052, -0.0568,  0.0152,  0.0542,  0.2181, -0.0593,  0.0184,  0.0569,
        -0.1276, -0.0591, -0.0029, -0.1495,  0.1116, -0.0937,  0.1270,  0.1758,
         0.1161,  0.0489,  0.1704,  0.0337, -0.0539,  0.0163,  0.1596, -0.0606,
        -0.1134, -0.1074,  0.0999,  0.0037,  0.0031,  0.1419,  0.0617,  0.1812,
        -0.1641,  0.1076,  0.0381,  0.0692,  0.2628, -0.0591,  0.2255, -0.1330,
         0.1831, -0.0121,  0.0138, -0.0380,  0.1632, -0.0407, -0.1025,  0.1147],
       device='cuda:0') torch.Size([128])
recurrent_blocks.1.bias_hh_l0 tensor([-2.7774e-02,  1.9711e-01,  8.4592e-02,  1.7879e-01,  4.4707e-02,
         2.3762e-01,  5.6561e-02,  2.2953e-01, -3.5502e-02, -3.3138e-02,
        -3.1324e-02,  3.1337e-02, -8.1517e-03,  1.9682e-02, -1.1143e-01,
         2.4270e-01,  1.2367e-01,  1.2544e-01,  7.8957e-02, -2.3954e-02,
         2.5718e-01,  1.4847e-01,  2.2339e-01, -1.6103e-01,  1.6544e-01,
         1.6150e-01, -5.7600e-02, -9.0112e-02,  5.8261e-02, -2.0577e-01,
         1.1641e-02, -6.1679e-02,  6.9485e-02, -1.0949e-01,  8.5505e-02,
        -4.6086e-04, -6.8289e-02,  3.7250e-02,  5.6999e-03,  1.2031e-01,
         6.8348e-03, -6.4021e-02,  1.5950e-01,  5.4149e-02, -7.9687e-03,
         2.3159e-01,  1.8599e-01,  3.9891e-02, -8.8303e-02,  4.5794e-02,
        -4.9392e-03,  1.1879e-01,  7.7325e-03,  4.4289e-02,  1.1857e-01,
         9.9437e-02,  1.8375e-01,  7.1556e-03, -1.4165e-01,  2.1653e-01,
         1.2622e-04, -2.0029e-01,  1.0329e-01, -8.2486e-02,  1.2287e-01,
        -4.9881e-02,  2.0074e-01,  2.2223e-01, -1.8693e-01,  6.4829e-02,
        -2.5361e-01,  9.0827e-02,  1.6192e-01, -1.8210e-01, -5.0511e-04,
        -7.7835e-02, -1.9151e-02,  1.1554e-01,  1.4362e-01, -2.8540e-02,
        -5.2397e-02, -8.3779e-02,  2.1294e-01,  1.8933e-01,  2.5253e-01,
        -3.2233e-02, -1.7795e-01,  2.0327e-01, -1.7427e-01, -2.1105e-01,
         1.3919e-01, -6.0903e-02,  1.5006e-01,  3.0958e-03, -9.4167e-03,
        -4.9194e-02, -1.4660e-03,  1.3697e-01,  5.9593e-02,  1.6060e-01,
         1.0893e-01, -4.2868e-02,  2.0970e-01, -6.2350e-02, -8.7075e-02,
         8.0398e-02,  1.7099e-01, -4.2969e-02, -1.4673e-02, -4.1179e-02,
        -8.9930e-02,  7.5177e-02, -2.1642e-01,  1.6351e-01,  2.1936e-01,
         2.2646e-01,  1.8015e-01, -3.9298e-02, -3.5098e-03, -1.3601e-01,
         2.5623e-02, -1.0855e-01, -1.2628e-01, -7.0597e-02, -4.4113e-02,
        -1.4907e-01,  1.5014e-01,  1.7682e-01], device='cuda:0') torch.Size([128])
recurrent_blocks.1.weight_ih_l0_reverse tensor([[ 0.0007,  0.0441, -0.0086,  ...,  0.0651, -0.1210,  0.0537],
        [ 0.0548,  0.0277,  0.0224,  ...,  0.1075, -0.0106,  0.0902],
        [-0.2355, -0.0680, -0.0299,  ..., -0.1115,  0.0972,  0.0946],
        ...,
        [-0.1600,  0.1131, -0.2372,  ..., -0.0508, -0.0094, -0.0597],
        [ 0.0424,  0.2415, -0.0166,  ..., -0.0902, -0.1159, -0.0698],
        [ 0.0127,  0.0775, -0.1175,  ..., -0.0728, -0.0475, -0.0305]],
       device='cuda:0') torch.Size([128, 64])
recurrent_blocks.1.weight_hh_l0_reverse tensor([[ 0.0719,  0.0750,  0.0967,  ...,  0.1403, -0.2162, -0.1775],
        [-0.0149, -0.0622,  0.0017,  ...,  0.0637, -0.0526,  0.1117],
        [-0.0434, -0.1214,  0.1023,  ...,  0.0891, -0.1268,  0.0826],
        ...,
        [ 0.1711, -0.1880,  0.1376,  ..., -0.0991,  0.1180, -0.0800],
        [-0.0325,  0.0383,  0.1109,  ..., -0.0336,  0.0415,  0.0709],
        [ 0.0715, -0.1815,  0.2234,  ..., -0.0243,  0.2106,  0.0987]],
       device='cuda:0') torch.Size([128, 32])
recurrent_blocks.1.bias_ih_l0_reverse tensor([-0.1521,  0.1850,  0.0823, -0.0868,  0.0821,  0.0306,  0.2422,  0.1451,
         0.1464, -0.0162,  0.0751,  0.2622,  0.1095,  0.0809, -0.0042, -0.1326,
         0.1905,  0.0242,  0.1085,  0.1381,  0.1293,  0.0054,  0.1640, -0.1634,
        -0.1255, -0.0306,  0.2168,  0.0427,  0.0711,  0.0292,  0.0265, -0.0643,
         0.0825,  0.0332, -0.0158, -0.1215, -0.1119,  0.1635, -0.0581,  0.2216,
        -0.0549, -0.0547,  0.2550, -0.0127,  0.2419,  0.1586, -0.0805,  0.0851,
        -0.0104, -0.0305, -0.1738,  0.0843, -0.0743, -0.0804,  0.2030, -0.1596,
         0.0697,  0.0228,  0.2478,  0.0462,  0.0915,  0.1521,  0.1888,  0.2093,
        -0.0583, -0.0714,  0.2267, -0.2144, -0.1027,  0.0179, -0.1802,  0.1730,
        -0.2416,  0.0665,  0.1143, -0.0388, -0.2467, -0.1767,  0.0139,  0.1638,
        -0.0402,  0.1130, -0.1678, -0.0443, -0.0145, -0.0500,  0.0422, -0.1447,
        -0.0071,  0.0295,  0.1635,  0.1907, -0.1813, -0.1734,  0.0212,  0.0111,
         0.0501, -0.0856, -0.0459,  0.0528, -0.2036,  0.1556,  0.2504,  0.1621,
        -0.0700, -0.1035, -0.0256,  0.1763, -0.0814, -0.0481,  0.0474, -0.0873,
         0.2106,  0.0247, -0.1170,  0.2025,  0.1302, -0.0548,  0.1791,  0.0700,
        -0.1562,  0.1218,  0.0874, -0.0752,  0.0847,  0.0735, -0.0549,  0.2419],
       device='cuda:0') torch.Size([128])
recurrent_blocks.1.bias_hh_l0_reverse tensor([-0.1312,  0.0808, -0.0175,  0.0805, -0.1681,  0.1706,  0.0380,  0.0277,
         0.2170,  0.1528,  0.0028,  0.1844,  0.2326,  0.1519,  0.0228, -0.0548,
        -0.0828,  0.0815,  0.0574, -0.0083, -0.0015,  0.2007, -0.0304,  0.1498,
         0.0659, -0.0053,  0.1292,  0.0046, -0.0675,  0.2163, -0.0545, -0.0480,
        -0.1308,  0.1118, -0.1285,  0.2050,  0.0375, -0.0349,  0.0071,  0.1159,
         0.1711,  0.0233, -0.0131, -0.0793,  0.0964,  0.1018, -0.0163,  0.0914,
         0.2337, -0.0812,  0.0963, -0.0186,  0.0636,  0.1041,  0.1096, -0.1629,
        -0.1078, -0.0095,  0.0397,  0.0316,  0.0293,  0.1871,  0.1312,  0.2175,
        -0.0952, -0.1710, -0.0357, -0.1419, -0.0299,  0.1884, -0.0907,  0.0400,
        -0.0611, -0.1516,  0.1399,  0.2312, -0.0717, -0.0757, -0.1996,  0.1701,
        -0.0691,  0.1457,  0.1326, -0.1397,  0.1186,  0.2167,  0.0866, -0.0971,
        -0.0020,  0.0579,  0.2044,  0.0401, -0.1378, -0.2225,  0.2617,  0.2674,
        -0.1839,  0.0337,  0.0428, -0.0075, -0.1126,  0.1026,  0.2596, -0.0879,
        -0.0212,  0.0608,  0.0659, -0.0192,  0.1908,  0.1536, -0.0852, -0.1388,
         0.1076,  0.1459, -0.1234,  0.1106,  0.1460,  0.1281,  0.1836,  0.1474,
         0.0042,  0.1338,  0.2558,  0.2157,  0.1517, -0.0625, -0.0165, -0.0519],
       device='cuda:0') torch.Size([128])
recurrent_blocks.2.weight_ih_l0 tensor([[-0.1241, -0.1008, -0.0257,  ..., -0.1333,  0.0237, -0.0475],
        [ 0.1571,  0.0963,  0.2705,  ..., -0.0046,  0.1746, -0.1090],
        [-0.1217,  0.0965,  0.0984,  ...,  0.1251,  0.0676,  0.1031],
        ...,
        [-0.1324, -0.0266,  0.2296,  ..., -0.1381, -0.0771, -0.0461],
        [-0.0671,  0.0905, -0.0929,  ..., -0.0245, -0.0537,  0.2208],
        [ 0.1040, -0.1184, -0.0668,  ...,  0.0060,  0.1109,  0.1234]],
       device='cuda:0') torch.Size([128, 64])
recurrent_blocks.2.weight_hh_l0 tensor([[-0.1037, -0.0805, -0.1461,  ..., -0.0263,  0.0042,  0.0810],
        [ 0.1077,  0.0368, -0.1067,  ..., -0.1390, -0.0877,  0.0951],
        [-0.0361, -0.1733, -0.0474,  ...,  0.1895, -0.1772, -0.1257],
        ...,
        [ 0.0257,  0.2348, -0.1510,  ...,  0.1276, -0.0221, -0.0150],
        [ 0.0045, -0.0553, -0.1116,  ..., -0.1563, -0.0739, -0.0200],
        [-0.0611,  0.1012, -0.1570,  ...,  0.0611, -0.1085,  0.1606]],
       device='cuda:0') torch.Size([128, 32])
recurrent_blocks.2.bias_ih_l0 tensor([-0.0449,  0.2071, -0.1068, -0.0866,  0.2015,  0.1276, -0.1240,  0.0933,
         0.0578,  0.0219,  0.0901,  0.1267, -0.0827, -0.0322,  0.0663, -0.0556,
         0.0817,  0.0251,  0.1567, -0.1519,  0.0554, -0.0699, -0.0710, -0.1346,
        -0.0164, -0.0381,  0.2321, -0.1596,  0.0982, -0.0636,  0.0101,  0.0253,
         0.1115,  0.0108, -0.0048, -0.0881, -0.0453,  0.0977,  0.2180, -0.0369,
        -0.0055,  0.1778, -0.0907, -0.0254,  0.2093,  0.1384,  0.0433,  0.0771,
         0.1235,  0.1023,  0.0522, -0.0939, -0.0252, -0.1642,  0.1852, -0.1611,
        -0.0548, -0.0651,  0.2160, -0.0023,  0.0298, -0.0776,  0.2042,  0.1858,
         0.0206,  0.1370, -0.1401,  0.0443, -0.0823,  0.1784, -0.1742,  0.0031,
         0.1914, -0.0988,  0.0582, -0.0254,  0.1752,  0.1294,  0.0152, -0.1014,
         0.1085, -0.0200,  0.1086, -0.1132,  0.1427,  0.0187, -0.1746, -0.0585,
         0.0769, -0.2066, -0.1580,  0.0058,  0.1569, -0.2130,  0.2032,  0.0869,
        -0.1741, -0.0297, -0.1330,  0.0130, -0.0863,  0.0741,  0.2147,  0.0631,
         0.1265,  0.2192, -0.1494,  0.1264,  0.1803,  0.1361, -0.0045,  0.2324,
        -0.0021, -0.0174,  0.2235,  0.0677,  0.1292, -0.0838, -0.0225, -0.2170,
        -0.0124,  0.1252, -0.0660,  0.0360,  0.2358, -0.1215, -0.0451,  0.1673],
       device='cuda:0') torch.Size([128])
recurrent_blocks.2.bias_hh_l0 tensor([-0.2045,  0.2183, -0.1542,  0.0229, -0.0352,  0.1467,  0.0797,  0.1048,
        -0.1137, -0.0689,  0.1198, -0.0769,  0.1211, -0.1059, -0.0216, -0.0028,
         0.2180,  0.1576,  0.1211, -0.1137, -0.0650, -0.0085, -0.0753,  0.0574,
         0.1903, -0.0205,  0.0910, -0.1639,  0.0996, -0.0235, -0.0271,  0.0808,
        -0.0777,  0.1565,  0.0436,  0.0149,  0.0429,  0.0881,  0.1968,  0.1236,
        -0.1359,  0.1844, -0.1549, -0.0524, -0.0418,  0.1317,  0.0861,  0.0457,
         0.0027,  0.1585,  0.1398, -0.0471, -0.0740, -0.2348,  0.1245, -0.1190,
         0.1664, -0.0966,  0.1230, -0.0987,  0.2255,  0.0723, -0.0120, -0.0411,
         0.1415,  0.0675,  0.0021, -0.0346, -0.1323, -0.0061,  0.0124, -0.1765,
         0.1475, -0.0698, -0.1048,  0.1822,  0.1707, -0.0061, -0.0228, -0.1708,
         0.1429, -0.1898,  0.1596,  0.0625,  0.1487, -0.0407,  0.0423, -0.1199,
        -0.1682, -0.0614, -0.1849,  0.1563,  0.2263, -0.1855, -0.0053,  0.0712,
         0.1038,  0.1079, -0.1405, -0.0995, -0.0654,  0.1297,  0.1812,  0.0988,
        -0.1850,  0.0754,  0.0867, -0.0894,  0.2671,  0.0785,  0.1722,  0.1894,
        -0.0202,  0.0985,  0.0337,  0.1107, -0.0957, -0.0184,  0.2010, -0.0539,
         0.0459,  0.2423, -0.0503, -0.1939,  0.2741,  0.1824,  0.2293,  0.1667],
       device='cuda:0') torch.Size([128])
recurrent_blocks.2.weight_ih_l0_reverse tensor([[-0.0487, -0.0814,  0.1621,  ...,  0.0973, -0.0017,  0.0040],
        [ 0.1272,  0.1558,  0.1725,  ..., -0.1736, -0.0319,  0.0370],
        [ 0.1964,  0.1717,  0.1178,  ...,  0.0661,  0.1472, -0.0946],
        ...,
        [-0.1549, -0.1455, -0.2029,  ...,  0.1384,  0.0248,  0.0276],
        [-0.0463,  0.0424,  0.1433,  ..., -0.2139,  0.1421,  0.0367],
        [-0.0827,  0.0862,  0.1181,  ..., -0.0232,  0.0746,  0.2105]],
       device='cuda:0') torch.Size([128, 64])
recurrent_blocks.2.weight_hh_l0_reverse tensor([[ 0.1428, -0.0383, -0.0174,  ..., -0.1633, -0.1795,  0.0366],
        [-0.0437, -0.0131,  0.1074,  ..., -0.1176,  0.0394,  0.0689],
        [ 0.0125,  0.0285,  0.0225,  ..., -0.1391,  0.1709,  0.1796],
        ...,
        [-0.0493, -0.0259, -0.0281,  ..., -0.1930,  0.0275,  0.0928],
        [ 0.2260, -0.0497,  0.2003,  ...,  0.0727,  0.2069,  0.0301],
        [ 0.0421,  0.1219,  0.1960,  ..., -0.0292,  0.1992,  0.0116]],
       device='cuda:0') torch.Size([128, 32])
recurrent_blocks.2.bias_ih_l0_reverse tensor([-0.2067, -0.1302,  0.0099, -0.0836,  0.0997,  0.0729,  0.0320,  0.1225,
         0.1322,  0.0247,  0.0791,  0.0547, -0.0483,  0.0995, -0.0630,  0.0320,
         0.0648,  0.2478,  0.0042,  0.0117, -0.0506,  0.1381,  0.1347, -0.0683,
        -0.1170, -0.1320,  0.1284, -0.0646, -0.0919, -0.0676, -0.0335,  0.0432,
         0.0573,  0.1028,  0.0116,  0.0770, -0.2181,  0.1846,  0.0728,  0.1690,
         0.2081,  0.0916,  0.1918, -0.0061, -0.0474,  0.1830,  0.0255,  0.1182,
         0.2378, -0.0521, -0.0352,  0.0320, -0.0971,  0.0404,  0.2206,  0.0559,
        -0.0777, -0.1047, -0.0216,  0.0047, -0.0140,  0.1431,  0.1335,  0.0575,
        -0.0944, -0.0099,  0.1663, -0.1437, -0.0546,  0.2469, -0.1842, -0.0456,
        -0.1115, -0.1136,  0.1387, -0.0218, -0.0884,  0.1098, -0.1050,  0.2126,
        -0.2236,  0.1526, -0.1678, -0.0860, -0.2021,  0.0968,  0.1551,  0.0471,
         0.0441,  0.0749,  0.0852,  0.2158,  0.0320,  0.0542,  0.0882,  0.1813,
         0.1002,  0.0076,  0.0618,  0.1432,  0.1362,  0.1740, -0.0660,  0.1410,
         0.0111, -0.0345, -0.1126,  0.2320,  0.1894,  0.1209,  0.1405, -0.0726,
         0.1910,  0.2511, -0.0502,  0.2365,  0.0559,  0.2496,  0.0631,  0.0046,
        -0.1802,  0.0222,  0.0222,  0.2203, -0.0242,  0.1296,  0.1146,  0.0802],
       device='cuda:0') torch.Size([128])
recurrent_blocks.2.bias_hh_l0_reverse tensor([ 0.1146,  0.0345, -0.0410,  0.1099,  0.0619,  0.2293,  0.1190,  0.0958,
         0.1169,  0.1105,  0.1147, -0.1000,  0.0617, -0.0558, -0.1401,  0.0311,
         0.0282,  0.1488,  0.0781,  0.1154, -0.1049,  0.1111,  0.2153, -0.2157,
        -0.2407,  0.1776,  0.1974,  0.2120,  0.1124,  0.1270,  0.1526,  0.0721,
         0.0714,  0.0650,  0.1821,  0.1632, -0.0633,  0.0370, -0.0040, -0.0241,
         0.0173, -0.0205,  0.1416,  0.0519, -0.0230, -0.0533, -0.1244, -0.0438,
         0.2347,  0.2123, -0.0531,  0.0518, -0.0096,  0.2507,  0.1741,  0.1204,
        -0.0435, -0.0096,  0.2152, -0.0313,  0.1379, -0.0574,  0.2311,  0.2608,
         0.0818, -0.0677,  0.2218, -0.1599, -0.0535,  0.0221, -0.1697,  0.2196,
        -0.2031, -0.0196, -0.0595,  0.2185, -0.0713,  0.0057, -0.0396,  0.2191,
        -0.0298,  0.1256, -0.1338, -0.1657, -0.1501,  0.0790,  0.2141,  0.0866,
         0.0870, -0.1737, -0.0177,  0.1646, -0.1011,  0.1469,  0.1593,  0.1769,
        -0.0874,  0.1413, -0.0843, -0.1252,  0.1313, -0.0109,  0.0234,  0.1270,
         0.0414, -0.0564,  0.0788,  0.2650,  0.2558,  0.1838,  0.1417, -0.0564,
        -0.0668,  0.2377,  0.1001,  0.1204, -0.1006, -0.0422,  0.0562,  0.0773,
         0.0425, -0.0075, -0.0884, -0.0584,  0.1022, -0.1481, -0.0505,  0.0701],
       device='cuda:0') torch.Size([128])
recurrent_blocks.3.weight_ih_l0 tensor([[-0.0602,  0.1877, -0.1651,  ..., -0.1205, -0.0423,  0.1394],
        [ 0.0519,  0.1146, -0.1592,  ..., -0.1253,  0.1335,  0.0996],
        [ 0.0259,  0.0537,  0.0240,  ..., -0.1036,  0.1619,  0.1456],
        ...,
        [ 0.0879, -0.0731,  0.1456,  ..., -0.1908, -0.0254,  0.2162],
        [ 0.1016, -0.1454, -0.1560,  ...,  0.1014, -0.0314,  0.1791],
        [-0.0381, -0.1445, -0.0020,  ..., -0.0697, -0.0764, -0.0888]],
       device='cuda:0') torch.Size([128, 64])
recurrent_blocks.3.weight_hh_l0 tensor([[ 0.0122,  0.1595, -0.0925,  ..., -0.0747,  0.1229,  0.1783],
        [ 0.1359,  0.0290, -0.0714,  ..., -0.0817, -0.0580, -0.0609],
        [ 0.0124,  0.0033, -0.0925,  ..., -0.2145, -0.0149,  0.1469],
        ...,
        [-0.0574,  0.1046,  0.1340,  ..., -0.2005,  0.0193,  0.0383],
        [ 0.1441, -0.1000, -0.0935,  ..., -0.2139,  0.0878, -0.1230],
        [-0.1176, -0.0274,  0.1597,  ..., -0.0011, -0.0406,  0.1942]],
       device='cuda:0') torch.Size([128, 32])
recurrent_blocks.3.bias_ih_l0 tensor([ 0.0535,  0.0152,  0.1046, -0.2296, -0.0506,  0.2270,  0.2098, -0.0985,
         0.1509, -0.0565, -0.0034, -0.0739,  0.1521, -0.0224,  0.0685, -0.1469,
         0.1726,  0.1071,  0.1609, -0.0614, -0.0226,  0.2161,  0.0842, -0.1145,
         0.0108, -0.0718,  0.0296,  0.1187,  0.0054, -0.1123, -0.0530, -0.0916,
         0.0667, -0.0530,  0.1353, -0.0807,  0.0624,  0.0661,  0.0083, -0.2144,
        -0.0914, -0.0307,  0.1004,  0.1803,  0.2486, -0.0723, -0.0410,  0.0379,
        -0.0759, -0.0719,  0.1766,  0.1168,  0.1183,  0.1651,  0.0203,  0.1741,
         0.1778,  0.1627,  0.2132, -0.1765,  0.0011,  0.1059, -0.0605,  0.0091,
         0.1782,  0.0286,  0.1143, -0.0168,  0.1220,  0.1632, -0.2176,  0.0638,
        -0.0981, -0.0403, -0.0323, -0.0415,  0.2303, -0.0288, -0.0985, -0.0367,
         0.2113,  0.0730,  0.0626, -0.1123, -0.0109, -0.1260, -0.1185, -0.0633,
        -0.2054, -0.2053, -0.0097,  0.0927,  0.1874,  0.1084,  0.1174, -0.0736,
         0.0904,  0.0708, -0.1003,  0.0382, -0.0364,  0.0059,  0.0313, -0.0435,
        -0.0639,  0.0741, -0.1560, -0.0404,  0.0834,  0.0547, -0.1816,  0.0172,
        -0.1133,  0.0676,  0.0809,  0.0775,  0.2107,  0.1891,  0.1521,  0.1755,
         0.1678,  0.2383,  0.0861,  0.1217, -0.0945,  0.1765,  0.1254, -0.0308],
       device='cuda:0') torch.Size([128])
recurrent_blocks.3.bias_hh_l0 tensor([-0.0938,  0.0959,  0.1573,  0.0809,  0.0649, -0.0184,  0.2040,  0.0262,
         0.1224,  0.1434,  0.0652,  0.1412, -0.0716,  0.0041,  0.1182,  0.1237,
         0.1401,  0.1215,  0.0838,  0.0714,  0.1170, -0.0331,  0.1143, -0.1350,
        -0.0269,  0.0493,  0.2070, -0.1206,  0.1318, -0.0958,  0.1276, -0.0492,
        -0.1157, -0.0746,  0.1392, -0.2205, -0.0248,  0.2323,  0.2472, -0.2252,
         0.2242,  0.1401, -0.1413,  0.0643, -0.0833,  0.1043, -0.0318,  0.0444,
         0.2088,  0.0254,  0.1018, -0.2000,  0.0481, -0.0045, -0.0606,  0.1992,
         0.1242,  0.0267, -0.0781,  0.0858, -0.0312,  0.1296,  0.1657, -0.0825,
         0.0167, -0.0232,  0.0107,  0.0095, -0.1186,  0.0701,  0.0043,  0.0145,
        -0.2068, -0.2104, -0.0604,  0.1672,  0.0940,  0.0150, -0.0858,  0.0350,
         0.2216, -0.0635,  0.0154,  0.1410,  0.0066, -0.1278,  0.0108,  0.0621,
        -0.1174, -0.0882, -0.1526,  0.0034,  0.1925, -0.1850,  0.1257, -0.1357,
         0.2011,  0.2320, -0.1357,  0.0945, -0.1068,  0.0764,  0.2259, -0.2017,
         0.1104,  0.1905, -0.0704, -0.0076, -0.0803, -0.0407,  0.0660, -0.1957,
        -0.0691,  0.0250,  0.2594, -0.1083,  0.2336,  0.2250, -0.0536, -0.0029,
         0.0983,  0.2357, -0.0293,  0.0013, -0.0549,  0.1555, -0.0548, -0.1110],
       device='cuda:0') torch.Size([128])
recurrent_blocks.3.weight_ih_l0_reverse tensor([[ 0.1823, -0.0010,  0.0542,  ...,  0.0813,  0.1817,  0.0125],
        [ 0.0359,  0.0311, -0.1152,  ..., -0.0154, -0.1073, -0.0350],
        [ 0.1736, -0.0438, -0.1407,  ..., -0.0118,  0.0518,  0.0038],
        ...,
        [ 0.1031,  0.0963,  0.0262,  ...,  0.0358, -0.0252,  0.0082],
        [-0.0963,  0.1562, -0.2163,  ..., -0.1365,  0.0873, -0.0620],
        [-0.0957,  0.0191, -0.1776,  ..., -0.0352,  0.1032, -0.0190]],
       device='cuda:0') torch.Size([128, 64])
recurrent_blocks.3.weight_hh_l0_reverse tensor([[ 0.1087,  0.1017,  0.0625,  ...,  0.2417, -0.1248, -0.0740],
        [-0.1152, -0.1293,  0.1058,  ...,  0.0527, -0.0241,  0.0200],
        [-0.0605,  0.1349,  0.0492,  ...,  0.0948,  0.1779,  0.0107],
        ...,
        [ 0.0191, -0.0109, -0.0120,  ..., -0.1007,  0.2207,  0.1800],
        [-0.0786,  0.0557,  0.0506,  ...,  0.0435,  0.0651,  0.2396],
        [-0.0870, -0.1126, -0.0336,  ...,  0.1099,  0.0436,  0.0324]],
       device='cuda:0') torch.Size([128, 32])
recurrent_blocks.3.bias_ih_l0_reverse tensor([ 2.2034e-04,  1.7238e-01,  1.5843e-01, -6.7785e-02,  1.9407e-01,
         9.2473e-02,  1.8660e-01,  1.1704e-02,  1.4234e-01, -2.7665e-02,
        -3.4205e-02, -2.6726e-02,  1.4478e-01,  1.2681e-01, -3.6444e-02,
         1.2734e-01,  7.4582e-02, -9.5011e-02, -1.0298e-02,  1.4703e-01,
         7.7926e-02,  6.3117e-02,  1.0866e-02, -3.3843e-02, -1.2722e-02,
        -8.3345e-02,  3.1336e-02,  2.4734e-01, -1.0622e-01,  3.2383e-02,
         2.4462e-02,  2.5746e-02,  7.5411e-02,  6.8303e-02,  2.2928e-01,
        -6.6657e-02, -1.1761e-03, -5.6757e-02,  5.1939e-02, -2.1780e-01,
        -1.1012e-01, -1.1153e-02,  2.5117e-03,  1.6104e-01, -8.9053e-02,
         1.9893e-01, -1.6560e-01,  9.8650e-03, -3.1218e-02,  1.6421e-01,
        -1.0424e-01,  1.3439e-01,  1.2536e-01,  7.6871e-02, -7.3901e-02,
         1.2297e-01,  7.3545e-02,  2.7274e-03, -5.7999e-02,  1.6672e-01,
         5.0808e-02,  4.6365e-02, -9.4119e-02, -8.1865e-02, -1.6930e-01,
        -2.2857e-01,  2.3941e-01, -3.3014e-02, -1.7461e-01, -4.9379e-02,
        -1.2104e-01,  7.4941e-03,  1.1865e-01, -2.8102e-02, -6.8507e-02,
         5.2988e-02, -1.1671e-01, -1.8008e-01,  3.3417e-02, -1.2467e-01,
        -1.2468e-01,  2.6093e-01,  8.6494e-02, -3.2067e-02,  1.5727e-01,
        -6.8890e-02,  1.8755e-01, -1.8010e-01,  2.6983e-02, -3.6276e-02,
        -1.1968e-01,  1.8635e-01,  1.1303e-01,  6.9966e-02, -7.5591e-02,
        -4.3856e-02,  1.1581e-01, -5.7172e-02,  4.8949e-02, -8.8211e-02,
         2.2602e-01, -9.3711e-02,  1.0049e-01, -1.9976e-01, -2.1846e-02,
         1.1416e-01,  1.8144e-01,  1.4236e-01, -3.9069e-02,  1.6914e-01,
         8.4564e-03, -5.1834e-02, -1.4073e-01, -9.9120e-03,  1.2351e-01,
        -9.5141e-02,  7.1043e-03,  1.4483e-01,  7.0052e-02, -2.4074e-02,
        -8.2662e-02, -2.2356e-02, -1.3492e-01,  1.9099e-01,  1.6891e-01,
        -2.3058e-01,  8.8378e-02, -4.6671e-02], device='cuda:0') torch.Size([128])
recurrent_blocks.3.bias_hh_l0_reverse tensor([-0.0083, -0.0618,  0.0077, -0.0281,  0.0217, -0.1005,  0.2035,  0.0670,
         0.1672, -0.1719,  0.0880,  0.0360, -0.0048, -0.0418,  0.0151, -0.0287,
         0.2109, -0.0422,  0.0936,  0.1570,  0.1734,  0.1541,  0.1739, -0.0759,
        -0.0767,  0.1459, -0.0312,  0.0095, -0.0589, -0.0831,  0.1030,  0.1500,
        -0.1101, -0.1175,  0.2322,  0.0141,  0.0260,  0.0413,  0.1489, -0.0878,
         0.0634,  0.1281,  0.0581,  0.1843,  0.1353, -0.0743, -0.0601, -0.0378,
         0.0176, -0.0411, -0.1722,  0.1432, -0.0456,  0.1694, -0.0860,  0.1044,
        -0.2373,  0.0550, -0.0869,  0.1747,  0.0164,  0.0708,  0.0805,  0.0085,
         0.1150,  0.0239, -0.0858,  0.0843, -0.2389,  0.0153, -0.2187,  0.2305,
        -0.0949,  0.0755,  0.2410, -0.0511,  0.0782, -0.2174, -0.1684, -0.0130,
         0.0527,  0.0573,  0.0785, -0.0524,  0.1684, -0.0796, -0.0703,  0.0824,
         0.0672, -0.1806,  0.1620,  0.0404, -0.1995,  0.0784, -0.0538, -0.0434,
        -0.0228,  0.1066, -0.0407, -0.1257, -0.0869,  0.1819,  0.1739, -0.0287,
         0.0034, -0.0249, -0.0635, -0.0944,  0.0399,  0.0419,  0.0519,  0.0085,
         0.1793,  0.1424, -0.0999,  0.1660,  0.1714,  0.1517,  0.1535, -0.0840,
         0.0744,  0.0287, -0.1070,  0.2065,  0.1986,  0.0054,  0.0594, -0.1151],
       device='cuda:0') torch.Size([128])
fc_blocks.0.0.weight tensor([[ 0.0413,  0.0221, -0.0706,  ..., -0.0684, -0.0538, -0.0444],
        [ 0.0636,  0.0919, -0.0047,  ...,  0.0247, -0.0156,  0.0356],
        [ 0.1210,  0.1295,  0.0471,  ..., -0.1662,  0.1615,  0.1346],
        ...,
        [-0.0991,  0.0519,  0.0805,  ...,  0.1671,  0.0046,  0.0801],
        [-0.1976, -0.0723, -0.1332,  ...,  0.0695, -0.0116, -0.1811],
        [ 0.1187,  0.1840, -0.0115,  ...,  0.0128,  0.2013,  0.1300]],
       device='cuda:0') torch.Size([32, 64])
fc_blocks.0.0.bias tensor([ 0.0462,  0.1538,  0.1912, -0.1569, -0.1669, -0.0113, -0.0391,  0.1629,
        -0.0576,  0.0021, -0.0736, -0.0598, -0.1686, -0.0390, -0.1386,  0.0764,
         0.0995,  0.1052, -0.0366, -0.0625,  0.0394, -0.0491, -0.0086, -0.1777,
         0.2044, -0.0779, -0.0058,  0.0680, -0.0299, -0.0543,  0.0240,  0.0505],
       device='cuda:0') torch.Size([32])
fc_blocks.1.0.weight tensor([[-0.1163,  0.0207,  0.0155,  0.1954,  0.1954,  0.0258, -0.1064, -0.1075,
          0.0902,  0.0748,  0.1185, -0.0695, -0.0870, -0.1169, -0.0722, -0.1637,
         -0.2085,  0.0616, -0.1668, -0.1246, -0.0120,  0.1239, -0.0076,  0.0649,
          0.0097,  0.0882,  0.1253,  0.0538, -0.0549, -0.0099, -0.1008, -0.0654],
        [ 0.0312,  0.2140,  0.1687,  0.0341, -0.1094,  0.0809, -0.0568,  0.1371,
         -0.0585, -0.1961, -0.1313, -0.1349, -0.0144, -0.0228, -0.1354,  0.0084,
          0.0306,  0.1906, -0.0297, -0.1571, -0.0921, -0.2037,  0.2490, -0.1828,
         -0.0299,  0.0483,  0.0949, -0.2077, -0.0098,  0.0566, -0.2056,  0.2091],
        [ 0.0872, -0.2185, -0.0675, -0.1234, -0.1042, -0.0225, -0.1109, -0.1161,
          0.0117,  0.1184,  0.0421, -0.1056,  0.0072,  0.1234, -0.0641, -0.1978,
         -0.0881,  0.0920,  0.1276, -0.1130,  0.0054,  0.0838,  0.0066,  0.1080,
         -0.0053,  0.0366,  0.0004, -0.1754, -0.1948,  0.0075,  0.0994, -0.1135],
        [ 0.2204,  0.1409,  0.1380, -0.0524, -0.0841,  0.0072,  0.2336,  0.2041,
         -0.0406,  0.0126,  0.0611, -0.0954, -0.1704,  0.0411, -0.1790,  0.2129,
          0.2528,  0.1561, -0.0606,  0.1332, -0.1100,  0.0887,  0.1604,  0.0357,
          0.1215,  0.1274,  0.1121,  0.0484, -0.0322, -0.1259, -0.0888,  0.2019],
        [-0.0457,  0.0436,  0.0990, -0.1561, -0.2200, -0.1232, -0.0344, -0.0222,
         -0.0835,  0.0726,  0.0883,  0.0194, -0.0710,  0.1345, -0.2280,  0.2496,
          0.0734, -0.0851, -0.1533, -0.1260,  0.0067,  0.0028, -0.0424,  0.0012,
          0.0988,  0.0811, -0.1565, -0.0068,  0.1579, -0.0131,  0.0185,  0.1723],
        [-0.0081,  0.0432,  0.1319,  0.0627,  0.0785,  0.0010,  0.1689, -0.0657,
          0.1599,  0.0274,  0.1956,  0.0690, -0.1671,  0.0145,  0.1986,  0.1057,
          0.0915, -0.0857,  0.0179, -0.0096,  0.1402,  0.0490, -0.0742,  0.0190,
          0.0092, -0.0442, -0.1140, -0.0131,  0.1273,  0.1498, -0.0112, -0.1077],
        [-0.1522, -0.2235, -0.0502,  0.0827,  0.0995,  0.0848, -0.1226, -0.0097,
          0.1208, -0.1633, -0.0505, -0.0890, -0.1302, -0.0636,  0.1099, -0.0393,
         -0.1534,  0.0716,  0.1572,  0.0977,  0.0976, -0.0791,  0.0856,  0.0008,
         -0.0772, -0.0009,  0.1126, -0.0491,  0.1955, -0.1103,  0.0691,  0.0536],
        [ 0.1258, -0.1720, -0.1168,  0.1403, -0.0270,  0.0148,  0.0126, -0.0351,
          0.0534,  0.0799,  0.2095,  0.1158, -0.0520,  0.1641, -0.0089,  0.0043,
          0.0420,  0.1052, -0.0610,  0.0748,  0.2433,  0.0800, -0.0508,  0.2524,
          0.0394, -0.0745,  0.1163,  0.1873, -0.1443,  0.1571,  0.1430, -0.0876],
        [-0.1659, -0.0824,  0.0887, -0.0411,  0.2017,  0.1162,  0.0347, -0.0835,
          0.0356,  0.0524,  0.1124,  0.1301,  0.1846, -0.0113,  0.1613,  0.0152,
         -0.0588,  0.0107, -0.0747, -0.0405,  0.1047,  0.1044, -0.1973,  0.1087,
          0.1133, -0.0244,  0.1242,  0.0708,  0.1012,  0.1429, -0.0611,  0.0299],
        [-0.1061,  0.0288, -0.1554,  0.2126,  0.2194,  0.1357, -0.2085, -0.1228,
          0.0271, -0.0325,  0.0615, -0.0075,  0.0883, -0.0975,  0.1046, -0.0918,
          0.0631, -0.1823,  0.0307,  0.0058,  0.0034, -0.0980, -0.0045, -0.1018,
         -0.2000, -0.0181,  0.0690, -0.0131,  0.1283, -0.0725,  0.1793, -0.0150],
        [-0.0369, -0.0034,  0.1576, -0.2402,  0.0307,  0.0269, -0.0941,  0.2157,
          0.2029, -0.0282,  0.0993, -0.1562, -0.1759,  0.1244, -0.1721,  0.1792,
          0.2760,  0.1729,  0.0562,  0.1326,  0.1786, -0.0955,  0.0624, -0.1013,
          0.2348,  0.1024, -0.1214, -0.1340,  0.0064, -0.0909, -0.2417,  0.1244],
        [ 0.1499,  0.0716,  0.0688, -0.1010,  0.0166, -0.1467,  0.1419,  0.2231,
          0.1591,  0.1580,  0.0785, -0.0297, -0.0372,  0.0542, -0.0658, -0.1113,
         -0.0662,  0.1256,  0.0950, -0.0473,  0.1179,  0.0746,  0.2265, -0.0152,
          0.0037,  0.1988,  0.0586,  0.1771, -0.1538, -0.1633,  0.1452,  0.1685],
        [-0.0864,  0.1615, -0.0705,  0.1665, -0.1116,  0.1306,  0.0660,  0.1193,
          0.1295, -0.0752, -0.0819, -0.1010,  0.1463,  0.0787,  0.1696, -0.0659,
         -0.0836,  0.1397, -0.0917, -0.1424,  0.0909,  0.1079, -0.1398, -0.0864,
          0.0755, -0.0192,  0.1681, -0.0686,  0.0702,  0.1500,  0.0407,  0.1419],
        [-0.1067,  0.0594,  0.0653, -0.1294,  0.0298,  0.0696, -0.1747,  0.0080,
         -0.0921, -0.1456,  0.1061, -0.0202,  0.1711,  0.0597,  0.1933, -0.2475,
         -0.2294,  0.0875, -0.0125, -0.0025,  0.0536, -0.1165, -0.1081,  0.0695,
         -0.0606,  0.0687,  0.0494, -0.0370, -0.0278,  0.0784, -0.0468, -0.1751],
        [-0.1329, -0.1834, -0.0791,  0.0815,  0.0698, -0.0638,  0.1101, -0.0314,
         -0.0224, -0.2140, -0.1551, -0.1943,  0.0312, -0.0693, -0.0325, -0.0306,
          0.0553, -0.0915,  0.0597,  0.0851,  0.0080, -0.0503, -0.1409, -0.1874,
         -0.1415, -0.0676, -0.0722,  0.0175, -0.0535, -0.0536,  0.0253, -0.1278],
        [-0.2411, -0.0982, -0.2340,  0.0569,  0.1990,  0.0388,  0.0306,  0.1005,
          0.1024, -0.0083, -0.1540,  0.2043,  0.1539, -0.0495,  0.0240,  0.0547,
          0.1087,  0.0732,  0.1368,  0.1098, -0.0846,  0.1918,  0.0681, -0.0061,
         -0.1845,  0.1592,  0.0873,  0.0574, -0.0740, -0.0805,  0.1863, -0.1423]],
       device='cuda:0') torch.Size([16, 32])
fc_blocks.1.0.bias tensor([ 0.0839,  0.1497, -0.1255,  0.2200,  0.0416,  0.0417, -0.0870, -0.1309,
        -0.1158, -0.0075,  0.0878,  0.2151,  0.0121, -0.0041,  0.0374, -0.1821],
       device='cuda:0') torch.Size([16])
fc_blocks.2.0.weight tensor([[-0.0322,  0.1932, -0.1785,  0.1904,  0.1362,  0.0726, -0.0219,  0.0974,
         -0.0570, -0.0256,  0.2277,  0.1577,  0.1103, -0.0817, -0.1493, -0.1945],
        [-0.1802,  0.1837, -0.0626, -0.1025, -0.0692, -0.0522, -0.0203,  0.0280,
          0.1494, -0.1517,  0.0095, -0.1117, -0.0825, -0.1769, -0.0987, -0.2316],
        [ 0.0534, -0.0087,  0.1337, -0.0185,  0.2750,  0.0286, -0.1265,  0.3166,
         -0.2807, -0.0294, -0.1366, -0.0420,  0.0872, -0.0474, -0.0507,  0.0895],
        [ 0.0667, -0.1609,  0.1490, -0.1866, -0.1721,  0.0818, -0.2637,  0.1545,
         -0.0603,  0.0105,  0.0070, -0.1050,  0.1954,  0.1284,  0.1490,  0.2053],
        [-0.2859, -0.2785,  0.0898, -0.0025,  0.0620,  0.3102,  0.1286, -0.3051,
          0.0501,  0.1422, -0.0910,  0.1414, -0.0896, -0.0885,  0.1212, -0.2434],
        [ 0.0336,  0.0951,  0.2203,  0.0233, -0.0157,  0.0781, -0.0047, -0.1051,
          0.1921, -0.2240,  0.1591,  0.1447, -0.1112, -0.1591,  0.1926,  0.0868],
        [ 0.0506,  0.0587, -0.3056,  0.0483,  0.1944, -0.0291,  0.0199, -0.0680,
          0.0913, -0.2406,  0.2042, -0.0879, -0.1179, -0.2033,  0.1180, -0.2778],
        [-0.2780, -0.2524, -0.2212,  0.0301, -0.0185,  0.3153, -0.1995,  0.0122,
          0.0644,  0.1600,  0.0773,  0.1180, -0.2528, -0.0186, -0.1325, -0.0266]],
       device='cuda:0') torch.Size([8, 16])
fc_blocks.2.0.bias tensor([ 0.3155,  0.0147, -0.2160, -0.1489, -0.3129, -0.0313, -0.0760, -0.1698],
       device='cuda:0') torch.Size([8])
fc_blocks.3.0.weight tensor([[ 0.2576,  0.2401,  0.0838, -0.0207, -0.1892,  0.1925,  0.0899, -0.2186],
        [-0.1999,  0.0376,  0.2690, -0.0581,  0.2262,  0.1240,  0.2611,  0.1406],
        [ 0.1702, -0.0244, -0.0510, -0.2043, -0.1601,  0.1433,  0.0387, -0.0920],
        [ 0.0720,  0.3445, -0.0514,  0.3154,  0.1744,  0.0532,  0.2763,  0.2438]],
       device='cuda:0') torch.Size([4, 8])
fc_blocks.3.0.bias tensor([ 0.3029, -0.0072,  0.4399, -0.3896], device='cuda:0') torch.Size([4])
fc_blocks.4.0.weight tensor([[-0.1835,  0.0500,  0.2634, -0.5612],
        [ 0.5278, -0.1959,  0.0948, -0.5169]], device='cuda:0') torch.Size([2, 4])
fc_blocks.4.0.bias tensor([-0.2760, -0.3779], device='cuda:0') torch.Size([2])
Train Loss : 135.899, Val Loss : 130.720
======> Trajectory Loss : 65.603, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.703, BelowGroundPenalize Loss : 0.002
===> [Minibatch 15/129].........recurrent_blocks.0.weight_ih_l0 tensor([[ 1.7530e-01,  6.3752e-02, -1.3369e-01],
        [-1.0132e-01, -7.3911e-02,  2.2758e-01],
        [ 6.9126e-02,  7.8173e-02,  1.2821e-01],
        [ 2.9337e-02, -1.2507e-01,  9.6625e-02],
        [-5.3055e-02, -9.4067e-02, -5.7475e-02],
        [-1.2908e-03, -1.8739e-01,  1.9263e-01],
        [-4.9992e-02, -2.0687e-01,  1.9949e-01],
        [ 1.4299e-01,  1.7336e-01, -3.2048e-02],
        [-1.2390e-01, -1.5727e-01,  5.9791e-03],
        [ 1.4839e-01,  5.4555e-02,  1.5852e-01],
        [-1.2193e-01, -2.3947e-01,  1.0303e-01],
        [-1.0089e-02,  9.3543e-02,  9.9681e-03],
        [-1.0074e-01,  1.8992e-01,  1.9150e-02],
        [-1.1837e-01, -1.2567e-01,  1.3119e-01],
        [-1.6747e-01,  2.1488e-02, -2.5236e-02],
        [-9.1248e-02, -4.2228e-02,  2.5462e-01],
        [ 4.3379e-02, -1.9025e-01, -5.7683e-02],
        [ 1.1840e-01,  1.0431e-01,  2.6775e-02],
        [-6.2766e-02, -3.6633e-02, -5.3962e-03],
        [-2.3252e-01, -2.3532e-01,  1.1713e-02],
        [-9.0165e-02,  2.7910e-02,  2.1139e-01],
        [ 8.3835e-02,  1.6159e-03,  2.6110e-01],
        [ 2.4496e-02, -1.2553e-01, -8.2989e-02],
        [ 4.4723e-02, -1.8741e-01,  1.5496e-02],
        [-1.3205e-01, -2.0310e-01,  8.7119e-02],
        [-1.9357e-01, -1.8840e-01, -2.6462e-02],
        [-1.1384e-01,  1.6892e-01,  1.2753e-01],
        [ 8.3397e-02, -2.4417e-01, -1.5220e-01],
        [ 7.0052e-02, -1.2497e-01,  1.4863e-01],
        [-1.7960e-01, -8.9184e-02,  1.9182e-01],
        [ 6.9061e-02, -1.1518e-01, -1.0748e-01],
        [-1.7461e-02, -3.9145e-02,  1.2677e-02],
        [-1.1230e-01,  9.6683e-02, -2.0621e-01],
        [ 2.6853e-02, -1.5148e-02,  4.6943e-02],
        [-1.1681e-03,  1.7141e-01,  9.5560e-02],
        [ 2.1963e-01,  7.7387e-02, -2.5501e-02],
        [-1.5069e-01, -9.5706e-03,  9.8519e-02],
        [-5.9027e-02, -1.8259e-01, -1.0521e-01],
        [-6.3212e-02, -2.1398e-01,  1.0207e-01],
        [ 1.6449e-01,  1.3258e-01,  1.7154e-01],
        [ 1.8766e-01, -1.1121e-01, -1.4839e-02],
        [ 7.3815e-02,  8.3537e-02, -6.5057e-02],
        [-1.2224e-01,  5.3577e-02,  1.4425e-01],
        [ 2.1520e-01,  7.6717e-02,  2.6900e-01],
        [-1.0049e-01,  1.7729e-02, -2.0406e-01],
        [ 4.1848e-04, -8.3126e-02, -1.3940e-01],
        [-1.1101e-01, -7.8100e-02,  1.7076e-01],
        [-1.2201e-01, -3.2831e-02,  2.9438e-03],
        [ 6.4854e-02, -1.3434e-01,  5.1089e-02],
        [ 2.0605e-02, -2.0207e-01,  1.3137e-01],
        [-2.2901e-01,  1.1131e-01,  7.6731e-02],
        [-6.3251e-02, -2.1119e-01,  2.2545e-02],
        [-2.0043e-01, -9.5325e-02,  2.4091e-01],
        [ 9.3633e-02, -5.4420e-02,  1.3683e-01],
        [-7.5436e-02, -2.0346e-01,  2.0361e-01],
        [ 1.9792e-01,  5.7600e-02,  2.3199e-01],
        [-2.2504e-01, -6.7347e-02, -7.5119e-02],
        [ 4.9264e-02, -2.0705e-01, -9.1641e-02],
        [ 1.0328e-02,  1.7176e-01, -1.5590e-02],
        [-3.8302e-02, -1.2168e-01,  1.4924e-01],
        [ 1.7618e-01,  8.9077e-03,  2.5365e-01],
        [-2.2269e-01, -1.3468e-01,  1.1258e-02],
        [-6.2558e-02,  2.6178e-02, -5.0616e-02],
        [-6.0045e-02, -2.4020e-01,  1.1427e-02],
        [ 3.4302e-02,  5.0492e-02,  3.3485e-03],
        [-1.3718e-01,  3.6887e-02, -1.8382e-02],
        [-6.5106e-02, -1.5830e-01, -2.1758e-01],
        [ 6.6220e-02,  6.4345e-02,  2.4449e-02],
        [-1.3203e-01, -2.1835e-01,  1.4525e-02],
        [-2.8604e-02, -2.3978e-01,  1.7346e-01],
        [-7.8707e-03,  5.8157e-02, -1.4231e-01],
        [ 1.3288e-01,  1.4078e-02,  5.7633e-02],
        [-1.9843e-01,  2.0581e-01,  1.1878e-01],
        [-5.6210e-02, -7.3201e-02, -6.4127e-02],
        [-7.6727e-02, -1.7359e-01, -6.1128e-02],
        [ 7.0608e-02,  1.7939e-02,  1.2305e-01],
        [ 7.9138e-02,  1.0458e-01, -1.6884e-01],
        [-1.7772e-01,  1.9103e-01,  5.0821e-02],
        [-1.0730e-01,  2.3486e-02,  3.5317e-02],
        [-1.5336e-02,  1.6307e-01, -2.0332e-01],
        [-1.9460e-02, -7.1957e-02,  3.4721e-03],
        [ 1.2314e-01, -1.6730e-01,  1.8693e-01],
        [-8.1434e-05,  7.6561e-02, -1.8223e-02],
        [ 3.4241e-02,  2.2524e-01,  2.5552e-02],
        [-1.1046e-01, -1.1727e-01,  9.8020e-02],
        [-1.5285e-01,  1.9414e-01, -7.6160e-02],
        [-7.5652e-02,  2.3956e-01, -1.9542e-01],
        [ 2.5643e-02, -1.8810e-01,  4.4578e-02],
        [ 4.5039e-02,  1.7642e-01, -1.3110e-01],
        [ 8.0474e-02, -1.8574e-02, -7.5529e-02],
        [-1.4732e-01,  1.0791e-01, -7.1089e-02],
        [-1.5576e-01, -5.9695e-03,  1.3524e-01],
        [ 4.8776e-02, -1.1390e-01,  1.9772e-01],
        [ 9.1453e-02, -7.9566e-02,  4.5140e-02],
        [-6.2719e-02,  7.1448e-02, -4.2596e-03],
        [-5.3618e-02, -8.1588e-02,  2.3961e-01],
        [-6.3893e-02, -4.9358e-03, -1.4042e-01],
        [-2.1215e-01, -2.2597e-01,  1.6600e-01],
        [ 1.8694e-01, -5.9092e-02, -1.2172e-01],
        [-1.2192e-02, -2.5570e-02,  2.1378e-01],
        [-1.8186e-01, -9.5100e-02, -1.4146e-01],
        [ 8.9001e-02, -1.5744e-02, -5.2752e-02],
        [-4.5854e-02,  9.4072e-02, -7.8375e-02],
        [ 4.0011e-02,  3.6816e-02, -4.8274e-02],
        [-3.2629e-02, -1.5003e-01,  1.3316e-01],
        [ 1.0585e-01,  2.6606e-03,  1.8193e-01],
        [-1.5906e-01, -6.4285e-02,  1.6998e-01],
        [ 2.1969e-01,  3.4402e-02,  1.0934e-01],
        [-2.7808e-02, -1.0596e-01, -1.8294e-01],
        [ 1.9138e-01, -1.3759e-01,  1.1000e-01],
        [-6.3820e-02, -9.9482e-02, -5.3827e-05],
        [ 3.6996e-03, -2.0849e-02,  5.8427e-02],
        [ 1.1116e-01, -1.7487e-01,  2.4183e-01],
        [-7.1012e-02, -1.6526e-01,  1.2969e-02],
        [-8.1935e-02, -7.6280e-02, -1.0548e-02],
        [ 5.3792e-02,  4.0626e-02,  1.4170e-01],
        [-2.7943e-03,  7.4389e-03, -5.6867e-02],
        [ 2.2370e-01, -1.8355e-01,  2.0888e-01],
        [ 7.8314e-02, -2.2334e-01,  1.8202e-01],
        [-3.3969e-02, -1.5186e-01, -5.1397e-02],
        [ 8.5344e-03, -2.6971e-01, -2.6763e-03],
        [-1.1093e-01, -9.0592e-02,  1.4465e-01],
        [ 3.1614e-02, -8.6739e-02,  1.1065e-01],
        [-2.1530e-01, -2.4178e-01,  1.5314e-01],
        [ 2.0601e-01, -2.5703e-01, -3.1608e-02],
        [-1.1580e-01,  4.9263e-02,  9.5620e-02],
        [ 2.1027e-01, -1.7610e-01,  1.8581e-01],
        [-1.0651e-02, -3.6063e-02,  4.9383e-03]], device='cuda:0') torch.Size([128, 3])
recurrent_blocks.0.weight_hh_l0 tensor([[ 0.0498,  0.0388, -0.0683,  ...,  0.1635,  0.1980,  0.0434],
        [-0.0002,  0.0774,  0.0347,  ...,  0.0781,  0.0006, -0.0330],
        [ 0.0673, -0.0362, -0.0636,  ..., -0.1870, -0.1977,  0.0245],
        ...,
        [-0.1479,  0.0549, -0.0488,  ..., -0.1048,  0.0544,  0.0248],
        [ 0.0604,  0.0396, -0.1550,  ...,  0.0118, -0.0928,  0.2035],
        [-0.0712,  0.1532, -0.1055,  ..., -0.1807, -0.0235, -0.0181]],
       device='cuda:0') torch.Size([128, 32])
recurrent_blocks.0.bias_ih_l0 tensor([-0.1200,  0.1198, -0.1231,  0.1736,  0.1507,  0.2391, -0.0776,  0.0135,
         0.1217,  0.0594, -0.0805,  0.1767, -0.2556,  0.0114,  0.1676,  0.1540,
         0.1346,  0.1440,  0.0407,  0.1544,  0.0227,  0.0731, -0.0540,  0.1686,
        -0.0856,  0.2247,  0.0914,  0.0252,  0.1279,  0.1507, -0.0626,  0.0022,
        -0.0365, -0.0399,  0.1018,  0.1943,  0.0109, -0.0578,  0.1201,  0.1172,
         0.0229,  0.1119,  0.1684,  0.2200, -0.2313,  0.0096,  0.0361, -0.0322,
         0.1467,  0.0586,  0.1445,  0.0676,  0.1311,  0.0706, -0.0338,  0.0987,
         0.2106,  0.0753,  0.1112, -0.1296, -0.0686,  0.1243,  0.0745,  0.1085,
        -0.0359,  0.1665, -0.1439,  0.1795,  0.2177,  0.1165,  0.0388,  0.0446,
        -0.1388,  0.0187,  0.2319,  0.1976,  0.0074,  0.0614,  0.0576, -0.1654,
         0.1660,  0.1256,  0.1425, -0.1941,  0.0695, -0.2683, -0.0034,  0.1836,
        -0.2212, -0.2134,  0.2046, -0.0167,  0.2761, -0.2180, -0.2327,  0.2001,
        -0.0176,  0.2079,  0.0933,  0.1273, -0.0337,  0.0798, -0.0898,  0.0979,
        -0.0198,  0.0931,  0.2683,  0.2171, -0.0762,  0.0042, -0.0295,  0.1071,
         0.0201,  0.0229,  0.0811, -0.0838,  0.1153,  0.1272,  0.0948, -0.0261,
        -0.0406,  0.2013,  0.0325, -0.0778,  0.2200, -0.0160,  0.2061, -0.0364],
       device='cuda:0') torch.Size([128])
recurrent_blocks.0.bias_hh_l0 tensor([-0.0284,  0.0047,  0.0025,  0.1591, -0.0620,  0.2107,  0.1028,  0.0878,
        -0.1397,  0.0532,  0.1976,  0.0826, -0.0766, -0.1881, -0.0276,  0.0564,
         0.1265,  0.1521, -0.1091,  0.1686,  0.0544,  0.2420,  0.0927,  0.1436,
         0.1748, -0.1005, -0.0780,  0.1431,  0.0774,  0.0695,  0.0124, -0.0671,
        -0.1753,  0.2272, -0.0465, -0.0506,  0.0720,  0.1293, -0.1008,  0.0291,
         0.1298,  0.1007,  0.0326,  0.2381, -0.2331,  0.0830,  0.1251,  0.0971,
        -0.0410, -0.1017,  0.0836, -0.0330,  0.1530,  0.1118, -0.0196,  0.1964,
        -0.0890,  0.1679,  0.0132,  0.1219,  0.1332,  0.1795, -0.0558,  0.1233,
        -0.0036,  0.2565, -0.2213,  0.1068,  0.1225,  0.0120, -0.2188,  0.1666,
         0.0354, -0.2508,  0.1682,  0.2142,  0.0277, -0.1517,  0.2783, -0.0791,
         0.1558,  0.2267,  0.2124, -0.2116,  0.1792,  0.0184, -0.2223,  0.0964,
        -0.0577, -0.1783,  0.1951,  0.1809, -0.0086, -0.1150, -0.1122,  0.1330,
        -0.0205, -0.0669,  0.1951,  0.1949, -0.0009, -0.0385,  0.0059,  0.1793,
         0.1757,  0.2498,  0.1363,  0.1062, -0.0654, -0.0318,  0.0346,  0.0285,
         0.0443, -0.0947, -0.0856,  0.0641, -0.0020,  0.2081, -0.0060, -0.0165,
        -0.1091,  0.1942,  0.1180,  0.0196, -0.0016, -0.0148, -0.0296,  0.1080],
       device='cuda:0') torch.Size([128])
recurrent_blocks.0.weight_ih_l0_reverse tensor([[ 0.0134, -0.2266,  0.0122],
        [ 0.0038, -0.0505, -0.0076],
        [-0.0610, -0.0007,  0.1058],
        [-0.1310, -0.0389,  0.1149],
        [ 0.2575,  0.1452, -0.0059],
        [-0.0661, -0.1002,  0.2360],
        [ 0.0897,  0.0154, -0.0594],
        [-0.0111, -0.0011,  0.1505],
        [ 0.0445, -0.0912, -0.0833],
        [-0.0881,  0.2079, -0.2752],
        [-0.1174,  0.0126,  0.0911],
        [-0.1674, -0.0105, -0.1860],
        [ 0.1369,  0.0399,  0.0544],
        [-0.0652, -0.0222,  0.1641],
        [ 0.0824, -0.1108,  0.0203],
        [-0.0256, -0.1439,  0.0296],
        [-0.0626,  0.0052,  0.0046],
        [-0.1023,  0.0192, -0.0525],
        [-0.2293, -0.0235, -0.0546],
        [ 0.0626, -0.1400,  0.1899],
        [-0.0587,  0.0781, -0.0830],
        [-0.1305, -0.1719,  0.0365],
        [-0.0777,  0.0522,  0.0240],
        [-0.0109,  0.0905, -0.1469],
        [-0.2172, -0.0180,  0.0239],
        [-0.2365, -0.2202,  0.0525],
        [-0.0327,  0.0760, -0.0788],
        [-0.2430,  0.0410,  0.1130],
        [-0.0750,  0.1886,  0.2493],
        [ 0.1618,  0.0184, -0.1843],
        [-0.1097,  0.1052, -0.1582],
        [-0.1984, -0.2280, -0.0321],
        [-0.2115, -0.1285,  0.1119],
        [-0.2152,  0.0095,  0.2141],
        [-0.2130,  0.1264,  0.1774],
        [ 0.0252, -0.0596, -0.1163],
        [ 0.2290,  0.0822,  0.2114],
        [-0.0399,  0.0256,  0.1704],
        [ 0.1259, -0.0371,  0.1282],
        [-0.2108, -0.0977,  0.1086],
        [ 0.0617, -0.0329,  0.0864],
        [ 0.1679, -0.0162, -0.1841],
        [-0.2684, -0.0594, -0.0993],
        [ 0.1448,  0.1217, -0.0876],
        [ 0.0782,  0.1069,  0.0986],
        [ 0.1313, -0.1504, -0.0698],
        [-0.1682,  0.1130, -0.1351],
        [ 0.0616, -0.2825,  0.0078],
        [-0.1275, -0.1133, -0.2329],
        [-0.1019,  0.1905,  0.1881],
        [-0.0339,  0.1130,  0.1543],
        [ 0.0152, -0.1532,  0.1031],
        [-0.0838, -0.1095,  0.0880],
        [-0.0099, -0.2610,  0.2626],
        [-0.0759,  0.0921, -0.1804],
        [-0.0719, -0.0993,  0.1180],
        [-0.0859, -0.0169,  0.1642],
        [-0.0212, -0.1415,  0.2172],
        [ 0.0135,  0.0791,  0.0726],
        [-0.2441, -0.0217,  0.0179],
        [-0.1101,  0.1185,  0.1795],
        [-0.0727, -0.0259, -0.2292],
        [-0.1123, -0.0194, -0.0530],
        [-0.2602,  0.0424,  0.1946],
        [ 0.1520,  0.0374, -0.2136],
        [ 0.0191, -0.1093, -0.1172],
        [-0.0904, -0.0340, -0.0014],
        [-0.1391, -0.0577, -0.1997],
        [-0.1102, -0.0506, -0.2075],
        [ 0.0418, -0.1163,  0.0613],
        [-0.0479, -0.0114, -0.2561],
        [-0.1299, -0.0071,  0.2144],
        [-0.0030,  0.2431, -0.1434],
        [-0.0869, -0.2128, -0.0627],
        [-0.0149,  0.0409, -0.0501],
        [-0.0477, -0.1228,  0.1039],
        [-0.0363,  0.0535, -0.0992],
        [-0.0516, -0.0480,  0.1657],
        [-0.1570, -0.1647,  0.1187],
        [ 0.0739, -0.0366,  0.1034],
        [ 0.0602, -0.0998,  0.0915],
        [ 0.0285, -0.0669, -0.1060],
        [-0.0233, -0.1798,  0.2323],
        [ 0.0727,  0.1991, -0.1427],
        [ 0.1314,  0.1658, -0.2374],
        [ 0.0237, -0.1889,  0.2554],
        [ 0.0726, -0.0616,  0.1651],
        [-0.0716,  0.0479,  0.1442],
        [ 0.0261,  0.0137, -0.0653],
        [ 0.1169, -0.0484,  0.0499],
        [-0.1284, -0.0774, -0.1423],
        [-0.1306, -0.1171,  0.2470],
        [-0.0449,  0.1411,  0.1841],
        [-0.1264,  0.0069, -0.1572],
        [-0.1638,  0.0187,  0.2255],
        [-0.0956, -0.2276,  0.1836],
        [-0.0633, -0.1996,  0.1369],
        [-0.0740, -0.1037,  0.0664],
        [-0.1482, -0.1044,  0.0916],
        [ 0.2006, -0.0144, -0.1304],
        [ 0.1046,  0.1226, -0.0281],
        [ 0.1096, -0.2605,  0.0533],
        [-0.0062, -0.0154,  0.2560],
        [ 0.0182,  0.0524,  0.1112],
        [-0.0413, -0.2628,  0.0986],
        [ 0.0914,  0.0422,  0.0122],
        [-0.0095,  0.0372,  0.2043],
        [ 0.1274, -0.1343, -0.1003],
        [ 0.1733, -0.1324,  0.1611],
        [-0.0035, -0.1349,  0.1454],
        [ 0.0920,  0.0054,  0.1606],
        [ 0.0777, -0.1694, -0.1105],
        [ 0.1774,  0.0652, -0.2421],
        [-0.1801, -0.0435,  0.1163],
        [ 0.0210,  0.0484,  0.1893],
        [ 0.1139, -0.2610, -0.0420],
        [ 0.0287,  0.0490, -0.0341],
        [-0.2069, -0.0843,  0.2310],
        [ 0.1076, -0.2077,  0.0109],
        [-0.1691, -0.0822, -0.0129],
        [ 0.0572, -0.1392, -0.0717],
        [-0.1966,  0.0638,  0.1198],
        [ 0.0179, -0.0568,  0.0053],
        [-0.1493, -0.1057,  0.1089],
        [-0.0020, -0.0243, -0.0897],
        [ 0.1512, -0.0217,  0.0015],
        [-0.0276, -0.0556,  0.1008],
        [-0.0798, -0.2140, -0.0657]], device='cuda:0') torch.Size([128, 3])
recurrent_blocks.0.weight_hh_l0_reverse tensor([[ 0.0027,  0.1190, -0.1287,  ..., -0.0600, -0.0435,  0.0656],
        [-0.0409, -0.0802,  0.2254,  ..., -0.1563,  0.0487,  0.0700],
        [-0.2120,  0.0081,  0.2216,  ...,  0.1764,  0.0373,  0.1442],
        ...,
        [ 0.1354,  0.1241, -0.1103,  ..., -0.1663, -0.0440,  0.0828],
        [ 0.0683,  0.2017,  0.1964,  ..., -0.0530,  0.1847,  0.0149],
        [-0.0061, -0.0885,  0.0163,  ..., -0.0765,  0.2452,  0.1002]],
       device='cuda:0') torch.Size([128, 32])
recurrent_blocks.0.bias_ih_l0_reverse tensor([ 0.1901, -0.0291, -0.0104,  0.1110,  0.0147,  0.1151,  0.1205, -0.1033,
        -0.0319, -0.1795,  0.1504,  0.1306,  0.2467,  0.1031, -0.0535,  0.0890,
        -0.1561, -0.0280,  0.2140, -0.0848, -0.0762,  0.2205, -0.1717, -0.1677,
         0.1891, -0.0488,  0.1628, -0.0249,  0.1416, -0.0032, -0.0542,  0.1256,
         0.1690,  0.1920,  0.0072,  0.0429,  0.1541,  0.0876,  0.1108, -0.1083,
         0.1540, -0.0423, -0.0847, -0.1040, -0.0633,  0.1437,  0.0869,  0.0970,
        -0.2015, -0.0494, -0.0192,  0.2162,  0.1194,  0.2399,  0.1112, -0.0987,
         0.0285,  0.1513, -0.0991,  0.1206, -0.0955, -0.0262, -0.1797, -0.0133,
        -0.1970, -0.1564,  0.1266, -0.1587, -0.2069,  0.1840, -0.2495,  0.1204,
        -0.0767,  0.0672, -0.1910,  0.0242, -0.2764,  0.0844,  0.0152,  0.1612,
        -0.0120, -0.0350,  0.1765,  0.0463, -0.1262,  0.2034, -0.0611,  0.0414,
        -0.0467, -0.1025, -0.1017,  0.0379,  0.1472,  0.0456, -0.0203,  0.1190,
         0.0295,  0.1711,  0.2206, -0.1326,  0.1798, -0.0550,  0.2346,  0.2078,
        -0.0023, -0.1714,  0.1975, -0.1288,  0.2502,  0.1001, -0.1081,  0.0265,
         0.0198,  0.0606,  0.1793,  0.1760,  0.0746,  0.2345,  0.0358, -0.0728,
        -0.0315,  0.1998, -0.0842,  0.1718, -0.0475, -0.0995, -0.0927, -0.0068],
       device='cuda:0') torch.Size([128])
recurrent_blocks.0.bias_hh_l0_reverse tensor([ 0.1700,  0.1345,  0.1058, -0.1280, -0.0490,  0.0903,  0.0553,  0.1177,
         0.0539, -0.0155, -0.0166,  0.1074, -0.0374, -0.0990, -0.0989, -0.0660,
        -0.2512, -0.0853,  0.1538, -0.1034,  0.1376, -0.0375, -0.1688,  0.1165,
         0.0409, -0.0297,  0.0908,  0.0826,  0.0876,  0.0854, -0.1062,  0.1002,
        -0.0178,  0.1951,  0.0902,  0.1472,  0.0583,  0.0936,  0.0893, -0.0705,
         0.1965, -0.2505, -0.1096,  0.0659,  0.1797, -0.0580,  0.0669,  0.0547,
        -0.2378, -0.0368, -0.1036, -0.0693, -0.0098,  0.0573, -0.1221, -0.0379,
         0.1065, -0.0246,  0.1340, -0.0637, -0.0442,  0.0501, -0.0063,  0.2092,
        -0.1394, -0.1861,  0.1009,  0.0040, -0.1032,  0.1075,  0.0082, -0.0219,
        -0.1708, -0.0762, -0.0652,  0.1908, -0.2690,  0.1990,  0.1854,  0.1143,
        -0.0484, -0.2305, -0.0831, -0.1844, -0.0290,  0.0415,  0.1140, -0.0219,
        -0.1531, -0.2129, -0.0596,  0.2604,  0.1609, -0.0672,  0.1065,  0.0436,
         0.1663, -0.0648,  0.0222, -0.1892,  0.2021, -0.0542, -0.0183, -0.0372,
         0.2051, -0.0608,  0.0272, -0.1495,  0.1031, -0.0212, -0.1598,  0.1641,
         0.0259, -0.0747,  0.1402,  0.1911, -0.0561,  0.0828, -0.1892, -0.0317,
         0.0521,  0.0047,  0.0080, -0.0625,  0.1628,  0.0715,  0.0722,  0.0272],
       device='cuda:0') torch.Size([128])
recurrent_blocks.1.weight_ih_l0 tensor([[-0.1658,  0.1172,  0.0554,  ..., -0.0667,  0.2568, -0.0547],
        [-0.0868,  0.0824, -0.0435,  ..., -0.0003, -0.0542,  0.2175],
        [ 0.1874, -0.0499, -0.0732,  ..., -0.0856,  0.0239,  0.1098],
        ...,
        [ 0.1672, -0.0179,  0.1090,  ..., -0.1088,  0.0445,  0.1296],
        [ 0.0107,  0.2113,  0.0321,  ..., -0.2312,  0.0197,  0.0494],
        [-0.2057,  0.1811, -0.0634,  ..., -0.0471, -0.0422,  0.0470]],
       device='cuda:0') torch.Size([128, 64])
recurrent_blocks.1.weight_hh_l0 tensor([[-0.1381,  0.1977, -0.1344,  ...,  0.1304,  0.0958,  0.0480],
        [ 0.0906,  0.1857,  0.0667,  ...,  0.2386, -0.0725,  0.1422],
        [ 0.2183, -0.0889, -0.0432,  ...,  0.0595,  0.0972, -0.0819],
        ...,
        [ 0.0521, -0.0502, -0.0430,  ..., -0.0237, -0.1738, -0.1261],
        [ 0.0063,  0.1743, -0.0184,  ..., -0.1025, -0.1390,  0.0292],
        [ 0.1649,  0.0060,  0.0335,  ...,  0.1583, -0.1258,  0.0694]],
       device='cuda:0') torch.Size([128, 32])
recurrent_blocks.1.bias_ih_l0 tensor([ 0.1119,  0.1986,  0.1236,  0.0152,  0.1464,  0.0029,  0.0290, -0.0277,
         0.0771, -0.1009, -0.0949,  0.1626,  0.0206,  0.1087,  0.0868,  0.2680,
         0.0986,  0.1396, -0.0627,  0.2437,  0.0608,  0.0244,  0.0297, -0.1264,
         0.1128, -0.0048, -0.2182,  0.1799,  0.1663, -0.2446, -0.0242, -0.0752,
         0.0105,  0.1136,  0.1410,  0.0874, -0.0983, -0.0682,  0.2403,  0.2224,
         0.0796,  0.0221,  0.0330,  0.0043,  0.0833, -0.0960,  0.0419,  0.1061,
         0.0647,  0.0890,  0.1969, -0.0390,  0.1005, -0.0981,  0.2013, -0.1621,
         0.0991,  0.1225, -0.2163,  0.0160,  0.0957,  0.0823,  0.1047,  0.0454,
         0.0437,  0.2759,  0.1304,  0.1329, -0.0604,  0.1155,  0.0313, -0.2207,
         0.0480,  0.0064,  0.0112, -0.0476,  0.0690,  0.1828,  0.0044, -0.1794,
        -0.1032, -0.0588,  0.0185,  0.0570,  0.2211, -0.0624,  0.0152,  0.0597,
        -0.1306, -0.0629, -0.0031, -0.1517,  0.1156, -0.0965,  0.1301,  0.1796,
         0.1176,  0.0517,  0.1731,  0.0370, -0.0523,  0.0188,  0.1629, -0.0576,
        -0.1124, -0.1043,  0.1002,  0.0050,  0.0043,  0.1448,  0.0648,  0.1847,
        -0.1670,  0.1086,  0.0416,  0.0723,  0.2665, -0.0578,  0.2288, -0.1348,
         0.1860, -0.0097,  0.0120, -0.0350,  0.1654, -0.0434, -0.1019,  0.1167],
       device='cuda:0') torch.Size([128])
recurrent_blocks.1.bias_hh_l0 tensor([-2.4997e-02,  2.0036e-01,  8.7390e-02,  1.8249e-01,  4.8092e-02,
         2.4104e-01,  5.9935e-02,  2.3286e-01, -3.4318e-02, -2.9783e-02,
        -2.9408e-02,  3.3843e-02, -5.6592e-03,  2.3011e-02, -1.0823e-01,
         2.4570e-01,  1.2073e-01,  1.2721e-01,  8.2157e-02, -2.0747e-02,
         2.6047e-01,  1.5170e-01,  2.2639e-01, -1.6252e-01,  1.6865e-01,
         1.6476e-01, -5.9376e-02, -8.7042e-02,  6.1199e-02, -2.0844e-01,
         1.4835e-02, -5.8326e-02,  7.2087e-02, -1.0624e-01,  8.8272e-02,
         3.0881e-03, -6.4891e-02,  4.0630e-02,  8.9550e-03,  1.2356e-01,
         6.9319e-03, -6.0810e-02,  1.6100e-01,  5.6501e-02, -5.7466e-03,
         2.3495e-01,  1.8930e-01,  4.2906e-02, -9.0637e-02,  4.7256e-02,
        -1.7680e-03,  1.2207e-01,  1.1049e-02,  4.7580e-02,  1.2159e-01,
         9.7774e-02,  1.8703e-01,  1.0209e-02, -1.4375e-01,  2.1970e-01,
         2.8619e-03, -2.0313e-01,  1.0649e-01, -7.9424e-02,  1.2638e-01,
        -4.6421e-02,  2.0316e-01,  2.2495e-01, -1.8975e-01,  6.8236e-02,
        -2.5684e-01,  8.7450e-02,  1.6347e-01, -1.8538e-01,  2.3370e-03,
        -7.4791e-02, -1.5405e-02,  1.1895e-01,  1.4678e-01, -3.1711e-02,
        -5.0388e-02, -8.5780e-02,  2.1625e-01,  1.9210e-01,  2.5551e-01,
        -3.5335e-02, -1.8114e-01,  2.0612e-01, -1.7719e-01, -2.1486e-01,
         1.3900e-01, -6.3018e-02,  1.5396e-01,  3.2308e-04, -6.3643e-03,
        -4.5411e-02,  4.1819e-05,  1.3975e-01,  6.2223e-02,  1.6398e-01,
         1.1052e-01, -4.0397e-02,  2.1299e-01, -5.9404e-02, -8.6076e-02,
         8.3447e-02,  1.7133e-01, -4.1702e-02, -1.3526e-02, -3.8286e-02,
        -8.6814e-02,  7.8711e-02, -2.1932e-01,  1.6451e-01,  2.2289e-01,
         2.2948e-01,  1.8392e-01, -3.7966e-02, -2.2046e-04, -1.3778e-01,
         2.8557e-02, -1.0615e-01, -1.2807e-01, -6.7610e-02, -4.1896e-02,
        -1.5171e-01,  1.5076e-01,  1.7883e-01], device='cuda:0') torch.Size([128])
recurrent_blocks.1.weight_ih_l0_reverse tensor([[ 0.0033,  0.0428, -0.0073,  ...,  0.0627, -0.1215,  0.0529],
        [ 0.0532,  0.0298,  0.0206,  ...,  0.1065, -0.0096,  0.0915],
        [-0.2364, -0.0648, -0.0332,  ..., -0.1143,  0.1000,  0.0976],
        ...,
        [-0.1610,  0.1162, -0.2400,  ..., -0.0515, -0.0077, -0.0574],
        [ 0.0410,  0.2447, -0.0199,  ..., -0.0922, -0.1136, -0.0671],
        [ 0.0116,  0.0809, -0.1210,  ..., -0.0753, -0.0446, -0.0273]],
       device='cuda:0') torch.Size([128, 64])
recurrent_blocks.1.weight_hh_l0_reverse tensor([[ 0.0697,  0.0756,  0.0963,  ...,  0.1417, -0.2174, -0.1787],
        [-0.0117, -0.0638,  0.0033,  ...,  0.0618, -0.0503,  0.1140],
        [-0.0400, -0.1245,  0.1054,  ...,  0.0858, -0.1235,  0.0859],
        ...,
        [ 0.1744, -0.1905,  0.1402,  ..., -0.1019,  0.1211, -0.0769],
        [-0.0291,  0.0354,  0.1139,  ..., -0.0368,  0.0448,  0.0741],
        [ 0.0748, -0.1848,  0.2267,  ..., -0.0278,  0.2140,  0.1022]],
       device='cuda:0') torch.Size([128, 32])
recurrent_blocks.1.bias_ih_l0_reverse tensor([-0.1538,  0.1877,  0.0858, -0.0831,  0.0809,  0.0339,  0.2453,  0.1481,
         0.1496, -0.0147,  0.0785,  0.2652,  0.1126,  0.0839, -0.0013, -0.1302,
         0.1936,  0.0276,  0.1110,  0.1411,  0.1306,  0.0091,  0.1671, -0.1664,
        -0.1258, -0.0292,  0.2196,  0.0460,  0.0739,  0.0328,  0.0298, -0.0611,
         0.0807,  0.0353, -0.0125, -0.1175, -0.1135,  0.1669, -0.0551,  0.2247,
        -0.0516, -0.0538,  0.2585, -0.0097,  0.2451,  0.1616, -0.0776,  0.0871,
        -0.0072, -0.0271, -0.1738,  0.0870, -0.0738, -0.0767,  0.2059, -0.1627,
         0.0688,  0.0231,  0.2507,  0.0494,  0.0944,  0.1558,  0.1922,  0.2125,
        -0.0592, -0.0750,  0.2298, -0.2176, -0.1055,  0.0213, -0.1835,  0.1765,
        -0.2448,  0.0646,  0.1175, -0.0359, -0.2495, -0.1798,  0.0124,  0.1671,
        -0.0430,  0.1164, -0.1695, -0.0477, -0.0126, -0.0465,  0.0458, -0.1434,
        -0.0079,  0.0278,  0.1660,  0.1938, -0.1834, -0.1758,  0.0244,  0.0141,
         0.0484, -0.0835, -0.0429,  0.0557, -0.2048,  0.1591,  0.2540,  0.1647,
        -0.0664, -0.1026, -0.0223,  0.1800, -0.0777, -0.0456,  0.0503, -0.0866,
         0.2136,  0.0282, -0.1163,  0.2049,  0.1292, -0.0512,  0.1814,  0.0671,
        -0.1559,  0.1226,  0.0906, -0.0717,  0.0877,  0.0770, -0.0513,  0.2456],
       device='cuda:0') torch.Size([128])
recurrent_blocks.1.bias_hh_l0_reverse tensor([-1.3298e-01,  8.3486e-02, -1.4016e-02,  8.4188e-02, -1.6928e-01,
         1.7396e-01,  4.1088e-02,  3.0711e-02,  2.2018e-01,  1.5436e-01,
         6.2425e-03,  1.8747e-01,  2.3570e-01,  1.5490e-01,  2.5616e-02,
        -5.2409e-02, -7.9584e-02,  8.4953e-02,  5.9924e-02, -5.3245e-03,
        -2.0347e-04,  2.0435e-01, -2.7297e-02,  1.4684e-01,  6.5586e-02,
        -3.9226e-03,  1.3197e-01,  7.9106e-03, -6.4795e-02,  2.1985e-01,
        -5.1205e-02, -4.4847e-02, -1.3262e-01,  1.1397e-01, -1.2522e-01,
         2.0893e-01,  3.5959e-02, -3.1495e-02,  1.0105e-02,  1.1892e-01,
         1.7431e-01,  2.4119e-02, -9.5871e-03, -7.6245e-02,  9.9576e-02,
         1.0483e-01, -1.3444e-02,  9.3450e-02,  2.3690e-01, -7.7780e-02,
         9.6374e-02, -1.5909e-02,  6.4105e-02,  1.0783e-01,  1.1250e-01,
        -1.6596e-01, -1.0865e-01, -9.1655e-03,  4.2538e-02,  3.4868e-02,
         3.2202e-02,  1.9085e-01,  1.3456e-01,  2.2072e-01, -9.6197e-02,
        -1.7463e-01, -3.2534e-02, -1.4516e-01, -3.2669e-02,  1.9183e-01,
        -9.3902e-02,  4.3570e-02, -6.4265e-02, -1.5354e-01,  1.4314e-01,
         2.3406e-01, -7.4605e-02, -7.8824e-02, -2.0106e-01,  1.7342e-01,
        -7.1827e-02,  1.4910e-01,  1.3086e-01, -1.4307e-01,  1.2048e-01,
         2.2014e-01,  9.0207e-02, -9.5830e-02, -2.8975e-03,  5.6324e-02,
         2.0695e-01,  4.3224e-02, -1.3998e-01, -2.2488e-01,  2.6483e-01,
         2.7048e-01, -1.8563e-01,  3.5781e-02,  4.5858e-02, -4.6654e-03,
        -1.1379e-01,  1.0610e-01,  2.6321e-01, -8.5361e-02, -1.7582e-02,
         6.1709e-02,  6.9147e-02, -1.5571e-02,  1.9443e-01,  1.5605e-01,
        -8.2300e-02, -1.3814e-01,  1.1054e-01,  1.4936e-01, -1.2271e-01,
         1.1297e-01,  1.4498e-01,  1.3163e-01,  1.8594e-01,  1.4450e-01,
         4.4442e-03,  1.3458e-01,  2.5910e-01,  2.1908e-01,  1.5465e-01,
        -5.8930e-02, -1.2879e-02, -4.8240e-02], device='cuda:0') torch.Size([128])
recurrent_blocks.2.weight_ih_l0 tensor([[-0.1248, -0.1003, -0.0266,  ..., -0.1328,  0.0242, -0.0472],
        [ 0.1601,  0.0995,  0.2737,  ..., -0.0078,  0.1777, -0.1058],
        [-0.1250,  0.0934,  0.0959,  ...,  0.1283,  0.0646,  0.1001],
        ...,
        [-0.1301, -0.0237,  0.2316,  ..., -0.1410, -0.0741, -0.0431],
        [-0.0644,  0.0935, -0.0903,  ..., -0.0274, -0.0507,  0.2237],
        [ 0.1042, -0.1170, -0.0670,  ...,  0.0050,  0.1124,  0.1247]],
       device='cuda:0') torch.Size([128, 64])
recurrent_blocks.2.weight_hh_l0 tensor([[-0.1045, -0.0798, -0.1472,  ..., -0.0270,  0.0049,  0.0807],
        [ 0.1096,  0.0400, -0.1097,  ..., -0.1421, -0.0846,  0.0982],
        [-0.0375, -0.1763, -0.0448,  ...,  0.1927, -0.1801, -0.1291],
        ...,
        [ 0.0275,  0.2377, -0.1542,  ...,  0.1247, -0.0192, -0.0123],
        [ 0.0072, -0.0523, -0.1147,  ..., -0.1593, -0.0709, -0.0171],
        [-0.0609,  0.1025, -0.1599,  ...,  0.0597, -0.1071,  0.1613]],
       device='cuda:0') torch.Size([128, 32])
recurrent_blocks.2.bias_ih_l0 tensor([-0.0453,  0.2102, -0.1089, -0.0890,  0.2045,  0.1310, -0.1213,  0.0963,
         0.0559,  0.0243,  0.0911,  0.1296, -0.0798, -0.0294,  0.0680, -0.0529,
         0.0852,  0.0276,  0.1596, -0.1521,  0.0579, -0.0697, -0.0686, -0.1370,
        -0.0131, -0.0346,  0.2348, -0.1615,  0.1008, -0.0609,  0.0126,  0.0284,
         0.1101,  0.0140, -0.0064, -0.0899, -0.0421,  0.1013,  0.2209, -0.0337,
        -0.0073,  0.1804, -0.0896, -0.0224,  0.2125,  0.1414,  0.0453,  0.0798,
         0.1273,  0.1050,  0.0551, -0.0946, -0.0229, -0.1661,  0.1877, -0.1631,
        -0.0513, -0.0614,  0.2187, -0.0041,  0.0325, -0.0748,  0.2066,  0.1885,
         0.0221,  0.1402, -0.1405,  0.0450, -0.0850,  0.1813, -0.1766,  0.0009,
         0.1919, -0.1012,  0.0602, -0.0226,  0.1776,  0.1315,  0.0163, -0.1042,
         0.1115, -0.0216,  0.1114, -0.1135,  0.1454,  0.0175, -0.1771, -0.0564,
         0.0741, -0.2094, -0.1606,  0.0056,  0.1593, -0.2156,  0.2059,  0.0893,
        -0.1750, -0.0272, -0.1346,  0.0103, -0.0825,  0.0763,  0.2180,  0.0666,
         0.1241,  0.2226, -0.1509,  0.1291,  0.1840,  0.1381, -0.0013,  0.2358,
         0.0015, -0.0146,  0.2264,  0.0673,  0.1307, -0.0855, -0.0194, -0.2193,
        -0.0089,  0.1286, -0.0628,  0.0343,  0.2395, -0.1182, -0.0420,  0.1694],
       device='cuda:0') torch.Size([128])
recurrent_blocks.2.bias_hh_l0 tensor([-2.0487e-01,  2.2138e-01, -1.5628e-01,  2.0481e-02, -3.2196e-02,
         1.5022e-01,  8.2326e-02,  1.0788e-01, -1.1565e-01, -6.6512e-02,
         1.2077e-01, -7.3926e-02,  1.2394e-01, -1.0309e-01, -1.9854e-02,
        -1.3697e-04,  2.2148e-01,  1.6014e-01,  1.2407e-01, -1.1391e-01,
        -6.2595e-02, -8.2436e-03, -7.2930e-02,  5.5102e-02,  1.9356e-01,
        -1.7003e-02,  9.3725e-02, -1.6584e-01,  1.0220e-01, -2.0817e-02,
        -2.4596e-02,  8.3909e-02, -7.9093e-02,  1.5973e-01,  4.1995e-02,
         1.3125e-02,  4.6193e-02,  9.1595e-02,  1.9968e-01,  1.2686e-01,
        -1.3778e-01,  1.8701e-01, -1.5389e-01, -4.9464e-02, -3.8570e-02,
         1.3462e-01,  8.8048e-02,  4.8425e-02,  6.4535e-03,  1.6117e-01,
         1.4276e-01, -4.7831e-02, -7.1689e-02, -2.3668e-01,  1.2688e-01,
        -1.2103e-01,  1.6991e-01, -9.2882e-02,  1.2573e-01, -1.0051e-01,
         2.2820e-01,  7.5118e-02, -9.6231e-03, -3.8461e-02,  1.4299e-01,
         7.0714e-02,  1.7326e-03, -3.3921e-02, -1.3500e-01, -3.1666e-03,
         1.0042e-02, -1.7874e-01,  1.4805e-01, -7.2168e-02, -1.0283e-01,
         1.8503e-01,  1.7308e-01, -3.9462e-03, -2.1696e-02, -1.7360e-01,
         1.4588e-01, -1.9143e-01,  1.6246e-01,  6.2172e-02,  1.5142e-01,
        -4.1913e-02,  3.9737e-02, -1.1777e-01, -1.7095e-01, -6.4173e-02,
        -1.8743e-01,  1.5612e-01,  2.2865e-01, -1.8804e-01, -2.5002e-03,
         7.3567e-02,  1.0287e-01,  1.1039e-01, -1.4206e-01, -1.0216e-01,
        -6.1539e-02,  1.3185e-01,  1.8453e-01,  1.0228e-01, -1.8743e-01,
         7.8815e-02,  8.5256e-02, -8.6748e-02,  2.7076e-01,  8.0548e-02,
         1.7544e-01,  1.9286e-01, -1.6527e-02,  1.0142e-01,  3.6534e-02,
         1.1017e-01, -9.4240e-02, -2.0113e-02,  2.0403e-01, -5.6176e-02,
         4.9402e-02,  2.4570e-01, -4.7003e-02, -1.9573e-01,  2.7784e-01,
         1.8562e-01,  2.3249e-01,  1.6877e-01], device='cuda:0') torch.Size([128])
recurrent_blocks.2.weight_ih_l0_reverse tensor([[-0.0491, -0.0814,  0.1619,  ...,  0.0978, -0.0015,  0.0039],
        [ 0.1295,  0.1587,  0.1752,  ..., -0.1761, -0.0292,  0.0398],
        [ 0.1994,  0.1750,  0.1208,  ...,  0.0627,  0.1505, -0.0912],
        ...,
        [-0.1566, -0.1478, -0.2052,  ...,  0.1404,  0.0224,  0.0252],
        [-0.0434,  0.0459,  0.1469,  ..., -0.2174,  0.1455,  0.0402],
        [-0.0798,  0.0898,  0.1211,  ..., -0.0268,  0.0781,  0.2141]],
       device='cuda:0') torch.Size([128, 64])
recurrent_blocks.2.weight_hh_l0_reverse tensor([[ 0.1422, -0.0402, -0.0172,  ..., -0.1641, -0.1789,  0.0369],
        [-0.0413, -0.0163,  0.1104,  ..., -0.1191,  0.0421,  0.0715],
        [ 0.0155,  0.0254,  0.0258,  ..., -0.1384,  0.1743,  0.1829],
        ...,
        [-0.0521, -0.0243, -0.0302,  ..., -0.1940,  0.0253,  0.0905],
        [ 0.2290, -0.0530,  0.2038,  ...,  0.0745,  0.2102,  0.0335],
        [ 0.0453,  0.1185,  0.1995,  ..., -0.0282,  0.2028,  0.0152]],
       device='cuda:0') torch.Size([128, 32])
recurrent_blocks.2.bias_ih_l0_reverse tensor([-0.2072, -0.1280,  0.0134, -0.0821,  0.0994,  0.0758,  0.0350,  0.1253,
         0.1348,  0.0257,  0.0826,  0.0569, -0.0456,  0.1023, -0.0606,  0.0355,
         0.0680,  0.2506,  0.0067,  0.0150, -0.0491,  0.1411,  0.1381, -0.0703,
        -0.1189, -0.1287,  0.1314, -0.0615, -0.0912, -0.0689, -0.0308,  0.0460,
         0.0560,  0.1050,  0.0152,  0.0789, -0.2193,  0.1874,  0.0757,  0.1718,
         0.2108,  0.0914,  0.1953, -0.0039, -0.0447,  0.1857,  0.0282,  0.1216,
         0.2409, -0.0494, -0.0323,  0.0354, -0.0960,  0.0433,  0.2239,  0.0543,
        -0.0795, -0.1013, -0.0187,  0.0077, -0.0151,  0.1421,  0.1361,  0.0604,
        -0.0934, -0.0120,  0.1693, -0.1445, -0.0574,  0.2489, -0.1871, -0.0434,
        -0.1142, -0.1157,  0.1420, -0.0194, -0.0908,  0.1075, -0.1072,  0.2153,
        -0.2266,  0.1553, -0.1698, -0.0888, -0.2039,  0.0993,  0.1582,  0.0465,
         0.0439,  0.0722,  0.0880,  0.2194,  0.0316,  0.0543,  0.0907,  0.1840,
         0.0994,  0.0068,  0.0653,  0.1454,  0.1363,  0.1773, -0.0623,  0.1446,
         0.0147, -0.0346, -0.1097,  0.2353,  0.1929,  0.1235,  0.1431, -0.0692,
         0.1933,  0.2549, -0.0471,  0.2399,  0.0570,  0.2534,  0.0666,  0.0024,
        -0.1821,  0.0253,  0.0224,  0.2235, -0.0260,  0.1284,  0.1181,  0.0839],
       device='cuda:0') torch.Size([128])
recurrent_blocks.2.bias_hh_l0_reverse tensor([ 0.1142,  0.0367, -0.0375,  0.1114,  0.0616,  0.2322,  0.1220,  0.0987,
         0.1195,  0.1115,  0.1182, -0.0977,  0.0645, -0.0530, -0.1378,  0.0345,
         0.0313,  0.1516,  0.0806,  0.1187, -0.1034,  0.1141,  0.2187, -0.2177,
        -0.2426,  0.1810,  0.2003,  0.2152,  0.1130,  0.1257,  0.1553,  0.0748,
         0.0702,  0.0673,  0.1857,  0.1651, -0.0644,  0.0398, -0.0011, -0.0213,
         0.0200, -0.0207,  0.1451,  0.0541, -0.0204, -0.0506, -0.1217, -0.0404,
         0.2378,  0.2149, -0.0502,  0.0552, -0.0085,  0.2537,  0.1774,  0.1188,
        -0.0453, -0.0062,  0.2180, -0.0283,  0.1369, -0.0584,  0.2337,  0.2637,
         0.0827, -0.0697,  0.2248, -0.1608, -0.0563,  0.0240, -0.1726,  0.2218,
        -0.2058, -0.0217, -0.0561,  0.2209, -0.0737,  0.0033, -0.0418,  0.2219,
        -0.0328,  0.1283, -0.1358, -0.1686, -0.1519,  0.0815,  0.2172,  0.0861,
         0.0868, -0.1764, -0.0149,  0.1682, -0.1014,  0.1470,  0.1619,  0.1796,
        -0.0882,  0.1405, -0.0808, -0.1231,  0.1314, -0.0076,  0.0270,  0.1306,
         0.0449, -0.0565,  0.0818,  0.2683,  0.2593,  0.1864,  0.1444, -0.0530,
        -0.0644,  0.2414,  0.1033,  0.1238, -0.0996, -0.0384,  0.0597,  0.0751,
         0.0406, -0.0044, -0.0882, -0.0552,  0.1004, -0.1494, -0.0470,  0.0738],
       device='cuda:0') torch.Size([128])
recurrent_blocks.3.weight_ih_l0 tensor([[-0.0584,  0.1907, -0.1680,  ..., -0.1234, -0.0393,  0.1424],
        [ 0.0543,  0.1173, -0.1617,  ..., -0.1278,  0.1361,  0.1023],
        [ 0.0285,  0.0568,  0.0219,  ..., -0.1068,  0.1650,  0.1486],
        ...,
        [ 0.0906, -0.0697,  0.1432,  ..., -0.1941, -0.0220,  0.2197],
        [ 0.1047, -0.1427, -0.1549,  ...,  0.0989, -0.0292,  0.1816],
        [-0.0404, -0.1452, -0.0079,  ..., -0.0683, -0.0764, -0.0892]],
       device='cuda:0') torch.Size([128, 64])
recurrent_blocks.3.weight_hh_l0 tensor([[ 0.0151,  0.1624, -0.0893,  ..., -0.0777,  0.1258,  0.1812],
        [ 0.1386,  0.0317, -0.0686,  ..., -0.0843, -0.0555, -0.0584],
        [ 0.0155,  0.0063, -0.0900,  ..., -0.2175, -0.0119,  0.1503],
        ...,
        [-0.0541,  0.1079,  0.1375,  ..., -0.2038,  0.0227,  0.0418],
        [ 0.1467, -0.0974, -0.0908,  ..., -0.2164,  0.0899, -0.1204],
        [-0.1176, -0.0277,  0.1588,  ..., -0.0013, -0.0415,  0.1917]],
       device='cuda:0') torch.Size([128, 32])
recurrent_blocks.3.bias_ih_l0 tensor([ 0.0566,  0.0179,  0.1068, -0.2311, -0.0515,  0.2298,  0.2119, -0.0979,
         0.1522, -0.0542, -0.0033, -0.0713,  0.1543, -0.0238,  0.0662, -0.1482,
         0.1751,  0.1076,  0.1633, -0.0602, -0.0203,  0.2188,  0.0861, -0.1118,
         0.0131, -0.0694,  0.0320,  0.1181,  0.0082, -0.1094, -0.0513, -0.0891,
         0.0698, -0.0501,  0.1371, -0.0821,  0.0601,  0.0694,  0.0105, -0.2176,
        -0.0900, -0.0283,  0.1004,  0.1828,  0.2507, -0.0736, -0.0423,  0.0359,
        -0.0733, -0.0730,  0.1789,  0.1161,  0.1208,  0.1680,  0.0222,  0.1763,
         0.1802,  0.1651,  0.2158, -0.1771,  0.0046,  0.1090, -0.0582,  0.0112,
         0.1806,  0.0318,  0.1147, -0.0183,  0.1211,  0.1657, -0.2192,  0.0618,
        -0.0994, -0.0426, -0.0322, -0.0390,  0.2324, -0.0278, -0.0978, -0.0389,
         0.2141,  0.0720,  0.0648, -0.1112, -0.0090, -0.1281, -0.1207, -0.0615,
        -0.2076, -0.2079, -0.0118,  0.0922,  0.1898,  0.1068,  0.1190, -0.0719,
         0.0939,  0.0739, -0.0987,  0.0367, -0.0388,  0.0092,  0.0347, -0.0439,
        -0.0610,  0.0772, -0.1551, -0.0369,  0.0870,  0.0532, -0.1837,  0.0155,
        -0.1096,  0.0678,  0.0843,  0.0787,  0.2142,  0.1924,  0.1552,  0.1768,
         0.1713,  0.2411,  0.0896,  0.1200, -0.0910,  0.1800,  0.1274, -0.0302],
       device='cuda:0') torch.Size([128])
recurrent_blocks.3.bias_hh_l0 tensor([-0.0907,  0.0986,  0.1595,  0.0793,  0.0639, -0.0156,  0.2061,  0.0269,
         0.1238,  0.1457,  0.0653,  0.1437, -0.0694,  0.0027,  0.1160,  0.1225,
         0.1426,  0.1220,  0.0862,  0.0727,  0.1193, -0.0304,  0.1161, -0.1322,
        -0.0246,  0.0517,  0.2095, -0.1212,  0.1346, -0.0929,  0.1293, -0.0467,
        -0.1125, -0.0717,  0.1411, -0.2219, -0.0272,  0.2356,  0.2495, -0.2284,
         0.2257,  0.1425, -0.1413,  0.0668, -0.0812,  0.1030, -0.0332,  0.0424,
         0.2113,  0.0243,  0.1042, -0.2007,  0.0505, -0.0016, -0.0587,  0.2014,
         0.1267,  0.0290, -0.0755,  0.0852, -0.0277,  0.1327,  0.1680, -0.0804,
         0.0191, -0.0201,  0.0110,  0.0081, -0.1195,  0.0726,  0.0027,  0.0126,
        -0.2082, -0.2126, -0.0603,  0.1697,  0.0961,  0.0159, -0.0851,  0.0328,
         0.2244, -0.0645,  0.0177,  0.1421,  0.0086, -0.1300,  0.0085,  0.0639,
        -0.1195, -0.0908, -0.1547,  0.0030,  0.1949, -0.1866,  0.1273, -0.1340,
         0.2046,  0.2351, -0.1341,  0.0929, -0.1093,  0.0797,  0.2293, -0.2021,
         0.1132,  0.1936, -0.0695, -0.0042, -0.0767, -0.0422,  0.0639, -0.1974,
        -0.0655,  0.0253,  0.2627, -0.1072,  0.2371,  0.2283, -0.0505, -0.0016,
         0.1018,  0.2386, -0.0258, -0.0003, -0.0514,  0.1589, -0.0528, -0.1104],
       device='cuda:0') torch.Size([128])
recurrent_blocks.3.weight_ih_l0_reverse tensor([[ 1.8262e-01, -4.7198e-05,  5.1804e-02,  ...,  8.0441e-02,
          1.8292e-01,  1.3523e-02],
        [ 3.7689e-02,  3.3720e-02, -1.1769e-01,  ..., -1.8012e-02,
         -1.0433e-01, -3.2219e-02],
        [ 1.7609e-01, -4.0721e-02, -1.4380e-01,  ..., -1.4857e-02,
          5.4886e-02,  6.8417e-03],
        ...,
        [ 1.0083e-01,  9.4897e-02,  2.5292e-02,  ...,  3.6797e-02,
         -2.6200e-02,  6.9210e-03],
        [-9.4748e-02,  1.5905e-01, -2.1932e-01,  ..., -1.3939e-01,
          9.0352e-02, -5.9069e-02],
        [-9.4270e-02,  2.1257e-02, -1.7895e-01,  ..., -3.7018e-02,
          1.0561e-01, -1.6773e-02]], device='cuda:0') torch.Size([128, 64])
recurrent_blocks.3.weight_hh_l0_reverse tensor([[ 0.1087,  0.1011,  0.0635,  ...,  0.2453, -0.1247, -0.0734],
        [-0.1169, -0.1316,  0.1085,  ...,  0.0554, -0.0215,  0.0227],
        [-0.0626,  0.1320,  0.0522,  ...,  0.0961,  0.1804,  0.0136],
        ...,
        [ 0.0194, -0.0097, -0.0134,  ..., -0.1013,  0.2217,  0.1800],
        [-0.0804,  0.0530,  0.0535,  ...,  0.0435,  0.0683,  0.2426],
        [-0.0894, -0.1145, -0.0313,  ...,  0.1127,  0.0441,  0.0333]],
       device='cuda:0') torch.Size([128, 32])
recurrent_blocks.3.bias_ih_l0_reverse tensor([ 0.0013,  0.1754,  0.1616, -0.0670,  0.1974,  0.0950,  0.1888,  0.0099,
         0.1447, -0.0271, -0.0311, -0.0242,  0.1472,  0.1292, -0.0392,  0.1300,
         0.0773, -0.0923, -0.0118,  0.1497,  0.0805,  0.0655,  0.0134, -0.0323,
        -0.0139, -0.0805,  0.0298,  0.2501, -0.1030,  0.0308,  0.0248,  0.0289,
         0.0746,  0.0697,  0.2325, -0.0661,  0.0021, -0.0541,  0.0542, -0.2198,
        -0.1079, -0.0101,  0.0054,  0.1633, -0.0867,  0.2019, -0.1676,  0.0125,
        -0.0285,  0.1667, -0.1061,  0.1369,  0.1277,  0.0793, -0.0715,  0.1245,
         0.0718,  0.0059, -0.0600,  0.1694,  0.0541,  0.0447, -0.0959, -0.0786,
        -0.1705, -0.2314,  0.2416, -0.0321, -0.1769, -0.0473, -0.1231,  0.0100,
         0.1165, -0.0300, -0.0653,  0.0552, -0.1189, -0.1827,  0.0337, -0.1224,
        -0.1268,  0.2635,  0.0843, -0.0339,  0.1597, -0.0664,  0.1900, -0.1799,
         0.0280, -0.0378, -0.1201,  0.1889,  0.1116,  0.0713, -0.0734, -0.0416,
         0.1156, -0.0543,  0.0523, -0.0910,  0.2294, -0.0907,  0.1039, -0.2016,
        -0.0188,  0.1142,  0.1838,  0.1455, -0.0356,  0.1728,  0.0058, -0.0486,
        -0.1382, -0.0066,  0.1216, -0.0918,  0.0107,  0.1483,  0.0732, -0.0208,
        -0.0839, -0.0190, -0.1365,  0.1946,  0.1723, -0.2322,  0.0910, -0.0440],
       device='cuda:0') torch.Size([128])
recurrent_blocks.3.bias_hh_l0_reverse tensor([-0.0072, -0.0587,  0.0109, -0.0273,  0.0250, -0.0980,  0.2057,  0.0652,
         0.1696, -0.1713,  0.0911,  0.0386, -0.0024, -0.0394,  0.0123, -0.0260,
         0.2136, -0.0395,  0.0921,  0.1596,  0.1759,  0.1565,  0.1764, -0.0744,
        -0.0780,  0.1487, -0.0327,  0.0122, -0.0557, -0.0847,  0.1034,  0.1532,
        -0.1109, -0.1161,  0.2354,  0.0147,  0.0292,  0.0439,  0.1512, -0.0898,
         0.0656,  0.1291,  0.0609,  0.1866,  0.1376, -0.0713, -0.0622, -0.0352,
         0.0204, -0.0386, -0.1741,  0.1457, -0.0433,  0.1718, -0.0836,  0.1059,
        -0.2390,  0.0582, -0.0889,  0.1775,  0.0198,  0.0692,  0.0787,  0.0118,
         0.1138,  0.0211, -0.0837,  0.0853, -0.2411,  0.0174, -0.2207,  0.2330,
        -0.0971,  0.0737,  0.2442, -0.0488,  0.0761, -0.2200, -0.1680, -0.0108,
         0.0506,  0.0599,  0.0763, -0.0542,  0.1708, -0.0771, -0.0679,  0.0826,
         0.0682, -0.1821,  0.1617,  0.0429, -0.2009,  0.0797, -0.0516, -0.0411,
        -0.0230,  0.1095, -0.0374, -0.1284, -0.0835,  0.1849,  0.1773, -0.0306,
         0.0065, -0.0249, -0.0611, -0.0913,  0.0434,  0.0455,  0.0493,  0.0117,
         0.1818,  0.1457, -0.1018,  0.1693,  0.1750,  0.1552,  0.1567, -0.0807,
         0.0732,  0.0321, -0.1086,  0.2101,  0.2019,  0.0038,  0.0620, -0.1125],
       device='cuda:0') torch.Size([128])
fc_blocks.0.0.weight tensor([[ 0.0375,  0.0182, -0.0735,  ..., -0.0643, -0.0574, -0.0481],
        [ 0.0659,  0.0943, -0.0031,  ...,  0.0224, -0.0130,  0.0382],
        [ 0.1237,  0.1323,  0.0495,  ..., -0.1685,  0.1646,  0.1374],
        ...,
        [-0.1008,  0.0511,  0.0803,  ...,  0.1685,  0.0041,  0.0793],
        [-0.2001, -0.0745, -0.1348,  ...,  0.0714, -0.0144, -0.1835],
        [ 0.1215,  0.1869, -0.0090,  ...,  0.0101,  0.2045,  0.1331]],
       device='cuda:0') torch.Size([32, 64])
fc_blocks.0.0.bias tensor([ 0.0447,  0.1569,  0.1949, -0.1595, -0.1682, -0.0124, -0.0403,  0.1666,
        -0.0585,  0.0008, -0.0747, -0.0615, -0.1705, -0.0402, -0.1416,  0.0782,
         0.1024,  0.1078, -0.0376, -0.0640,  0.0383, -0.0502, -0.0049, -0.1794,
         0.2066, -0.0801, -0.0078,  0.0666, -0.0298, -0.0551,  0.0213,  0.0542],
       device='cuda:0') torch.Size([32])
fc_blocks.1.0.weight tensor([[-0.1182,  0.0187,  0.0139,  0.1972,  0.1974,  0.0249, -0.1080, -0.1095,
          0.0891,  0.0737,  0.1174, -0.0705, -0.0849, -0.1181, -0.0702, -0.1656,
         -0.2105,  0.0595, -0.1677, -0.1262, -0.0131,  0.1228, -0.0095,  0.0637,
          0.0075,  0.0872,  0.1275,  0.0527, -0.0567, -0.0091, -0.0994, -0.0670],
        [ 0.0343,  0.2172,  0.1720,  0.0308, -0.1127,  0.0776, -0.0560,  0.1404,
         -0.0617, -0.1991, -0.1345, -0.1382, -0.0177, -0.0230, -0.1387,  0.0116,
          0.0340,  0.1938, -0.0330, -0.1582, -0.0953, -0.2070,  0.2523, -0.1853,
         -0.0265,  0.0431,  0.0966, -0.2110, -0.0095,  0.0533, -0.2089,  0.2123],
        [ 0.0860, -0.2186, -0.0665, -0.1244, -0.1037, -0.0236, -0.1120, -0.1158,
          0.0105,  0.1172,  0.0410, -0.1068,  0.0070,  0.1225, -0.0644, -0.1966,
         -0.0882,  0.0917,  0.1264, -0.1141,  0.0042,  0.0826,  0.0072,  0.1062,
         -0.0056,  0.0353,  0.0022, -0.1766, -0.1927,  0.0059,  0.0978, -0.1126],
        [ 0.2240,  0.1439,  0.1409, -0.0556, -0.0873,  0.0050,  0.2351,  0.2071,
         -0.0400,  0.0134,  0.0618, -0.0973, -0.1739,  0.0414, -0.1820,  0.2159,
          0.2560,  0.1589, -0.0613,  0.1340, -0.1093,  0.0883,  0.1634,  0.0340,
          0.1247,  0.1257,  0.1139,  0.0485, -0.0325, -0.1292, -0.0918,  0.2049],
        [-0.0413,  0.0440,  0.0989, -0.1558, -0.2205, -0.1246, -0.0338, -0.0217,
         -0.0869,  0.0728,  0.0876,  0.0195, -0.0706,  0.1315, -0.2277,  0.2494,
          0.0732, -0.0846, -0.1547, -0.1263,  0.0059,  0.0023, -0.0420,  0.0016,
          0.0988,  0.0829, -0.1541, -0.0068,  0.1554, -0.0128,  0.0186,  0.1726],
        [-0.0063,  0.0445,  0.1333,  0.0612,  0.0769, -0.0003,  0.1679, -0.0644,
          0.1599,  0.0261,  0.1947,  0.0676, -0.1687,  0.0159,  0.1972,  0.1072,
          0.0929, -0.0844,  0.0167, -0.0108,  0.1393,  0.0476, -0.0729,  0.0175,
          0.0106, -0.0473, -0.1157, -0.0145,  0.1289,  0.1483, -0.0127, -0.1063],
        [-0.1540, -0.2251, -0.0519,  0.0845,  0.1012,  0.0865, -0.1228, -0.0115,
          0.1214, -0.1634, -0.0499, -0.0874, -0.1283, -0.0669,  0.1118, -0.0410,
         -0.1553,  0.0698,  0.1589,  0.0981,  0.0982, -0.0776,  0.0839,  0.0011,
         -0.0791,  0.0012,  0.1146, -0.0478,  0.1948, -0.1085,  0.0710,  0.0519],
        [ 0.1224, -0.1760, -0.1208,  0.1442, -0.0230,  0.0186,  0.0161, -0.0391,
          0.0572,  0.0839,  0.2135,  0.1198, -0.0482,  0.1689, -0.0050,  0.0003,
          0.0380,  0.1012, -0.0571,  0.0788,  0.2473,  0.0839, -0.0548,  0.2564,
          0.0355, -0.0714,  0.1146,  0.1913, -0.1463,  0.1609,  0.1470, -0.0915],
        [-0.1662, -0.0852,  0.0859, -0.0384,  0.2045,  0.1165,  0.0338, -0.0863,
          0.0345,  0.0515,  0.1114,  0.1313,  0.1874, -0.0143,  0.1641,  0.0124,
         -0.0616,  0.0079, -0.0752, -0.0411,  0.1037,  0.1039, -0.2001,  0.1114,
          0.1104, -0.0269,  0.1274,  0.0702,  0.0983,  0.1454, -0.0583,  0.0271],
        [-0.1090,  0.0266, -0.1564,  0.2139,  0.2214,  0.1348, -0.2102, -0.1249,
          0.0260, -0.0336,  0.0604, -0.0085,  0.0899, -0.0983,  0.1059, -0.0932,
          0.0614, -0.1845,  0.0297,  0.0042,  0.0023, -0.0991, -0.0067, -0.1030,
         -0.2020, -0.0193,  0.0674, -0.0142,  0.1307, -0.0723,  0.1802, -0.0167],
        [-0.0328, -0.0012,  0.1593, -0.2418,  0.0283,  0.0244, -0.0927,  0.2180,
          0.2032, -0.0276,  0.0997, -0.1575, -0.1777,  0.1214, -0.1735,  0.1808,
          0.2777,  0.1750,  0.0547,  0.1330,  0.1792, -0.0963,  0.0646, -0.1022,
          0.2368,  0.1038, -0.1194, -0.1342,  0.0038, -0.0927, -0.2433,  0.1266],
        [ 0.1515,  0.0731,  0.0705, -0.1030,  0.0146, -0.1482,  0.1429,  0.2247,
          0.1596,  0.1579,  0.0787, -0.0313, -0.0393,  0.0570, -0.0677, -0.1095,
         -0.0644,  0.1269,  0.0940, -0.0476,  0.1183,  0.0736,  0.2281, -0.0169,
          0.0055,  0.1964,  0.0581,  0.1762, -0.1517, -0.1653,  0.1434,  0.1702],
        [-0.0870,  0.1615, -0.0700,  0.1656, -0.1117,  0.1308,  0.0651,  0.1193,
          0.1307, -0.0755, -0.0819, -0.1015,  0.1452,  0.0816,  0.1690, -0.0653,
         -0.0830,  0.1395, -0.0914, -0.1426,  0.0909,  0.1077, -0.1397, -0.0871,
          0.0761, -0.0213,  0.1696, -0.0690,  0.0724,  0.1490,  0.0402,  0.1421],
        [-0.1092,  0.0571,  0.0637, -0.1281,  0.0319,  0.0686, -0.1758,  0.0056,
         -0.0932, -0.1467,  0.1050, -0.0213,  0.1731,  0.0588,  0.1950, -0.2490,
         -0.2314,  0.0851, -0.0135, -0.0037,  0.0525, -0.1176, -0.1103,  0.0682,
         -0.0627,  0.0675,  0.0480, -0.0381, -0.0255,  0.0780, -0.0461, -0.1771],
        [-0.1340, -0.1848, -0.0796,  0.0825,  0.0713, -0.0648,  0.1084, -0.0326,
         -0.0235, -0.2151, -0.1562, -0.1953,  0.0326, -0.0705, -0.0309, -0.0317,
          0.0537, -0.0929,  0.0586,  0.0835,  0.0069, -0.0514, -0.1420, -0.1887,
         -0.1431, -0.0687, -0.0698,  0.0164, -0.0559, -0.0534,  0.0256, -0.1278],
        [-0.2445, -0.0993, -0.2341,  0.0580,  0.2002,  0.0401,  0.0293,  0.0992,
          0.1025, -0.0080, -0.1538,  0.2055,  0.1550, -0.0462,  0.0245,  0.0537,
          0.1075,  0.0719,  0.1379,  0.1086, -0.0844,  0.1927,  0.0668, -0.0074,
         -0.1857,  0.1580,  0.0878,  0.0563, -0.0716, -0.0795,  0.1873, -0.1429]],
       device='cuda:0') torch.Size([16, 32])
fc_blocks.1.0.bias tensor([ 0.0818,  0.1533, -0.1266,  0.2238,  0.0436,  0.0432, -0.0890, -0.1340,
        -0.1178, -0.0093,  0.0918,  0.2178,  0.0128, -0.0058,  0.0357, -0.1834],
       device='cuda:0') torch.Size([16])
fc_blocks.2.0.weight tensor([[-0.0305,  0.1966, -0.1804,  0.1940,  0.1391,  0.0718, -0.0213,  0.1008,
         -0.0564, -0.0245,  0.2312,  0.1611,  0.1132, -0.0811, -0.1486, -0.1943],
        [-0.1783,  0.1840, -0.0622, -0.1020, -0.0707, -0.0522, -0.0183,  0.0322,
          0.1488, -0.1499,  0.0094, -0.1103, -0.0808, -0.1754, -0.0979, -0.2299],
        [ 0.0533, -0.0061,  0.1306, -0.0158,  0.2773,  0.0282, -0.1260,  0.3196,
         -0.2817, -0.0319, -0.1340, -0.0395,  0.0892, -0.0496, -0.0537,  0.0869],
        [ 0.0682, -0.1620,  0.1505, -0.1877, -0.1740,  0.0819, -0.2625,  0.1538,
         -0.0617,  0.0126,  0.0057, -0.1055,  0.1954,  0.1306,  0.1503,  0.2077],
        [-0.2873, -0.2800,  0.0912, -0.0042,  0.0600,  0.3105,  0.1295, -0.3074,
          0.0484,  0.1416, -0.0927,  0.1401, -0.0902, -0.0884,  0.1206, -0.2428],
        [ 0.0308,  0.0981,  0.2172,  0.0263, -0.0132,  0.0773, -0.0076, -0.1020,
          0.1903, -0.2268,  0.1621,  0.1475, -0.1086, -0.1623,  0.1897,  0.0832],
        [ 0.0520,  0.0581, -0.3046,  0.0477,  0.1925, -0.0290,  0.0215, -0.0648,
          0.0882, -0.2393,  0.2032, -0.0878, -0.1172, -0.2016,  0.1183, -0.2755],
        [-0.2777, -0.2544, -0.2193,  0.0282, -0.0211,  0.3170, -0.1984,  0.0104,
          0.0660,  0.1614,  0.0754,  0.1161, -0.2546, -0.0169, -0.1308, -0.0246]],
       device='cuda:0') torch.Size([8, 16])
fc_blocks.2.0.bias tensor([ 0.3194,  0.0183, -0.2133, -0.1499, -0.3160, -0.0282, -0.0754, -0.1718],
       device='cuda:0') torch.Size([8])
fc_blocks.3.0.weight tensor([[ 0.2608,  0.2370,  0.0801, -0.0237, -0.1925,  0.1948,  0.0924, -0.2174],
        [-0.2019,  0.0393,  0.2707, -0.0562,  0.2280,  0.1220,  0.2593,  0.1419],
        [ 0.1734, -0.0275, -0.0547, -0.2073, -0.1634,  0.1456,  0.0412, -0.0907],
        [ 0.0711,  0.3433, -0.0518,  0.3161,  0.1750,  0.0519,  0.2740,  0.2451]],
       device='cuda:0') torch.Size([4, 8])
fc_blocks.3.0.bias tensor([ 0.3069, -0.0089,  0.4439, -0.3896], device='cuda:0') torch.Size([4])
fc_blocks.4.0.weight tensor([[-0.1798,  0.0512,  0.2674, -0.5587],
        [ 0.5315, -0.1947,  0.0988, -0.5144]], device='cuda:0') torch.Size([2, 4])
fc_blocks.4.0.bias tensor([-0.2722, -0.3742], device='cuda:0') torch.Size([2])
