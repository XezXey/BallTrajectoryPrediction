==============================================Features==============================================
Prediction = depth, Environment = unity
Available features :  ['x-0', 'y-1', 'z-2', 'u-3', 'v-4', 'd-5', 'eot-6', 'og-7', 'rad-8', 'f_sin-9', 'f_cos-10', 'g-11']
Selected features :  [6]
1. input_col =  [3, 4, 6]
2. input_startpos_col =  [3, 4, 5, 6]
3. gt_col =  [5, 6]
4. gt_startpos_col =  [0, 1, 2, 6]
5. gt_xyz_col =  [0, 1, 2, 6]
====================================================================================================
[#]Training : Trajectory Estimation
Mixed:   0%|                                                                                                | 0/1 [00:00<?, ?it/s]Mixed: 100%|████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 19.21it/s]
===============================Dataset shape===============================
Mixed : (2920,)
===========================================================================
Mixed:   0%|                                                                                                | 0/2 [00:00<?, ?it/s]Mixed: 100%|████████████████████████████████████████████████████████████████████████████████████████| 2/2 [00:00<00:00, 63.19it/s]
===============================Dataset shape===============================
Mixed : (1729,)
===========================================================================
======================================================Summary Batch (batch_size = 10)=========================================================================
Input batch [0] : batch=torch.Size([10, 630, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 630, 3]), initial position=torch.Size([10, 1, 4])
gt batch [0] : batch=torch.Size([10, 630, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 631, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [1] : batch=torch.Size([10, 569, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 569, 3]), initial position=torch.Size([10, 1, 4])
gt batch [1] : batch=torch.Size([10, 569, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 570, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [2] : batch=torch.Size([10, 651, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 651, 3]), initial position=torch.Size([10, 1, 4])
gt batch [2] : batch=torch.Size([10, 651, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 652, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [3] : batch=torch.Size([10, 600, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 600, 3]), initial position=torch.Size([10, 1, 4])
gt batch [3] : batch=torch.Size([10, 600, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 601, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [4] : batch=torch.Size([10, 404, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 404, 3]), initial position=torch.Size([10, 1, 4])
gt batch [4] : batch=torch.Size([10, 404, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 405, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [5] : batch=torch.Size([10, 615, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 615, 3]), initial position=torch.Size([10, 1, 4])
gt batch [5] : batch=torch.Size([10, 615, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 616, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [6] : batch=torch.Size([10, 546, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 546, 3]), initial position=torch.Size([10, 1, 4])
gt batch [6] : batch=torch.Size([10, 546, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 547, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [7] : batch=torch.Size([10, 616, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 616, 3]), initial position=torch.Size([10, 1, 4])
gt batch [7] : batch=torch.Size([10, 616, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 617, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [8] : batch=torch.Size([10, 689, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 689, 3]), initial position=torch.Size([10, 1, 4])
gt batch [8] : batch=torch.Size([10, 689, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 690, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [9] : batch=torch.Size([10, 596, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 596, 3]), initial position=torch.Size([10, 1, 4])
gt batch [9] : batch=torch.Size([10, 596, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 597, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [10] : batch=torch.Size([10, 614, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 614, 3]), initial position=torch.Size([10, 1, 4])
gt batch [10] : batch=torch.Size([10, 614, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 615, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [11] : batch=torch.Size([10, 687, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 687, 3]), initial position=torch.Size([10, 1, 4])
gt batch [11] : batch=torch.Size([10, 687, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 688, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [12] : batch=torch.Size([10, 660, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 660, 3]), initial position=torch.Size([10, 1, 4])
gt batch [12] : batch=torch.Size([10, 660, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 661, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [13] : batch=torch.Size([10, 594, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 594, 3]), initial position=torch.Size([10, 1, 4])
gt batch [13] : batch=torch.Size([10, 594, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 595, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [14] : batch=torch.Size([10, 602, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 602, 3]), initial position=torch.Size([10, 1, 4])
gt batch [14] : batch=torch.Size([10, 602, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 603, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [15] : batch=torch.Size([10, 575, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 575, 3]), initial position=torch.Size([10, 1, 4])
gt batch [15] : batch=torch.Size([10, 575, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 576, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [16] : batch=torch.Size([10, 580, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 580, 3]), initial position=torch.Size([10, 1, 4])
gt batch [16] : batch=torch.Size([10, 580, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 581, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [17] : batch=torch.Size([10, 559, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 559, 3]), initial position=torch.Size([10, 1, 4])
gt batch [17] : batch=torch.Size([10, 559, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 560, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [18] : batch=torch.Size([10, 514, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 514, 3]), initial position=torch.Size([10, 1, 4])
gt batch [18] : batch=torch.Size([10, 514, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 515, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [19] : batch=torch.Size([10, 542, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 542, 3]), initial position=torch.Size([10, 1, 4])
gt batch [19] : batch=torch.Size([10, 542, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 543, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [20] : batch=torch.Size([10, 668, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 668, 3]), initial position=torch.Size([10, 1, 4])
gt batch [20] : batch=torch.Size([10, 668, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 669, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [21] : batch=torch.Size([10, 603, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 603, 3]), initial position=torch.Size([10, 1, 4])
gt batch [21] : batch=torch.Size([10, 603, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 604, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [22] : batch=torch.Size([10, 442, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 442, 3]), initial position=torch.Size([10, 1, 4])
gt batch [22] : batch=torch.Size([10, 442, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 443, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [23] : batch=torch.Size([10, 723, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 723, 3]), initial position=torch.Size([10, 1, 4])
gt batch [23] : batch=torch.Size([10, 723, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 724, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [24] : batch=torch.Size([10, 597, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 597, 3]), initial position=torch.Size([10, 1, 4])
gt batch [24] : batch=torch.Size([10, 597, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 598, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [25] : batch=torch.Size([10, 688, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 688, 3]), initial position=torch.Size([10, 1, 4])
gt batch [25] : batch=torch.Size([10, 688, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 689, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [26] : batch=torch.Size([10, 508, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 508, 3]), initial position=torch.Size([10, 1, 4])
gt batch [26] : batch=torch.Size([10, 508, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 509, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [27] : batch=torch.Size([10, 570, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 570, 3]), initial position=torch.Size([10, 1, 4])
gt batch [27] : batch=torch.Size([10, 570, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 571, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [28] : batch=torch.Size([10, 633, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 633, 3]), initial position=torch.Size([10, 1, 4])
gt batch [28] : batch=torch.Size([10, 633, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 634, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [29] : batch=torch.Size([10, 565, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 565, 3]), initial position=torch.Size([10, 1, 4])
gt batch [29] : batch=torch.Size([10, 565, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 566, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [30] : batch=torch.Size([10, 557, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 557, 3]), initial position=torch.Size([10, 1, 4])
gt batch [30] : batch=torch.Size([10, 557, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 558, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [31] : batch=torch.Size([10, 563, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 563, 3]), initial position=torch.Size([10, 1, 4])
gt batch [31] : batch=torch.Size([10, 563, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 564, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [32] : batch=torch.Size([10, 631, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 631, 3]), initial position=torch.Size([10, 1, 4])
gt batch [32] : batch=torch.Size([10, 631, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 632, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [33] : batch=torch.Size([10, 509, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 509, 3]), initial position=torch.Size([10, 1, 4])
gt batch [33] : batch=torch.Size([10, 509, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 510, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [34] : batch=torch.Size([10, 636, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 636, 3]), initial position=torch.Size([10, 1, 4])
gt batch [34] : batch=torch.Size([10, 636, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 637, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [35] : batch=torch.Size([10, 622, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 622, 3]), initial position=torch.Size([10, 1, 4])
gt batch [35] : batch=torch.Size([10, 622, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 623, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [36] : batch=torch.Size([10, 588, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 588, 3]), initial position=torch.Size([10, 1, 4])
gt batch [36] : batch=torch.Size([10, 588, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 589, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [37] : batch=torch.Size([10, 632, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 632, 3]), initial position=torch.Size([10, 1, 4])
gt batch [37] : batch=torch.Size([10, 632, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 633, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [38] : batch=torch.Size([10, 599, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 599, 3]), initial position=torch.Size([10, 1, 4])
gt batch [38] : batch=torch.Size([10, 599, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 600, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [39] : batch=torch.Size([10, 711, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 711, 3]), initial position=torch.Size([10, 1, 4])
gt batch [39] : batch=torch.Size([10, 711, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 712, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [40] : batch=torch.Size([10, 665, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 665, 3]), initial position=torch.Size([10, 1, 4])
gt batch [40] : batch=torch.Size([10, 665, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 666, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [41] : batch=torch.Size([10, 576, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 576, 3]), initial position=torch.Size([10, 1, 4])
gt batch [41] : batch=torch.Size([10, 576, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 577, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [42] : batch=torch.Size([10, 560, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 560, 3]), initial position=torch.Size([10, 1, 4])
gt batch [42] : batch=torch.Size([10, 560, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 561, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [43] : batch=torch.Size([10, 620, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 620, 3]), initial position=torch.Size([10, 1, 4])
gt batch [43] : batch=torch.Size([10, 620, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 621, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [44] : batch=torch.Size([10, 643, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 643, 3]), initial position=torch.Size([10, 1, 4])
gt batch [44] : batch=torch.Size([10, 643, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 644, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [45] : batch=torch.Size([10, 496, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 496, 3]), initial position=torch.Size([10, 1, 4])
gt batch [45] : batch=torch.Size([10, 496, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 497, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [46] : batch=torch.Size([10, 558, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 558, 3]), initial position=torch.Size([10, 1, 4])
gt batch [46] : batch=torch.Size([10, 558, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 559, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [47] : batch=torch.Size([10, 659, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 659, 3]), initial position=torch.Size([10, 1, 4])
gt batch [47] : batch=torch.Size([10, 659, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 660, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [48] : batch=torch.Size([10, 593, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 593, 3]), initial position=torch.Size([10, 1, 4])
gt batch [48] : batch=torch.Size([10, 593, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 594, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [49] : batch=torch.Size([10, 574, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 574, 3]), initial position=torch.Size([10, 1, 4])
gt batch [49] : batch=torch.Size([10, 574, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 575, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [50] : batch=torch.Size([10, 557, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 557, 3]), initial position=torch.Size([10, 1, 4])
gt batch [50] : batch=torch.Size([10, 557, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 558, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [51] : batch=torch.Size([10, 644, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 644, 3]), initial position=torch.Size([10, 1, 4])
gt batch [51] : batch=torch.Size([10, 644, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 645, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [52] : batch=torch.Size([10, 620, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 620, 3]), initial position=torch.Size([10, 1, 4])
gt batch [52] : batch=torch.Size([10, 620, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 621, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [53] : batch=torch.Size([10, 592, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 592, 3]), initial position=torch.Size([10, 1, 4])
gt batch [53] : batch=torch.Size([10, 592, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 593, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [54] : batch=torch.Size([10, 572, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 572, 3]), initial position=torch.Size([10, 1, 4])
gt batch [54] : batch=torch.Size([10, 572, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 573, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [55] : batch=torch.Size([10, 525, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 525, 3]), initial position=torch.Size([10, 1, 4])
gt batch [55] : batch=torch.Size([10, 525, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 526, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [56] : batch=torch.Size([10, 663, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 663, 3]), initial position=torch.Size([10, 1, 4])
gt batch [56] : batch=torch.Size([10, 663, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 664, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [57] : batch=torch.Size([10, 606, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 606, 3]), initial position=torch.Size([10, 1, 4])
gt batch [57] : batch=torch.Size([10, 606, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 607, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [58] : batch=torch.Size([10, 562, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 562, 3]), initial position=torch.Size([10, 1, 4])
gt batch [58] : batch=torch.Size([10, 562, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 563, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [59] : batch=torch.Size([10, 616, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 616, 3]), initial position=torch.Size([10, 1, 4])
gt batch [59] : batch=torch.Size([10, 616, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 617, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [60] : batch=torch.Size([10, 591, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 591, 3]), initial position=torch.Size([10, 1, 4])
gt batch [60] : batch=torch.Size([10, 591, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 592, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [61] : batch=torch.Size([10, 555, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 555, 3]), initial position=torch.Size([10, 1, 4])
gt batch [61] : batch=torch.Size([10, 555, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 556, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [62] : batch=torch.Size([10, 536, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 536, 3]), initial position=torch.Size([10, 1, 4])
gt batch [62] : batch=torch.Size([10, 536, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 537, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [63] : batch=torch.Size([10, 610, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 610, 3]), initial position=torch.Size([10, 1, 4])
gt batch [63] : batch=torch.Size([10, 610, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 611, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [64] : batch=torch.Size([10, 802, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 802, 3]), initial position=torch.Size([10, 1, 4])
gt batch [64] : batch=torch.Size([10, 802, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 803, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [65] : batch=torch.Size([10, 643, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 643, 3]), initial position=torch.Size([10, 1, 4])
gt batch [65] : batch=torch.Size([10, 643, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 644, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [66] : batch=torch.Size([10, 597, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 597, 3]), initial position=torch.Size([10, 1, 4])
gt batch [66] : batch=torch.Size([10, 597, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 598, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [67] : batch=torch.Size([10, 715, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 715, 3]), initial position=torch.Size([10, 1, 4])
gt batch [67] : batch=torch.Size([10, 715, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 716, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [68] : batch=torch.Size([10, 581, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 581, 3]), initial position=torch.Size([10, 1, 4])
gt batch [68] : batch=torch.Size([10, 581, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 582, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [69] : batch=torch.Size([10, 601, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 601, 3]), initial position=torch.Size([10, 1, 4])
gt batch [69] : batch=torch.Size([10, 601, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 602, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [70] : batch=torch.Size([10, 544, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 544, 3]), initial position=torch.Size([10, 1, 4])
gt batch [70] : batch=torch.Size([10, 544, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 545, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [71] : batch=torch.Size([10, 681, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 681, 3]), initial position=torch.Size([10, 1, 4])
gt batch [71] : batch=torch.Size([10, 681, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 682, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [72] : batch=torch.Size([10, 788, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 788, 3]), initial position=torch.Size([10, 1, 4])
gt batch [72] : batch=torch.Size([10, 788, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 789, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [73] : batch=torch.Size([10, 680, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 680, 3]), initial position=torch.Size([10, 1, 4])
gt batch [73] : batch=torch.Size([10, 680, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 681, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [74] : batch=torch.Size([10, 552, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 552, 3]), initial position=torch.Size([10, 1, 4])
gt batch [74] : batch=torch.Size([10, 552, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 553, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [75] : batch=torch.Size([10, 670, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 670, 3]), initial position=torch.Size([10, 1, 4])
gt batch [75] : batch=torch.Size([10, 670, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 671, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [76] : batch=torch.Size([10, 732, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 732, 3]), initial position=torch.Size([10, 1, 4])
gt batch [76] : batch=torch.Size([10, 732, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 733, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [77] : batch=torch.Size([10, 704, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 704, 3]), initial position=torch.Size([10, 1, 4])
gt batch [77] : batch=torch.Size([10, 704, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 705, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [78] : batch=torch.Size([10, 556, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 556, 3]), initial position=torch.Size([10, 1, 4])
gt batch [78] : batch=torch.Size([10, 556, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 557, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [79] : batch=torch.Size([10, 581, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 581, 3]), initial position=torch.Size([10, 1, 4])
gt batch [79] : batch=torch.Size([10, 581, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 582, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [80] : batch=torch.Size([10, 562, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 562, 3]), initial position=torch.Size([10, 1, 4])
gt batch [80] : batch=torch.Size([10, 562, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 563, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [81] : batch=torch.Size([10, 558, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 558, 3]), initial position=torch.Size([10, 1, 4])
gt batch [81] : batch=torch.Size([10, 558, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 559, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [82] : batch=torch.Size([10, 515, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 515, 3]), initial position=torch.Size([10, 1, 4])
gt batch [82] : batch=torch.Size([10, 515, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 516, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [83] : batch=torch.Size([10, 599, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 599, 3]), initial position=torch.Size([10, 1, 4])
gt batch [83] : batch=torch.Size([10, 599, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 600, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [84] : batch=torch.Size([10, 734, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 734, 3]), initial position=torch.Size([10, 1, 4])
gt batch [84] : batch=torch.Size([10, 734, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 735, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [85] : batch=torch.Size([10, 646, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 646, 3]), initial position=torch.Size([10, 1, 4])
gt batch [85] : batch=torch.Size([10, 646, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 647, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [86] : batch=torch.Size([10, 515, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 515, 3]), initial position=torch.Size([10, 1, 4])
gt batch [86] : batch=torch.Size([10, 515, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 516, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [87] : batch=torch.Size([10, 691, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 691, 3]), initial position=torch.Size([10, 1, 4])
gt batch [87] : batch=torch.Size([10, 691, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 692, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [88] : batch=torch.Size([10, 669, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 669, 3]), initial position=torch.Size([10, 1, 4])
gt batch [88] : batch=torch.Size([10, 669, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 670, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [89] : batch=torch.Size([10, 572, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 572, 3]), initial position=torch.Size([10, 1, 4])
gt batch [89] : batch=torch.Size([10, 572, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 573, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [90] : batch=torch.Size([10, 526, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 526, 3]), initial position=torch.Size([10, 1, 4])
gt batch [90] : batch=torch.Size([10, 526, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 527, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [91] : batch=torch.Size([10, 580, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 580, 3]), initial position=torch.Size([10, 1, 4])
gt batch [91] : batch=torch.Size([10, 580, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 581, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [92] : batch=torch.Size([10, 708, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 708, 3]), initial position=torch.Size([10, 1, 4])
gt batch [92] : batch=torch.Size([10, 708, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 709, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [93] : batch=torch.Size([10, 581, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 581, 3]), initial position=torch.Size([10, 1, 4])
gt batch [93] : batch=torch.Size([10, 581, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 582, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [94] : batch=torch.Size([10, 592, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 592, 3]), initial position=torch.Size([10, 1, 4])
gt batch [94] : batch=torch.Size([10, 592, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 593, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [95] : batch=torch.Size([10, 594, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 594, 3]), initial position=torch.Size([10, 1, 4])
gt batch [95] : batch=torch.Size([10, 594, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 595, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [96] : batch=torch.Size([10, 611, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 611, 3]), initial position=torch.Size([10, 1, 4])
gt batch [96] : batch=torch.Size([10, 611, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 612, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [97] : batch=torch.Size([10, 627, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 627, 3]), initial position=torch.Size([10, 1, 4])
gt batch [97] : batch=torch.Size([10, 627, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 628, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [98] : batch=torch.Size([10, 557, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 557, 3]), initial position=torch.Size([10, 1, 4])
gt batch [98] : batch=torch.Size([10, 557, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 558, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [99] : batch=torch.Size([10, 651, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 651, 3]), initial position=torch.Size([10, 1, 4])
gt batch [99] : batch=torch.Size([10, 651, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 652, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [100] : batch=torch.Size([10, 548, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 548, 3]), initial position=torch.Size([10, 1, 4])
gt batch [100] : batch=torch.Size([10, 548, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 549, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [101] : batch=torch.Size([10, 548, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 548, 3]), initial position=torch.Size([10, 1, 4])
gt batch [101] : batch=torch.Size([10, 548, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 549, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [102] : batch=torch.Size([10, 577, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 577, 3]), initial position=torch.Size([10, 1, 4])
gt batch [102] : batch=torch.Size([10, 577, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 578, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [103] : batch=torch.Size([10, 577, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 577, 3]), initial position=torch.Size([10, 1, 4])
gt batch [103] : batch=torch.Size([10, 577, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 578, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [104] : batch=torch.Size([10, 592, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 592, 3]), initial position=torch.Size([10, 1, 4])
gt batch [104] : batch=torch.Size([10, 592, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 593, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [105] : batch=torch.Size([10, 540, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 540, 3]), initial position=torch.Size([10, 1, 4])
gt batch [105] : batch=torch.Size([10, 540, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 541, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [106] : batch=torch.Size([10, 525, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 525, 3]), initial position=torch.Size([10, 1, 4])
gt batch [106] : batch=torch.Size([10, 525, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 526, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [107] : batch=torch.Size([10, 597, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 597, 3]), initial position=torch.Size([10, 1, 4])
gt batch [107] : batch=torch.Size([10, 597, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 598, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [108] : batch=torch.Size([10, 517, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 517, 3]), initial position=torch.Size([10, 1, 4])
gt batch [108] : batch=torch.Size([10, 517, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 518, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [109] : batch=torch.Size([10, 496, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 496, 3]), initial position=torch.Size([10, 1, 4])
gt batch [109] : batch=torch.Size([10, 496, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 497, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [110] : batch=torch.Size([10, 595, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 595, 3]), initial position=torch.Size([10, 1, 4])
gt batch [110] : batch=torch.Size([10, 595, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 596, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [111] : batch=torch.Size([10, 548, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 548, 3]), initial position=torch.Size([10, 1, 4])
gt batch [111] : batch=torch.Size([10, 548, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 549, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [112] : batch=torch.Size([10, 552, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 552, 3]), initial position=torch.Size([10, 1, 4])
gt batch [112] : batch=torch.Size([10, 552, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 553, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [113] : batch=torch.Size([10, 619, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 619, 3]), initial position=torch.Size([10, 1, 4])
gt batch [113] : batch=torch.Size([10, 619, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 620, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [114] : batch=torch.Size([10, 579, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 579, 3]), initial position=torch.Size([10, 1, 4])
gt batch [114] : batch=torch.Size([10, 579, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 580, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [115] : batch=torch.Size([10, 660, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 660, 3]), initial position=torch.Size([10, 1, 4])
gt batch [115] : batch=torch.Size([10, 660, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 661, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [116] : batch=torch.Size([10, 582, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 582, 3]), initial position=torch.Size([10, 1, 4])
gt batch [116] : batch=torch.Size([10, 582, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 583, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [117] : batch=torch.Size([10, 491, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 491, 3]), initial position=torch.Size([10, 1, 4])
gt batch [117] : batch=torch.Size([10, 491, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 492, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [118] : batch=torch.Size([10, 560, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 560, 3]), initial position=torch.Size([10, 1, 4])
gt batch [118] : batch=torch.Size([10, 560, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 561, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [119] : batch=torch.Size([10, 676, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 676, 3]), initial position=torch.Size([10, 1, 4])
gt batch [119] : batch=torch.Size([10, 676, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 677, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [120] : batch=torch.Size([10, 758, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 758, 3]), initial position=torch.Size([10, 1, 4])
gt batch [120] : batch=torch.Size([10, 758, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 759, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [121] : batch=torch.Size([10, 535, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 535, 3]), initial position=torch.Size([10, 1, 4])
gt batch [121] : batch=torch.Size([10, 535, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 536, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [122] : batch=torch.Size([10, 657, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 657, 3]), initial position=torch.Size([10, 1, 4])
gt batch [122] : batch=torch.Size([10, 657, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 658, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [123] : batch=torch.Size([10, 603, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 603, 3]), initial position=torch.Size([10, 1, 4])
gt batch [123] : batch=torch.Size([10, 603, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 604, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [124] : batch=torch.Size([10, 728, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 728, 3]), initial position=torch.Size([10, 1, 4])
gt batch [124] : batch=torch.Size([10, 728, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 729, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [125] : batch=torch.Size([10, 677, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 677, 3]), initial position=torch.Size([10, 1, 4])
gt batch [125] : batch=torch.Size([10, 677, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 678, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [126] : batch=torch.Size([10, 581, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 581, 3]), initial position=torch.Size([10, 1, 4])
gt batch [126] : batch=torch.Size([10, 581, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 582, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [127] : batch=torch.Size([10, 617, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 617, 3]), initial position=torch.Size([10, 1, 4])
gt batch [127] : batch=torch.Size([10, 617, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 618, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [128] : batch=torch.Size([10, 606, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 606, 3]), initial position=torch.Size([10, 1, 4])
gt batch [128] : batch=torch.Size([10, 606, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 607, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [129] : batch=torch.Size([10, 564, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 564, 3]), initial position=torch.Size([10, 1, 4])
gt batch [129] : batch=torch.Size([10, 564, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 565, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [130] : batch=torch.Size([10, 540, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 540, 3]), initial position=torch.Size([10, 1, 4])
gt batch [130] : batch=torch.Size([10, 540, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 541, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [131] : batch=torch.Size([10, 718, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 718, 3]), initial position=torch.Size([10, 1, 4])
gt batch [131] : batch=torch.Size([10, 718, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 719, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [132] : batch=torch.Size([10, 609, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 609, 3]), initial position=torch.Size([10, 1, 4])
gt batch [132] : batch=torch.Size([10, 609, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 610, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [133] : batch=torch.Size([10, 642, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 642, 3]), initial position=torch.Size([10, 1, 4])
gt batch [133] : batch=torch.Size([10, 642, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 643, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [134] : batch=torch.Size([10, 656, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 656, 3]), initial position=torch.Size([10, 1, 4])
gt batch [134] : batch=torch.Size([10, 656, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 657, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [135] : batch=torch.Size([10, 592, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 592, 3]), initial position=torch.Size([10, 1, 4])
gt batch [135] : batch=torch.Size([10, 592, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 593, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [136] : batch=torch.Size([10, 564, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 564, 3]), initial position=torch.Size([10, 1, 4])
gt batch [136] : batch=torch.Size([10, 564, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 565, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [137] : batch=torch.Size([10, 619, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 619, 3]), initial position=torch.Size([10, 1, 4])
gt batch [137] : batch=torch.Size([10, 619, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 620, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [138] : batch=torch.Size([10, 560, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 560, 3]), initial position=torch.Size([10, 1, 4])
gt batch [138] : batch=torch.Size([10, 560, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 561, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [139] : batch=torch.Size([10, 559, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 559, 3]), initial position=torch.Size([10, 1, 4])
gt batch [139] : batch=torch.Size([10, 559, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 560, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [140] : batch=torch.Size([10, 514, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 514, 3]), initial position=torch.Size([10, 1, 4])
gt batch [140] : batch=torch.Size([10, 514, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 515, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [141] : batch=torch.Size([10, 721, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 721, 3]), initial position=torch.Size([10, 1, 4])
gt batch [141] : batch=torch.Size([10, 721, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 722, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [142] : batch=torch.Size([10, 547, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 547, 3]), initial position=torch.Size([10, 1, 4])
gt batch [142] : batch=torch.Size([10, 547, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 548, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [143] : batch=torch.Size([10, 510, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 510, 3]), initial position=torch.Size([10, 1, 4])
gt batch [143] : batch=torch.Size([10, 510, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 511, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [144] : batch=torch.Size([10, 582, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 582, 3]), initial position=torch.Size([10, 1, 4])
gt batch [144] : batch=torch.Size([10, 582, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 583, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [145] : batch=torch.Size([10, 588, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 588, 3]), initial position=torch.Size([10, 1, 4])
gt batch [145] : batch=torch.Size([10, 588, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 589, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [146] : batch=torch.Size([10, 672, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 672, 3]), initial position=torch.Size([10, 1, 4])
gt batch [146] : batch=torch.Size([10, 672, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 673, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [147] : batch=torch.Size([10, 715, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 715, 3]), initial position=torch.Size([10, 1, 4])
gt batch [147] : batch=torch.Size([10, 715, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 716, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [148] : batch=torch.Size([10, 712, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 712, 3]), initial position=torch.Size([10, 1, 4])
gt batch [148] : batch=torch.Size([10, 712, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 713, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [149] : batch=torch.Size([10, 597, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 597, 3]), initial position=torch.Size([10, 1, 4])
gt batch [149] : batch=torch.Size([10, 597, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 598, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [150] : batch=torch.Size([10, 556, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 556, 3]), initial position=torch.Size([10, 1, 4])
gt batch [150] : batch=torch.Size([10, 556, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 557, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [151] : batch=torch.Size([10, 634, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 634, 3]), initial position=torch.Size([10, 1, 4])
gt batch [151] : batch=torch.Size([10, 634, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 635, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [152] : batch=torch.Size([10, 707, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 707, 3]), initial position=torch.Size([10, 1, 4])
gt batch [152] : batch=torch.Size([10, 707, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 708, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [153] : batch=torch.Size([10, 647, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 647, 3]), initial position=torch.Size([10, 1, 4])
gt batch [153] : batch=torch.Size([10, 647, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 648, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [154] : batch=torch.Size([10, 521, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 521, 3]), initial position=torch.Size([10, 1, 4])
gt batch [154] : batch=torch.Size([10, 521, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 522, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [155] : batch=torch.Size([10, 696, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 696, 3]), initial position=torch.Size([10, 1, 4])
gt batch [155] : batch=torch.Size([10, 696, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 697, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [156] : batch=torch.Size([10, 579, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 579, 3]), initial position=torch.Size([10, 1, 4])
gt batch [156] : batch=torch.Size([10, 579, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 580, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [157] : batch=torch.Size([10, 669, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 669, 3]), initial position=torch.Size([10, 1, 4])
gt batch [157] : batch=torch.Size([10, 669, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 670, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [158] : batch=torch.Size([10, 568, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 568, 3]), initial position=torch.Size([10, 1, 4])
gt batch [158] : batch=torch.Size([10, 568, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 569, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [159] : batch=torch.Size([10, 602, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 602, 3]), initial position=torch.Size([10, 1, 4])
gt batch [159] : batch=torch.Size([10, 602, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 603, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [160] : batch=torch.Size([10, 700, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 700, 3]), initial position=torch.Size([10, 1, 4])
gt batch [160] : batch=torch.Size([10, 700, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 701, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [161] : batch=torch.Size([10, 446, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 446, 3]), initial position=torch.Size([10, 1, 4])
gt batch [161] : batch=torch.Size([10, 446, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 447, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [162] : batch=torch.Size([10, 697, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 697, 3]), initial position=torch.Size([10, 1, 4])
gt batch [162] : batch=torch.Size([10, 697, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 698, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [163] : batch=torch.Size([10, 596, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 596, 3]), initial position=torch.Size([10, 1, 4])
gt batch [163] : batch=torch.Size([10, 596, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 597, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [164] : batch=torch.Size([10, 596, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 596, 3]), initial position=torch.Size([10, 1, 4])
gt batch [164] : batch=torch.Size([10, 596, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 597, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [165] : batch=torch.Size([10, 595, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 595, 3]), initial position=torch.Size([10, 1, 4])
gt batch [165] : batch=torch.Size([10, 595, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 596, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [166] : batch=torch.Size([10, 687, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 687, 3]), initial position=torch.Size([10, 1, 4])
gt batch [166] : batch=torch.Size([10, 687, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 688, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [167] : batch=torch.Size([10, 509, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 509, 3]), initial position=torch.Size([10, 1, 4])
gt batch [167] : batch=torch.Size([10, 509, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 510, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [168] : batch=torch.Size([10, 651, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 651, 3]), initial position=torch.Size([10, 1, 4])
gt batch [168] : batch=torch.Size([10, 651, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 652, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [169] : batch=torch.Size([10, 722, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 722, 3]), initial position=torch.Size([10, 1, 4])
gt batch [169] : batch=torch.Size([10, 722, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 723, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [170] : batch=torch.Size([10, 742, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 742, 3]), initial position=torch.Size([10, 1, 4])
gt batch [170] : batch=torch.Size([10, 742, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 743, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [171] : batch=torch.Size([10, 569, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 569, 3]), initial position=torch.Size([10, 1, 4])
gt batch [171] : batch=torch.Size([10, 569, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 570, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [172] : batch=torch.Size([10, 566, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 566, 3]), initial position=torch.Size([10, 1, 4])
gt batch [172] : batch=torch.Size([10, 566, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 567, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [173] : batch=torch.Size([10, 536, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 536, 3]), initial position=torch.Size([10, 1, 4])
gt batch [173] : batch=torch.Size([10, 536, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 537, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [174] : batch=torch.Size([10, 663, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 663, 3]), initial position=torch.Size([10, 1, 4])
gt batch [174] : batch=torch.Size([10, 663, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 664, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [175] : batch=torch.Size([10, 611, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 611, 3]), initial position=torch.Size([10, 1, 4])
gt batch [175] : batch=torch.Size([10, 611, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 612, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [176] : batch=torch.Size([10, 553, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 553, 3]), initial position=torch.Size([10, 1, 4])
gt batch [176] : batch=torch.Size([10, 553, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 554, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [177] : batch=torch.Size([10, 669, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 669, 3]), initial position=torch.Size([10, 1, 4])
gt batch [177] : batch=torch.Size([10, 669, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 670, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [178] : batch=torch.Size([10, 575, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 575, 3]), initial position=torch.Size([10, 1, 4])
gt batch [178] : batch=torch.Size([10, 575, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 576, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [179] : batch=torch.Size([10, 543, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 543, 3]), initial position=torch.Size([10, 1, 4])
gt batch [179] : batch=torch.Size([10, 543, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 544, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [180] : batch=torch.Size([10, 679, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 679, 3]), initial position=torch.Size([10, 1, 4])
gt batch [180] : batch=torch.Size([10, 679, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 680, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [181] : batch=torch.Size([10, 582, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 582, 3]), initial position=torch.Size([10, 1, 4])
gt batch [181] : batch=torch.Size([10, 582, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 583, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [182] : batch=torch.Size([10, 606, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 606, 3]), initial position=torch.Size([10, 1, 4])
gt batch [182] : batch=torch.Size([10, 606, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 607, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [183] : batch=torch.Size([10, 619, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 619, 3]), initial position=torch.Size([10, 1, 4])
gt batch [183] : batch=torch.Size([10, 619, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 620, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [184] : batch=torch.Size([10, 599, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 599, 3]), initial position=torch.Size([10, 1, 4])
gt batch [184] : batch=torch.Size([10, 599, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 600, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [185] : batch=torch.Size([10, 650, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 650, 3]), initial position=torch.Size([10, 1, 4])
gt batch [185] : batch=torch.Size([10, 650, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 651, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [186] : batch=torch.Size([10, 651, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 651, 3]), initial position=torch.Size([10, 1, 4])
gt batch [186] : batch=torch.Size([10, 651, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 652, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [187] : batch=torch.Size([10, 604, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 604, 3]), initial position=torch.Size([10, 1, 4])
gt batch [187] : batch=torch.Size([10, 604, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 605, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [188] : batch=torch.Size([10, 544, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 544, 3]), initial position=torch.Size([10, 1, 4])
gt batch [188] : batch=torch.Size([10, 544, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 545, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [189] : batch=torch.Size([10, 618, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 618, 3]), initial position=torch.Size([10, 1, 4])
gt batch [189] : batch=torch.Size([10, 618, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 619, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [190] : batch=torch.Size([10, 563, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 563, 3]), initial position=torch.Size([10, 1, 4])
gt batch [190] : batch=torch.Size([10, 563, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 564, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [191] : batch=torch.Size([10, 589, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 589, 3]), initial position=torch.Size([10, 1, 4])
gt batch [191] : batch=torch.Size([10, 589, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 590, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [192] : batch=torch.Size([10, 560, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 560, 3]), initial position=torch.Size([10, 1, 4])
gt batch [192] : batch=torch.Size([10, 560, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 561, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [193] : batch=torch.Size([10, 685, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 685, 3]), initial position=torch.Size([10, 1, 4])
gt batch [193] : batch=torch.Size([10, 685, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 686, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [194] : batch=torch.Size([10, 586, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 586, 3]), initial position=torch.Size([10, 1, 4])
gt batch [194] : batch=torch.Size([10, 586, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 587, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [195] : batch=torch.Size([10, 632, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 632, 3]), initial position=torch.Size([10, 1, 4])
gt batch [195] : batch=torch.Size([10, 632, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 633, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [196] : batch=torch.Size([10, 621, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 621, 3]), initial position=torch.Size([10, 1, 4])
gt batch [196] : batch=torch.Size([10, 621, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 622, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [197] : batch=torch.Size([10, 527, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 527, 3]), initial position=torch.Size([10, 1, 4])
gt batch [197] : batch=torch.Size([10, 527, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 528, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [198] : batch=torch.Size([10, 674, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 674, 3]), initial position=torch.Size([10, 1, 4])
gt batch [198] : batch=torch.Size([10, 674, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 675, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [199] : batch=torch.Size([10, 627, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 627, 3]), initial position=torch.Size([10, 1, 4])
gt batch [199] : batch=torch.Size([10, 627, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 628, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [200] : batch=torch.Size([10, 673, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 673, 3]), initial position=torch.Size([10, 1, 4])
gt batch [200] : batch=torch.Size([10, 673, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 674, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [201] : batch=torch.Size([10, 526, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 526, 3]), initial position=torch.Size([10, 1, 4])
gt batch [201] : batch=torch.Size([10, 526, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 527, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [202] : batch=torch.Size([10, 541, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 541, 3]), initial position=torch.Size([10, 1, 4])
gt batch [202] : batch=torch.Size([10, 541, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 542, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [203] : batch=torch.Size([10, 563, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 563, 3]), initial position=torch.Size([10, 1, 4])
gt batch [203] : batch=torch.Size([10, 563, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 564, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [204] : batch=torch.Size([10, 580, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 580, 3]), initial position=torch.Size([10, 1, 4])
gt batch [204] : batch=torch.Size([10, 580, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 581, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [205] : batch=torch.Size([10, 612, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 612, 3]), initial position=torch.Size([10, 1, 4])
gt batch [205] : batch=torch.Size([10, 612, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 613, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [206] : batch=torch.Size([10, 606, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 606, 3]), initial position=torch.Size([10, 1, 4])
gt batch [206] : batch=torch.Size([10, 606, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 607, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [207] : batch=torch.Size([10, 687, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 687, 3]), initial position=torch.Size([10, 1, 4])
gt batch [207] : batch=torch.Size([10, 687, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 688, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [208] : batch=torch.Size([10, 664, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 664, 3]), initial position=torch.Size([10, 1, 4])
gt batch [208] : batch=torch.Size([10, 664, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 665, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [209] : batch=torch.Size([10, 581, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 581, 3]), initial position=torch.Size([10, 1, 4])
gt batch [209] : batch=torch.Size([10, 581, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 582, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [210] : batch=torch.Size([10, 507, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 507, 3]), initial position=torch.Size([10, 1, 4])
gt batch [210] : batch=torch.Size([10, 507, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 508, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [211] : batch=torch.Size([10, 677, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 677, 3]), initial position=torch.Size([10, 1, 4])
gt batch [211] : batch=torch.Size([10, 677, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 678, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [212] : batch=torch.Size([10, 598, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 598, 3]), initial position=torch.Size([10, 1, 4])
gt batch [212] : batch=torch.Size([10, 598, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 599, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [213] : batch=torch.Size([10, 566, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 566, 3]), initial position=torch.Size([10, 1, 4])
gt batch [213] : batch=torch.Size([10, 566, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 567, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [214] : batch=torch.Size([10, 542, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 542, 3]), initial position=torch.Size([10, 1, 4])
gt batch [214] : batch=torch.Size([10, 542, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 543, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [215] : batch=torch.Size([10, 603, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 603, 3]), initial position=torch.Size([10, 1, 4])
gt batch [215] : batch=torch.Size([10, 603, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 604, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [216] : batch=torch.Size([10, 609, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 609, 3]), initial position=torch.Size([10, 1, 4])
gt batch [216] : batch=torch.Size([10, 609, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 610, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [217] : batch=torch.Size([10, 540, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 540, 3]), initial position=torch.Size([10, 1, 4])
gt batch [217] : batch=torch.Size([10, 540, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 541, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [218] : batch=torch.Size([10, 632, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 632, 3]), initial position=torch.Size([10, 1, 4])
gt batch [218] : batch=torch.Size([10, 632, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 633, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [219] : batch=torch.Size([10, 544, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 544, 3]), initial position=torch.Size([10, 1, 4])
gt batch [219] : batch=torch.Size([10, 544, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 545, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [220] : batch=torch.Size([10, 577, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 577, 3]), initial position=torch.Size([10, 1, 4])
gt batch [220] : batch=torch.Size([10, 577, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 578, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [221] : batch=torch.Size([10, 752, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 752, 3]), initial position=torch.Size([10, 1, 4])
gt batch [221] : batch=torch.Size([10, 752, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 753, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [222] : batch=torch.Size([10, 648, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 648, 3]), initial position=torch.Size([10, 1, 4])
gt batch [222] : batch=torch.Size([10, 648, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 649, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [223] : batch=torch.Size([10, 648, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 648, 3]), initial position=torch.Size([10, 1, 4])
gt batch [223] : batch=torch.Size([10, 648, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 649, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [224] : batch=torch.Size([10, 643, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 643, 3]), initial position=torch.Size([10, 1, 4])
gt batch [224] : batch=torch.Size([10, 643, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 644, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [225] : batch=torch.Size([10, 556, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 556, 3]), initial position=torch.Size([10, 1, 4])
gt batch [225] : batch=torch.Size([10, 556, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 557, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [226] : batch=torch.Size([10, 547, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 547, 3]), initial position=torch.Size([10, 1, 4])
gt batch [226] : batch=torch.Size([10, 547, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 548, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [227] : batch=torch.Size([10, 638, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 638, 3]), initial position=torch.Size([10, 1, 4])
gt batch [227] : batch=torch.Size([10, 638, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 639, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [228] : batch=torch.Size([10, 571, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 571, 3]), initial position=torch.Size([10, 1, 4])
gt batch [228] : batch=torch.Size([10, 571, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 572, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [229] : batch=torch.Size([10, 640, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 640, 3]), initial position=torch.Size([10, 1, 4])
gt batch [229] : batch=torch.Size([10, 640, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 641, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [230] : batch=torch.Size([10, 742, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 742, 3]), initial position=torch.Size([10, 1, 4])
gt batch [230] : batch=torch.Size([10, 742, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 743, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [231] : batch=torch.Size([10, 691, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 691, 3]), initial position=torch.Size([10, 1, 4])
gt batch [231] : batch=torch.Size([10, 691, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 692, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [232] : batch=torch.Size([10, 494, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 494, 3]), initial position=torch.Size([10, 1, 4])
gt batch [232] : batch=torch.Size([10, 494, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 495, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [233] : batch=torch.Size([10, 465, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 465, 3]), initial position=torch.Size([10, 1, 4])
gt batch [233] : batch=torch.Size([10, 465, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 466, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [234] : batch=torch.Size([10, 621, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 621, 3]), initial position=torch.Size([10, 1, 4])
gt batch [234] : batch=torch.Size([10, 621, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 622, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [235] : batch=torch.Size([10, 510, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 510, 3]), initial position=torch.Size([10, 1, 4])
gt batch [235] : batch=torch.Size([10, 510, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 511, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [236] : batch=torch.Size([10, 569, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 569, 3]), initial position=torch.Size([10, 1, 4])
gt batch [236] : batch=torch.Size([10, 569, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 570, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [237] : batch=torch.Size([10, 672, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 672, 3]), initial position=torch.Size([10, 1, 4])
gt batch [237] : batch=torch.Size([10, 672, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 673, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [238] : batch=torch.Size([10, 576, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 576, 3]), initial position=torch.Size([10, 1, 4])
gt batch [238] : batch=torch.Size([10, 576, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 577, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [239] : batch=torch.Size([10, 649, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 649, 3]), initial position=torch.Size([10, 1, 4])
gt batch [239] : batch=torch.Size([10, 649, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 650, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [240] : batch=torch.Size([10, 588, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 588, 3]), initial position=torch.Size([10, 1, 4])
gt batch [240] : batch=torch.Size([10, 588, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 589, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [241] : batch=torch.Size([10, 699, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 699, 3]), initial position=torch.Size([10, 1, 4])
gt batch [241] : batch=torch.Size([10, 699, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 700, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [242] : batch=torch.Size([10, 525, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 525, 3]), initial position=torch.Size([10, 1, 4])
gt batch [242] : batch=torch.Size([10, 525, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 526, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [243] : batch=torch.Size([10, 666, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 666, 3]), initial position=torch.Size([10, 1, 4])
gt batch [243] : batch=torch.Size([10, 666, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 667, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [244] : batch=torch.Size([10, 606, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 606, 3]), initial position=torch.Size([10, 1, 4])
gt batch [244] : batch=torch.Size([10, 606, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 607, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [245] : batch=torch.Size([10, 541, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 541, 3]), initial position=torch.Size([10, 1, 4])
gt batch [245] : batch=torch.Size([10, 541, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 542, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [246] : batch=torch.Size([10, 585, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 585, 3]), initial position=torch.Size([10, 1, 4])
gt batch [246] : batch=torch.Size([10, 585, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 586, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [247] : batch=torch.Size([10, 545, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 545, 3]), initial position=torch.Size([10, 1, 4])
gt batch [247] : batch=torch.Size([10, 545, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 546, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [248] : batch=torch.Size([10, 588, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 588, 3]), initial position=torch.Size([10, 1, 4])
gt batch [248] : batch=torch.Size([10, 588, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 589, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [249] : batch=torch.Size([10, 672, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 672, 3]), initial position=torch.Size([10, 1, 4])
gt batch [249] : batch=torch.Size([10, 672, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 673, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [250] : batch=torch.Size([10, 704, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 704, 3]), initial position=torch.Size([10, 1, 4])
gt batch [250] : batch=torch.Size([10, 704, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 705, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [251] : batch=torch.Size([10, 609, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 609, 3]), initial position=torch.Size([10, 1, 4])
gt batch [251] : batch=torch.Size([10, 609, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 610, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [252] : batch=torch.Size([10, 567, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 567, 3]), initial position=torch.Size([10, 1, 4])
gt batch [252] : batch=torch.Size([10, 567, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 568, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [253] : batch=torch.Size([10, 585, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 585, 3]), initial position=torch.Size([10, 1, 4])
gt batch [253] : batch=torch.Size([10, 585, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 586, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [254] : batch=torch.Size([10, 630, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 630, 3]), initial position=torch.Size([10, 1, 4])
gt batch [254] : batch=torch.Size([10, 630, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 631, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [255] : batch=torch.Size([10, 487, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 487, 3]), initial position=torch.Size([10, 1, 4])
gt batch [255] : batch=torch.Size([10, 487, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 488, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [256] : batch=torch.Size([10, 648, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 648, 3]), initial position=torch.Size([10, 1, 4])
gt batch [256] : batch=torch.Size([10, 648, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 649, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [257] : batch=torch.Size([10, 600, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 600, 3]), initial position=torch.Size([10, 1, 4])
gt batch [257] : batch=torch.Size([10, 600, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 601, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [258] : batch=torch.Size([10, 671, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 671, 3]), initial position=torch.Size([10, 1, 4])
gt batch [258] : batch=torch.Size([10, 671, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 672, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [259] : batch=torch.Size([10, 627, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 627, 3]), initial position=torch.Size([10, 1, 4])
gt batch [259] : batch=torch.Size([10, 627, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 628, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [260] : batch=torch.Size([10, 642, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 642, 3]), initial position=torch.Size([10, 1, 4])
gt batch [260] : batch=torch.Size([10, 642, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 643, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [261] : batch=torch.Size([10, 772, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 772, 3]), initial position=torch.Size([10, 1, 4])
gt batch [261] : batch=torch.Size([10, 772, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 773, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [262] : batch=torch.Size([10, 593, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 593, 3]), initial position=torch.Size([10, 1, 4])
gt batch [262] : batch=torch.Size([10, 593, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 594, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [263] : batch=torch.Size([10, 551, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 551, 3]), initial position=torch.Size([10, 1, 4])
gt batch [263] : batch=torch.Size([10, 551, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 552, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [264] : batch=torch.Size([10, 514, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 514, 3]), initial position=torch.Size([10, 1, 4])
gt batch [264] : batch=torch.Size([10, 514, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 515, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [265] : batch=torch.Size([10, 592, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 592, 3]), initial position=torch.Size([10, 1, 4])
gt batch [265] : batch=torch.Size([10, 592, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 593, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [266] : batch=torch.Size([10, 621, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 621, 3]), initial position=torch.Size([10, 1, 4])
gt batch [266] : batch=torch.Size([10, 621, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 622, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [267] : batch=torch.Size([10, 609, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 609, 3]), initial position=torch.Size([10, 1, 4])
gt batch [267] : batch=torch.Size([10, 609, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 610, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [268] : batch=torch.Size([10, 502, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 502, 3]), initial position=torch.Size([10, 1, 4])
gt batch [268] : batch=torch.Size([10, 502, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 503, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [269] : batch=torch.Size([10, 723, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 723, 3]), initial position=torch.Size([10, 1, 4])
gt batch [269] : batch=torch.Size([10, 723, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 724, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [270] : batch=torch.Size([10, 502, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 502, 3]), initial position=torch.Size([10, 1, 4])
gt batch [270] : batch=torch.Size([10, 502, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 503, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [271] : batch=torch.Size([10, 595, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 595, 3]), initial position=torch.Size([10, 1, 4])
gt batch [271] : batch=torch.Size([10, 595, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 596, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [272] : batch=torch.Size([10, 604, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 604, 3]), initial position=torch.Size([10, 1, 4])
gt batch [272] : batch=torch.Size([10, 604, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 605, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [273] : batch=torch.Size([10, 668, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 668, 3]), initial position=torch.Size([10, 1, 4])
gt batch [273] : batch=torch.Size([10, 668, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 669, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [274] : batch=torch.Size([10, 641, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 641, 3]), initial position=torch.Size([10, 1, 4])
gt batch [274] : batch=torch.Size([10, 641, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 642, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [275] : batch=torch.Size([10, 521, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 521, 3]), initial position=torch.Size([10, 1, 4])
gt batch [275] : batch=torch.Size([10, 521, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 522, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [276] : batch=torch.Size([10, 623, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 623, 3]), initial position=torch.Size([10, 1, 4])
gt batch [276] : batch=torch.Size([10, 623, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 624, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [277] : batch=torch.Size([10, 531, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 531, 3]), initial position=torch.Size([10, 1, 4])
gt batch [277] : batch=torch.Size([10, 531, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 532, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [278] : batch=torch.Size([10, 595, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 595, 3]), initial position=torch.Size([10, 1, 4])
gt batch [278] : batch=torch.Size([10, 595, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 596, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [279] : batch=torch.Size([10, 599, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 599, 3]), initial position=torch.Size([10, 1, 4])
gt batch [279] : batch=torch.Size([10, 599, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 600, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [280] : batch=torch.Size([10, 581, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 581, 3]), initial position=torch.Size([10, 1, 4])
gt batch [280] : batch=torch.Size([10, 581, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 582, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [281] : batch=torch.Size([10, 613, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 613, 3]), initial position=torch.Size([10, 1, 4])
gt batch [281] : batch=torch.Size([10, 613, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 614, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [282] : batch=torch.Size([10, 556, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 556, 3]), initial position=torch.Size([10, 1, 4])
gt batch [282] : batch=torch.Size([10, 556, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 557, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [283] : batch=torch.Size([10, 602, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 602, 3]), initial position=torch.Size([10, 1, 4])
gt batch [283] : batch=torch.Size([10, 602, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 603, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [284] : batch=torch.Size([10, 548, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 548, 3]), initial position=torch.Size([10, 1, 4])
gt batch [284] : batch=torch.Size([10, 548, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 549, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [285] : batch=torch.Size([10, 618, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 618, 3]), initial position=torch.Size([10, 1, 4])
gt batch [285] : batch=torch.Size([10, 618, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 619, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [286] : batch=torch.Size([10, 615, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 615, 3]), initial position=torch.Size([10, 1, 4])
gt batch [286] : batch=torch.Size([10, 615, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 616, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [287] : batch=torch.Size([10, 699, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 699, 3]), initial position=torch.Size([10, 1, 4])
gt batch [287] : batch=torch.Size([10, 699, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 700, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [288] : batch=torch.Size([10, 551, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 551, 3]), initial position=torch.Size([10, 1, 4])
gt batch [288] : batch=torch.Size([10, 551, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 552, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [289] : batch=torch.Size([10, 703, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 703, 3]), initial position=torch.Size([10, 1, 4])
gt batch [289] : batch=torch.Size([10, 703, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 704, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [290] : batch=torch.Size([10, 516, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 516, 3]), initial position=torch.Size([10, 1, 4])
gt batch [290] : batch=torch.Size([10, 516, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 517, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [291] : batch=torch.Size([10, 590, 3]), lengths=torch.Size([10]), mask=torch.Size([10, 590, 3]), initial position=torch.Size([10, 1, 4])
gt batch [291] : batch=torch.Size([10, 590, 2]), lengths=torch.Size([10]), mask=torch.Size([10, 591, 4]), initial position=torch.Size([10, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
{'flag': {'input_size': 2, 'output_size': 1, 'hidden_dim': 32, 'n_layers': 1, 'n_stack': 4, 'recurrent_stacked': [2, 32, 32, 32, 32], 'fc_size': [64, 32, 16, 8, 4, 1]}, 'depth': {'input_size': 3, 'output_size': 2, 'hidden_dim': 32, 'n_layers': 1, 'n_stack': 4, 'recurrent_stacked': [3, 32, 32, 32, 32], 'fc_size': [64, 32, 16, 8, 4, 2]}}
===>No model checkpoint
[#] Define the Learning rate, Optimizer, Decay rate and Scheduler...
[#]Model Architecture
####### Model - EOT #######
BiLSTMResidualTrainableInit(
  (recurrent_blocks): ModuleList(
    (0): LSTM(2, 32, batch_first=True, bidirectional=True)
    (1): LSTM(64, 32, batch_first=True, bidirectional=True)
    (2): LSTM(64, 32, batch_first=True, bidirectional=True)
    (3): LSTM(64, 32, batch_first=True, bidirectional=True)
  )
  (fc_blocks): Sequential(
    (0): Sequential(
      (0): Linear(in_features=64, out_features=32, bias=True)
      (1): LeakyReLU(negative_slope=0.01)
    )
    (1): Sequential(
      (0): Linear(in_features=32, out_features=16, bias=True)
      (1): LeakyReLU(negative_slope=0.01)
    )
    (2): Sequential(
      (0): Linear(in_features=16, out_features=8, bias=True)
      (1): LeakyReLU(negative_slope=0.01)
    )
    (3): Sequential(
      (0): Linear(in_features=8, out_features=4, bias=True)
      (1): LeakyReLU(negative_slope=0.01)
    )
    (4): Sequential(
      (0): Linear(in_features=4, out_features=1, bias=True)
      (1): Sigmoid()
    )
  )
)
####### Model - Depth #######
BiLSTMResidualTrainableInit(
  (recurrent_blocks): ModuleList(
    (0): LSTM(3, 32, batch_first=True, bidirectional=True)
    (1): LSTM(64, 32, batch_first=True, bidirectional=True)
    (2): LSTM(64, 32, batch_first=True, bidirectional=True)
    (3): LSTM(64, 32, batch_first=True, bidirectional=True)
  )
  (fc_blocks): Sequential(
    (0): Sequential(
      (0): Linear(in_features=64, out_features=32, bias=True)
      (1): LeakyReLU(negative_slope=0.01)
    )
    (1): Sequential(
      (0): Linear(in_features=32, out_features=16, bias=True)
      (1): LeakyReLU(negative_slope=0.01)
    )
    (2): Sequential(
      (0): Linear(in_features=16, out_features=8, bias=True)
      (1): LeakyReLU(negative_slope=0.01)
    )
    (3): Sequential(
      (0): Linear(in_features=8, out_features=4, bias=True)
      (1): LeakyReLU(negative_slope=0.01)
    )
    (4): Sequential(
      (0): Linear(in_features=4, out_features=2, bias=True)
    )
  )
)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[Epoch : 1/100000]<<<<<<<<<<<<<<<<<<<<<<<<<<<<
[#]Learning rate (Depth & EOT) :  0.01
===> [Minibatch 1/292].........Train Loss : 981.610, Val Loss : 1656.642
======> Trajectory Loss : 690.235, Gravity Loss : 0.001, EndOfTrajectory Loss : 1.435, BelowGroundPenalize Loss : 147.844
Opening in existing browser session.
[1028/142555.458887:ERROR:nacl_helper_linux.cc(308)] NaCl helper process running without a sandbox!
Most likely you need to configure your SUID sandbox correctly
Opening in existing browser session.
[1028/142555.823253:ERROR:nacl_helper_linux.cc(308)] NaCl helper process running without a sandbox!
Most likely you need to configure your SUID sandbox correctly
Opening in existing browser session.
[1028/142556.103726:ERROR:nacl_helper_linux.cc(308)] NaCl helper process running without a sandbox!
Most likely you need to configure your SUID sandbox correctly
===> [Minibatch 2/292].........Train Loss : 505.604, Val Loss : 324.539
======> Trajectory Loss : 302.549, Gravity Loss : 0.000, EndOfTrajectory Loss : 1.424, BelowGroundPenalize Loss : 60.662
===> [Minibatch 3/292].........Train Loss : 188.905, Val Loss : 1423.382
======> Trajectory Loss : 39.238, Gravity Loss : 0.000, EndOfTrajectory Loss : 1.413, BelowGroundPenalize Loss : 8.363
===> [Minibatch 4/292].........Train Loss : 459.034, Val Loss : 633.419
======> Trajectory Loss : 320.083, Gravity Loss : 0.001, EndOfTrajectory Loss : 1.390, BelowGroundPenalize Loss : 0.000
===> [Minibatch 5/292].........Train Loss : 262.911, Val Loss : 147.674
======> Trajectory Loss : 128.504, Gravity Loss : 0.000, EndOfTrajectory Loss : 1.344, BelowGroundPenalize Loss : 0.000
===> [Minibatch 6/292].........Train Loss : 136.958, Val Loss : 214.412
======> Trajectory Loss : 8.662, Gravity Loss : 0.000, EndOfTrajectory Loss : 1.283, BelowGroundPenalize Loss : 0.000
===> [Minibatch 7/292].........Train Loss : 140.690, Val Loss : 216.293
======> Trajectory Loss : 14.664, Gravity Loss : 0.000, EndOfTrajectory Loss : 1.232, BelowGroundPenalize Loss : 2.779
===> [Minibatch 8/292].........Train Loss : 134.335, Val Loss : 152.965
======> Trajectory Loss : 11.113, Gravity Loss : 0.000, EndOfTrajectory Loss : 1.211, BelowGroundPenalize Loss : 2.113
===> [Minibatch 9/292].........Train Loss : 115.646, Val Loss : 126.531
======> Trajectory Loss : 8.246, Gravity Loss : 0.000, EndOfTrajectory Loss : 1.058, BelowGroundPenalize Loss : 1.630
===> [Minibatch 10/292].........Train Loss : 110.918, Val Loss : 149.496
======> Trajectory Loss : 2.281, Gravity Loss : 0.000, EndOfTrajectory Loss : 1.085, BelowGroundPenalize Loss : 0.136
===> [Minibatch 11/292].........Train Loss : 110.250, Val Loss : 157.710
======> Trajectory Loss : 9.427, Gravity Loss : 0.000, EndOfTrajectory Loss : 1.008, BelowGroundPenalize Loss : 0.000
===> [Minibatch 12/292].........Train Loss : 105.409, Val Loss : 147.092
======> Trajectory Loss : 13.086, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.923, BelowGroundPenalize Loss : 0.000
===> [Minibatch 13/292].........Train Loss : 93.742, Val Loss : 120.594
======> Trajectory Loss : 10.761, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.830, BelowGroundPenalize Loss : 0.000
===> [Minibatch 14/292].........Train Loss : 88.017, Val Loss : 90.068
======> Trajectory Loss : 3.167, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.848, BelowGroundPenalize Loss : 0.000
===> [Minibatch 15/292].........Train Loss : 61.105, Val Loss : 104.336
======> Trajectory Loss : 0.270, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.608, BelowGroundPenalize Loss : 0.001
===> [Minibatch 16/292].........Train Loss : 60.390, Val Loss : 104.370
======> Trajectory Loss : 3.756, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.560, BelowGroundPenalize Loss : 0.644
===> [Minibatch 17/292].........Train Loss : 61.098, Val Loss : 100.654
======> Trajectory Loss : 4.897, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.549, BelowGroundPenalize Loss : 1.291
===> [Minibatch 18/292].........Train Loss : 88.668, Val Loss : 154.277
======> Trajectory Loss : 8.411, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.780, BelowGroundPenalize Loss : 2.224
===> [Minibatch 19/292].........Train Loss : 145.610, Val Loss : 38.668
======> Trajectory Loss : 4.256, Gravity Loss : 0.000, EndOfTrajectory Loss : 1.403, BelowGroundPenalize Loss : 1.040
===> [Minibatch 20/292].........Train Loss : 43.966, Val Loss : 60.937
======> Trajectory Loss : 1.772, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.417, BelowGroundPenalize Loss : 0.505
===> [Minibatch 21/292].........Train Loss : 62.924, Val Loss : 49.075
======> Trajectory Loss : 0.739, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.622, BelowGroundPenalize Loss : 0.000
===> [Minibatch 22/292].........Train Loss : 53.893, Val Loss : 41.926
======> Trajectory Loss : 6.471, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.474, BelowGroundPenalize Loss : 0.000
===> [Minibatch 23/292].........Train Loss : 22.358, Val Loss : 29.931
======> Trajectory Loss : 2.642, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.197, BelowGroundPenalize Loss : 0.000
===> [Minibatch 24/292].........Train Loss : 15.206, Val Loss : 50.744
======> Trajectory Loss : 0.450, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.148, BelowGroundPenalize Loss : 0.000
===> [Minibatch 25/292].........Train Loss : 16.750, Val Loss : 62.952
======> Trajectory Loss : 0.383, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.164, BelowGroundPenalize Loss : 0.015
===> [Minibatch 26/292].........Train Loss : 9.670, Val Loss : 76.244
======> Trajectory Loss : 0.585, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.090, BelowGroundPenalize Loss : 0.055
===> [Minibatch 27/292].........Train Loss : 50.013, Val Loss : 75.988
======> Trajectory Loss : 1.009, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.489, BelowGroundPenalize Loss : 0.146
===> [Minibatch 28/292].........Train Loss : 31.590, Val Loss : 70.489
======> Trajectory Loss : 0.811, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.306, BelowGroundPenalize Loss : 0.134
===> [Minibatch 29/292].........Train Loss : 10.860, Val Loss : 76.398
======> Trajectory Loss : 0.691, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.102, BelowGroundPenalize Loss : 0.012
===> [Minibatch 30/292].........Train Loss : 25.758, Val Loss : 44.254
======> Trajectory Loss : 4.094, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.217, BelowGroundPenalize Loss : 0.000
===> [Minibatch 31/292].........Train Loss : 38.452, Val Loss : 38.593
======> Trajectory Loss : 3.794, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.347, BelowGroundPenalize Loss : 0.000
===> [Minibatch 32/292].........Train Loss : 21.240, Val Loss : 34.146
======> Trajectory Loss : 0.638, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.206, BelowGroundPenalize Loss : 0.000
===> [Minibatch 33/292].........Train Loss : 34.921, Val Loss : 34.758
======> Trajectory Loss : 1.068, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.336, BelowGroundPenalize Loss : 0.278
===> [Minibatch 34/292].........Train Loss : 13.904, Val Loss : 28.256
======> Trajectory Loss : 2.561, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.109, BelowGroundPenalize Loss : 0.455
===> [Minibatch 35/292].........Train Loss : 16.786, Val Loss : 39.310
======> Trajectory Loss : 1.147, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.154, BelowGroundPenalize Loss : 0.203
===> [Minibatch 36/292].........Train Loss : 6.212, Val Loss : 55.464
======> Trajectory Loss : 0.268, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.059, BelowGroundPenalize Loss : 0.004
===> [Minibatch 37/292].........Train Loss : 14.812, Val Loss : 67.051
======> Trajectory Loss : 0.712, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.141, BelowGroundPenalize Loss : 0.000
===> [Minibatch 38/292].........Train Loss : 8.432, Val Loss : 61.250
======> Trajectory Loss : 1.609, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.068, BelowGroundPenalize Loss : 0.000
===> [Minibatch 39/292].........Train Loss : 25.054, Val Loss : 49.560
======> Trajectory Loss : 2.652, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.224, BelowGroundPenalize Loss : 0.000
===> [Minibatch 40/292].........Train Loss : 16.372, Val Loss : 53.768
======> Trajectory Loss : 0.269, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.161, BelowGroundPenalize Loss : 0.000
===> [Minibatch 41/292].........Train Loss : 19.475, Val Loss : 63.974
======> Trajectory Loss : 0.487, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.189, BelowGroundPenalize Loss : 0.048
===> [Minibatch 42/292].........Train Loss : 8.348, Val Loss : 64.887
======> Trajectory Loss : 1.027, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.071, BelowGroundPenalize Loss : 0.199
===> [Minibatch 43/292].........Train Loss : 37.500, Val Loss : 48.793
======> Trajectory Loss : 1.108, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.363, BelowGroundPenalize Loss : 0.122
===> [Minibatch 44/292].........Train Loss : 32.654, Val Loss : 44.881
======> Trajectory Loss : 0.440, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.322, BelowGroundPenalize Loss : 0.060
===> [Minibatch 45/292].........Train Loss : 3.788, Val Loss : 49.269
======> Trajectory Loss : 0.707, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.031, BelowGroundPenalize Loss : 0.000
