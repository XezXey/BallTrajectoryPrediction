==============================================Features==============================================
Prediction = depth, Environment = unity
Available features :  ['x-0', 'y-1', 'z-2', 'u-3', 'v-4', 'd-5', 'eot-6', 'og-7', 'rad-8', 'f_sin-9', 'f_cos-10', 'g-11']
Selected features :  [6]
1. input_col =  [3, 4, 6]
2. input_startpos_col =  [3, 4, 5, 6]
3. gt_col =  [5, 6]
4. gt_startpos_col =  [0, 1, 2, 6]
5. gt_xyz_col =  [0, 1, 2, 6]
====================================================================================================
[#]Training : Trajectory Estimation
Mixed:   0%|                                                                   | 0/3 [00:00<?, ?it/s]Mixed:  67%|███████████████████████████████████████▎                   | 2/3 [00:00<00:00, 13.05it/s]Mixed: 100%|███████████████████████████████████████████████████████████| 3/3 [00:00<00:00, 12.60it/s]
===============================Dataset shape===============================
Mixed : (16533,)
===========================================================================
Mixed:   0%|                                                                   | 0/1 [00:00<?, ?it/s]Mixed: 100%|███████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 24.63it/s]
===============================Dataset shape===============================
Mixed : (1841,)
===========================================================================
======================================================Summary Batch (batch_size = 128)=========================================================================
Input batch [0] : batch=torch.Size([128, 823, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 823, 3]), initial position=torch.Size([128, 1, 4])
gt batch [0] : batch=torch.Size([128, 823, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 824, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [1] : batch=torch.Size([128, 852, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 852, 3]), initial position=torch.Size([128, 1, 4])
gt batch [1] : batch=torch.Size([128, 852, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 853, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [2] : batch=torch.Size([128, 800, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 800, 3]), initial position=torch.Size([128, 1, 4])
gt batch [2] : batch=torch.Size([128, 800, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 801, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [3] : batch=torch.Size([128, 814, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 814, 3]), initial position=torch.Size([128, 1, 4])
gt batch [3] : batch=torch.Size([128, 814, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 815, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [4] : batch=torch.Size([128, 807, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 807, 3]), initial position=torch.Size([128, 1, 4])
gt batch [4] : batch=torch.Size([128, 807, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 808, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [5] : batch=torch.Size([128, 956, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 956, 3]), initial position=torch.Size([128, 1, 4])
gt batch [5] : batch=torch.Size([128, 956, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 957, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [6] : batch=torch.Size([128, 749, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 749, 3]), initial position=torch.Size([128, 1, 4])
gt batch [6] : batch=torch.Size([128, 749, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 750, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [7] : batch=torch.Size([128, 882, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 882, 3]), initial position=torch.Size([128, 1, 4])
gt batch [7] : batch=torch.Size([128, 882, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 883, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [8] : batch=torch.Size([128, 982, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 982, 3]), initial position=torch.Size([128, 1, 4])
gt batch [8] : batch=torch.Size([128, 982, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 983, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [9] : batch=torch.Size([128, 809, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 809, 3]), initial position=torch.Size([128, 1, 4])
gt batch [9] : batch=torch.Size([128, 809, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 810, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [10] : batch=torch.Size([128, 798, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 798, 3]), initial position=torch.Size([128, 1, 4])
gt batch [10] : batch=torch.Size([128, 798, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 799, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [11] : batch=torch.Size([128, 939, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 939, 3]), initial position=torch.Size([128, 1, 4])
gt batch [11] : batch=torch.Size([128, 939, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 940, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [12] : batch=torch.Size([128, 849, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 849, 3]), initial position=torch.Size([128, 1, 4])
gt batch [12] : batch=torch.Size([128, 849, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 850, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [13] : batch=torch.Size([128, 917, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 917, 3]), initial position=torch.Size([128, 1, 4])
gt batch [13] : batch=torch.Size([128, 917, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 918, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [14] : batch=torch.Size([128, 860, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 860, 3]), initial position=torch.Size([128, 1, 4])
gt batch [14] : batch=torch.Size([128, 860, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 861, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [15] : batch=torch.Size([128, 919, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 919, 3]), initial position=torch.Size([128, 1, 4])
gt batch [15] : batch=torch.Size([128, 919, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 920, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [16] : batch=torch.Size([128, 861, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 861, 3]), initial position=torch.Size([128, 1, 4])
gt batch [16] : batch=torch.Size([128, 861, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 862, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [17] : batch=torch.Size([128, 843, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 843, 3]), initial position=torch.Size([128, 1, 4])
gt batch [17] : batch=torch.Size([128, 843, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 844, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [18] : batch=torch.Size([128, 852, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 852, 3]), initial position=torch.Size([128, 1, 4])
gt batch [18] : batch=torch.Size([128, 852, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 853, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [19] : batch=torch.Size([128, 963, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 963, 3]), initial position=torch.Size([128, 1, 4])
gt batch [19] : batch=torch.Size([128, 963, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 964, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [20] : batch=torch.Size([128, 814, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 814, 3]), initial position=torch.Size([128, 1, 4])
gt batch [20] : batch=torch.Size([128, 814, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 815, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [21] : batch=torch.Size([128, 961, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 961, 3]), initial position=torch.Size([128, 1, 4])
gt batch [21] : batch=torch.Size([128, 961, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 962, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [22] : batch=torch.Size([128, 838, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 838, 3]), initial position=torch.Size([128, 1, 4])
gt batch [22] : batch=torch.Size([128, 838, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 839, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [23] : batch=torch.Size([128, 886, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 886, 3]), initial position=torch.Size([128, 1, 4])
gt batch [23] : batch=torch.Size([128, 886, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 887, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [24] : batch=torch.Size([128, 956, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 956, 3]), initial position=torch.Size([128, 1, 4])
gt batch [24] : batch=torch.Size([128, 956, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 957, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [25] : batch=torch.Size([128, 843, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 843, 3]), initial position=torch.Size([128, 1, 4])
gt batch [25] : batch=torch.Size([128, 843, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 844, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [26] : batch=torch.Size([128, 970, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 970, 3]), initial position=torch.Size([128, 1, 4])
gt batch [26] : batch=torch.Size([128, 970, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 971, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [27] : batch=torch.Size([128, 879, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 879, 3]), initial position=torch.Size([128, 1, 4])
gt batch [27] : batch=torch.Size([128, 879, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 880, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [28] : batch=torch.Size([128, 818, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 818, 3]), initial position=torch.Size([128, 1, 4])
gt batch [28] : batch=torch.Size([128, 818, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 819, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [29] : batch=torch.Size([128, 915, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 915, 3]), initial position=torch.Size([128, 1, 4])
gt batch [29] : batch=torch.Size([128, 915, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 916, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [30] : batch=torch.Size([128, 751, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 751, 3]), initial position=torch.Size([128, 1, 4])
gt batch [30] : batch=torch.Size([128, 751, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 752, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [31] : batch=torch.Size([128, 918, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 918, 3]), initial position=torch.Size([128, 1, 4])
gt batch [31] : batch=torch.Size([128, 918, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 919, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [32] : batch=torch.Size([128, 795, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 795, 3]), initial position=torch.Size([128, 1, 4])
gt batch [32] : batch=torch.Size([128, 795, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 796, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [33] : batch=torch.Size([128, 833, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 833, 3]), initial position=torch.Size([128, 1, 4])
gt batch [33] : batch=torch.Size([128, 833, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 834, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [34] : batch=torch.Size([128, 837, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 837, 3]), initial position=torch.Size([128, 1, 4])
gt batch [34] : batch=torch.Size([128, 837, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 838, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [35] : batch=torch.Size([128, 943, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 943, 3]), initial position=torch.Size([128, 1, 4])
gt batch [35] : batch=torch.Size([128, 943, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 944, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [36] : batch=torch.Size([128, 780, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 780, 3]), initial position=torch.Size([128, 1, 4])
gt batch [36] : batch=torch.Size([128, 780, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 781, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [37] : batch=torch.Size([128, 837, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 837, 3]), initial position=torch.Size([128, 1, 4])
gt batch [37] : batch=torch.Size([128, 837, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 838, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [38] : batch=torch.Size([128, 897, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 897, 3]), initial position=torch.Size([128, 1, 4])
gt batch [38] : batch=torch.Size([128, 897, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 898, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [39] : batch=torch.Size([128, 840, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 840, 3]), initial position=torch.Size([128, 1, 4])
gt batch [39] : batch=torch.Size([128, 840, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 841, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [40] : batch=torch.Size([128, 711, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 711, 3]), initial position=torch.Size([128, 1, 4])
gt batch [40] : batch=torch.Size([128, 711, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 712, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [41] : batch=torch.Size([128, 912, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 912, 3]), initial position=torch.Size([128, 1, 4])
gt batch [41] : batch=torch.Size([128, 912, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 913, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [42] : batch=torch.Size([128, 840, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 840, 3]), initial position=torch.Size([128, 1, 4])
gt batch [42] : batch=torch.Size([128, 840, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 841, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [43] : batch=torch.Size([128, 811, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 811, 3]), initial position=torch.Size([128, 1, 4])
gt batch [43] : batch=torch.Size([128, 811, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 812, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [44] : batch=torch.Size([128, 969, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 969, 3]), initial position=torch.Size([128, 1, 4])
gt batch [44] : batch=torch.Size([128, 969, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 970, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [45] : batch=torch.Size([128, 945, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 945, 3]), initial position=torch.Size([128, 1, 4])
gt batch [45] : batch=torch.Size([128, 945, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 946, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [46] : batch=torch.Size([128, 768, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 768, 3]), initial position=torch.Size([128, 1, 4])
gt batch [46] : batch=torch.Size([128, 768, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 769, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [47] : batch=torch.Size([128, 879, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 879, 3]), initial position=torch.Size([128, 1, 4])
gt batch [47] : batch=torch.Size([128, 879, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 880, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [48] : batch=torch.Size([128, 868, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 868, 3]), initial position=torch.Size([128, 1, 4])
gt batch [48] : batch=torch.Size([128, 868, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 869, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [49] : batch=torch.Size([128, 868, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 868, 3]), initial position=torch.Size([128, 1, 4])
gt batch [49] : batch=torch.Size([128, 868, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 869, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [50] : batch=torch.Size([128, 901, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 901, 3]), initial position=torch.Size([128, 1, 4])
gt batch [50] : batch=torch.Size([128, 901, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 902, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [51] : batch=torch.Size([128, 943, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 943, 3]), initial position=torch.Size([128, 1, 4])
gt batch [51] : batch=torch.Size([128, 943, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 944, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [52] : batch=torch.Size([128, 858, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 858, 3]), initial position=torch.Size([128, 1, 4])
gt batch [52] : batch=torch.Size([128, 858, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 859, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [53] : batch=torch.Size([128, 818, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 818, 3]), initial position=torch.Size([128, 1, 4])
gt batch [53] : batch=torch.Size([128, 818, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 819, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [54] : batch=torch.Size([128, 884, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 884, 3]), initial position=torch.Size([128, 1, 4])
gt batch [54] : batch=torch.Size([128, 884, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 885, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [55] : batch=torch.Size([128, 914, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 914, 3]), initial position=torch.Size([128, 1, 4])
gt batch [55] : batch=torch.Size([128, 914, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 915, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [56] : batch=torch.Size([128, 914, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 914, 3]), initial position=torch.Size([128, 1, 4])
gt batch [56] : batch=torch.Size([128, 914, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 915, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [57] : batch=torch.Size([128, 844, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 844, 3]), initial position=torch.Size([128, 1, 4])
gt batch [57] : batch=torch.Size([128, 844, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 845, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [58] : batch=torch.Size([128, 816, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 816, 3]), initial position=torch.Size([128, 1, 4])
gt batch [58] : batch=torch.Size([128, 816, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 817, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [59] : batch=torch.Size([128, 797, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 797, 3]), initial position=torch.Size([128, 1, 4])
gt batch [59] : batch=torch.Size([128, 797, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 798, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [60] : batch=torch.Size([128, 868, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 868, 3]), initial position=torch.Size([128, 1, 4])
gt batch [60] : batch=torch.Size([128, 868, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 869, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [61] : batch=torch.Size([128, 955, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 955, 3]), initial position=torch.Size([128, 1, 4])
gt batch [61] : batch=torch.Size([128, 955, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 956, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [62] : batch=torch.Size([128, 922, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 922, 3]), initial position=torch.Size([128, 1, 4])
gt batch [62] : batch=torch.Size([128, 922, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 923, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [63] : batch=torch.Size([128, 826, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 826, 3]), initial position=torch.Size([128, 1, 4])
gt batch [63] : batch=torch.Size([128, 826, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 827, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [64] : batch=torch.Size([128, 821, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 821, 3]), initial position=torch.Size([128, 1, 4])
gt batch [64] : batch=torch.Size([128, 821, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 822, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [65] : batch=torch.Size([128, 895, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 895, 3]), initial position=torch.Size([128, 1, 4])
gt batch [65] : batch=torch.Size([128, 895, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 896, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [66] : batch=torch.Size([128, 817, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 817, 3]), initial position=torch.Size([128, 1, 4])
gt batch [66] : batch=torch.Size([128, 817, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 818, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [67] : batch=torch.Size([128, 1000, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 1000, 3]), initial position=torch.Size([128, 1, 4])
gt batch [67] : batch=torch.Size([128, 1000, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 1001, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [68] : batch=torch.Size([128, 1000, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 1000, 3]), initial position=torch.Size([128, 1, 4])
gt batch [68] : batch=torch.Size([128, 1000, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 1001, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [69] : batch=torch.Size([128, 892, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 892, 3]), initial position=torch.Size([128, 1, 4])
gt batch [69] : batch=torch.Size([128, 892, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 893, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [70] : batch=torch.Size([128, 761, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 761, 3]), initial position=torch.Size([128, 1, 4])
gt batch [70] : batch=torch.Size([128, 761, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 762, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [71] : batch=torch.Size([128, 779, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 779, 3]), initial position=torch.Size([128, 1, 4])
gt batch [71] : batch=torch.Size([128, 779, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 780, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [72] : batch=torch.Size([128, 883, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 883, 3]), initial position=torch.Size([128, 1, 4])
gt batch [72] : batch=torch.Size([128, 883, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 884, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [73] : batch=torch.Size([128, 869, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 869, 3]), initial position=torch.Size([128, 1, 4])
gt batch [73] : batch=torch.Size([128, 869, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 870, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [74] : batch=torch.Size([128, 966, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 966, 3]), initial position=torch.Size([128, 1, 4])
gt batch [74] : batch=torch.Size([128, 966, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 967, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [75] : batch=torch.Size([128, 827, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 827, 3]), initial position=torch.Size([128, 1, 4])
gt batch [75] : batch=torch.Size([128, 827, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 828, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [76] : batch=torch.Size([128, 979, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 979, 3]), initial position=torch.Size([128, 1, 4])
gt batch [76] : batch=torch.Size([128, 979, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 980, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [77] : batch=torch.Size([128, 829, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 829, 3]), initial position=torch.Size([128, 1, 4])
gt batch [77] : batch=torch.Size([128, 829, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 830, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [78] : batch=torch.Size([128, 768, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 768, 3]), initial position=torch.Size([128, 1, 4])
gt batch [78] : batch=torch.Size([128, 768, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 769, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [79] : batch=torch.Size([128, 904, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 904, 3]), initial position=torch.Size([128, 1, 4])
gt batch [79] : batch=torch.Size([128, 904, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 905, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [80] : batch=torch.Size([128, 1023, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 1023, 3]), initial position=torch.Size([128, 1, 4])
gt batch [80] : batch=torch.Size([128, 1023, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 1024, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [81] : batch=torch.Size([128, 948, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 948, 3]), initial position=torch.Size([128, 1, 4])
gt batch [81] : batch=torch.Size([128, 948, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 949, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [82] : batch=torch.Size([128, 878, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 878, 3]), initial position=torch.Size([128, 1, 4])
gt batch [82] : batch=torch.Size([128, 878, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 879, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [83] : batch=torch.Size([128, 851, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 851, 3]), initial position=torch.Size([128, 1, 4])
gt batch [83] : batch=torch.Size([128, 851, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 852, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [84] : batch=torch.Size([128, 976, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 976, 3]), initial position=torch.Size([128, 1, 4])
gt batch [84] : batch=torch.Size([128, 976, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 977, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [85] : batch=torch.Size([128, 901, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 901, 3]), initial position=torch.Size([128, 1, 4])
gt batch [85] : batch=torch.Size([128, 901, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 902, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [86] : batch=torch.Size([128, 900, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 900, 3]), initial position=torch.Size([128, 1, 4])
gt batch [86] : batch=torch.Size([128, 900, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 901, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [87] : batch=torch.Size([128, 906, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 906, 3]), initial position=torch.Size([128, 1, 4])
gt batch [87] : batch=torch.Size([128, 906, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 907, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [88] : batch=torch.Size([128, 734, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 734, 3]), initial position=torch.Size([128, 1, 4])
gt batch [88] : batch=torch.Size([128, 734, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 735, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [89] : batch=torch.Size([128, 861, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 861, 3]), initial position=torch.Size([128, 1, 4])
gt batch [89] : batch=torch.Size([128, 861, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 862, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [90] : batch=torch.Size([128, 931, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 931, 3]), initial position=torch.Size([128, 1, 4])
gt batch [90] : batch=torch.Size([128, 931, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 932, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [91] : batch=torch.Size([128, 786, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 786, 3]), initial position=torch.Size([128, 1, 4])
gt batch [91] : batch=torch.Size([128, 786, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 787, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [92] : batch=torch.Size([128, 816, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 816, 3]), initial position=torch.Size([128, 1, 4])
gt batch [92] : batch=torch.Size([128, 816, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 817, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [93] : batch=torch.Size([128, 764, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 764, 3]), initial position=torch.Size([128, 1, 4])
gt batch [93] : batch=torch.Size([128, 764, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 765, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [94] : batch=torch.Size([128, 780, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 780, 3]), initial position=torch.Size([128, 1, 4])
gt batch [94] : batch=torch.Size([128, 780, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 781, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [95] : batch=torch.Size([128, 822, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 822, 3]), initial position=torch.Size([128, 1, 4])
gt batch [95] : batch=torch.Size([128, 822, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 823, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [96] : batch=torch.Size([128, 776, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 776, 3]), initial position=torch.Size([128, 1, 4])
gt batch [96] : batch=torch.Size([128, 776, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 777, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [97] : batch=torch.Size([128, 869, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 869, 3]), initial position=torch.Size([128, 1, 4])
gt batch [97] : batch=torch.Size([128, 869, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 870, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [98] : batch=torch.Size([128, 886, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 886, 3]), initial position=torch.Size([128, 1, 4])
gt batch [98] : batch=torch.Size([128, 886, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 887, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [99] : batch=torch.Size([128, 854, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 854, 3]), initial position=torch.Size([128, 1, 4])
gt batch [99] : batch=torch.Size([128, 854, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 855, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [100] : batch=torch.Size([128, 731, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 731, 3]), initial position=torch.Size([128, 1, 4])
gt batch [100] : batch=torch.Size([128, 731, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 732, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [101] : batch=torch.Size([128, 995, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 995, 3]), initial position=torch.Size([128, 1, 4])
gt batch [101] : batch=torch.Size([128, 995, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 996, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [102] : batch=torch.Size([128, 747, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 747, 3]), initial position=torch.Size([128, 1, 4])
gt batch [102] : batch=torch.Size([128, 747, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 748, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [103] : batch=torch.Size([128, 861, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 861, 3]), initial position=torch.Size([128, 1, 4])
gt batch [103] : batch=torch.Size([128, 861, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 862, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [104] : batch=torch.Size([128, 828, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 828, 3]), initial position=torch.Size([128, 1, 4])
gt batch [104] : batch=torch.Size([128, 828, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 829, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [105] : batch=torch.Size([128, 862, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 862, 3]), initial position=torch.Size([128, 1, 4])
gt batch [105] : batch=torch.Size([128, 862, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 863, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [106] : batch=torch.Size([128, 868, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 868, 3]), initial position=torch.Size([128, 1, 4])
gt batch [106] : batch=torch.Size([128, 868, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 869, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [107] : batch=torch.Size([128, 860, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 860, 3]), initial position=torch.Size([128, 1, 4])
gt batch [107] : batch=torch.Size([128, 860, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 861, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [108] : batch=torch.Size([128, 884, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 884, 3]), initial position=torch.Size([128, 1, 4])
gt batch [108] : batch=torch.Size([128, 884, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 885, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [109] : batch=torch.Size([128, 884, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 884, 3]), initial position=torch.Size([128, 1, 4])
gt batch [109] : batch=torch.Size([128, 884, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 885, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [110] : batch=torch.Size([128, 914, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 914, 3]), initial position=torch.Size([128, 1, 4])
gt batch [110] : batch=torch.Size([128, 914, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 915, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [111] : batch=torch.Size([128, 723, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 723, 3]), initial position=torch.Size([128, 1, 4])
gt batch [111] : batch=torch.Size([128, 723, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 724, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [112] : batch=torch.Size([128, 832, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 832, 3]), initial position=torch.Size([128, 1, 4])
gt batch [112] : batch=torch.Size([128, 832, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 833, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [113] : batch=torch.Size([128, 837, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 837, 3]), initial position=torch.Size([128, 1, 4])
gt batch [113] : batch=torch.Size([128, 837, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 838, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [114] : batch=torch.Size([128, 730, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 730, 3]), initial position=torch.Size([128, 1, 4])
gt batch [114] : batch=torch.Size([128, 730, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 731, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [115] : batch=torch.Size([128, 785, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 785, 3]), initial position=torch.Size([128, 1, 4])
gt batch [115] : batch=torch.Size([128, 785, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 786, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [116] : batch=torch.Size([128, 818, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 818, 3]), initial position=torch.Size([128, 1, 4])
gt batch [116] : batch=torch.Size([128, 818, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 819, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [117] : batch=torch.Size([128, 762, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 762, 3]), initial position=torch.Size([128, 1, 4])
gt batch [117] : batch=torch.Size([128, 762, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 763, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [118] : batch=torch.Size([128, 1040, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 1040, 3]), initial position=torch.Size([128, 1, 4])
gt batch [118] : batch=torch.Size([128, 1040, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 1041, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [119] : batch=torch.Size([128, 869, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 869, 3]), initial position=torch.Size([128, 1, 4])
gt batch [119] : batch=torch.Size([128, 869, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 870, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [120] : batch=torch.Size([128, 875, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 875, 3]), initial position=torch.Size([128, 1, 4])
gt batch [120] : batch=torch.Size([128, 875, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 876, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [121] : batch=torch.Size([128, 794, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 794, 3]), initial position=torch.Size([128, 1, 4])
gt batch [121] : batch=torch.Size([128, 794, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 795, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [122] : batch=torch.Size([128, 869, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 869, 3]), initial position=torch.Size([128, 1, 4])
gt batch [122] : batch=torch.Size([128, 869, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 870, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [123] : batch=torch.Size([128, 864, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 864, 3]), initial position=torch.Size([128, 1, 4])
gt batch [123] : batch=torch.Size([128, 864, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 865, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [124] : batch=torch.Size([128, 945, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 945, 3]), initial position=torch.Size([128, 1, 4])
gt batch [124] : batch=torch.Size([128, 945, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 946, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [125] : batch=torch.Size([128, 928, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 928, 3]), initial position=torch.Size([128, 1, 4])
gt batch [125] : batch=torch.Size([128, 928, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 929, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [126] : batch=torch.Size([128, 840, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 840, 3]), initial position=torch.Size([128, 1, 4])
gt batch [126] : batch=torch.Size([128, 840, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 841, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [127] : batch=torch.Size([128, 952, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 952, 3]), initial position=torch.Size([128, 1, 4])
gt batch [127] : batch=torch.Size([128, 952, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 953, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [128] : batch=torch.Size([128, 796, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 796, 3]), initial position=torch.Size([128, 1, 4])
gt batch [128] : batch=torch.Size([128, 796, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 797, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
{'flag': {'input_size': 2, 'output_size': 1, 'hidden_dim': 32, 'n_layers': 1, 'n_stack': 4, 'recurrent_stacked': [2, 32, 32, 32, 32], 'fc_size': [64, 32, 16, 8, 4, 1]}, 'depth': {'input_size': 3, 'output_size': 2, 'hidden_dim': 32, 'n_layers': 1, 'n_stack': 4, 'recurrent_stacked': [3, 32, 32, 32, 32], 'fc_size': [64, 32, 16, 8, 4, 2]}}
===>No model checkpoint
[#] Define the Learning rate, Optimizer, Decay rate and Scheduler...
[#]Model Architecture
####### Model - EOT #######
BiLSTMResidualTrainableInit(
  (recurrent_blocks): ModuleList(
    (0): LSTM(2, 32, batch_first=True, bidirectional=True)
    (1): LSTM(64, 32, batch_first=True, bidirectional=True)
    (2): LSTM(64, 32, batch_first=True, bidirectional=True)
    (3): LSTM(64, 32, batch_first=True, bidirectional=True)
  )
  (fc_blocks): Sequential(
    (0): Sequential(
      (0): Linear(in_features=64, out_features=32, bias=True)
      (1): LeakyReLU(negative_slope=0.01)
    )
    (1): Sequential(
      (0): Linear(in_features=32, out_features=16, bias=True)
      (1): LeakyReLU(negative_slope=0.01)
    )
    (2): Sequential(
      (0): Linear(in_features=16, out_features=8, bias=True)
      (1): LeakyReLU(negative_slope=0.01)
    )
    (3): Sequential(
      (0): Linear(in_features=8, out_features=4, bias=True)
      (1): LeakyReLU(negative_slope=0.01)
    )
    (4): Sequential(
      (0): Linear(in_features=4, out_features=1, bias=True)
      (1): Sigmoid()
    )
  )
)
####### Model - Depth #######
BiLSTMResidualTrainableInit(
  (recurrent_blocks): ModuleList(
    (0): LSTM(3, 32, batch_first=True, bidirectional=True)
    (1): LSTM(64, 32, batch_first=True, bidirectional=True)
    (2): LSTM(64, 32, batch_first=True, bidirectional=True)
    (3): LSTM(64, 32, batch_first=True, bidirectional=True)
  )
  (fc_blocks): Sequential(
    (0): Sequential(
      (0): Linear(in_features=64, out_features=32, bias=True)
      (1): LeakyReLU(negative_slope=0.01)
    )
    (1): Sequential(
      (0): Linear(in_features=32, out_features=16, bias=True)
      (1): LeakyReLU(negative_slope=0.01)
    )
    (2): Sequential(
      (0): Linear(in_features=16, out_features=8, bias=True)
      (1): LeakyReLU(negative_slope=0.01)
    )
    (3): Sequential(
      (0): Linear(in_features=8, out_features=4, bias=True)
      (1): LeakyReLU(negative_slope=0.01)
    )
    (4): Sequential(
      (0): Linear(in_features=4, out_features=2, bias=True)
    )
  )
)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[Epoch : 1/100000]<<<<<<<<<<<<<<<<<<<<<<<<<<<<
[#]Learning rate (Depth & EOT) :  0.01
===> [Minibatch 1/129].........IDX = 0 :  tensor([[[-0.7726, -0.1507,  0.1004,  ...,  0.6799,  1.6971, -0.9726],
         [-0.0410, -1.2602,  0.4879,  ..., -0.1295, -1.4638,  0.8681],
         [ 1.8479, -0.3037,  0.0123,  ...,  0.9619, -1.1206,  1.7546],
         ...,
         [-1.4614,  0.3725, -0.5160,  ...,  0.9808,  0.1521,  2.1079],
         [-0.6760, -0.4465, -1.4253,  ..., -0.0156, -0.5050, -0.6366],
         [-0.6656, -1.2977,  0.9631,  ...,  0.1640,  0.6572,  0.3783]],

        [[-0.2638,  0.9841, -0.6284,  ..., -1.1226, -0.4530,  0.9735],
         [-0.4620,  1.7716,  1.5304,  ..., -1.5734, -0.2069, -1.0493],
         [-0.0661,  1.1195,  1.3723,  ...,  0.3606, -0.0736,  0.7544],
         ...,
         [-0.6897, -1.7122,  1.2382,  ...,  0.6036, -0.3586,  0.0761],
         [ 0.9480,  0.9402,  2.9017,  ...,  2.2300,  0.1182,  1.3676],
         [-0.3157,  0.2849, -0.6486,  ..., -2.6925,  2.3997,  0.5418]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 1.2491,  0.8235, -0.7230,  ...,  0.7797,  1.2842,  0.3789],
         [-2.0246,  0.1150,  0.2123,  ...,  0.1163,  1.8176,  0.5925],
         [ 0.2687,  1.8103,  0.9064,  ...,  1.5947,  0.3645,  0.4070],
         ...,
         [-2.4615,  1.9421,  0.3896,  ...,  0.5216, -1.4999,  0.0149],
         [-1.4326, -0.1307, -1.0293,  ...,  0.1748,  0.0907, -0.9291],
         [-0.0890, -1.2117,  0.6332,  ..., -0.0726, -1.4908,  0.2153]],

        [[ 1.8102, -1.8968, -0.2309,  ...,  1.5643, -0.1491, -0.1909],
         [-0.8267,  1.0439, -1.2669,  ...,  1.6034,  2.0367,  2.0954],
         [ 0.0223, -1.9738, -1.9426,  ...,  2.2356,  0.2463,  0.5791],
         ...,
         [-1.4632,  0.9743,  1.0269,  ...,  0.6014,  2.2812, -0.9350],
         [ 1.2463,  0.1171, -0.0218,  ...,  0.4066, -0.5065, -1.7352],
         [ 1.9697, -1.0703, -0.6107,  ...,  0.9339,  1.0641, -0.0416]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[-0.7726, -0.1507,  0.1004,  ...,  0.6799,  1.6971, -0.9726],
         [-0.0410, -1.2602,  0.4879,  ..., -0.1295, -1.4638,  0.8681],
         [ 1.8479, -0.3037,  0.0123,  ...,  0.9619, -1.1206,  1.7546],
         ...,
         [-1.4614,  0.3725, -0.5160,  ...,  0.9808,  0.1521,  2.1079],
         [-0.6760, -0.4465, -1.4253,  ..., -0.0156, -0.5050, -0.6366],
         [-0.6656, -1.2977,  0.9631,  ...,  0.1640,  0.6572,  0.3783]],

        [[-0.2638,  0.9841, -0.6284,  ..., -1.1226, -0.4530,  0.9735],
         [-0.4620,  1.7716,  1.5304,  ..., -1.5734, -0.2069, -1.0493],
         [-0.0661,  1.1195,  1.3723,  ...,  0.3606, -0.0736,  0.7544],
         ...,
         [-0.6897, -1.7122,  1.2382,  ...,  0.6036, -0.3586,  0.0761],
         [ 0.9480,  0.9402,  2.9017,  ...,  2.2300,  0.1182,  1.3676],
         [-0.3157,  0.2849, -0.6486,  ..., -2.6925,  2.3997,  0.5418]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 1.2491,  0.8235, -0.7230,  ...,  0.7797,  1.2842,  0.3789],
         [-2.0246,  0.1150,  0.2123,  ...,  0.1163,  1.8176,  0.5925],
         [ 0.2687,  1.8103,  0.9064,  ...,  1.5947,  0.3645,  0.4070],
         ...,
         [-2.4615,  1.9421,  0.3896,  ...,  0.5216, -1.4999,  0.0149],
         [-1.4326, -0.1307, -1.0293,  ...,  0.1748,  0.0907, -0.9291],
         [-0.0890, -1.2117,  0.6332,  ..., -0.0726, -1.4908,  0.2153]],

        [[ 1.8102, -1.8968, -0.2309,  ...,  1.5643, -0.1491, -0.1909],
         [-0.8267,  1.0439, -1.2669,  ...,  1.6034,  2.0367,  2.0954],
         [ 0.0223, -1.9738, -1.9426,  ...,  2.2356,  0.2463,  0.5791],
         ...,
         [-1.4632,  0.9743,  1.0269,  ...,  0.6014,  2.2812, -0.9350],
         [ 1.2463,  0.1171, -0.0218,  ...,  0.4066, -0.5065, -1.7352],
         [ 1.9697, -1.0703, -0.6107,  ...,  0.9339,  1.0641, -0.0416]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 914.493, Val Loss : 2037.564
======> Trajectory Loss : 775.303, Gravity Loss : 0.000, EndOfTrajectory Loss : 1.392, BelowGroundPenalize Loss : 0.000
Opening in existing browser session.
[1019/143430.300924:ERROR:nacl_helper_linux.cc(308)] NaCl helper process running without a sandbox!
Most likely you need to configure your SUID sandbox correctly
Opening in existing browser session.
[1019/143430.625234:ERROR:nacl_helper_linux.cc(308)] NaCl helper process running without a sandbox!
Most likely you need to configure your SUID sandbox correctly
Opening in existing browser session.
[1019/143430.875713:ERROR:nacl_helper_linux.cc(308)] NaCl helper process running without a sandbox!
Most likely you need to configure your SUID sandbox correctly
===> [Minibatch 2/129].........IDX = 0 :  tensor([[[-0.7726, -0.1507,  0.1004,  ...,  0.6799,  1.6971, -0.9726],
         [-0.0410, -1.2602,  0.4879,  ..., -0.1295, -1.4638,  0.8681],
         [ 1.8479, -0.3037,  0.0123,  ...,  0.9619, -1.1206,  1.7546],
         ...,
         [-1.4614,  0.3725, -0.5160,  ...,  0.9808,  0.1521,  2.1079],
         [-0.6760, -0.4465, -1.4253,  ..., -0.0156, -0.5050, -0.6366],
         [-0.6656, -1.2977,  0.9631,  ...,  0.1640,  0.6572,  0.3783]],

        [[-0.2638,  0.9841, -0.6284,  ..., -1.1226, -0.4530,  0.9735],
         [-0.4620,  1.7716,  1.5304,  ..., -1.5734, -0.2069, -1.0493],
         [-0.0661,  1.1195,  1.3723,  ...,  0.3606, -0.0736,  0.7544],
         ...,
         [-0.6897, -1.7122,  1.2382,  ...,  0.6036, -0.3586,  0.0761],
         [ 0.9480,  0.9402,  2.9017,  ...,  2.2300,  0.1182,  1.3676],
         [-0.3157,  0.2849, -0.6486,  ..., -2.6925,  2.3997,  0.5418]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 1.2491,  0.8235, -0.7230,  ...,  0.7797,  1.2842,  0.3789],
         [-2.0246,  0.1150,  0.2123,  ...,  0.1163,  1.8176,  0.5925],
         [ 0.2687,  1.8103,  0.9064,  ...,  1.5947,  0.3645,  0.4070],
         ...,
         [-2.4615,  1.9421,  0.3896,  ...,  0.5216, -1.4999,  0.0149],
         [-1.4326, -0.1307, -1.0293,  ...,  0.1748,  0.0907, -0.9291],
         [-0.0890, -1.2117,  0.6332,  ..., -0.0726, -1.4908,  0.2153]],

        [[ 1.8102, -1.8968, -0.2309,  ...,  1.5643, -0.1491, -0.1909],
         [-0.8267,  1.0439, -1.2669,  ...,  1.6034,  2.0367,  2.0954],
         [ 0.0223, -1.9738, -1.9426,  ...,  2.2356,  0.2463,  0.5791],
         ...,
         [-1.4632,  0.9743,  1.0269,  ...,  0.6014,  2.2812, -0.9350],
         [ 1.2463,  0.1171, -0.0218,  ...,  0.4066, -0.5065, -1.7352],
         [ 1.9697, -1.0703, -0.6107,  ...,  0.9339,  1.0641, -0.0416]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[-0.7726, -0.1507,  0.1004,  ...,  0.6799,  1.6971, -0.9726],
         [-0.0410, -1.2602,  0.4879,  ..., -0.1295, -1.4638,  0.8681],
         [ 1.8479, -0.3037,  0.0123,  ...,  0.9619, -1.1206,  1.7546],
         ...,
         [-1.4614,  0.3725, -0.5160,  ...,  0.9808,  0.1521,  2.1079],
         [-0.6760, -0.4465, -1.4253,  ..., -0.0156, -0.5050, -0.6366],
         [-0.6656, -1.2977,  0.9631,  ...,  0.1640,  0.6572,  0.3783]],

        [[-0.2638,  0.9841, -0.6284,  ..., -1.1226, -0.4530,  0.9735],
         [-0.4620,  1.7716,  1.5304,  ..., -1.5734, -0.2069, -1.0493],
         [-0.0661,  1.1195,  1.3723,  ...,  0.3606, -0.0736,  0.7544],
         ...,
         [-0.6897, -1.7122,  1.2382,  ...,  0.6036, -0.3586,  0.0761],
         [ 0.9480,  0.9402,  2.9017,  ...,  2.2300,  0.1182,  1.3676],
         [-0.3157,  0.2849, -0.6486,  ..., -2.6925,  2.3997,  0.5418]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 1.2491,  0.8235, -0.7230,  ...,  0.7797,  1.2842,  0.3789],
         [-2.0246,  0.1150,  0.2123,  ...,  0.1163,  1.8176,  0.5925],
         [ 0.2687,  1.8103,  0.9064,  ...,  1.5947,  0.3645,  0.4070],
         ...,
         [-2.4615,  1.9421,  0.3896,  ...,  0.5216, -1.4999,  0.0149],
         [-1.4326, -0.1307, -1.0293,  ...,  0.1748,  0.0907, -0.9291],
         [-0.0890, -1.2117,  0.6332,  ..., -0.0726, -1.4908,  0.2153]],

        [[ 1.8102, -1.8968, -0.2309,  ...,  1.5643, -0.1491, -0.1909],
         [-0.8267,  1.0439, -1.2669,  ...,  1.6034,  2.0367,  2.0954],
         [ 0.0223, -1.9738, -1.9426,  ...,  2.2356,  0.2463,  0.5791],
         ...,
         [-1.4632,  0.9743,  1.0269,  ...,  0.6014,  2.2812, -0.9350],
         [ 1.2463,  0.1171, -0.0218,  ...,  0.4066, -0.5065, -1.7352],
         [ 1.9697, -1.0703, -0.6107,  ...,  0.9339,  1.0641, -0.0416]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 543.799, Val Loss : 467.248
======> Trajectory Loss : 405.234, Gravity Loss : 0.000, EndOfTrajectory Loss : 1.386, BelowGroundPenalize Loss : 0.000
===> [Minibatch 3/129].........IDX = 0 :  tensor([[[-0.7726, -0.1507,  0.1004,  ...,  0.6799,  1.6971, -0.9726],
         [-0.0410, -1.2602,  0.4879,  ..., -0.1295, -1.4638,  0.8681],
         [ 1.8479, -0.3037,  0.0123,  ...,  0.9619, -1.1206,  1.7546],
         ...,
         [-1.4614,  0.3725, -0.5160,  ...,  0.9808,  0.1521,  2.1079],
         [-0.6760, -0.4465, -1.4253,  ..., -0.0156, -0.5050, -0.6366],
         [-0.6656, -1.2977,  0.9631,  ...,  0.1640,  0.6572,  0.3783]],

        [[-0.2638,  0.9841, -0.6284,  ..., -1.1226, -0.4530,  0.9735],
         [-0.4620,  1.7716,  1.5304,  ..., -1.5734, -0.2069, -1.0493],
         [-0.0661,  1.1195,  1.3723,  ...,  0.3606, -0.0736,  0.7544],
         ...,
         [-0.6897, -1.7122,  1.2382,  ...,  0.6036, -0.3586,  0.0761],
         [ 0.9480,  0.9402,  2.9017,  ...,  2.2300,  0.1182,  1.3676],
         [-0.3157,  0.2849, -0.6486,  ..., -2.6925,  2.3997,  0.5418]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 1.2491,  0.8235, -0.7230,  ...,  0.7797,  1.2842,  0.3789],
         [-2.0246,  0.1150,  0.2123,  ...,  0.1163,  1.8176,  0.5925],
         [ 0.2687,  1.8103,  0.9064,  ...,  1.5947,  0.3645,  0.4070],
         ...,
         [-2.4615,  1.9421,  0.3896,  ...,  0.5216, -1.4999,  0.0149],
         [-1.4326, -0.1307, -1.0293,  ...,  0.1748,  0.0907, -0.9291],
         [-0.0890, -1.2117,  0.6332,  ..., -0.0726, -1.4908,  0.2153]],

        [[ 1.8102, -1.8968, -0.2309,  ...,  1.5643, -0.1491, -0.1909],
         [-0.8267,  1.0439, -1.2669,  ...,  1.6034,  2.0367,  2.0954],
         [ 0.0223, -1.9738, -1.9426,  ...,  2.2356,  0.2463,  0.5791],
         ...,
         [-1.4632,  0.9743,  1.0269,  ...,  0.6014,  2.2812, -0.9350],
         [ 1.2463,  0.1171, -0.0218,  ...,  0.4066, -0.5065, -1.7352],
         [ 1.9697, -1.0703, -0.6107,  ...,  0.9339,  1.0641, -0.0416]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[-0.7726, -0.1507,  0.1004,  ...,  0.6799,  1.6971, -0.9726],
         [-0.0410, -1.2602,  0.4879,  ..., -0.1295, -1.4638,  0.8681],
         [ 1.8479, -0.3037,  0.0123,  ...,  0.9619, -1.1206,  1.7546],
         ...,
         [-1.4614,  0.3725, -0.5160,  ...,  0.9808,  0.1521,  2.1079],
         [-0.6760, -0.4465, -1.4253,  ..., -0.0156, -0.5050, -0.6366],
         [-0.6656, -1.2977,  0.9631,  ...,  0.1640,  0.6572,  0.3783]],

        [[-0.2638,  0.9841, -0.6284,  ..., -1.1226, -0.4530,  0.9735],
         [-0.4620,  1.7716,  1.5304,  ..., -1.5734, -0.2069, -1.0493],
         [-0.0661,  1.1195,  1.3723,  ...,  0.3606, -0.0736,  0.7544],
         ...,
         [-0.6897, -1.7122,  1.2382,  ...,  0.6036, -0.3586,  0.0761],
         [ 0.9480,  0.9402,  2.9017,  ...,  2.2300,  0.1182,  1.3676],
         [-0.3157,  0.2849, -0.6486,  ..., -2.6925,  2.3997,  0.5418]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 1.2491,  0.8235, -0.7230,  ...,  0.7797,  1.2842,  0.3789],
         [-2.0246,  0.1150,  0.2123,  ...,  0.1163,  1.8176,  0.5925],
         [ 0.2687,  1.8103,  0.9064,  ...,  1.5947,  0.3645,  0.4070],
         ...,
         [-2.4615,  1.9421,  0.3896,  ...,  0.5216, -1.4999,  0.0149],
         [-1.4326, -0.1307, -1.0293,  ...,  0.1748,  0.0907, -0.9291],
         [-0.0890, -1.2117,  0.6332,  ..., -0.0726, -1.4908,  0.2153]],

        [[ 1.8102, -1.8968, -0.2309,  ...,  1.5643, -0.1491, -0.1909],
         [-0.8267,  1.0439, -1.2669,  ...,  1.6034,  2.0367,  2.0954],
         [ 0.0223, -1.9738, -1.9426,  ...,  2.2356,  0.2463,  0.5791],
         ...,
         [-1.4632,  0.9743,  1.0269,  ...,  0.6014,  2.2812, -0.9350],
         [ 1.2463,  0.1171, -0.0218,  ...,  0.4066, -0.5065, -1.7352],
         [ 1.9697, -1.0703, -0.6107,  ...,  0.9339,  1.0641, -0.0416]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 215.257, Val Loss : 548.795
======> Trajectory Loss : 77.479, Gravity Loss : 0.000, EndOfTrajectory Loss : 1.378, BelowGroundPenalize Loss : 0.000
===> [Minibatch 4/129].........IDX = 0 :  tensor([[[-0.7726, -0.1507,  0.1004,  ...,  0.6799,  1.6971, -0.9726],
         [-0.0410, -1.2602,  0.4879,  ..., -0.1295, -1.4638,  0.8681],
         [ 1.8479, -0.3037,  0.0123,  ...,  0.9619, -1.1206,  1.7546],
         ...,
         [-1.4614,  0.3725, -0.5160,  ...,  0.9808,  0.1521,  2.1079],
         [-0.6760, -0.4465, -1.4253,  ..., -0.0156, -0.5050, -0.6366],
         [-0.6656, -1.2977,  0.9631,  ...,  0.1640,  0.6572,  0.3783]],

        [[-0.2638,  0.9841, -0.6284,  ..., -1.1226, -0.4530,  0.9735],
         [-0.4620,  1.7716,  1.5304,  ..., -1.5734, -0.2069, -1.0493],
         [-0.0661,  1.1195,  1.3723,  ...,  0.3606, -0.0736,  0.7544],
         ...,
         [-0.6897, -1.7122,  1.2382,  ...,  0.6036, -0.3586,  0.0761],
         [ 0.9480,  0.9402,  2.9017,  ...,  2.2300,  0.1182,  1.3676],
         [-0.3157,  0.2849, -0.6486,  ..., -2.6925,  2.3997,  0.5418]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 1.2491,  0.8235, -0.7230,  ...,  0.7797,  1.2842,  0.3789],
         [-2.0246,  0.1150,  0.2123,  ...,  0.1163,  1.8176,  0.5925],
         [ 0.2687,  1.8103,  0.9064,  ...,  1.5947,  0.3645,  0.4070],
         ...,
         [-2.4615,  1.9421,  0.3896,  ...,  0.5216, -1.4999,  0.0149],
         [-1.4326, -0.1307, -1.0293,  ...,  0.1748,  0.0907, -0.9291],
         [-0.0890, -1.2117,  0.6332,  ..., -0.0726, -1.4908,  0.2153]],

        [[ 1.8102, -1.8968, -0.2309,  ...,  1.5643, -0.1491, -0.1909],
         [-0.8267,  1.0439, -1.2669,  ...,  1.6034,  2.0367,  2.0954],
         [ 0.0223, -1.9738, -1.9426,  ...,  2.2356,  0.2463,  0.5791],
         ...,
         [-1.4632,  0.9743,  1.0269,  ...,  0.6014,  2.2812, -0.9350],
         [ 1.2463,  0.1171, -0.0218,  ...,  0.4066, -0.5065, -1.7352],
         [ 1.9697, -1.0703, -0.6107,  ...,  0.9339,  1.0641, -0.0416]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[-0.7726, -0.1507,  0.1004,  ...,  0.6799,  1.6971, -0.9726],
         [-0.0410, -1.2602,  0.4879,  ..., -0.1295, -1.4638,  0.8681],
         [ 1.8479, -0.3037,  0.0123,  ...,  0.9619, -1.1206,  1.7546],
         ...,
         [-1.4614,  0.3725, -0.5160,  ...,  0.9808,  0.1521,  2.1079],
         [-0.6760, -0.4465, -1.4253,  ..., -0.0156, -0.5050, -0.6366],
         [-0.6656, -1.2977,  0.9631,  ...,  0.1640,  0.6572,  0.3783]],

        [[-0.2638,  0.9841, -0.6284,  ..., -1.1226, -0.4530,  0.9735],
         [-0.4620,  1.7716,  1.5304,  ..., -1.5734, -0.2069, -1.0493],
         [-0.0661,  1.1195,  1.3723,  ...,  0.3606, -0.0736,  0.7544],
         ...,
         [-0.6897, -1.7122,  1.2382,  ...,  0.6036, -0.3586,  0.0761],
         [ 0.9480,  0.9402,  2.9017,  ...,  2.2300,  0.1182,  1.3676],
         [-0.3157,  0.2849, -0.6486,  ..., -2.6925,  2.3997,  0.5418]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 1.2491,  0.8235, -0.7230,  ...,  0.7797,  1.2842,  0.3789],
         [-2.0246,  0.1150,  0.2123,  ...,  0.1163,  1.8176,  0.5925],
         [ 0.2687,  1.8103,  0.9064,  ...,  1.5947,  0.3645,  0.4070],
         ...,
         [-2.4615,  1.9421,  0.3896,  ...,  0.5216, -1.4999,  0.0149],
         [-1.4326, -0.1307, -1.0293,  ...,  0.1748,  0.0907, -0.9291],
         [-0.0890, -1.2117,  0.6332,  ..., -0.0726, -1.4908,  0.2153]],

        [[ 1.8102, -1.8968, -0.2309,  ...,  1.5643, -0.1491, -0.1909],
         [-0.8267,  1.0439, -1.2669,  ...,  1.6034,  2.0367,  2.0954],
         [ 0.0223, -1.9738, -1.9426,  ...,  2.2356,  0.2463,  0.5791],
         ...,
         [-1.4632,  0.9743,  1.0269,  ...,  0.6014,  2.2812, -0.9350],
         [ 1.2463,  0.1171, -0.0218,  ...,  0.4066, -0.5065, -1.7352],
         [ 1.9697, -1.0703, -0.6107,  ...,  0.9339,  1.0641, -0.0416]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 238.361, Val Loss : 644.655
======> Trajectory Loss : 88.688, Gravity Loss : 0.000, EndOfTrajectory Loss : 1.347, BelowGroundPenalize Loss : 14.964
===> [Minibatch 5/129].........IDX = 0 :  tensor([[[-0.7726, -0.1507,  0.1004,  ...,  0.6799,  1.6971, -0.9726],
         [-0.0410, -1.2602,  0.4879,  ..., -0.1295, -1.4638,  0.8681],
         [ 1.8479, -0.3037,  0.0123,  ...,  0.9619, -1.1206,  1.7546],
         ...,
         [-1.4614,  0.3725, -0.5160,  ...,  0.9808,  0.1521,  2.1079],
         [-0.6760, -0.4465, -1.4253,  ..., -0.0156, -0.5050, -0.6366],
         [-0.6656, -1.2977,  0.9631,  ...,  0.1640,  0.6572,  0.3783]],

        [[-0.2638,  0.9841, -0.6284,  ..., -1.1226, -0.4530,  0.9735],
         [-0.4620,  1.7716,  1.5304,  ..., -1.5734, -0.2069, -1.0493],
         [-0.0661,  1.1195,  1.3723,  ...,  0.3606, -0.0736,  0.7544],
         ...,
         [-0.6897, -1.7122,  1.2382,  ...,  0.6036, -0.3586,  0.0761],
         [ 0.9480,  0.9402,  2.9017,  ...,  2.2300,  0.1182,  1.3676],
         [-0.3157,  0.2849, -0.6486,  ..., -2.6925,  2.3997,  0.5418]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 1.2491,  0.8235, -0.7230,  ...,  0.7797,  1.2842,  0.3789],
         [-2.0246,  0.1150,  0.2123,  ...,  0.1163,  1.8176,  0.5925],
         [ 0.2687,  1.8103,  0.9064,  ...,  1.5947,  0.3645,  0.4070],
         ...,
         [-2.4615,  1.9421,  0.3896,  ...,  0.5216, -1.4999,  0.0149],
         [-1.4326, -0.1307, -1.0293,  ...,  0.1748,  0.0907, -0.9291],
         [-0.0890, -1.2117,  0.6332,  ..., -0.0726, -1.4908,  0.2153]],

        [[ 1.8102, -1.8968, -0.2309,  ...,  1.5643, -0.1491, -0.1909],
         [-0.8267,  1.0439, -1.2669,  ...,  1.6034,  2.0367,  2.0954],
         [ 0.0223, -1.9738, -1.9426,  ...,  2.2356,  0.2463,  0.5791],
         ...,
         [-1.4632,  0.9743,  1.0269,  ...,  0.6014,  2.2812, -0.9350],
         [ 1.2463,  0.1171, -0.0218,  ...,  0.4066, -0.5065, -1.7352],
         [ 1.9697, -1.0703, -0.6107,  ...,  0.9339,  1.0641, -0.0416]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[-0.7726, -0.1507,  0.1004,  ...,  0.6799,  1.6971, -0.9726],
         [-0.0410, -1.2602,  0.4879,  ..., -0.1295, -1.4638,  0.8681],
         [ 1.8479, -0.3037,  0.0123,  ...,  0.9619, -1.1206,  1.7546],
         ...,
         [-1.4614,  0.3725, -0.5160,  ...,  0.9808,  0.1521,  2.1079],
         [-0.6760, -0.4465, -1.4253,  ..., -0.0156, -0.5050, -0.6366],
         [-0.6656, -1.2977,  0.9631,  ...,  0.1640,  0.6572,  0.3783]],

        [[-0.2638,  0.9841, -0.6284,  ..., -1.1226, -0.4530,  0.9735],
         [-0.4620,  1.7716,  1.5304,  ..., -1.5734, -0.2069, -1.0493],
         [-0.0661,  1.1195,  1.3723,  ...,  0.3606, -0.0736,  0.7544],
         ...,
         [-0.6897, -1.7122,  1.2382,  ...,  0.6036, -0.3586,  0.0761],
         [ 0.9480,  0.9402,  2.9017,  ...,  2.2300,  0.1182,  1.3676],
         [-0.3157,  0.2849, -0.6486,  ..., -2.6925,  2.3997,  0.5418]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 1.2491,  0.8235, -0.7230,  ...,  0.7797,  1.2842,  0.3789],
         [-2.0246,  0.1150,  0.2123,  ...,  0.1163,  1.8176,  0.5925],
         [ 0.2687,  1.8103,  0.9064,  ...,  1.5947,  0.3645,  0.4070],
         ...,
         [-2.4615,  1.9421,  0.3896,  ...,  0.5216, -1.4999,  0.0149],
         [-1.4326, -0.1307, -1.0293,  ...,  0.1748,  0.0907, -0.9291],
         [-0.0890, -1.2117,  0.6332,  ..., -0.0726, -1.4908,  0.2153]],

        [[ 1.8102, -1.8968, -0.2309,  ...,  1.5643, -0.1491, -0.1909],
         [-0.8267,  1.0439, -1.2669,  ...,  1.6034,  2.0367,  2.0954],
         [ 0.0223, -1.9738, -1.9426,  ...,  2.2356,  0.2463,  0.5791],
         ...,
         [-1.4632,  0.9743,  1.0269,  ...,  0.6014,  2.2812, -0.9350],
         [ 1.2463,  0.1171, -0.0218,  ...,  0.4066, -0.5065, -1.7352],
         [ 1.9697, -1.0703, -0.6107,  ...,  0.9339,  1.0641, -0.0416]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 241.163, Val Loss : 640.938
======> Trajectory Loss : 97.011, Gravity Loss : 0.000, EndOfTrajectory Loss : 1.295, BelowGroundPenalize Loss : 14.604
===> [Minibatch 6/129].........IDX = 0 :  tensor([[[-0.7726, -0.1507,  0.1004,  ...,  0.6799,  1.6971, -0.9726],
         [-0.0410, -1.2602,  0.4879,  ..., -0.1295, -1.4638,  0.8681],
         [ 1.8479, -0.3037,  0.0123,  ...,  0.9619, -1.1206,  1.7546],
         ...,
         [-1.4614,  0.3725, -0.5160,  ...,  0.9808,  0.1521,  2.1079],
         [-0.6760, -0.4465, -1.4253,  ..., -0.0156, -0.5050, -0.6366],
         [-0.6656, -1.2977,  0.9631,  ...,  0.1640,  0.6572,  0.3783]],

        [[-0.2638,  0.9841, -0.6284,  ..., -1.1226, -0.4530,  0.9735],
         [-0.4620,  1.7716,  1.5304,  ..., -1.5734, -0.2069, -1.0493],
         [-0.0661,  1.1195,  1.3723,  ...,  0.3606, -0.0736,  0.7544],
         ...,
         [-0.6897, -1.7122,  1.2382,  ...,  0.6036, -0.3586,  0.0761],
         [ 0.9480,  0.9402,  2.9017,  ...,  2.2300,  0.1182,  1.3676],
         [-0.3157,  0.2849, -0.6486,  ..., -2.6925,  2.3997,  0.5418]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 1.2491,  0.8235, -0.7230,  ...,  0.7797,  1.2842,  0.3789],
         [-2.0246,  0.1150,  0.2123,  ...,  0.1163,  1.8176,  0.5925],
         [ 0.2687,  1.8103,  0.9064,  ...,  1.5947,  0.3645,  0.4070],
         ...,
         [-2.4615,  1.9421,  0.3896,  ...,  0.5216, -1.4999,  0.0149],
         [-1.4326, -0.1307, -1.0293,  ...,  0.1748,  0.0907, -0.9291],
         [-0.0890, -1.2117,  0.6332,  ..., -0.0726, -1.4908,  0.2153]],

        [[ 1.8102, -1.8968, -0.2309,  ...,  1.5643, -0.1491, -0.1909],
         [-0.8267,  1.0439, -1.2669,  ...,  1.6034,  2.0367,  2.0954],
         [ 0.0223, -1.9738, -1.9426,  ...,  2.2356,  0.2463,  0.5791],
         ...,
         [-1.4632,  0.9743,  1.0269,  ...,  0.6014,  2.2812, -0.9350],
         [ 1.2463,  0.1171, -0.0218,  ...,  0.4066, -0.5065, -1.7352],
         [ 1.9697, -1.0703, -0.6107,  ...,  0.9339,  1.0641, -0.0416]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[-0.7726, -0.1507,  0.1004,  ...,  0.6799,  1.6971, -0.9726],
         [-0.0410, -1.2602,  0.4879,  ..., -0.1295, -1.4638,  0.8681],
         [ 1.8479, -0.3037,  0.0123,  ...,  0.9619, -1.1206,  1.7546],
         ...,
         [-1.4614,  0.3725, -0.5160,  ...,  0.9808,  0.1521,  2.1079],
         [-0.6760, -0.4465, -1.4253,  ..., -0.0156, -0.5050, -0.6366],
         [-0.6656, -1.2977,  0.9631,  ...,  0.1640,  0.6572,  0.3783]],

        [[-0.2638,  0.9841, -0.6284,  ..., -1.1226, -0.4530,  0.9735],
         [-0.4620,  1.7716,  1.5304,  ..., -1.5734, -0.2069, -1.0493],
         [-0.0661,  1.1195,  1.3723,  ...,  0.3606, -0.0736,  0.7544],
         ...,
         [-0.6897, -1.7122,  1.2382,  ...,  0.6036, -0.3586,  0.0761],
         [ 0.9480,  0.9402,  2.9017,  ...,  2.2300,  0.1182,  1.3676],
         [-0.3157,  0.2849, -0.6486,  ..., -2.6925,  2.3997,  0.5418]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 1.2491,  0.8235, -0.7230,  ...,  0.7797,  1.2842,  0.3789],
         [-2.0246,  0.1150,  0.2123,  ...,  0.1163,  1.8176,  0.5925],
         [ 0.2687,  1.8103,  0.9064,  ...,  1.5947,  0.3645,  0.4070],
         ...,
         [-2.4615,  1.9421,  0.3896,  ...,  0.5216, -1.4999,  0.0149],
         [-1.4326, -0.1307, -1.0293,  ...,  0.1748,  0.0907, -0.9291],
         [-0.0890, -1.2117,  0.6332,  ..., -0.0726, -1.4908,  0.2153]],

        [[ 1.8102, -1.8968, -0.2309,  ...,  1.5643, -0.1491, -0.1909],
         [-0.8267,  1.0439, -1.2669,  ...,  1.6034,  2.0367,  2.0954],
         [ 0.0223, -1.9738, -1.9426,  ...,  2.2356,  0.2463,  0.5791],
         ...,
         [-1.4632,  0.9743,  1.0269,  ...,  0.6014,  2.2812, -0.9350],
         [ 1.2463,  0.1171, -0.0218,  ...,  0.4066, -0.5065, -1.7352],
         [ 1.9697, -1.0703, -0.6107,  ...,  0.9339,  1.0641, -0.0416]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 216.325, Val Loss : 581.886
======> Trajectory Loss : 82.589, Gravity Loss : 0.000, EndOfTrajectory Loss : 1.227, BelowGroundPenalize Loss : 11.080
===> [Minibatch 7/129].........IDX = 0 :  tensor([[[-0.7726, -0.1507,  0.1004,  ...,  0.6799,  1.6971, -0.9726],
         [-0.0410, -1.2602,  0.4879,  ..., -0.1295, -1.4638,  0.8681],
         [ 1.8479, -0.3037,  0.0123,  ...,  0.9619, -1.1206,  1.7546],
         ...,
         [-1.4614,  0.3725, -0.5160,  ...,  0.9808,  0.1521,  2.1079],
         [-0.6760, -0.4465, -1.4253,  ..., -0.0156, -0.5050, -0.6366],
         [-0.6656, -1.2977,  0.9631,  ...,  0.1640,  0.6572,  0.3783]],

        [[-0.2638,  0.9841, -0.6284,  ..., -1.1226, -0.4530,  0.9735],
         [-0.4620,  1.7716,  1.5304,  ..., -1.5734, -0.2069, -1.0493],
         [-0.0661,  1.1195,  1.3723,  ...,  0.3606, -0.0736,  0.7544],
         ...,
         [-0.6897, -1.7122,  1.2382,  ...,  0.6036, -0.3586,  0.0761],
         [ 0.9480,  0.9402,  2.9017,  ...,  2.2300,  0.1182,  1.3676],
         [-0.3157,  0.2849, -0.6486,  ..., -2.6925,  2.3997,  0.5418]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 1.2491,  0.8235, -0.7230,  ...,  0.7797,  1.2842,  0.3789],
         [-2.0246,  0.1150,  0.2123,  ...,  0.1163,  1.8176,  0.5925],
         [ 0.2687,  1.8103,  0.9064,  ...,  1.5947,  0.3645,  0.4070],
         ...,
         [-2.4615,  1.9421,  0.3896,  ...,  0.5216, -1.4999,  0.0149],
         [-1.4326, -0.1307, -1.0293,  ...,  0.1748,  0.0907, -0.9291],
         [-0.0890, -1.2117,  0.6332,  ..., -0.0726, -1.4908,  0.2153]],

        [[ 1.8102, -1.8968, -0.2309,  ...,  1.5643, -0.1491, -0.1909],
         [-0.8267,  1.0439, -1.2669,  ...,  1.6034,  2.0367,  2.0954],
         [ 0.0223, -1.9738, -1.9426,  ...,  2.2356,  0.2463,  0.5791],
         ...,
         [-1.4632,  0.9743,  1.0269,  ...,  0.6014,  2.2812, -0.9350],
         [ 1.2463,  0.1171, -0.0218,  ...,  0.4066, -0.5065, -1.7352],
         [ 1.9697, -1.0703, -0.6107,  ...,  0.9339,  1.0641, -0.0416]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[-0.7726, -0.1507,  0.1004,  ...,  0.6799,  1.6971, -0.9726],
         [-0.0410, -1.2602,  0.4879,  ..., -0.1295, -1.4638,  0.8681],
         [ 1.8479, -0.3037,  0.0123,  ...,  0.9619, -1.1206,  1.7546],
         ...,
         [-1.4614,  0.3725, -0.5160,  ...,  0.9808,  0.1521,  2.1079],
         [-0.6760, -0.4465, -1.4253,  ..., -0.0156, -0.5050, -0.6366],
         [-0.6656, -1.2977,  0.9631,  ...,  0.1640,  0.6572,  0.3783]],

        [[-0.2638,  0.9841, -0.6284,  ..., -1.1226, -0.4530,  0.9735],
         [-0.4620,  1.7716,  1.5304,  ..., -1.5734, -0.2069, -1.0493],
         [-0.0661,  1.1195,  1.3723,  ...,  0.3606, -0.0736,  0.7544],
         ...,
         [-0.6897, -1.7122,  1.2382,  ...,  0.6036, -0.3586,  0.0761],
         [ 0.9480,  0.9402,  2.9017,  ...,  2.2300,  0.1182,  1.3676],
         [-0.3157,  0.2849, -0.6486,  ..., -2.6925,  2.3997,  0.5418]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 1.2491,  0.8235, -0.7230,  ...,  0.7797,  1.2842,  0.3789],
         [-2.0246,  0.1150,  0.2123,  ...,  0.1163,  1.8176,  0.5925],
         [ 0.2687,  1.8103,  0.9064,  ...,  1.5947,  0.3645,  0.4070],
         ...,
         [-2.4615,  1.9421,  0.3896,  ...,  0.5216, -1.4999,  0.0149],
         [-1.4326, -0.1307, -1.0293,  ...,  0.1748,  0.0907, -0.9291],
         [-0.0890, -1.2117,  0.6332,  ..., -0.0726, -1.4908,  0.2153]],

        [[ 1.8102, -1.8968, -0.2309,  ...,  1.5643, -0.1491, -0.1909],
         [-0.8267,  1.0439, -1.2669,  ...,  1.6034,  2.0367,  2.0954],
         [ 0.0223, -1.9738, -1.9426,  ...,  2.2356,  0.2463,  0.5791],
         ...,
         [-1.4632,  0.9743,  1.0269,  ...,  0.6014,  2.2812, -0.9350],
         [ 1.2463,  0.1171, -0.0218,  ...,  0.4066, -0.5065, -1.7352],
         [ 1.9697, -1.0703, -0.6107,  ...,  0.9339,  1.0641, -0.0416]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 215.087, Val Loss : 485.216
======> Trajectory Loss : 82.556, Gravity Loss : 0.000, EndOfTrajectory Loss : 1.170, BelowGroundPenalize Loss : 15.504
===> [Minibatch 8/129].........IDX = 0 :  tensor([[[-0.7726, -0.1507,  0.1004,  ...,  0.6799,  1.6971, -0.9726],
         [-0.0410, -1.2602,  0.4879,  ..., -0.1295, -1.4638,  0.8681],
         [ 1.8479, -0.3037,  0.0123,  ...,  0.9619, -1.1206,  1.7546],
         ...,
         [-1.4614,  0.3725, -0.5160,  ...,  0.9808,  0.1521,  2.1079],
         [-0.6760, -0.4465, -1.4253,  ..., -0.0156, -0.5050, -0.6366],
         [-0.6656, -1.2977,  0.9631,  ...,  0.1640,  0.6572,  0.3783]],

        [[-0.2638,  0.9841, -0.6284,  ..., -1.1226, -0.4530,  0.9735],
         [-0.4620,  1.7716,  1.5304,  ..., -1.5734, -0.2069, -1.0493],
         [-0.0661,  1.1195,  1.3723,  ...,  0.3606, -0.0736,  0.7544],
         ...,
         [-0.6897, -1.7122,  1.2382,  ...,  0.6036, -0.3586,  0.0761],
         [ 0.9480,  0.9402,  2.9017,  ...,  2.2300,  0.1182,  1.3676],
         [-0.3157,  0.2849, -0.6486,  ..., -2.6925,  2.3997,  0.5418]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 1.2491,  0.8235, -0.7230,  ...,  0.7797,  1.2842,  0.3789],
         [-2.0246,  0.1150,  0.2123,  ...,  0.1163,  1.8176,  0.5925],
         [ 0.2687,  1.8103,  0.9064,  ...,  1.5947,  0.3645,  0.4070],
         ...,
         [-2.4615,  1.9421,  0.3896,  ...,  0.5216, -1.4999,  0.0149],
         [-1.4326, -0.1307, -1.0293,  ...,  0.1748,  0.0907, -0.9291],
         [-0.0890, -1.2117,  0.6332,  ..., -0.0726, -1.4908,  0.2153]],

        [[ 1.8102, -1.8968, -0.2309,  ...,  1.5643, -0.1491, -0.1909],
         [-0.8267,  1.0439, -1.2669,  ...,  1.6034,  2.0367,  2.0954],
         [ 0.0223, -1.9738, -1.9426,  ...,  2.2356,  0.2463,  0.5791],
         ...,
         [-1.4632,  0.9743,  1.0269,  ...,  0.6014,  2.2812, -0.9350],
         [ 1.2463,  0.1171, -0.0218,  ...,  0.4066, -0.5065, -1.7352],
         [ 1.9697, -1.0703, -0.6107,  ...,  0.9339,  1.0641, -0.0416]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[-0.7726, -0.1507,  0.1004,  ...,  0.6799,  1.6971, -0.9726],
         [-0.0410, -1.2602,  0.4879,  ..., -0.1295, -1.4638,  0.8681],
         [ 1.8479, -0.3037,  0.0123,  ...,  0.9619, -1.1206,  1.7546],
         ...,
         [-1.4614,  0.3725, -0.5160,  ...,  0.9808,  0.1521,  2.1079],
         [-0.6760, -0.4465, -1.4253,  ..., -0.0156, -0.5050, -0.6366],
         [-0.6656, -1.2977,  0.9631,  ...,  0.1640,  0.6572,  0.3783]],

        [[-0.2638,  0.9841, -0.6284,  ..., -1.1226, -0.4530,  0.9735],
         [-0.4620,  1.7716,  1.5304,  ..., -1.5734, -0.2069, -1.0493],
         [-0.0661,  1.1195,  1.3723,  ...,  0.3606, -0.0736,  0.7544],
         ...,
         [-0.6897, -1.7122,  1.2382,  ...,  0.6036, -0.3586,  0.0761],
         [ 0.9480,  0.9402,  2.9017,  ...,  2.2300,  0.1182,  1.3676],
         [-0.3157,  0.2849, -0.6486,  ..., -2.6925,  2.3997,  0.5418]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 1.2491,  0.8235, -0.7230,  ...,  0.7797,  1.2842,  0.3789],
         [-2.0246,  0.1150,  0.2123,  ...,  0.1163,  1.8176,  0.5925],
         [ 0.2687,  1.8103,  0.9064,  ...,  1.5947,  0.3645,  0.4070],
         ...,
         [-2.4615,  1.9421,  0.3896,  ...,  0.5216, -1.4999,  0.0149],
         [-1.4326, -0.1307, -1.0293,  ...,  0.1748,  0.0907, -0.9291],
         [-0.0890, -1.2117,  0.6332,  ..., -0.0726, -1.4908,  0.2153]],

        [[ 1.8102, -1.8968, -0.2309,  ...,  1.5643, -0.1491, -0.1909],
         [-0.8267,  1.0439, -1.2669,  ...,  1.6034,  2.0367,  2.0954],
         [ 0.0223, -1.9738, -1.9426,  ...,  2.2356,  0.2463,  0.5791],
         ...,
         [-1.4632,  0.9743,  1.0269,  ...,  0.6014,  2.2812, -0.9350],
         [ 1.2463,  0.1171, -0.0218,  ...,  0.4066, -0.5065, -1.7352],
         [ 1.9697, -1.0703, -0.6107,  ...,  0.9339,  1.0641, -0.0416]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 177.691, Val Loss : 372.245
======> Trajectory Loss : 59.997, Gravity Loss : 0.000, EndOfTrajectory Loss : 1.097, BelowGroundPenalize Loss : 8.020
===> [Minibatch 9/129].........IDX = 0 :  tensor([[[-0.7726, -0.1507,  0.1004,  ...,  0.6799,  1.6971, -0.9726],
         [-0.0410, -1.2602,  0.4879,  ..., -0.1295, -1.4638,  0.8681],
         [ 1.8479, -0.3037,  0.0123,  ...,  0.9619, -1.1206,  1.7546],
         ...,
         [-1.4614,  0.3725, -0.5160,  ...,  0.9808,  0.1521,  2.1079],
         [-0.6760, -0.4465, -1.4253,  ..., -0.0156, -0.5050, -0.6366],
         [-0.6656, -1.2977,  0.9631,  ...,  0.1640,  0.6572,  0.3783]],

        [[-0.2638,  0.9841, -0.6284,  ..., -1.1226, -0.4530,  0.9735],
         [-0.4620,  1.7716,  1.5304,  ..., -1.5734, -0.2069, -1.0493],
         [-0.0661,  1.1195,  1.3723,  ...,  0.3606, -0.0736,  0.7544],
         ...,
         [-0.6897, -1.7122,  1.2382,  ...,  0.6036, -0.3586,  0.0761],
         [ 0.9480,  0.9402,  2.9017,  ...,  2.2300,  0.1182,  1.3676],
         [-0.3157,  0.2849, -0.6486,  ..., -2.6925,  2.3997,  0.5418]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 1.2491,  0.8235, -0.7230,  ...,  0.7797,  1.2842,  0.3789],
         [-2.0246,  0.1150,  0.2123,  ...,  0.1163,  1.8176,  0.5925],
         [ 0.2687,  1.8103,  0.9064,  ...,  1.5947,  0.3645,  0.4070],
         ...,
         [-2.4615,  1.9421,  0.3896,  ...,  0.5216, -1.4999,  0.0149],
         [-1.4326, -0.1307, -1.0293,  ...,  0.1748,  0.0907, -0.9291],
         [-0.0890, -1.2117,  0.6332,  ..., -0.0726, -1.4908,  0.2153]],

        [[ 1.8102, -1.8968, -0.2309,  ...,  1.5643, -0.1491, -0.1909],
         [-0.8267,  1.0439, -1.2669,  ...,  1.6034,  2.0367,  2.0954],
         [ 0.0223, -1.9738, -1.9426,  ...,  2.2356,  0.2463,  0.5791],
         ...,
         [-1.4632,  0.9743,  1.0269,  ...,  0.6014,  2.2812, -0.9350],
         [ 1.2463,  0.1171, -0.0218,  ...,  0.4066, -0.5065, -1.7352],
         [ 1.9697, -1.0703, -0.6107,  ...,  0.9339,  1.0641, -0.0416]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[-0.7726, -0.1507,  0.1004,  ...,  0.6799,  1.6971, -0.9726],
         [-0.0410, -1.2602,  0.4879,  ..., -0.1295, -1.4638,  0.8681],
         [ 1.8479, -0.3037,  0.0123,  ...,  0.9619, -1.1206,  1.7546],
         ...,
         [-1.4614,  0.3725, -0.5160,  ...,  0.9808,  0.1521,  2.1079],
         [-0.6760, -0.4465, -1.4253,  ..., -0.0156, -0.5050, -0.6366],
         [-0.6656, -1.2977,  0.9631,  ...,  0.1640,  0.6572,  0.3783]],

        [[-0.2638,  0.9841, -0.6284,  ..., -1.1226, -0.4530,  0.9735],
         [-0.4620,  1.7716,  1.5304,  ..., -1.5734, -0.2069, -1.0493],
         [-0.0661,  1.1195,  1.3723,  ...,  0.3606, -0.0736,  0.7544],
         ...,
         [-0.6897, -1.7122,  1.2382,  ...,  0.6036, -0.3586,  0.0761],
         [ 0.9480,  0.9402,  2.9017,  ...,  2.2300,  0.1182,  1.3676],
         [-0.3157,  0.2849, -0.6486,  ..., -2.6925,  2.3997,  0.5418]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 1.2491,  0.8235, -0.7230,  ...,  0.7797,  1.2842,  0.3789],
         [-2.0246,  0.1150,  0.2123,  ...,  0.1163,  1.8176,  0.5925],
         [ 0.2687,  1.8103,  0.9064,  ...,  1.5947,  0.3645,  0.4070],
         ...,
         [-2.4615,  1.9421,  0.3896,  ...,  0.5216, -1.4999,  0.0149],
         [-1.4326, -0.1307, -1.0293,  ...,  0.1748,  0.0907, -0.9291],
         [-0.0890, -1.2117,  0.6332,  ..., -0.0726, -1.4908,  0.2153]],

        [[ 1.8102, -1.8968, -0.2309,  ...,  1.5643, -0.1491, -0.1909],
         [-0.8267,  1.0439, -1.2669,  ...,  1.6034,  2.0367,  2.0954],
         [ 0.0223, -1.9738, -1.9426,  ...,  2.2356,  0.2463,  0.5791],
         ...,
         [-1.4632,  0.9743,  1.0269,  ...,  0.6014,  2.2812, -0.9350],
         [ 1.2463,  0.1171, -0.0218,  ...,  0.4066, -0.5065, -1.7352],
         [ 1.9697, -1.0703, -0.6107,  ...,  0.9339,  1.0641, -0.0416]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 183.511, Val Loss : 269.915
======> Trajectory Loss : 63.993, Gravity Loss : 0.000, EndOfTrajectory Loss : 1.104, BelowGroundPenalize Loss : 9.142
===> [Minibatch 10/129].........IDX = 0 :  tensor([[[-0.7726, -0.1507,  0.1004,  ...,  0.6799,  1.6971, -0.9726],
         [-0.0410, -1.2602,  0.4879,  ..., -0.1295, -1.4638,  0.8681],
         [ 1.8479, -0.3037,  0.0123,  ...,  0.9619, -1.1206,  1.7546],
         ...,
         [-1.4614,  0.3725, -0.5160,  ...,  0.9808,  0.1521,  2.1079],
         [-0.6760, -0.4465, -1.4253,  ..., -0.0156, -0.5050, -0.6366],
         [-0.6656, -1.2977,  0.9631,  ...,  0.1640,  0.6572,  0.3783]],

        [[-0.2638,  0.9841, -0.6284,  ..., -1.1226, -0.4530,  0.9735],
         [-0.4620,  1.7716,  1.5304,  ..., -1.5734, -0.2069, -1.0493],
         [-0.0661,  1.1195,  1.3723,  ...,  0.3606, -0.0736,  0.7544],
         ...,
         [-0.6897, -1.7122,  1.2382,  ...,  0.6036, -0.3586,  0.0761],
         [ 0.9480,  0.9402,  2.9017,  ...,  2.2300,  0.1182,  1.3676],
         [-0.3157,  0.2849, -0.6486,  ..., -2.6925,  2.3997,  0.5418]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 1.2491,  0.8235, -0.7230,  ...,  0.7797,  1.2842,  0.3789],
         [-2.0246,  0.1150,  0.2123,  ...,  0.1163,  1.8176,  0.5925],
         [ 0.2687,  1.8103,  0.9064,  ...,  1.5947,  0.3645,  0.4070],
         ...,
         [-2.4615,  1.9421,  0.3896,  ...,  0.5216, -1.4999,  0.0149],
         [-1.4326, -0.1307, -1.0293,  ...,  0.1748,  0.0907, -0.9291],
         [-0.0890, -1.2117,  0.6332,  ..., -0.0726, -1.4908,  0.2153]],

        [[ 1.8102, -1.8968, -0.2309,  ...,  1.5643, -0.1491, -0.1909],
         [-0.8267,  1.0439, -1.2669,  ...,  1.6034,  2.0367,  2.0954],
         [ 0.0223, -1.9738, -1.9426,  ...,  2.2356,  0.2463,  0.5791],
         ...,
         [-1.4632,  0.9743,  1.0269,  ...,  0.6014,  2.2812, -0.9350],
         [ 1.2463,  0.1171, -0.0218,  ...,  0.4066, -0.5065, -1.7352],
         [ 1.9697, -1.0703, -0.6107,  ...,  0.9339,  1.0641, -0.0416]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[-0.7726, -0.1507,  0.1004,  ...,  0.6799,  1.6971, -0.9726],
         [-0.0410, -1.2602,  0.4879,  ..., -0.1295, -1.4638,  0.8681],
         [ 1.8479, -0.3037,  0.0123,  ...,  0.9619, -1.1206,  1.7546],
         ...,
         [-1.4614,  0.3725, -0.5160,  ...,  0.9808,  0.1521,  2.1079],
         [-0.6760, -0.4465, -1.4253,  ..., -0.0156, -0.5050, -0.6366],
         [-0.6656, -1.2977,  0.9631,  ...,  0.1640,  0.6572,  0.3783]],

        [[-0.2638,  0.9841, -0.6284,  ..., -1.1226, -0.4530,  0.9735],
         [-0.4620,  1.7716,  1.5304,  ..., -1.5734, -0.2069, -1.0493],
         [-0.0661,  1.1195,  1.3723,  ...,  0.3606, -0.0736,  0.7544],
         ...,
         [-0.6897, -1.7122,  1.2382,  ...,  0.6036, -0.3586,  0.0761],
         [ 0.9480,  0.9402,  2.9017,  ...,  2.2300,  0.1182,  1.3676],
         [-0.3157,  0.2849, -0.6486,  ..., -2.6925,  2.3997,  0.5418]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 1.2491,  0.8235, -0.7230,  ...,  0.7797,  1.2842,  0.3789],
         [-2.0246,  0.1150,  0.2123,  ...,  0.1163,  1.8176,  0.5925],
         [ 0.2687,  1.8103,  0.9064,  ...,  1.5947,  0.3645,  0.4070],
         ...,
         [-2.4615,  1.9421,  0.3896,  ...,  0.5216, -1.4999,  0.0149],
         [-1.4326, -0.1307, -1.0293,  ...,  0.1748,  0.0907, -0.9291],
         [-0.0890, -1.2117,  0.6332,  ..., -0.0726, -1.4908,  0.2153]],

        [[ 1.8102, -1.8968, -0.2309,  ...,  1.5643, -0.1491, -0.1909],
         [-0.8267,  1.0439, -1.2669,  ...,  1.6034,  2.0367,  2.0954],
         [ 0.0223, -1.9738, -1.9426,  ...,  2.2356,  0.2463,  0.5791],
         ...,
         [-1.4632,  0.9743,  1.0269,  ...,  0.6014,  2.2812, -0.9350],
         [ 1.2463,  0.1171, -0.0218,  ...,  0.4066, -0.5065, -1.7352],
         [ 1.9697, -1.0703, -0.6107,  ...,  0.9339,  1.0641, -0.0416]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 152.599, Val Loss : 178.459
======> Trajectory Loss : 33.530, Gravity Loss : 0.000, EndOfTrajectory Loss : 1.134, BelowGroundPenalize Loss : 5.681
===> [Minibatch 11/129].........IDX = 0 :  tensor([[[-0.7726, -0.1507,  0.1004,  ...,  0.6799,  1.6971, -0.9726],
         [-0.0410, -1.2602,  0.4879,  ..., -0.1295, -1.4638,  0.8681],
         [ 1.8479, -0.3037,  0.0123,  ...,  0.9619, -1.1206,  1.7546],
         ...,
         [-1.4614,  0.3725, -0.5160,  ...,  0.9808,  0.1521,  2.1079],
         [-0.6760, -0.4465, -1.4253,  ..., -0.0156, -0.5050, -0.6366],
         [-0.6656, -1.2977,  0.9631,  ...,  0.1640,  0.6572,  0.3783]],

        [[-0.2638,  0.9841, -0.6284,  ..., -1.1226, -0.4530,  0.9735],
         [-0.4620,  1.7716,  1.5304,  ..., -1.5734, -0.2069, -1.0493],
         [-0.0661,  1.1195,  1.3723,  ...,  0.3606, -0.0736,  0.7544],
         ...,
         [-0.6897, -1.7122,  1.2382,  ...,  0.6036, -0.3586,  0.0761],
         [ 0.9480,  0.9402,  2.9017,  ...,  2.2300,  0.1182,  1.3676],
         [-0.3157,  0.2849, -0.6486,  ..., -2.6925,  2.3997,  0.5418]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 1.2491,  0.8235, -0.7230,  ...,  0.7797,  1.2842,  0.3789],
         [-2.0246,  0.1150,  0.2123,  ...,  0.1163,  1.8176,  0.5925],
         [ 0.2687,  1.8103,  0.9064,  ...,  1.5947,  0.3645,  0.4070],
         ...,
         [-2.4615,  1.9421,  0.3896,  ...,  0.5216, -1.4999,  0.0149],
         [-1.4326, -0.1307, -1.0293,  ...,  0.1748,  0.0907, -0.9291],
         [-0.0890, -1.2117,  0.6332,  ..., -0.0726, -1.4908,  0.2153]],

        [[ 1.8102, -1.8968, -0.2309,  ...,  1.5643, -0.1491, -0.1909],
         [-0.8267,  1.0439, -1.2669,  ...,  1.6034,  2.0367,  2.0954],
         [ 0.0223, -1.9738, -1.9426,  ...,  2.2356,  0.2463,  0.5791],
         ...,
         [-1.4632,  0.9743,  1.0269,  ...,  0.6014,  2.2812, -0.9350],
         [ 1.2463,  0.1171, -0.0218,  ...,  0.4066, -0.5065, -1.7352],
         [ 1.9697, -1.0703, -0.6107,  ...,  0.9339,  1.0641, -0.0416]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[-0.7726, -0.1507,  0.1004,  ...,  0.6799,  1.6971, -0.9726],
         [-0.0410, -1.2602,  0.4879,  ..., -0.1295, -1.4638,  0.8681],
         [ 1.8479, -0.3037,  0.0123,  ...,  0.9619, -1.1206,  1.7546],
         ...,
         [-1.4614,  0.3725, -0.5160,  ...,  0.9808,  0.1521,  2.1079],
         [-0.6760, -0.4465, -1.4253,  ..., -0.0156, -0.5050, -0.6366],
         [-0.6656, -1.2977,  0.9631,  ...,  0.1640,  0.6572,  0.3783]],

        [[-0.2638,  0.9841, -0.6284,  ..., -1.1226, -0.4530,  0.9735],
         [-0.4620,  1.7716,  1.5304,  ..., -1.5734, -0.2069, -1.0493],
         [-0.0661,  1.1195,  1.3723,  ...,  0.3606, -0.0736,  0.7544],
         ...,
         [-0.6897, -1.7122,  1.2382,  ...,  0.6036, -0.3586,  0.0761],
         [ 0.9480,  0.9402,  2.9017,  ...,  2.2300,  0.1182,  1.3676],
         [-0.3157,  0.2849, -0.6486,  ..., -2.6925,  2.3997,  0.5418]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 1.2491,  0.8235, -0.7230,  ...,  0.7797,  1.2842,  0.3789],
         [-2.0246,  0.1150,  0.2123,  ...,  0.1163,  1.8176,  0.5925],
         [ 0.2687,  1.8103,  0.9064,  ...,  1.5947,  0.3645,  0.4070],
         ...,
         [-2.4615,  1.9421,  0.3896,  ...,  0.5216, -1.4999,  0.0149],
         [-1.4326, -0.1307, -1.0293,  ...,  0.1748,  0.0907, -0.9291],
         [-0.0890, -1.2117,  0.6332,  ..., -0.0726, -1.4908,  0.2153]],

        [[ 1.8102, -1.8968, -0.2309,  ...,  1.5643, -0.1491, -0.1909],
         [-0.8267,  1.0439, -1.2669,  ...,  1.6034,  2.0367,  2.0954],
         [ 0.0223, -1.9738, -1.9426,  ...,  2.2356,  0.2463,  0.5791],
         ...,
         [-1.4632,  0.9743,  1.0269,  ...,  0.6014,  2.2812, -0.9350],
         [ 1.2463,  0.1171, -0.0218,  ...,  0.4066, -0.5065, -1.7352],
         [ 1.9697, -1.0703, -0.6107,  ...,  0.9339,  1.0641, -0.0416]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 127.603, Val Loss : 131.701
======> Trajectory Loss : 17.159, Gravity Loss : 0.000, EndOfTrajectory Loss : 1.082, BelowGroundPenalize Loss : 2.197
===> [Minibatch 12/129].........IDX = 0 :  tensor([[[-0.7726, -0.1507,  0.1004,  ...,  0.6799,  1.6971, -0.9726],
         [-0.0410, -1.2602,  0.4879,  ..., -0.1295, -1.4638,  0.8681],
         [ 1.8479, -0.3037,  0.0123,  ...,  0.9619, -1.1206,  1.7546],
         ...,
         [-1.4614,  0.3725, -0.5160,  ...,  0.9808,  0.1521,  2.1079],
         [-0.6760, -0.4465, -1.4253,  ..., -0.0156, -0.5050, -0.6366],
         [-0.6656, -1.2977,  0.9631,  ...,  0.1640,  0.6572,  0.3783]],

        [[-0.2638,  0.9841, -0.6284,  ..., -1.1226, -0.4530,  0.9735],
         [-0.4620,  1.7716,  1.5304,  ..., -1.5734, -0.2069, -1.0493],
         [-0.0661,  1.1195,  1.3723,  ...,  0.3606, -0.0736,  0.7544],
         ...,
         [-0.6897, -1.7122,  1.2382,  ...,  0.6036, -0.3586,  0.0761],
         [ 0.9480,  0.9402,  2.9017,  ...,  2.2300,  0.1182,  1.3676],
         [-0.3157,  0.2849, -0.6486,  ..., -2.6925,  2.3997,  0.5418]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 1.2491,  0.8235, -0.7230,  ...,  0.7797,  1.2842,  0.3789],
         [-2.0246,  0.1150,  0.2123,  ...,  0.1163,  1.8176,  0.5925],
         [ 0.2687,  1.8103,  0.9064,  ...,  1.5947,  0.3645,  0.4070],
         ...,
         [-2.4615,  1.9421,  0.3896,  ...,  0.5216, -1.4999,  0.0149],
         [-1.4326, -0.1307, -1.0293,  ...,  0.1748,  0.0907, -0.9291],
         [-0.0890, -1.2117,  0.6332,  ..., -0.0726, -1.4908,  0.2153]],

        [[ 1.8102, -1.8968, -0.2309,  ...,  1.5643, -0.1491, -0.1909],
         [-0.8267,  1.0439, -1.2669,  ...,  1.6034,  2.0367,  2.0954],
         [ 0.0223, -1.9738, -1.9426,  ...,  2.2356,  0.2463,  0.5791],
         ...,
         [-1.4632,  0.9743,  1.0269,  ...,  0.6014,  2.2812, -0.9350],
         [ 1.2463,  0.1171, -0.0218,  ...,  0.4066, -0.5065, -1.7352],
         [ 1.9697, -1.0703, -0.6107,  ...,  0.9339,  1.0641, -0.0416]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[-0.7726, -0.1507,  0.1004,  ...,  0.6799,  1.6971, -0.9726],
         [-0.0410, -1.2602,  0.4879,  ..., -0.1295, -1.4638,  0.8681],
         [ 1.8479, -0.3037,  0.0123,  ...,  0.9619, -1.1206,  1.7546],
         ...,
         [-1.4614,  0.3725, -0.5160,  ...,  0.9808,  0.1521,  2.1079],
         [-0.6760, -0.4465, -1.4253,  ..., -0.0156, -0.5050, -0.6366],
         [-0.6656, -1.2977,  0.9631,  ...,  0.1640,  0.6572,  0.3783]],

        [[-0.2638,  0.9841, -0.6284,  ..., -1.1226, -0.4530,  0.9735],
         [-0.4620,  1.7716,  1.5304,  ..., -1.5734, -0.2069, -1.0493],
         [-0.0661,  1.1195,  1.3723,  ...,  0.3606, -0.0736,  0.7544],
         ...,
         [-0.6897, -1.7122,  1.2382,  ...,  0.6036, -0.3586,  0.0761],
         [ 0.9480,  0.9402,  2.9017,  ...,  2.2300,  0.1182,  1.3676],
         [-0.3157,  0.2849, -0.6486,  ..., -2.6925,  2.3997,  0.5418]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 1.2491,  0.8235, -0.7230,  ...,  0.7797,  1.2842,  0.3789],
         [-2.0246,  0.1150,  0.2123,  ...,  0.1163,  1.8176,  0.5925],
         [ 0.2687,  1.8103,  0.9064,  ...,  1.5947,  0.3645,  0.4070],
         ...,
         [-2.4615,  1.9421,  0.3896,  ...,  0.5216, -1.4999,  0.0149],
         [-1.4326, -0.1307, -1.0293,  ...,  0.1748,  0.0907, -0.9291],
         [-0.0890, -1.2117,  0.6332,  ..., -0.0726, -1.4908,  0.2153]],

        [[ 1.8102, -1.8968, -0.2309,  ...,  1.5643, -0.1491, -0.1909],
         [-0.8267,  1.0439, -1.2669,  ...,  1.6034,  2.0367,  2.0954],
         [ 0.0223, -1.9738, -1.9426,  ...,  2.2356,  0.2463,  0.5791],
         ...,
         [-1.4632,  0.9743,  1.0269,  ...,  0.6014,  2.2812, -0.9350],
         [ 1.2463,  0.1171, -0.0218,  ...,  0.4066, -0.5065, -1.7352],
         [ 1.9697, -1.0703, -0.6107,  ...,  0.9339,  1.0641, -0.0416]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 99.680, Val Loss : 127.213
======> Trajectory Loss : 7.587, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.919, BelowGroundPenalize Loss : 0.195
===> [Minibatch 13/129].........IDX = 0 :  tensor([[[-0.7726, -0.1507,  0.1004,  ...,  0.6799,  1.6971, -0.9726],
         [-0.0410, -1.2602,  0.4879,  ..., -0.1295, -1.4638,  0.8681],
         [ 1.8479, -0.3037,  0.0123,  ...,  0.9619, -1.1206,  1.7546],
         ...,
         [-1.4614,  0.3725, -0.5160,  ...,  0.9808,  0.1521,  2.1079],
         [-0.6760, -0.4465, -1.4253,  ..., -0.0156, -0.5050, -0.6366],
         [-0.6656, -1.2977,  0.9631,  ...,  0.1640,  0.6572,  0.3783]],

        [[-0.2638,  0.9841, -0.6284,  ..., -1.1226, -0.4530,  0.9735],
         [-0.4620,  1.7716,  1.5304,  ..., -1.5734, -0.2069, -1.0493],
         [-0.0661,  1.1195,  1.3723,  ...,  0.3606, -0.0736,  0.7544],
         ...,
         [-0.6897, -1.7122,  1.2382,  ...,  0.6036, -0.3586,  0.0761],
         [ 0.9480,  0.9402,  2.9017,  ...,  2.2300,  0.1182,  1.3676],
         [-0.3157,  0.2849, -0.6486,  ..., -2.6925,  2.3997,  0.5418]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 1.2491,  0.8235, -0.7230,  ...,  0.7797,  1.2842,  0.3789],
         [-2.0246,  0.1150,  0.2123,  ...,  0.1163,  1.8176,  0.5925],
         [ 0.2687,  1.8103,  0.9064,  ...,  1.5947,  0.3645,  0.4070],
         ...,
         [-2.4615,  1.9421,  0.3896,  ...,  0.5216, -1.4999,  0.0149],
         [-1.4326, -0.1307, -1.0293,  ...,  0.1748,  0.0907, -0.9291],
         [-0.0890, -1.2117,  0.6332,  ..., -0.0726, -1.4908,  0.2153]],

        [[ 1.8102, -1.8968, -0.2309,  ...,  1.5643, -0.1491, -0.1909],
         [-0.8267,  1.0439, -1.2669,  ...,  1.6034,  2.0367,  2.0954],
         [ 0.0223, -1.9738, -1.9426,  ...,  2.2356,  0.2463,  0.5791],
         ...,
         [-1.4632,  0.9743,  1.0269,  ...,  0.6014,  2.2812, -0.9350],
         [ 1.2463,  0.1171, -0.0218,  ...,  0.4066, -0.5065, -1.7352],
         [ 1.9697, -1.0703, -0.6107,  ...,  0.9339,  1.0641, -0.0416]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[-0.7726, -0.1507,  0.1004,  ...,  0.6799,  1.6971, -0.9726],
         [-0.0410, -1.2602,  0.4879,  ..., -0.1295, -1.4638,  0.8681],
         [ 1.8479, -0.3037,  0.0123,  ...,  0.9619, -1.1206,  1.7546],
         ...,
         [-1.4614,  0.3725, -0.5160,  ...,  0.9808,  0.1521,  2.1079],
         [-0.6760, -0.4465, -1.4253,  ..., -0.0156, -0.5050, -0.6366],
         [-0.6656, -1.2977,  0.9631,  ...,  0.1640,  0.6572,  0.3783]],

        [[-0.2638,  0.9841, -0.6284,  ..., -1.1226, -0.4530,  0.9735],
         [-0.4620,  1.7716,  1.5304,  ..., -1.5734, -0.2069, -1.0493],
         [-0.0661,  1.1195,  1.3723,  ...,  0.3606, -0.0736,  0.7544],
         ...,
         [-0.6897, -1.7122,  1.2382,  ...,  0.6036, -0.3586,  0.0761],
         [ 0.9480,  0.9402,  2.9017,  ...,  2.2300,  0.1182,  1.3676],
         [-0.3157,  0.2849, -0.6486,  ..., -2.6925,  2.3997,  0.5418]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 1.2491,  0.8235, -0.7230,  ...,  0.7797,  1.2842,  0.3789],
         [-2.0246,  0.1150,  0.2123,  ...,  0.1163,  1.8176,  0.5925],
         [ 0.2687,  1.8103,  0.9064,  ...,  1.5947,  0.3645,  0.4070],
         ...,
         [-2.4615,  1.9421,  0.3896,  ...,  0.5216, -1.4999,  0.0149],
         [-1.4326, -0.1307, -1.0293,  ...,  0.1748,  0.0907, -0.9291],
         [-0.0890, -1.2117,  0.6332,  ..., -0.0726, -1.4908,  0.2153]],

        [[ 1.8102, -1.8968, -0.2309,  ...,  1.5643, -0.1491, -0.1909],
         [-0.8267,  1.0439, -1.2669,  ...,  1.6034,  2.0367,  2.0954],
         [ 0.0223, -1.9738, -1.9426,  ...,  2.2356,  0.2463,  0.5791],
         ...,
         [-1.4632,  0.9743,  1.0269,  ...,  0.6014,  2.2812, -0.9350],
         [ 1.2463,  0.1171, -0.0218,  ...,  0.4066, -0.5065, -1.7352],
         [ 1.9697, -1.0703, -0.6107,  ...,  0.9339,  1.0641, -0.0416]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 95.628, Val Loss : 124.431
======> Trajectory Loss : 9.285, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.861, BelowGroundPenalize Loss : 0.205
===> [Minibatch 14/129].........IDX = 0 :  tensor([[[-0.7726, -0.1507,  0.1004,  ...,  0.6799,  1.6971, -0.9726],
         [-0.0410, -1.2602,  0.4879,  ..., -0.1295, -1.4638,  0.8681],
         [ 1.8479, -0.3037,  0.0123,  ...,  0.9619, -1.1206,  1.7546],
         ...,
         [-1.4614,  0.3725, -0.5160,  ...,  0.9808,  0.1521,  2.1079],
         [-0.6760, -0.4465, -1.4253,  ..., -0.0156, -0.5050, -0.6366],
         [-0.6656, -1.2977,  0.9631,  ...,  0.1640,  0.6572,  0.3783]],

        [[-0.2638,  0.9841, -0.6284,  ..., -1.1226, -0.4530,  0.9735],
         [-0.4620,  1.7716,  1.5304,  ..., -1.5734, -0.2069, -1.0493],
         [-0.0661,  1.1195,  1.3723,  ...,  0.3606, -0.0736,  0.7544],
         ...,
         [-0.6897, -1.7122,  1.2382,  ...,  0.6036, -0.3586,  0.0761],
         [ 0.9480,  0.9402,  2.9017,  ...,  2.2300,  0.1182,  1.3676],
         [-0.3157,  0.2849, -0.6486,  ..., -2.6925,  2.3997,  0.5418]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 1.2491,  0.8235, -0.7230,  ...,  0.7797,  1.2842,  0.3789],
         [-2.0246,  0.1150,  0.2123,  ...,  0.1163,  1.8176,  0.5925],
         [ 0.2687,  1.8103,  0.9064,  ...,  1.5947,  0.3645,  0.4070],
         ...,
         [-2.4615,  1.9421,  0.3896,  ...,  0.5216, -1.4999,  0.0149],
         [-1.4326, -0.1307, -1.0293,  ...,  0.1748,  0.0907, -0.9291],
         [-0.0890, -1.2117,  0.6332,  ..., -0.0726, -1.4908,  0.2153]],

        [[ 1.8102, -1.8968, -0.2309,  ...,  1.5643, -0.1491, -0.1909],
         [-0.8267,  1.0439, -1.2669,  ...,  1.6034,  2.0367,  2.0954],
         [ 0.0223, -1.9738, -1.9426,  ...,  2.2356,  0.2463,  0.5791],
         ...,
         [-1.4632,  0.9743,  1.0269,  ...,  0.6014,  2.2812, -0.9350],
         [ 1.2463,  0.1171, -0.0218,  ...,  0.4066, -0.5065, -1.7352],
         [ 1.9697, -1.0703, -0.6107,  ...,  0.9339,  1.0641, -0.0416]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[-0.7726, -0.1507,  0.1004,  ...,  0.6799,  1.6971, -0.9726],
         [-0.0410, -1.2602,  0.4879,  ..., -0.1295, -1.4638,  0.8681],
         [ 1.8479, -0.3037,  0.0123,  ...,  0.9619, -1.1206,  1.7546],
         ...,
         [-1.4614,  0.3725, -0.5160,  ...,  0.9808,  0.1521,  2.1079],
         [-0.6760, -0.4465, -1.4253,  ..., -0.0156, -0.5050, -0.6366],
         [-0.6656, -1.2977,  0.9631,  ...,  0.1640,  0.6572,  0.3783]],

        [[-0.2638,  0.9841, -0.6284,  ..., -1.1226, -0.4530,  0.9735],
         [-0.4620,  1.7716,  1.5304,  ..., -1.5734, -0.2069, -1.0493],
         [-0.0661,  1.1195,  1.3723,  ...,  0.3606, -0.0736,  0.7544],
         ...,
         [-0.6897, -1.7122,  1.2382,  ...,  0.6036, -0.3586,  0.0761],
         [ 0.9480,  0.9402,  2.9017,  ...,  2.2300,  0.1182,  1.3676],
         [-0.3157,  0.2849, -0.6486,  ..., -2.6925,  2.3997,  0.5418]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 1.2491,  0.8235, -0.7230,  ...,  0.7797,  1.2842,  0.3789],
         [-2.0246,  0.1150,  0.2123,  ...,  0.1163,  1.8176,  0.5925],
         [ 0.2687,  1.8103,  0.9064,  ...,  1.5947,  0.3645,  0.4070],
         ...,
         [-2.4615,  1.9421,  0.3896,  ...,  0.5216, -1.4999,  0.0149],
         [-1.4326, -0.1307, -1.0293,  ...,  0.1748,  0.0907, -0.9291],
         [-0.0890, -1.2117,  0.6332,  ..., -0.0726, -1.4908,  0.2153]],

        [[ 1.8102, -1.8968, -0.2309,  ...,  1.5643, -0.1491, -0.1909],
         [-0.8267,  1.0439, -1.2669,  ...,  1.6034,  2.0367,  2.0954],
         [ 0.0223, -1.9738, -1.9426,  ...,  2.2356,  0.2463,  0.5791],
         ...,
         [-1.4632,  0.9743,  1.0269,  ...,  0.6014,  2.2812, -0.9350],
         [ 1.2463,  0.1171, -0.0218,  ...,  0.4066, -0.5065, -1.7352],
         [ 1.9697, -1.0703, -0.6107,  ...,  0.9339,  1.0641, -0.0416]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 94.439, Val Loss : 110.002
======> Trajectory Loss : 10.808, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.835, BelowGroundPenalize Loss : 0.164
===> [Minibatch 15/129].........IDX = 0 :  tensor([[[-0.7726, -0.1507,  0.1004,  ...,  0.6799,  1.6971, -0.9726],
         [-0.0410, -1.2602,  0.4879,  ..., -0.1295, -1.4638,  0.8681],
         [ 1.8479, -0.3037,  0.0123,  ...,  0.9619, -1.1206,  1.7546],
         ...,
         [-1.4614,  0.3725, -0.5160,  ...,  0.9808,  0.1521,  2.1079],
         [-0.6760, -0.4465, -1.4253,  ..., -0.0156, -0.5050, -0.6366],
         [-0.6656, -1.2977,  0.9631,  ...,  0.1640,  0.6572,  0.3783]],

        [[-0.2638,  0.9841, -0.6284,  ..., -1.1226, -0.4530,  0.9735],
         [-0.4620,  1.7716,  1.5304,  ..., -1.5734, -0.2069, -1.0493],
         [-0.0661,  1.1195,  1.3723,  ...,  0.3606, -0.0736,  0.7544],
         ...,
         [-0.6897, -1.7122,  1.2382,  ...,  0.6036, -0.3586,  0.0761],
         [ 0.9480,  0.9402,  2.9017,  ...,  2.2300,  0.1182,  1.3676],
         [-0.3157,  0.2849, -0.6486,  ..., -2.6925,  2.3997,  0.5418]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 1.2491,  0.8235, -0.7230,  ...,  0.7797,  1.2842,  0.3789],
         [-2.0246,  0.1150,  0.2123,  ...,  0.1163,  1.8176,  0.5925],
         [ 0.2687,  1.8103,  0.9064,  ...,  1.5947,  0.3645,  0.4070],
         ...,
         [-2.4615,  1.9421,  0.3896,  ...,  0.5216, -1.4999,  0.0149],
         [-1.4326, -0.1307, -1.0293,  ...,  0.1748,  0.0907, -0.9291],
         [-0.0890, -1.2117,  0.6332,  ..., -0.0726, -1.4908,  0.2153]],

        [[ 1.8102, -1.8968, -0.2309,  ...,  1.5643, -0.1491, -0.1909],
         [-0.8267,  1.0439, -1.2669,  ...,  1.6034,  2.0367,  2.0954],
         [ 0.0223, -1.9738, -1.9426,  ...,  2.2356,  0.2463,  0.5791],
         ...,
         [-1.4632,  0.9743,  1.0269,  ...,  0.6014,  2.2812, -0.9350],
         [ 1.2463,  0.1171, -0.0218,  ...,  0.4066, -0.5065, -1.7352],
         [ 1.9697, -1.0703, -0.6107,  ...,  0.9339,  1.0641, -0.0416]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[-0.7726, -0.1507,  0.1004,  ...,  0.6799,  1.6971, -0.9726],
         [-0.0410, -1.2602,  0.4879,  ..., -0.1295, -1.4638,  0.8681],
         [ 1.8479, -0.3037,  0.0123,  ...,  0.9619, -1.1206,  1.7546],
         ...,
         [-1.4614,  0.3725, -0.5160,  ...,  0.9808,  0.1521,  2.1079],
         [-0.6760, -0.4465, -1.4253,  ..., -0.0156, -0.5050, -0.6366],
         [-0.6656, -1.2977,  0.9631,  ...,  0.1640,  0.6572,  0.3783]],

        [[-0.2638,  0.9841, -0.6284,  ..., -1.1226, -0.4530,  0.9735],
         [-0.4620,  1.7716,  1.5304,  ..., -1.5734, -0.2069, -1.0493],
         [-0.0661,  1.1195,  1.3723,  ...,  0.3606, -0.0736,  0.7544],
         ...,
         [-0.6897, -1.7122,  1.2382,  ...,  0.6036, -0.3586,  0.0761],
         [ 0.9480,  0.9402,  2.9017,  ...,  2.2300,  0.1182,  1.3676],
         [-0.3157,  0.2849, -0.6486,  ..., -2.6925,  2.3997,  0.5418]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 1.2491,  0.8235, -0.7230,  ...,  0.7797,  1.2842,  0.3789],
         [-2.0246,  0.1150,  0.2123,  ...,  0.1163,  1.8176,  0.5925],
         [ 0.2687,  1.8103,  0.9064,  ...,  1.5947,  0.3645,  0.4070],
         ...,
         [-2.4615,  1.9421,  0.3896,  ...,  0.5216, -1.4999,  0.0149],
         [-1.4326, -0.1307, -1.0293,  ...,  0.1748,  0.0907, -0.9291],
         [-0.0890, -1.2117,  0.6332,  ..., -0.0726, -1.4908,  0.2153]],

        [[ 1.8102, -1.8968, -0.2309,  ...,  1.5643, -0.1491, -0.1909],
         [-0.8267,  1.0439, -1.2669,  ...,  1.6034,  2.0367,  2.0954],
         [ 0.0223, -1.9738, -1.9426,  ...,  2.2356,  0.2463,  0.5791],
         ...,
         [-1.4632,  0.9743,  1.0269,  ...,  0.6014,  2.2812, -0.9350],
         [ 1.2463,  0.1171, -0.0218,  ...,  0.4066, -0.5065, -1.7352],
         [ 1.9697, -1.0703, -0.6107,  ...,  0.9339,  1.0641, -0.0416]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 84.233, Val Loss : 101.508
======> Trajectory Loss : 9.281, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.747, BelowGroundPenalize Loss : 0.269
===> [Minibatch 16/129].........IDX = 0 :  tensor([[[-0.7726, -0.1507,  0.1004,  ...,  0.6799,  1.6971, -0.9726],
         [-0.0410, -1.2602,  0.4879,  ..., -0.1295, -1.4638,  0.8681],
         [ 1.8479, -0.3037,  0.0123,  ...,  0.9619, -1.1206,  1.7546],
         ...,
         [-1.4614,  0.3725, -0.5160,  ...,  0.9808,  0.1521,  2.1079],
         [-0.6760, -0.4465, -1.4253,  ..., -0.0156, -0.5050, -0.6366],
         [-0.6656, -1.2977,  0.9631,  ...,  0.1640,  0.6572,  0.3783]],

        [[-0.2638,  0.9841, -0.6284,  ..., -1.1226, -0.4530,  0.9735],
         [-0.4620,  1.7716,  1.5304,  ..., -1.5734, -0.2069, -1.0493],
         [-0.0661,  1.1195,  1.3723,  ...,  0.3606, -0.0736,  0.7544],
         ...,
         [-0.6897, -1.7122,  1.2382,  ...,  0.6036, -0.3586,  0.0761],
         [ 0.9480,  0.9402,  2.9017,  ...,  2.2300,  0.1182,  1.3676],
         [-0.3157,  0.2849, -0.6486,  ..., -2.6925,  2.3997,  0.5418]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 1.2491,  0.8235, -0.7230,  ...,  0.7797,  1.2842,  0.3789],
         [-2.0246,  0.1150,  0.2123,  ...,  0.1163,  1.8176,  0.5925],
         [ 0.2687,  1.8103,  0.9064,  ...,  1.5947,  0.3645,  0.4070],
         ...,
         [-2.4615,  1.9421,  0.3896,  ...,  0.5216, -1.4999,  0.0149],
         [-1.4326, -0.1307, -1.0293,  ...,  0.1748,  0.0907, -0.9291],
         [-0.0890, -1.2117,  0.6332,  ..., -0.0726, -1.4908,  0.2153]],

        [[ 1.8102, -1.8968, -0.2309,  ...,  1.5643, -0.1491, -0.1909],
         [-0.8267,  1.0439, -1.2669,  ...,  1.6034,  2.0367,  2.0954],
         [ 0.0223, -1.9738, -1.9426,  ...,  2.2356,  0.2463,  0.5791],
         ...,
         [-1.4632,  0.9743,  1.0269,  ...,  0.6014,  2.2812, -0.9350],
         [ 1.2463,  0.1171, -0.0218,  ...,  0.4066, -0.5065, -1.7352],
         [ 1.9697, -1.0703, -0.6107,  ...,  0.9339,  1.0641, -0.0416]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[-0.7726, -0.1507,  0.1004,  ...,  0.6799,  1.6971, -0.9726],
         [-0.0410, -1.2602,  0.4879,  ..., -0.1295, -1.4638,  0.8681],
         [ 1.8479, -0.3037,  0.0123,  ...,  0.9619, -1.1206,  1.7546],
         ...,
         [-1.4614,  0.3725, -0.5160,  ...,  0.9808,  0.1521,  2.1079],
         [-0.6760, -0.4465, -1.4253,  ..., -0.0156, -0.5050, -0.6366],
         [-0.6656, -1.2977,  0.9631,  ...,  0.1640,  0.6572,  0.3783]],

        [[-0.2638,  0.9841, -0.6284,  ..., -1.1226, -0.4530,  0.9735],
         [-0.4620,  1.7716,  1.5304,  ..., -1.5734, -0.2069, -1.0493],
         [-0.0661,  1.1195,  1.3723,  ...,  0.3606, -0.0736,  0.7544],
         ...,
         [-0.6897, -1.7122,  1.2382,  ...,  0.6036, -0.3586,  0.0761],
         [ 0.9480,  0.9402,  2.9017,  ...,  2.2300,  0.1182,  1.3676],
         [-0.3157,  0.2849, -0.6486,  ..., -2.6925,  2.3997,  0.5418]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 1.2491,  0.8235, -0.7230,  ...,  0.7797,  1.2842,  0.3789],
         [-2.0246,  0.1150,  0.2123,  ...,  0.1163,  1.8176,  0.5925],
         [ 0.2687,  1.8103,  0.9064,  ...,  1.5947,  0.3645,  0.4070],
         ...,
         [-2.4615,  1.9421,  0.3896,  ...,  0.5216, -1.4999,  0.0149],
         [-1.4326, -0.1307, -1.0293,  ...,  0.1748,  0.0907, -0.9291],
         [-0.0890, -1.2117,  0.6332,  ..., -0.0726, -1.4908,  0.2153]],

        [[ 1.8102, -1.8968, -0.2309,  ...,  1.5643, -0.1491, -0.1909],
         [-0.8267,  1.0439, -1.2669,  ...,  1.6034,  2.0367,  2.0954],
         [ 0.0223, -1.9738, -1.9426,  ...,  2.2356,  0.2463,  0.5791],
         ...,
         [-1.4632,  0.9743,  1.0269,  ...,  0.6014,  2.2812, -0.9350],
         [ 1.2463,  0.1171, -0.0218,  ...,  0.4066, -0.5065, -1.7352],
         [ 1.9697, -1.0703, -0.6107,  ...,  0.9339,  1.0641, -0.0416]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 79.538, Val Loss : 92.857
======> Trajectory Loss : 9.137, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.699, BelowGroundPenalize Loss : 0.506
===> [Minibatch 17/129].........IDX = 0 :  tensor([[[-0.7726, -0.1507,  0.1004,  ...,  0.6799,  1.6971, -0.9726],
         [-0.0410, -1.2602,  0.4879,  ..., -0.1295, -1.4638,  0.8681],
         [ 1.8479, -0.3037,  0.0123,  ...,  0.9619, -1.1206,  1.7546],
         ...,
         [-1.4614,  0.3725, -0.5160,  ...,  0.9808,  0.1521,  2.1079],
         [-0.6760, -0.4465, -1.4253,  ..., -0.0156, -0.5050, -0.6366],
         [-0.6656, -1.2977,  0.9631,  ...,  0.1640,  0.6572,  0.3783]],

        [[-0.2638,  0.9841, -0.6284,  ..., -1.1226, -0.4530,  0.9735],
         [-0.4620,  1.7716,  1.5304,  ..., -1.5734, -0.2069, -1.0493],
         [-0.0661,  1.1195,  1.3723,  ...,  0.3606, -0.0736,  0.7544],
         ...,
         [-0.6897, -1.7122,  1.2382,  ...,  0.6036, -0.3586,  0.0761],
         [ 0.9480,  0.9402,  2.9017,  ...,  2.2300,  0.1182,  1.3676],
         [-0.3157,  0.2849, -0.6486,  ..., -2.6925,  2.3997,  0.5418]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 1.2491,  0.8235, -0.7230,  ...,  0.7797,  1.2842,  0.3789],
         [-2.0246,  0.1150,  0.2123,  ...,  0.1163,  1.8176,  0.5925],
         [ 0.2687,  1.8103,  0.9064,  ...,  1.5947,  0.3645,  0.4070],
         ...,
         [-2.4615,  1.9421,  0.3896,  ...,  0.5216, -1.4999,  0.0149],
         [-1.4326, -0.1307, -1.0293,  ...,  0.1748,  0.0907, -0.9291],
         [-0.0890, -1.2117,  0.6332,  ..., -0.0726, -1.4908,  0.2153]],

        [[ 1.8102, -1.8968, -0.2309,  ...,  1.5643, -0.1491, -0.1909],
         [-0.8267,  1.0439, -1.2669,  ...,  1.6034,  2.0367,  2.0954],
         [ 0.0223, -1.9738, -1.9426,  ...,  2.2356,  0.2463,  0.5791],
         ...,
         [-1.4632,  0.9743,  1.0269,  ...,  0.6014,  2.2812, -0.9350],
         [ 1.2463,  0.1171, -0.0218,  ...,  0.4066, -0.5065, -1.7352],
         [ 1.9697, -1.0703, -0.6107,  ...,  0.9339,  1.0641, -0.0416]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[-0.7726, -0.1507,  0.1004,  ...,  0.6799,  1.6971, -0.9726],
         [-0.0410, -1.2602,  0.4879,  ..., -0.1295, -1.4638,  0.8681],
         [ 1.8479, -0.3037,  0.0123,  ...,  0.9619, -1.1206,  1.7546],
         ...,
         [-1.4614,  0.3725, -0.5160,  ...,  0.9808,  0.1521,  2.1079],
         [-0.6760, -0.4465, -1.4253,  ..., -0.0156, -0.5050, -0.6366],
         [-0.6656, -1.2977,  0.9631,  ...,  0.1640,  0.6572,  0.3783]],

        [[-0.2638,  0.9841, -0.6284,  ..., -1.1226, -0.4530,  0.9735],
         [-0.4620,  1.7716,  1.5304,  ..., -1.5734, -0.2069, -1.0493],
         [-0.0661,  1.1195,  1.3723,  ...,  0.3606, -0.0736,  0.7544],
         ...,
         [-0.6897, -1.7122,  1.2382,  ...,  0.6036, -0.3586,  0.0761],
         [ 0.9480,  0.9402,  2.9017,  ...,  2.2300,  0.1182,  1.3676],
         [-0.3157,  0.2849, -0.6486,  ..., -2.6925,  2.3997,  0.5418]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 1.2491,  0.8235, -0.7230,  ...,  0.7797,  1.2842,  0.3789],
         [-2.0246,  0.1150,  0.2123,  ...,  0.1163,  1.8176,  0.5925],
         [ 0.2687,  1.8103,  0.9064,  ...,  1.5947,  0.3645,  0.4070],
         ...,
         [-2.4615,  1.9421,  0.3896,  ...,  0.5216, -1.4999,  0.0149],
         [-1.4326, -0.1307, -1.0293,  ...,  0.1748,  0.0907, -0.9291],
         [-0.0890, -1.2117,  0.6332,  ..., -0.0726, -1.4908,  0.2153]],

        [[ 1.8102, -1.8968, -0.2309,  ...,  1.5643, -0.1491, -0.1909],
         [-0.8267,  1.0439, -1.2669,  ...,  1.6034,  2.0367,  2.0954],
         [ 0.0223, -1.9738, -1.9426,  ...,  2.2356,  0.2463,  0.5791],
         ...,
         [-1.4632,  0.9743,  1.0269,  ...,  0.6014,  2.2812, -0.9350],
         [ 1.2463,  0.1171, -0.0218,  ...,  0.4066, -0.5065, -1.7352],
         [ 1.9697, -1.0703, -0.6107,  ...,  0.9339,  1.0641, -0.0416]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 70.125, Val Loss : 107.263
======> Trajectory Loss : 8.827, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.609, BelowGroundPenalize Loss : 0.383
===> [Minibatch 18/129].........IDX = 0 :  tensor([[[-0.7726, -0.1507,  0.1004,  ...,  0.6799,  1.6971, -0.9726],
         [-0.0410, -1.2602,  0.4879,  ..., -0.1295, -1.4638,  0.8681],
         [ 1.8479, -0.3037,  0.0123,  ...,  0.9619, -1.1206,  1.7546],
         ...,
         [-1.4614,  0.3725, -0.5160,  ...,  0.9808,  0.1521,  2.1079],
         [-0.6760, -0.4465, -1.4253,  ..., -0.0156, -0.5050, -0.6366],
         [-0.6656, -1.2977,  0.9631,  ...,  0.1640,  0.6572,  0.3783]],

        [[-0.2638,  0.9841, -0.6284,  ..., -1.1226, -0.4530,  0.9735],
         [-0.4620,  1.7716,  1.5304,  ..., -1.5734, -0.2069, -1.0493],
         [-0.0661,  1.1195,  1.3723,  ...,  0.3606, -0.0736,  0.7544],
         ...,
         [-0.6897, -1.7122,  1.2382,  ...,  0.6036, -0.3586,  0.0761],
         [ 0.9480,  0.9402,  2.9017,  ...,  2.2300,  0.1182,  1.3676],
         [-0.3157,  0.2849, -0.6486,  ..., -2.6925,  2.3997,  0.5418]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 1.2491,  0.8235, -0.7230,  ...,  0.7797,  1.2842,  0.3789],
         [-2.0246,  0.1150,  0.2123,  ...,  0.1163,  1.8176,  0.5925],
         [ 0.2687,  1.8103,  0.9064,  ...,  1.5947,  0.3645,  0.4070],
         ...,
         [-2.4615,  1.9421,  0.3896,  ...,  0.5216, -1.4999,  0.0149],
         [-1.4326, -0.1307, -1.0293,  ...,  0.1748,  0.0907, -0.9291],
         [-0.0890, -1.2117,  0.6332,  ..., -0.0726, -1.4908,  0.2153]],

        [[ 1.8102, -1.8968, -0.2309,  ...,  1.5643, -0.1491, -0.1909],
         [-0.8267,  1.0439, -1.2669,  ...,  1.6034,  2.0367,  2.0954],
         [ 0.0223, -1.9738, -1.9426,  ...,  2.2356,  0.2463,  0.5791],
         ...,
         [-1.4632,  0.9743,  1.0269,  ...,  0.6014,  2.2812, -0.9350],
         [ 1.2463,  0.1171, -0.0218,  ...,  0.4066, -0.5065, -1.7352],
         [ 1.9697, -1.0703, -0.6107,  ...,  0.9339,  1.0641, -0.0416]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[-0.7726, -0.1507,  0.1004,  ...,  0.6799,  1.6971, -0.9726],
         [-0.0410, -1.2602,  0.4879,  ..., -0.1295, -1.4638,  0.8681],
         [ 1.8479, -0.3037,  0.0123,  ...,  0.9619, -1.1206,  1.7546],
         ...,
         [-1.4614,  0.3725, -0.5160,  ...,  0.9808,  0.1521,  2.1079],
         [-0.6760, -0.4465, -1.4253,  ..., -0.0156, -0.5050, -0.6366],
         [-0.6656, -1.2977,  0.9631,  ...,  0.1640,  0.6572,  0.3783]],

        [[-0.2638,  0.9841, -0.6284,  ..., -1.1226, -0.4530,  0.9735],
         [-0.4620,  1.7716,  1.5304,  ..., -1.5734, -0.2069, -1.0493],
         [-0.0661,  1.1195,  1.3723,  ...,  0.3606, -0.0736,  0.7544],
         ...,
         [-0.6897, -1.7122,  1.2382,  ...,  0.6036, -0.3586,  0.0761],
         [ 0.9480,  0.9402,  2.9017,  ...,  2.2300,  0.1182,  1.3676],
         [-0.3157,  0.2849, -0.6486,  ..., -2.6925,  2.3997,  0.5418]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 1.2491,  0.8235, -0.7230,  ...,  0.7797,  1.2842,  0.3789],
         [-2.0246,  0.1150,  0.2123,  ...,  0.1163,  1.8176,  0.5925],
         [ 0.2687,  1.8103,  0.9064,  ...,  1.5947,  0.3645,  0.4070],
         ...,
         [-2.4615,  1.9421,  0.3896,  ...,  0.5216, -1.4999,  0.0149],
         [-1.4326, -0.1307, -1.0293,  ...,  0.1748,  0.0907, -0.9291],
         [-0.0890, -1.2117,  0.6332,  ..., -0.0726, -1.4908,  0.2153]],

        [[ 1.8102, -1.8968, -0.2309,  ...,  1.5643, -0.1491, -0.1909],
         [-0.8267,  1.0439, -1.2669,  ...,  1.6034,  2.0367,  2.0954],
         [ 0.0223, -1.9738, -1.9426,  ...,  2.2356,  0.2463,  0.5791],
         ...,
         [-1.4632,  0.9743,  1.0269,  ...,  0.6014,  2.2812, -0.9350],
         [ 1.2463,  0.1171, -0.0218,  ...,  0.4066, -0.5065, -1.7352],
         [ 1.9697, -1.0703, -0.6107,  ...,  0.9339,  1.0641, -0.0416]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 71.037, Val Loss : 95.944
======> Trajectory Loss : 11.283, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.595, BelowGroundPenalize Loss : 0.208
===> [Minibatch 19/129].........IDX = 0 :  tensor([[[-0.7726, -0.1507,  0.1004,  ...,  0.6799,  1.6971, -0.9726],
         [-0.0410, -1.2602,  0.4879,  ..., -0.1295, -1.4638,  0.8681],
         [ 1.8479, -0.3037,  0.0123,  ...,  0.9619, -1.1206,  1.7546],
         ...,
         [-1.4614,  0.3725, -0.5160,  ...,  0.9808,  0.1521,  2.1079],
         [-0.6760, -0.4465, -1.4253,  ..., -0.0156, -0.5050, -0.6366],
         [-0.6656, -1.2977,  0.9631,  ...,  0.1640,  0.6572,  0.3783]],

        [[-0.2638,  0.9841, -0.6284,  ..., -1.1226, -0.4530,  0.9735],
         [-0.4620,  1.7716,  1.5304,  ..., -1.5734, -0.2069, -1.0493],
         [-0.0661,  1.1195,  1.3723,  ...,  0.3606, -0.0736,  0.7544],
         ...,
         [-0.6897, -1.7122,  1.2382,  ...,  0.6036, -0.3586,  0.0761],
         [ 0.9480,  0.9402,  2.9017,  ...,  2.2300,  0.1182,  1.3676],
         [-0.3157,  0.2849, -0.6486,  ..., -2.6925,  2.3997,  0.5418]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 1.2491,  0.8235, -0.7230,  ...,  0.7797,  1.2842,  0.3789],
         [-2.0246,  0.1150,  0.2123,  ...,  0.1163,  1.8176,  0.5925],
         [ 0.2687,  1.8103,  0.9064,  ...,  1.5947,  0.3645,  0.4070],
         ...,
         [-2.4615,  1.9421,  0.3896,  ...,  0.5216, -1.4999,  0.0149],
         [-1.4326, -0.1307, -1.0293,  ...,  0.1748,  0.0907, -0.9291],
         [-0.0890, -1.2117,  0.6332,  ..., -0.0726, -1.4908,  0.2153]],

        [[ 1.8102, -1.8968, -0.2309,  ...,  1.5643, -0.1491, -0.1909],
         [-0.8267,  1.0439, -1.2669,  ...,  1.6034,  2.0367,  2.0954],
         [ 0.0223, -1.9738, -1.9426,  ...,  2.2356,  0.2463,  0.5791],
         ...,
         [-1.4632,  0.9743,  1.0269,  ...,  0.6014,  2.2812, -0.9350],
         [ 1.2463,  0.1171, -0.0218,  ...,  0.4066, -0.5065, -1.7352],
         [ 1.9697, -1.0703, -0.6107,  ...,  0.9339,  1.0641, -0.0416]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[-0.7726, -0.1507,  0.1004,  ...,  0.6799,  1.6971, -0.9726],
         [-0.0410, -1.2602,  0.4879,  ..., -0.1295, -1.4638,  0.8681],
         [ 1.8479, -0.3037,  0.0123,  ...,  0.9619, -1.1206,  1.7546],
         ...,
         [-1.4614,  0.3725, -0.5160,  ...,  0.9808,  0.1521,  2.1079],
         [-0.6760, -0.4465, -1.4253,  ..., -0.0156, -0.5050, -0.6366],
         [-0.6656, -1.2977,  0.9631,  ...,  0.1640,  0.6572,  0.3783]],

        [[-0.2638,  0.9841, -0.6284,  ..., -1.1226, -0.4530,  0.9735],
         [-0.4620,  1.7716,  1.5304,  ..., -1.5734, -0.2069, -1.0493],
         [-0.0661,  1.1195,  1.3723,  ...,  0.3606, -0.0736,  0.7544],
         ...,
         [-0.6897, -1.7122,  1.2382,  ...,  0.6036, -0.3586,  0.0761],
         [ 0.9480,  0.9402,  2.9017,  ...,  2.2300,  0.1182,  1.3676],
         [-0.3157,  0.2849, -0.6486,  ..., -2.6925,  2.3997,  0.5418]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 1.2491,  0.8235, -0.7230,  ...,  0.7797,  1.2842,  0.3789],
         [-2.0246,  0.1150,  0.2123,  ...,  0.1163,  1.8176,  0.5925],
         [ 0.2687,  1.8103,  0.9064,  ...,  1.5947,  0.3645,  0.4070],
         ...,
         [-2.4615,  1.9421,  0.3896,  ...,  0.5216, -1.4999,  0.0149],
         [-1.4326, -0.1307, -1.0293,  ...,  0.1748,  0.0907, -0.9291],
         [-0.0890, -1.2117,  0.6332,  ..., -0.0726, -1.4908,  0.2153]],

        [[ 1.8102, -1.8968, -0.2309,  ...,  1.5643, -0.1491, -0.1909],
         [-0.8267,  1.0439, -1.2669,  ...,  1.6034,  2.0367,  2.0954],
         [ 0.0223, -1.9738, -1.9426,  ...,  2.2356,  0.2463,  0.5791],
         ...,
         [-1.4632,  0.9743,  1.0269,  ...,  0.6014,  2.2812, -0.9350],
         [ 1.2463,  0.1171, -0.0218,  ...,  0.4066, -0.5065, -1.7352],
         [ 1.9697, -1.0703, -0.6107,  ...,  0.9339,  1.0641, -0.0416]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 62.904, Val Loss : 74.346
======> Trajectory Loss : 9.275, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.534, BelowGroundPenalize Loss : 0.274
===> [Minibatch 20/129].........IDX = 0 :  tensor([[[-0.7726, -0.1507,  0.1004,  ...,  0.6799,  1.6971, -0.9726],
         [-0.0410, -1.2602,  0.4879,  ..., -0.1295, -1.4638,  0.8681],
         [ 1.8479, -0.3037,  0.0123,  ...,  0.9619, -1.1206,  1.7546],
         ...,
         [-1.4614,  0.3725, -0.5160,  ...,  0.9808,  0.1521,  2.1079],
         [-0.6760, -0.4465, -1.4253,  ..., -0.0156, -0.5050, -0.6366],
         [-0.6656, -1.2977,  0.9631,  ...,  0.1640,  0.6572,  0.3783]],

        [[-0.2638,  0.9841, -0.6284,  ..., -1.1226, -0.4530,  0.9735],
         [-0.4620,  1.7716,  1.5304,  ..., -1.5734, -0.2069, -1.0493],
         [-0.0661,  1.1195,  1.3723,  ...,  0.3606, -0.0736,  0.7544],
         ...,
         [-0.6897, -1.7122,  1.2382,  ...,  0.6036, -0.3586,  0.0761],
         [ 0.9480,  0.9402,  2.9017,  ...,  2.2300,  0.1182,  1.3676],
         [-0.3157,  0.2849, -0.6486,  ..., -2.6925,  2.3997,  0.5418]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 1.2491,  0.8235, -0.7230,  ...,  0.7797,  1.2842,  0.3789],
         [-2.0246,  0.1150,  0.2123,  ...,  0.1163,  1.8176,  0.5925],
         [ 0.2687,  1.8103,  0.9064,  ...,  1.5947,  0.3645,  0.4070],
         ...,
         [-2.4615,  1.9421,  0.3896,  ...,  0.5216, -1.4999,  0.0149],
         [-1.4326, -0.1307, -1.0293,  ...,  0.1748,  0.0907, -0.9291],
         [-0.0890, -1.2117,  0.6332,  ..., -0.0726, -1.4908,  0.2153]],

        [[ 1.8102, -1.8968, -0.2309,  ...,  1.5643, -0.1491, -0.1909],
         [-0.8267,  1.0439, -1.2669,  ...,  1.6034,  2.0367,  2.0954],
         [ 0.0223, -1.9738, -1.9426,  ...,  2.2356,  0.2463,  0.5791],
         ...,
         [-1.4632,  0.9743,  1.0269,  ...,  0.6014,  2.2812, -0.9350],
         [ 1.2463,  0.1171, -0.0218,  ...,  0.4066, -0.5065, -1.7352],
         [ 1.9697, -1.0703, -0.6107,  ...,  0.9339,  1.0641, -0.0416]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[-0.7726, -0.1507,  0.1004,  ...,  0.6799,  1.6971, -0.9726],
         [-0.0410, -1.2602,  0.4879,  ..., -0.1295, -1.4638,  0.8681],
         [ 1.8479, -0.3037,  0.0123,  ...,  0.9619, -1.1206,  1.7546],
         ...,
         [-1.4614,  0.3725, -0.5160,  ...,  0.9808,  0.1521,  2.1079],
         [-0.6760, -0.4465, -1.4253,  ..., -0.0156, -0.5050, -0.6366],
         [-0.6656, -1.2977,  0.9631,  ...,  0.1640,  0.6572,  0.3783]],

        [[-0.2638,  0.9841, -0.6284,  ..., -1.1226, -0.4530,  0.9735],
         [-0.4620,  1.7716,  1.5304,  ..., -1.5734, -0.2069, -1.0493],
         [-0.0661,  1.1195,  1.3723,  ...,  0.3606, -0.0736,  0.7544],
         ...,
         [-0.6897, -1.7122,  1.2382,  ...,  0.6036, -0.3586,  0.0761],
         [ 0.9480,  0.9402,  2.9017,  ...,  2.2300,  0.1182,  1.3676],
         [-0.3157,  0.2849, -0.6486,  ..., -2.6925,  2.3997,  0.5418]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 1.2491,  0.8235, -0.7230,  ...,  0.7797,  1.2842,  0.3789],
         [-2.0246,  0.1150,  0.2123,  ...,  0.1163,  1.8176,  0.5925],
         [ 0.2687,  1.8103,  0.9064,  ...,  1.5947,  0.3645,  0.4070],
         ...,
         [-2.4615,  1.9421,  0.3896,  ...,  0.5216, -1.4999,  0.0149],
         [-1.4326, -0.1307, -1.0293,  ...,  0.1748,  0.0907, -0.9291],
         [-0.0890, -1.2117,  0.6332,  ..., -0.0726, -1.4908,  0.2153]],

        [[ 1.8102, -1.8968, -0.2309,  ...,  1.5643, -0.1491, -0.1909],
         [-0.8267,  1.0439, -1.2669,  ...,  1.6034,  2.0367,  2.0954],
         [ 0.0223, -1.9738, -1.9426,  ...,  2.2356,  0.2463,  0.5791],
         ...,
         [-1.4632,  0.9743,  1.0269,  ...,  0.6014,  2.2812, -0.9350],
         [ 1.2463,  0.1171, -0.0218,  ...,  0.4066, -0.5065, -1.7352],
         [ 1.9697, -1.0703, -0.6107,  ...,  0.9339,  1.0641, -0.0416]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 52.785, Val Loss : 63.113
======> Trajectory Loss : 9.040, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.436, BelowGroundPenalize Loss : 0.186
===> [Minibatch 21/129].........IDX = 0 :  tensor([[[-0.7726, -0.1507,  0.1004,  ...,  0.6799,  1.6971, -0.9726],
         [-0.0410, -1.2602,  0.4879,  ..., -0.1295, -1.4638,  0.8681],
         [ 1.8479, -0.3037,  0.0123,  ...,  0.9619, -1.1206,  1.7546],
         ...,
         [-1.4614,  0.3725, -0.5160,  ...,  0.9808,  0.1521,  2.1079],
         [-0.6760, -0.4465, -1.4253,  ..., -0.0156, -0.5050, -0.6366],
         [-0.6656, -1.2977,  0.9631,  ...,  0.1640,  0.6572,  0.3783]],

        [[-0.2638,  0.9841, -0.6284,  ..., -1.1226, -0.4530,  0.9735],
         [-0.4620,  1.7716,  1.5304,  ..., -1.5734, -0.2069, -1.0493],
         [-0.0661,  1.1195,  1.3723,  ...,  0.3606, -0.0736,  0.7544],
         ...,
         [-0.6897, -1.7122,  1.2382,  ...,  0.6036, -0.3586,  0.0761],
         [ 0.9480,  0.9402,  2.9017,  ...,  2.2300,  0.1182,  1.3676],
         [-0.3157,  0.2849, -0.6486,  ..., -2.6925,  2.3997,  0.5418]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 1.2491,  0.8235, -0.7230,  ...,  0.7797,  1.2842,  0.3789],
         [-2.0246,  0.1150,  0.2123,  ...,  0.1163,  1.8176,  0.5925],
         [ 0.2687,  1.8103,  0.9064,  ...,  1.5947,  0.3645,  0.4070],
         ...,
         [-2.4615,  1.9421,  0.3896,  ...,  0.5216, -1.4999,  0.0149],
         [-1.4326, -0.1307, -1.0293,  ...,  0.1748,  0.0907, -0.9291],
         [-0.0890, -1.2117,  0.6332,  ..., -0.0726, -1.4908,  0.2153]],

        [[ 1.8102, -1.8968, -0.2309,  ...,  1.5643, -0.1491, -0.1909],
         [-0.8267,  1.0439, -1.2669,  ...,  1.6034,  2.0367,  2.0954],
         [ 0.0223, -1.9738, -1.9426,  ...,  2.2356,  0.2463,  0.5791],
         ...,
         [-1.4632,  0.9743,  1.0269,  ...,  0.6014,  2.2812, -0.9350],
         [ 1.2463,  0.1171, -0.0218,  ...,  0.4066, -0.5065, -1.7352],
         [ 1.9697, -1.0703, -0.6107,  ...,  0.9339,  1.0641, -0.0416]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[-0.7726, -0.1507,  0.1004,  ...,  0.6799,  1.6971, -0.9726],
         [-0.0410, -1.2602,  0.4879,  ..., -0.1295, -1.4638,  0.8681],
         [ 1.8479, -0.3037,  0.0123,  ...,  0.9619, -1.1206,  1.7546],
         ...,
         [-1.4614,  0.3725, -0.5160,  ...,  0.9808,  0.1521,  2.1079],
         [-0.6760, -0.4465, -1.4253,  ..., -0.0156, -0.5050, -0.6366],
         [-0.6656, -1.2977,  0.9631,  ...,  0.1640,  0.6572,  0.3783]],

        [[-0.2638,  0.9841, -0.6284,  ..., -1.1226, -0.4530,  0.9735],
         [-0.4620,  1.7716,  1.5304,  ..., -1.5734, -0.2069, -1.0493],
         [-0.0661,  1.1195,  1.3723,  ...,  0.3606, -0.0736,  0.7544],
         ...,
         [-0.6897, -1.7122,  1.2382,  ...,  0.6036, -0.3586,  0.0761],
         [ 0.9480,  0.9402,  2.9017,  ...,  2.2300,  0.1182,  1.3676],
         [-0.3157,  0.2849, -0.6486,  ..., -2.6925,  2.3997,  0.5418]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 1.2491,  0.8235, -0.7230,  ...,  0.7797,  1.2842,  0.3789],
         [-2.0246,  0.1150,  0.2123,  ...,  0.1163,  1.8176,  0.5925],
         [ 0.2687,  1.8103,  0.9064,  ...,  1.5947,  0.3645,  0.4070],
         ...,
         [-2.4615,  1.9421,  0.3896,  ...,  0.5216, -1.4999,  0.0149],
         [-1.4326, -0.1307, -1.0293,  ...,  0.1748,  0.0907, -0.9291],
         [-0.0890, -1.2117,  0.6332,  ..., -0.0726, -1.4908,  0.2153]],

        [[ 1.8102, -1.8968, -0.2309,  ...,  1.5643, -0.1491, -0.1909],
         [-0.8267,  1.0439, -1.2669,  ...,  1.6034,  2.0367,  2.0954],
         [ 0.0223, -1.9738, -1.9426,  ...,  2.2356,  0.2463,  0.5791],
         ...,
         [-1.4632,  0.9743,  1.0269,  ...,  0.6014,  2.2812, -0.9350],
         [ 1.2463,  0.1171, -0.0218,  ...,  0.4066, -0.5065, -1.7352],
         [ 1.9697, -1.0703, -0.6107,  ...,  0.9339,  1.0641, -0.0416]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 46.464, Val Loss : 67.964
======> Trajectory Loss : 8.084, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.378, BelowGroundPenalize Loss : 0.546
===> [Minibatch 22/129].........IDX = 0 :  tensor([[[-0.7726, -0.1507,  0.1004,  ...,  0.6799,  1.6971, -0.9726],
         [-0.0410, -1.2602,  0.4879,  ..., -0.1295, -1.4638,  0.8681],
         [ 1.8479, -0.3037,  0.0123,  ...,  0.9619, -1.1206,  1.7546],
         ...,
         [-1.4614,  0.3725, -0.5160,  ...,  0.9808,  0.1521,  2.1079],
         [-0.6760, -0.4465, -1.4253,  ..., -0.0156, -0.5050, -0.6366],
         [-0.6656, -1.2977,  0.9631,  ...,  0.1640,  0.6572,  0.3783]],

        [[-0.2638,  0.9841, -0.6284,  ..., -1.1226, -0.4530,  0.9735],
         [-0.4620,  1.7716,  1.5304,  ..., -1.5734, -0.2069, -1.0493],
         [-0.0661,  1.1195,  1.3723,  ...,  0.3606, -0.0736,  0.7544],
         ...,
         [-0.6897, -1.7122,  1.2382,  ...,  0.6036, -0.3586,  0.0761],
         [ 0.9480,  0.9402,  2.9017,  ...,  2.2300,  0.1182,  1.3676],
         [-0.3157,  0.2849, -0.6486,  ..., -2.6925,  2.3997,  0.5418]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 1.2491,  0.8235, -0.7230,  ...,  0.7797,  1.2842,  0.3789],
         [-2.0246,  0.1150,  0.2123,  ...,  0.1163,  1.8176,  0.5925],
         [ 0.2687,  1.8103,  0.9064,  ...,  1.5947,  0.3645,  0.4070],
         ...,
         [-2.4615,  1.9421,  0.3896,  ...,  0.5216, -1.4999,  0.0149],
         [-1.4326, -0.1307, -1.0293,  ...,  0.1748,  0.0907, -0.9291],
         [-0.0890, -1.2117,  0.6332,  ..., -0.0726, -1.4908,  0.2153]],

        [[ 1.8102, -1.8968, -0.2309,  ...,  1.5643, -0.1491, -0.1909],
         [-0.8267,  1.0439, -1.2669,  ...,  1.6034,  2.0367,  2.0954],
         [ 0.0223, -1.9738, -1.9426,  ...,  2.2356,  0.2463,  0.5791],
         ...,
         [-1.4632,  0.9743,  1.0269,  ...,  0.6014,  2.2812, -0.9350],
         [ 1.2463,  0.1171, -0.0218,  ...,  0.4066, -0.5065, -1.7352],
         [ 1.9697, -1.0703, -0.6107,  ...,  0.9339,  1.0641, -0.0416]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[-0.7726, -0.1507,  0.1004,  ...,  0.6799,  1.6971, -0.9726],
         [-0.0410, -1.2602,  0.4879,  ..., -0.1295, -1.4638,  0.8681],
         [ 1.8479, -0.3037,  0.0123,  ...,  0.9619, -1.1206,  1.7546],
         ...,
         [-1.4614,  0.3725, -0.5160,  ...,  0.9808,  0.1521,  2.1079],
         [-0.6760, -0.4465, -1.4253,  ..., -0.0156, -0.5050, -0.6366],
         [-0.6656, -1.2977,  0.9631,  ...,  0.1640,  0.6572,  0.3783]],

        [[-0.2638,  0.9841, -0.6284,  ..., -1.1226, -0.4530,  0.9735],
         [-0.4620,  1.7716,  1.5304,  ..., -1.5734, -0.2069, -1.0493],
         [-0.0661,  1.1195,  1.3723,  ...,  0.3606, -0.0736,  0.7544],
         ...,
         [-0.6897, -1.7122,  1.2382,  ...,  0.6036, -0.3586,  0.0761],
         [ 0.9480,  0.9402,  2.9017,  ...,  2.2300,  0.1182,  1.3676],
         [-0.3157,  0.2849, -0.6486,  ..., -2.6925,  2.3997,  0.5418]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 1.2491,  0.8235, -0.7230,  ...,  0.7797,  1.2842,  0.3789],
         [-2.0246,  0.1150,  0.2123,  ...,  0.1163,  1.8176,  0.5925],
         [ 0.2687,  1.8103,  0.9064,  ...,  1.5947,  0.3645,  0.4070],
         ...,
         [-2.4615,  1.9421,  0.3896,  ...,  0.5216, -1.4999,  0.0149],
         [-1.4326, -0.1307, -1.0293,  ...,  0.1748,  0.0907, -0.9291],
         [-0.0890, -1.2117,  0.6332,  ..., -0.0726, -1.4908,  0.2153]],

        [[ 1.8102, -1.8968, -0.2309,  ...,  1.5643, -0.1491, -0.1909],
         [-0.8267,  1.0439, -1.2669,  ...,  1.6034,  2.0367,  2.0954],
         [ 0.0223, -1.9738, -1.9426,  ...,  2.2356,  0.2463,  0.5791],
         ...,
         [-1.4632,  0.9743,  1.0269,  ...,  0.6014,  2.2812, -0.9350],
         [ 1.2463,  0.1171, -0.0218,  ...,  0.4066, -0.5065, -1.7352],
         [ 1.9697, -1.0703, -0.6107,  ...,  0.9339,  1.0641, -0.0416]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 44.506, Val Loss : 51.904
======> Trajectory Loss : 8.438, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.357, BelowGroundPenalize Loss : 0.332
===> [Minibatch 23/129].........IDX = 0 :  tensor([[[-0.7726, -0.1507,  0.1004,  ...,  0.6799,  1.6971, -0.9726],
         [-0.0410, -1.2602,  0.4879,  ..., -0.1295, -1.4638,  0.8681],
         [ 1.8479, -0.3037,  0.0123,  ...,  0.9619, -1.1206,  1.7546],
         ...,
         [-1.4614,  0.3725, -0.5160,  ...,  0.9808,  0.1521,  2.1079],
         [-0.6760, -0.4465, -1.4253,  ..., -0.0156, -0.5050, -0.6366],
         [-0.6656, -1.2977,  0.9631,  ...,  0.1640,  0.6572,  0.3783]],

        [[-0.2638,  0.9841, -0.6284,  ..., -1.1226, -0.4530,  0.9735],
         [-0.4620,  1.7716,  1.5304,  ..., -1.5734, -0.2069, -1.0493],
         [-0.0661,  1.1195,  1.3723,  ...,  0.3606, -0.0736,  0.7544],
         ...,
         [-0.6897, -1.7122,  1.2382,  ...,  0.6036, -0.3586,  0.0761],
         [ 0.9480,  0.9402,  2.9017,  ...,  2.2300,  0.1182,  1.3676],
         [-0.3157,  0.2849, -0.6486,  ..., -2.6925,  2.3997,  0.5418]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 1.2491,  0.8235, -0.7230,  ...,  0.7797,  1.2842,  0.3789],
         [-2.0246,  0.1150,  0.2123,  ...,  0.1163,  1.8176,  0.5925],
         [ 0.2687,  1.8103,  0.9064,  ...,  1.5947,  0.3645,  0.4070],
         ...,
         [-2.4615,  1.9421,  0.3896,  ...,  0.5216, -1.4999,  0.0149],
         [-1.4326, -0.1307, -1.0293,  ...,  0.1748,  0.0907, -0.9291],
         [-0.0890, -1.2117,  0.6332,  ..., -0.0726, -1.4908,  0.2153]],

        [[ 1.8102, -1.8968, -0.2309,  ...,  1.5643, -0.1491, -0.1909],
         [-0.8267,  1.0439, -1.2669,  ...,  1.6034,  2.0367,  2.0954],
         [ 0.0223, -1.9738, -1.9426,  ...,  2.2356,  0.2463,  0.5791],
         ...,
         [-1.4632,  0.9743,  1.0269,  ...,  0.6014,  2.2812, -0.9350],
         [ 1.2463,  0.1171, -0.0218,  ...,  0.4066, -0.5065, -1.7352],
         [ 1.9697, -1.0703, -0.6107,  ...,  0.9339,  1.0641, -0.0416]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[-0.7726, -0.1507,  0.1004,  ...,  0.6799,  1.6971, -0.9726],
         [-0.0410, -1.2602,  0.4879,  ..., -0.1295, -1.4638,  0.8681],
         [ 1.8479, -0.3037,  0.0123,  ...,  0.9619, -1.1206,  1.7546],
         ...,
         [-1.4614,  0.3725, -0.5160,  ...,  0.9808,  0.1521,  2.1079],
         [-0.6760, -0.4465, -1.4253,  ..., -0.0156, -0.5050, -0.6366],
         [-0.6656, -1.2977,  0.9631,  ...,  0.1640,  0.6572,  0.3783]],

        [[-0.2638,  0.9841, -0.6284,  ..., -1.1226, -0.4530,  0.9735],
         [-0.4620,  1.7716,  1.5304,  ..., -1.5734, -0.2069, -1.0493],
         [-0.0661,  1.1195,  1.3723,  ...,  0.3606, -0.0736,  0.7544],
         ...,
         [-0.6897, -1.7122,  1.2382,  ...,  0.6036, -0.3586,  0.0761],
         [ 0.9480,  0.9402,  2.9017,  ...,  2.2300,  0.1182,  1.3676],
         [-0.3157,  0.2849, -0.6486,  ..., -2.6925,  2.3997,  0.5418]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 1.2491,  0.8235, -0.7230,  ...,  0.7797,  1.2842,  0.3789],
         [-2.0246,  0.1150,  0.2123,  ...,  0.1163,  1.8176,  0.5925],
         [ 0.2687,  1.8103,  0.9064,  ...,  1.5947,  0.3645,  0.4070],
         ...,
         [-2.4615,  1.9421,  0.3896,  ...,  0.5216, -1.4999,  0.0149],
         [-1.4326, -0.1307, -1.0293,  ...,  0.1748,  0.0907, -0.9291],
         [-0.0890, -1.2117,  0.6332,  ..., -0.0726, -1.4908,  0.2153]],

        [[ 1.8102, -1.8968, -0.2309,  ...,  1.5643, -0.1491, -0.1909],
         [-0.8267,  1.0439, -1.2669,  ...,  1.6034,  2.0367,  2.0954],
         [ 0.0223, -1.9738, -1.9426,  ...,  2.2356,  0.2463,  0.5791],
         ...,
         [-1.4632,  0.9743,  1.0269,  ...,  0.6014,  2.2812, -0.9350],
         [ 1.2463,  0.1171, -0.0218,  ...,  0.4066, -0.5065, -1.7352],
         [ 1.9697, -1.0703, -0.6107,  ...,  0.9339,  1.0641, -0.0416]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 33.181, Val Loss : 53.659
======> Trajectory Loss : 9.579, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.231, BelowGroundPenalize Loss : 0.494
===> [Minibatch 24/129].........IDX = 0 :  tensor([[[-0.7726, -0.1507,  0.1004,  ...,  0.6799,  1.6971, -0.9726],
         [-0.0410, -1.2602,  0.4879,  ..., -0.1295, -1.4638,  0.8681],
         [ 1.8479, -0.3037,  0.0123,  ...,  0.9619, -1.1206,  1.7546],
         ...,
         [-1.4614,  0.3725, -0.5160,  ...,  0.9808,  0.1521,  2.1079],
         [-0.6760, -0.4465, -1.4253,  ..., -0.0156, -0.5050, -0.6366],
         [-0.6656, -1.2977,  0.9631,  ...,  0.1640,  0.6572,  0.3783]],

        [[-0.2638,  0.9841, -0.6284,  ..., -1.1226, -0.4530,  0.9735],
         [-0.4620,  1.7716,  1.5304,  ..., -1.5734, -0.2069, -1.0493],
         [-0.0661,  1.1195,  1.3723,  ...,  0.3606, -0.0736,  0.7544],
         ...,
         [-0.6897, -1.7122,  1.2382,  ...,  0.6036, -0.3586,  0.0761],
         [ 0.9480,  0.9402,  2.9017,  ...,  2.2300,  0.1182,  1.3676],
         [-0.3157,  0.2849, -0.6486,  ..., -2.6925,  2.3997,  0.5418]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 1.2491,  0.8235, -0.7230,  ...,  0.7797,  1.2842,  0.3789],
         [-2.0246,  0.1150,  0.2123,  ...,  0.1163,  1.8176,  0.5925],
         [ 0.2687,  1.8103,  0.9064,  ...,  1.5947,  0.3645,  0.4070],
         ...,
         [-2.4615,  1.9421,  0.3896,  ...,  0.5216, -1.4999,  0.0149],
         [-1.4326, -0.1307, -1.0293,  ...,  0.1748,  0.0907, -0.9291],
         [-0.0890, -1.2117,  0.6332,  ..., -0.0726, -1.4908,  0.2153]],

        [[ 1.8102, -1.8968, -0.2309,  ...,  1.5643, -0.1491, -0.1909],
         [-0.8267,  1.0439, -1.2669,  ...,  1.6034,  2.0367,  2.0954],
         [ 0.0223, -1.9738, -1.9426,  ...,  2.2356,  0.2463,  0.5791],
         ...,
         [-1.4632,  0.9743,  1.0269,  ...,  0.6014,  2.2812, -0.9350],
         [ 1.2463,  0.1171, -0.0218,  ...,  0.4066, -0.5065, -1.7352],
         [ 1.9697, -1.0703, -0.6107,  ...,  0.9339,  1.0641, -0.0416]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[-0.7726, -0.1507,  0.1004,  ...,  0.6799,  1.6971, -0.9726],
         [-0.0410, -1.2602,  0.4879,  ..., -0.1295, -1.4638,  0.8681],
         [ 1.8479, -0.3037,  0.0123,  ...,  0.9619, -1.1206,  1.7546],
         ...,
         [-1.4614,  0.3725, -0.5160,  ...,  0.9808,  0.1521,  2.1079],
         [-0.6760, -0.4465, -1.4253,  ..., -0.0156, -0.5050, -0.6366],
         [-0.6656, -1.2977,  0.9631,  ...,  0.1640,  0.6572,  0.3783]],

        [[-0.2638,  0.9841, -0.6284,  ..., -1.1226, -0.4530,  0.9735],
         [-0.4620,  1.7716,  1.5304,  ..., -1.5734, -0.2069, -1.0493],
         [-0.0661,  1.1195,  1.3723,  ...,  0.3606, -0.0736,  0.7544],
         ...,
         [-0.6897, -1.7122,  1.2382,  ...,  0.6036, -0.3586,  0.0761],
         [ 0.9480,  0.9402,  2.9017,  ...,  2.2300,  0.1182,  1.3676],
         [-0.3157,  0.2849, -0.6486,  ..., -2.6925,  2.3997,  0.5418]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 1.2491,  0.8235, -0.7230,  ...,  0.7797,  1.2842,  0.3789],
         [-2.0246,  0.1150,  0.2123,  ...,  0.1163,  1.8176,  0.5925],
         [ 0.2687,  1.8103,  0.9064,  ...,  1.5947,  0.3645,  0.4070],
         ...,
         [-2.4615,  1.9421,  0.3896,  ...,  0.5216, -1.4999,  0.0149],
         [-1.4326, -0.1307, -1.0293,  ...,  0.1748,  0.0907, -0.9291],
         [-0.0890, -1.2117,  0.6332,  ..., -0.0726, -1.4908,  0.2153]],

        [[ 1.8102, -1.8968, -0.2309,  ...,  1.5643, -0.1491, -0.1909],
         [-0.8267,  1.0439, -1.2669,  ...,  1.6034,  2.0367,  2.0954],
         [ 0.0223, -1.9738, -1.9426,  ...,  2.2356,  0.2463,  0.5791],
         ...,
         [-1.4632,  0.9743,  1.0269,  ...,  0.6014,  2.2812, -0.9350],
         [ 1.2463,  0.1171, -0.0218,  ...,  0.4066, -0.5065, -1.7352],
         [ 1.9697, -1.0703, -0.6107,  ...,  0.9339,  1.0641, -0.0416]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 35.508, Val Loss : 63.161
======> Trajectory Loss : 6.822, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.285, BelowGroundPenalize Loss : 0.200
===> [Minibatch 25/129].........IDX = 0 :  tensor([[[-0.7726, -0.1507,  0.1004,  ...,  0.6799,  1.6971, -0.9726],
         [-0.0410, -1.2602,  0.4879,  ..., -0.1295, -1.4638,  0.8681],
         [ 1.8479, -0.3037,  0.0123,  ...,  0.9619, -1.1206,  1.7546],
         ...,
         [-1.4614,  0.3725, -0.5160,  ...,  0.9808,  0.1521,  2.1079],
         [-0.6760, -0.4465, -1.4253,  ..., -0.0156, -0.5050, -0.6366],
         [-0.6656, -1.2977,  0.9631,  ...,  0.1640,  0.6572,  0.3783]],

        [[-0.2638,  0.9841, -0.6284,  ..., -1.1226, -0.4530,  0.9735],
         [-0.4620,  1.7716,  1.5304,  ..., -1.5734, -0.2069, -1.0493],
         [-0.0661,  1.1195,  1.3723,  ...,  0.3606, -0.0736,  0.7544],
         ...,
         [-0.6897, -1.7122,  1.2382,  ...,  0.6036, -0.3586,  0.0761],
         [ 0.9480,  0.9402,  2.9017,  ...,  2.2300,  0.1182,  1.3676],
         [-0.3157,  0.2849, -0.6486,  ..., -2.6925,  2.3997,  0.5418]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 1.2491,  0.8235, -0.7230,  ...,  0.7797,  1.2842,  0.3789],
         [-2.0246,  0.1150,  0.2123,  ...,  0.1163,  1.8176,  0.5925],
         [ 0.2687,  1.8103,  0.9064,  ...,  1.5947,  0.3645,  0.4070],
         ...,
         [-2.4615,  1.9421,  0.3896,  ...,  0.5216, -1.4999,  0.0149],
         [-1.4326, -0.1307, -1.0293,  ...,  0.1748,  0.0907, -0.9291],
         [-0.0890, -1.2117,  0.6332,  ..., -0.0726, -1.4908,  0.2153]],

        [[ 1.8102, -1.8968, -0.2309,  ...,  1.5643, -0.1491, -0.1909],
         [-0.8267,  1.0439, -1.2669,  ...,  1.6034,  2.0367,  2.0954],
         [ 0.0223, -1.9738, -1.9426,  ...,  2.2356,  0.2463,  0.5791],
         ...,
         [-1.4632,  0.9743,  1.0269,  ...,  0.6014,  2.2812, -0.9350],
         [ 1.2463,  0.1171, -0.0218,  ...,  0.4066, -0.5065, -1.7352],
         [ 1.9697, -1.0703, -0.6107,  ...,  0.9339,  1.0641, -0.0416]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[-0.7726, -0.1507,  0.1004,  ...,  0.6799,  1.6971, -0.9726],
         [-0.0410, -1.2602,  0.4879,  ..., -0.1295, -1.4638,  0.8681],
         [ 1.8479, -0.3037,  0.0123,  ...,  0.9619, -1.1206,  1.7546],
         ...,
         [-1.4614,  0.3725, -0.5160,  ...,  0.9808,  0.1521,  2.1079],
         [-0.6760, -0.4465, -1.4253,  ..., -0.0156, -0.5050, -0.6366],
         [-0.6656, -1.2977,  0.9631,  ...,  0.1640,  0.6572,  0.3783]],

        [[-0.2638,  0.9841, -0.6284,  ..., -1.1226, -0.4530,  0.9735],
         [-0.4620,  1.7716,  1.5304,  ..., -1.5734, -0.2069, -1.0493],
         [-0.0661,  1.1195,  1.3723,  ...,  0.3606, -0.0736,  0.7544],
         ...,
         [-0.6897, -1.7122,  1.2382,  ...,  0.6036, -0.3586,  0.0761],
         [ 0.9480,  0.9402,  2.9017,  ...,  2.2300,  0.1182,  1.3676],
         [-0.3157,  0.2849, -0.6486,  ..., -2.6925,  2.3997,  0.5418]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 1.2491,  0.8235, -0.7230,  ...,  0.7797,  1.2842,  0.3789],
         [-2.0246,  0.1150,  0.2123,  ...,  0.1163,  1.8176,  0.5925],
         [ 0.2687,  1.8103,  0.9064,  ...,  1.5947,  0.3645,  0.4070],
         ...,
         [-2.4615,  1.9421,  0.3896,  ...,  0.5216, -1.4999,  0.0149],
         [-1.4326, -0.1307, -1.0293,  ...,  0.1748,  0.0907, -0.9291],
         [-0.0890, -1.2117,  0.6332,  ..., -0.0726, -1.4908,  0.2153]],

        [[ 1.8102, -1.8968, -0.2309,  ...,  1.5643, -0.1491, -0.1909],
         [-0.8267,  1.0439, -1.2669,  ...,  1.6034,  2.0367,  2.0954],
         [ 0.0223, -1.9738, -1.9426,  ...,  2.2356,  0.2463,  0.5791],
         ...,
         [-1.4632,  0.9743,  1.0269,  ...,  0.6014,  2.2812, -0.9350],
         [ 1.2463,  0.1171, -0.0218,  ...,  0.4066, -0.5065, -1.7352],
         [ 1.9697, -1.0703, -0.6107,  ...,  0.9339,  1.0641, -0.0416]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 38.797, Val Loss : 50.472
======> Trajectory Loss : 6.491, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.322, BelowGroundPenalize Loss : 0.116
===> [Minibatch 26/129].........IDX = 0 :  tensor([[[-0.7726, -0.1507,  0.1004,  ...,  0.6799,  1.6971, -0.9726],
         [-0.0410, -1.2602,  0.4879,  ..., -0.1295, -1.4638,  0.8681],
         [ 1.8479, -0.3037,  0.0123,  ...,  0.9619, -1.1206,  1.7546],
         ...,
         [-1.4614,  0.3725, -0.5160,  ...,  0.9808,  0.1521,  2.1079],
         [-0.6760, -0.4465, -1.4253,  ..., -0.0156, -0.5050, -0.6366],
         [-0.6656, -1.2977,  0.9631,  ...,  0.1640,  0.6572,  0.3783]],

        [[-0.2638,  0.9841, -0.6284,  ..., -1.1226, -0.4530,  0.9735],
         [-0.4620,  1.7716,  1.5304,  ..., -1.5734, -0.2069, -1.0493],
         [-0.0661,  1.1195,  1.3723,  ...,  0.3606, -0.0736,  0.7544],
         ...,
         [-0.6897, -1.7122,  1.2382,  ...,  0.6036, -0.3586,  0.0761],
         [ 0.9480,  0.9402,  2.9017,  ...,  2.2300,  0.1182,  1.3676],
         [-0.3157,  0.2849, -0.6486,  ..., -2.6925,  2.3997,  0.5418]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 1.2491,  0.8235, -0.7230,  ...,  0.7797,  1.2842,  0.3789],
         [-2.0246,  0.1150,  0.2123,  ...,  0.1163,  1.8176,  0.5925],
         [ 0.2687,  1.8103,  0.9064,  ...,  1.5947,  0.3645,  0.4070],
         ...,
         [-2.4615,  1.9421,  0.3896,  ...,  0.5216, -1.4999,  0.0149],
         [-1.4326, -0.1307, -1.0293,  ...,  0.1748,  0.0907, -0.9291],
         [-0.0890, -1.2117,  0.6332,  ..., -0.0726, -1.4908,  0.2153]],

        [[ 1.8102, -1.8968, -0.2309,  ...,  1.5643, -0.1491, -0.1909],
         [-0.8267,  1.0439, -1.2669,  ...,  1.6034,  2.0367,  2.0954],
         [ 0.0223, -1.9738, -1.9426,  ...,  2.2356,  0.2463,  0.5791],
         ...,
         [-1.4632,  0.9743,  1.0269,  ...,  0.6014,  2.2812, -0.9350],
         [ 1.2463,  0.1171, -0.0218,  ...,  0.4066, -0.5065, -1.7352],
         [ 1.9697, -1.0703, -0.6107,  ...,  0.9339,  1.0641, -0.0416]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[-0.7726, -0.1507,  0.1004,  ...,  0.6799,  1.6971, -0.9726],
         [-0.0410, -1.2602,  0.4879,  ..., -0.1295, -1.4638,  0.8681],
         [ 1.8479, -0.3037,  0.0123,  ...,  0.9619, -1.1206,  1.7546],
         ...,
         [-1.4614,  0.3725, -0.5160,  ...,  0.9808,  0.1521,  2.1079],
         [-0.6760, -0.4465, -1.4253,  ..., -0.0156, -0.5050, -0.6366],
         [-0.6656, -1.2977,  0.9631,  ...,  0.1640,  0.6572,  0.3783]],

        [[-0.2638,  0.9841, -0.6284,  ..., -1.1226, -0.4530,  0.9735],
         [-0.4620,  1.7716,  1.5304,  ..., -1.5734, -0.2069, -1.0493],
         [-0.0661,  1.1195,  1.3723,  ...,  0.3606, -0.0736,  0.7544],
         ...,
         [-0.6897, -1.7122,  1.2382,  ...,  0.6036, -0.3586,  0.0761],
         [ 0.9480,  0.9402,  2.9017,  ...,  2.2300,  0.1182,  1.3676],
         [-0.3157,  0.2849, -0.6486,  ..., -2.6925,  2.3997,  0.5418]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 1.2491,  0.8235, -0.7230,  ...,  0.7797,  1.2842,  0.3789],
         [-2.0246,  0.1150,  0.2123,  ...,  0.1163,  1.8176,  0.5925],
         [ 0.2687,  1.8103,  0.9064,  ...,  1.5947,  0.3645,  0.4070],
         ...,
         [-2.4615,  1.9421,  0.3896,  ...,  0.5216, -1.4999,  0.0149],
         [-1.4326, -0.1307, -1.0293,  ...,  0.1748,  0.0907, -0.9291],
         [-0.0890, -1.2117,  0.6332,  ..., -0.0726, -1.4908,  0.2153]],

        [[ 1.8102, -1.8968, -0.2309,  ...,  1.5643, -0.1491, -0.1909],
         [-0.8267,  1.0439, -1.2669,  ...,  1.6034,  2.0367,  2.0954],
         [ 0.0223, -1.9738, -1.9426,  ...,  2.2356,  0.2463,  0.5791],
         ...,
         [-1.4632,  0.9743,  1.0269,  ...,  0.6014,  2.2812, -0.9350],
         [ 1.2463,  0.1171, -0.0218,  ...,  0.4066, -0.5065, -1.7352],
         [ 1.9697, -1.0703, -0.6107,  ...,  0.9339,  1.0641, -0.0416]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 32.064, Val Loss : 62.212
======> Trajectory Loss : 8.658, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.232, BelowGroundPenalize Loss : 0.170
===> [Minibatch 27/129].........IDX = 0 :  tensor([[[-0.7726, -0.1507,  0.1004,  ...,  0.6799,  1.6971, -0.9726],
         [-0.0410, -1.2602,  0.4879,  ..., -0.1295, -1.4638,  0.8681],
         [ 1.8479, -0.3037,  0.0123,  ...,  0.9619, -1.1206,  1.7546],
         ...,
         [-1.4614,  0.3725, -0.5160,  ...,  0.9808,  0.1521,  2.1079],
         [-0.6760, -0.4465, -1.4253,  ..., -0.0156, -0.5050, -0.6366],
         [-0.6656, -1.2977,  0.9631,  ...,  0.1640,  0.6572,  0.3783]],

        [[-0.2638,  0.9841, -0.6284,  ..., -1.1226, -0.4530,  0.9735],
         [-0.4620,  1.7716,  1.5304,  ..., -1.5734, -0.2069, -1.0493],
         [-0.0661,  1.1195,  1.3723,  ...,  0.3606, -0.0736,  0.7544],
         ...,
         [-0.6897, -1.7122,  1.2382,  ...,  0.6036, -0.3586,  0.0761],
         [ 0.9480,  0.9402,  2.9017,  ...,  2.2300,  0.1182,  1.3676],
         [-0.3157,  0.2849, -0.6486,  ..., -2.6925,  2.3997,  0.5418]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 1.2491,  0.8235, -0.7230,  ...,  0.7797,  1.2842,  0.3789],
         [-2.0246,  0.1150,  0.2123,  ...,  0.1163,  1.8176,  0.5925],
         [ 0.2687,  1.8103,  0.9064,  ...,  1.5947,  0.3645,  0.4070],
         ...,
         [-2.4615,  1.9421,  0.3896,  ...,  0.5216, -1.4999,  0.0149],
         [-1.4326, -0.1307, -1.0293,  ...,  0.1748,  0.0907, -0.9291],
         [-0.0890, -1.2117,  0.6332,  ..., -0.0726, -1.4908,  0.2153]],

        [[ 1.8102, -1.8968, -0.2309,  ...,  1.5643, -0.1491, -0.1909],
         [-0.8267,  1.0439, -1.2669,  ...,  1.6034,  2.0367,  2.0954],
         [ 0.0223, -1.9738, -1.9426,  ...,  2.2356,  0.2463,  0.5791],
         ...,
         [-1.4632,  0.9743,  1.0269,  ...,  0.6014,  2.2812, -0.9350],
         [ 1.2463,  0.1171, -0.0218,  ...,  0.4066, -0.5065, -1.7352],
         [ 1.9697, -1.0703, -0.6107,  ...,  0.9339,  1.0641, -0.0416]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[-0.7726, -0.1507,  0.1004,  ...,  0.6799,  1.6971, -0.9726],
         [-0.0410, -1.2602,  0.4879,  ..., -0.1295, -1.4638,  0.8681],
         [ 1.8479, -0.3037,  0.0123,  ...,  0.9619, -1.1206,  1.7546],
         ...,
         [-1.4614,  0.3725, -0.5160,  ...,  0.9808,  0.1521,  2.1079],
         [-0.6760, -0.4465, -1.4253,  ..., -0.0156, -0.5050, -0.6366],
         [-0.6656, -1.2977,  0.9631,  ...,  0.1640,  0.6572,  0.3783]],

        [[-0.2638,  0.9841, -0.6284,  ..., -1.1226, -0.4530,  0.9735],
         [-0.4620,  1.7716,  1.5304,  ..., -1.5734, -0.2069, -1.0493],
         [-0.0661,  1.1195,  1.3723,  ...,  0.3606, -0.0736,  0.7544],
         ...,
         [-0.6897, -1.7122,  1.2382,  ...,  0.6036, -0.3586,  0.0761],
         [ 0.9480,  0.9402,  2.9017,  ...,  2.2300,  0.1182,  1.3676],
         [-0.3157,  0.2849, -0.6486,  ..., -2.6925,  2.3997,  0.5418]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 1.2491,  0.8235, -0.7230,  ...,  0.7797,  1.2842,  0.3789],
         [-2.0246,  0.1150,  0.2123,  ...,  0.1163,  1.8176,  0.5925],
         [ 0.2687,  1.8103,  0.9064,  ...,  1.5947,  0.3645,  0.4070],
         ...,
         [-2.4615,  1.9421,  0.3896,  ...,  0.5216, -1.4999,  0.0149],
         [-1.4326, -0.1307, -1.0293,  ...,  0.1748,  0.0907, -0.9291],
         [-0.0890, -1.2117,  0.6332,  ..., -0.0726, -1.4908,  0.2153]],

        [[ 1.8102, -1.8968, -0.2309,  ...,  1.5643, -0.1491, -0.1909],
         [-0.8267,  1.0439, -1.2669,  ...,  1.6034,  2.0367,  2.0954],
         [ 0.0223, -1.9738, -1.9426,  ...,  2.2356,  0.2463,  0.5791],
         ...,
         [-1.4632,  0.9743,  1.0269,  ...,  0.6014,  2.2812, -0.9350],
         [ 1.2463,  0.1171, -0.0218,  ...,  0.4066, -0.5065, -1.7352],
         [ 1.9697, -1.0703, -0.6107,  ...,  0.9339,  1.0641, -0.0416]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 43.756, Val Loss : 48.015
======> Trajectory Loss : 7.893, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.354, BelowGroundPenalize Loss : 0.414
===> [Minibatch 28/129].........IDX = 0 :  tensor([[[-0.7726, -0.1507,  0.1004,  ...,  0.6799,  1.6971, -0.9726],
         [-0.0410, -1.2602,  0.4879,  ..., -0.1295, -1.4638,  0.8681],
         [ 1.8479, -0.3037,  0.0123,  ...,  0.9619, -1.1206,  1.7546],
         ...,
         [-1.4614,  0.3725, -0.5160,  ...,  0.9808,  0.1521,  2.1079],
         [-0.6760, -0.4465, -1.4253,  ..., -0.0156, -0.5050, -0.6366],
         [-0.6656, -1.2977,  0.9631,  ...,  0.1640,  0.6572,  0.3783]],

        [[-0.2638,  0.9841, -0.6284,  ..., -1.1226, -0.4530,  0.9735],
         [-0.4620,  1.7716,  1.5304,  ..., -1.5734, -0.2069, -1.0493],
         [-0.0661,  1.1195,  1.3723,  ...,  0.3606, -0.0736,  0.7544],
         ...,
         [-0.6897, -1.7122,  1.2382,  ...,  0.6036, -0.3586,  0.0761],
         [ 0.9480,  0.9402,  2.9017,  ...,  2.2300,  0.1182,  1.3676],
         [-0.3157,  0.2849, -0.6486,  ..., -2.6925,  2.3997,  0.5418]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 1.2491,  0.8235, -0.7230,  ...,  0.7797,  1.2842,  0.3789],
         [-2.0246,  0.1150,  0.2123,  ...,  0.1163,  1.8176,  0.5925],
         [ 0.2687,  1.8103,  0.9064,  ...,  1.5947,  0.3645,  0.4070],
         ...,
         [-2.4615,  1.9421,  0.3896,  ...,  0.5216, -1.4999,  0.0149],
         [-1.4326, -0.1307, -1.0293,  ...,  0.1748,  0.0907, -0.9291],
         [-0.0890, -1.2117,  0.6332,  ..., -0.0726, -1.4908,  0.2153]],

        [[ 1.8102, -1.8968, -0.2309,  ...,  1.5643, -0.1491, -0.1909],
         [-0.8267,  1.0439, -1.2669,  ...,  1.6034,  2.0367,  2.0954],
         [ 0.0223, -1.9738, -1.9426,  ...,  2.2356,  0.2463,  0.5791],
         ...,
         [-1.4632,  0.9743,  1.0269,  ...,  0.6014,  2.2812, -0.9350],
         [ 1.2463,  0.1171, -0.0218,  ...,  0.4066, -0.5065, -1.7352],
         [ 1.9697, -1.0703, -0.6107,  ...,  0.9339,  1.0641, -0.0416]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[-0.7726, -0.1507,  0.1004,  ...,  0.6799,  1.6971, -0.9726],
         [-0.0410, -1.2602,  0.4879,  ..., -0.1295, -1.4638,  0.8681],
         [ 1.8479, -0.3037,  0.0123,  ...,  0.9619, -1.1206,  1.7546],
         ...,
         [-1.4614,  0.3725, -0.5160,  ...,  0.9808,  0.1521,  2.1079],
         [-0.6760, -0.4465, -1.4253,  ..., -0.0156, -0.5050, -0.6366],
         [-0.6656, -1.2977,  0.9631,  ...,  0.1640,  0.6572,  0.3783]],

        [[-0.2638,  0.9841, -0.6284,  ..., -1.1226, -0.4530,  0.9735],
         [-0.4620,  1.7716,  1.5304,  ..., -1.5734, -0.2069, -1.0493],
         [-0.0661,  1.1195,  1.3723,  ...,  0.3606, -0.0736,  0.7544],
         ...,
         [-0.6897, -1.7122,  1.2382,  ...,  0.6036, -0.3586,  0.0761],
         [ 0.9480,  0.9402,  2.9017,  ...,  2.2300,  0.1182,  1.3676],
         [-0.3157,  0.2849, -0.6486,  ..., -2.6925,  2.3997,  0.5418]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 1.2491,  0.8235, -0.7230,  ...,  0.7797,  1.2842,  0.3789],
         [-2.0246,  0.1150,  0.2123,  ...,  0.1163,  1.8176,  0.5925],
         [ 0.2687,  1.8103,  0.9064,  ...,  1.5947,  0.3645,  0.4070],
         ...,
         [-2.4615,  1.9421,  0.3896,  ...,  0.5216, -1.4999,  0.0149],
         [-1.4326, -0.1307, -1.0293,  ...,  0.1748,  0.0907, -0.9291],
         [-0.0890, -1.2117,  0.6332,  ..., -0.0726, -1.4908,  0.2153]],

        [[ 1.8102, -1.8968, -0.2309,  ...,  1.5643, -0.1491, -0.1909],
         [-0.8267,  1.0439, -1.2669,  ...,  1.6034,  2.0367,  2.0954],
         [ 0.0223, -1.9738, -1.9426,  ...,  2.2356,  0.2463,  0.5791],
         ...,
         [-1.4632,  0.9743,  1.0269,  ...,  0.6014,  2.2812, -0.9350],
         [ 1.2463,  0.1171, -0.0218,  ...,  0.4066, -0.5065, -1.7352],
         [ 1.9697, -1.0703, -0.6107,  ...,  0.9339,  1.0641, -0.0416]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 24.617, Val Loss : 101.627
======> Trajectory Loss : 6.588, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.176, BelowGroundPenalize Loss : 0.384
===> [Minibatch 29/129].........IDX = 0 :  tensor([[[-0.7726, -0.1507,  0.1004,  ...,  0.6799,  1.6971, -0.9726],
         [-0.0410, -1.2602,  0.4879,  ..., -0.1295, -1.4638,  0.8681],
         [ 1.8479, -0.3037,  0.0123,  ...,  0.9619, -1.1206,  1.7546],
         ...,
         [-1.4614,  0.3725, -0.5160,  ...,  0.9808,  0.1521,  2.1079],
         [-0.6760, -0.4465, -1.4253,  ..., -0.0156, -0.5050, -0.6366],
         [-0.6656, -1.2977,  0.9631,  ...,  0.1640,  0.6572,  0.3783]],

        [[-0.2638,  0.9841, -0.6284,  ..., -1.1226, -0.4530,  0.9735],
         [-0.4620,  1.7716,  1.5304,  ..., -1.5734, -0.2069, -1.0493],
         [-0.0661,  1.1195,  1.3723,  ...,  0.3606, -0.0736,  0.7544],
         ...,
         [-0.6897, -1.7122,  1.2382,  ...,  0.6036, -0.3586,  0.0761],
         [ 0.9480,  0.9402,  2.9017,  ...,  2.2300,  0.1182,  1.3676],
         [-0.3157,  0.2849, -0.6486,  ..., -2.6925,  2.3997,  0.5418]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 1.2491,  0.8235, -0.7230,  ...,  0.7797,  1.2842,  0.3789],
         [-2.0246,  0.1150,  0.2123,  ...,  0.1163,  1.8176,  0.5925],
         [ 0.2687,  1.8103,  0.9064,  ...,  1.5947,  0.3645,  0.4070],
         ...,
         [-2.4615,  1.9421,  0.3896,  ...,  0.5216, -1.4999,  0.0149],
         [-1.4326, -0.1307, -1.0293,  ...,  0.1748,  0.0907, -0.9291],
         [-0.0890, -1.2117,  0.6332,  ..., -0.0726, -1.4908,  0.2153]],

        [[ 1.8102, -1.8968, -0.2309,  ...,  1.5643, -0.1491, -0.1909],
         [-0.8267,  1.0439, -1.2669,  ...,  1.6034,  2.0367,  2.0954],
         [ 0.0223, -1.9738, -1.9426,  ...,  2.2356,  0.2463,  0.5791],
         ...,
         [-1.4632,  0.9743,  1.0269,  ...,  0.6014,  2.2812, -0.9350],
         [ 1.2463,  0.1171, -0.0218,  ...,  0.4066, -0.5065, -1.7352],
         [ 1.9697, -1.0703, -0.6107,  ...,  0.9339,  1.0641, -0.0416]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[-0.7726, -0.1507,  0.1004,  ...,  0.6799,  1.6971, -0.9726],
         [-0.0410, -1.2602,  0.4879,  ..., -0.1295, -1.4638,  0.8681],
         [ 1.8479, -0.3037,  0.0123,  ...,  0.9619, -1.1206,  1.7546],
         ...,
         [-1.4614,  0.3725, -0.5160,  ...,  0.9808,  0.1521,  2.1079],
         [-0.6760, -0.4465, -1.4253,  ..., -0.0156, -0.5050, -0.6366],
         [-0.6656, -1.2977,  0.9631,  ...,  0.1640,  0.6572,  0.3783]],

        [[-0.2638,  0.9841, -0.6284,  ..., -1.1226, -0.4530,  0.9735],
         [-0.4620,  1.7716,  1.5304,  ..., -1.5734, -0.2069, -1.0493],
         [-0.0661,  1.1195,  1.3723,  ...,  0.3606, -0.0736,  0.7544],
         ...,
         [-0.6897, -1.7122,  1.2382,  ...,  0.6036, -0.3586,  0.0761],
         [ 0.9480,  0.9402,  2.9017,  ...,  2.2300,  0.1182,  1.3676],
         [-0.3157,  0.2849, -0.6486,  ..., -2.6925,  2.3997,  0.5418]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 1.2491,  0.8235, -0.7230,  ...,  0.7797,  1.2842,  0.3789],
         [-2.0246,  0.1150,  0.2123,  ...,  0.1163,  1.8176,  0.5925],
         [ 0.2687,  1.8103,  0.9064,  ...,  1.5947,  0.3645,  0.4070],
         ...,
         [-2.4615,  1.9421,  0.3896,  ...,  0.5216, -1.4999,  0.0149],
         [-1.4326, -0.1307, -1.0293,  ...,  0.1748,  0.0907, -0.9291],
         [-0.0890, -1.2117,  0.6332,  ..., -0.0726, -1.4908,  0.2153]],

        [[ 1.8102, -1.8968, -0.2309,  ...,  1.5643, -0.1491, -0.1909],
         [-0.8267,  1.0439, -1.2669,  ...,  1.6034,  2.0367,  2.0954],
         [ 0.0223, -1.9738, -1.9426,  ...,  2.2356,  0.2463,  0.5791],
         ...,
         [-1.4632,  0.9743,  1.0269,  ...,  0.6014,  2.2812, -0.9350],
         [ 1.2463,  0.1171, -0.0218,  ...,  0.4066, -0.5065, -1.7352],
         [ 1.9697, -1.0703, -0.6107,  ...,  0.9339,  1.0641, -0.0416]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 65.339, Val Loss : 123.409
======> Trajectory Loss : 6.409, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.585, BelowGroundPenalize Loss : 0.459
===> [Minibatch 30/129].........IDX = 0 :  tensor([[[-0.7726, -0.1507,  0.1004,  ...,  0.6799,  1.6971, -0.9726],
         [-0.0410, -1.2602,  0.4879,  ..., -0.1295, -1.4638,  0.8681],
         [ 1.8479, -0.3037,  0.0123,  ...,  0.9619, -1.1206,  1.7546],
         ...,
         [-1.4614,  0.3725, -0.5160,  ...,  0.9808,  0.1521,  2.1079],
         [-0.6760, -0.4465, -1.4253,  ..., -0.0156, -0.5050, -0.6366],
         [-0.6656, -1.2977,  0.9631,  ...,  0.1640,  0.6572,  0.3783]],

        [[-0.2638,  0.9841, -0.6284,  ..., -1.1226, -0.4530,  0.9735],
         [-0.4620,  1.7716,  1.5304,  ..., -1.5734, -0.2069, -1.0493],
         [-0.0661,  1.1195,  1.3723,  ...,  0.3606, -0.0736,  0.7544],
         ...,
         [-0.6897, -1.7122,  1.2382,  ...,  0.6036, -0.3586,  0.0761],
         [ 0.9480,  0.9402,  2.9017,  ...,  2.2300,  0.1182,  1.3676],
         [-0.3157,  0.2849, -0.6486,  ..., -2.6925,  2.3997,  0.5418]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 1.2491,  0.8235, -0.7230,  ...,  0.7797,  1.2842,  0.3789],
         [-2.0246,  0.1150,  0.2123,  ...,  0.1163,  1.8176,  0.5925],
         [ 0.2687,  1.8103,  0.9064,  ...,  1.5947,  0.3645,  0.4070],
         ...,
         [-2.4615,  1.9421,  0.3896,  ...,  0.5216, -1.4999,  0.0149],
         [-1.4326, -0.1307, -1.0293,  ...,  0.1748,  0.0907, -0.9291],
         [-0.0890, -1.2117,  0.6332,  ..., -0.0726, -1.4908,  0.2153]],

        [[ 1.8102, -1.8968, -0.2309,  ...,  1.5643, -0.1491, -0.1909],
         [-0.8267,  1.0439, -1.2669,  ...,  1.6034,  2.0367,  2.0954],
         [ 0.0223, -1.9738, -1.9426,  ...,  2.2356,  0.2463,  0.5791],
         ...,
         [-1.4632,  0.9743,  1.0269,  ...,  0.6014,  2.2812, -0.9350],
         [ 1.2463,  0.1171, -0.0218,  ...,  0.4066, -0.5065, -1.7352],
         [ 1.9697, -1.0703, -0.6107,  ...,  0.9339,  1.0641, -0.0416]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[-0.7726, -0.1507,  0.1004,  ...,  0.6799,  1.6971, -0.9726],
         [-0.0410, -1.2602,  0.4879,  ..., -0.1295, -1.4638,  0.8681],
         [ 1.8479, -0.3037,  0.0123,  ...,  0.9619, -1.1206,  1.7546],
         ...,
         [-1.4614,  0.3725, -0.5160,  ...,  0.9808,  0.1521,  2.1079],
         [-0.6760, -0.4465, -1.4253,  ..., -0.0156, -0.5050, -0.6366],
         [-0.6656, -1.2977,  0.9631,  ...,  0.1640,  0.6572,  0.3783]],

        [[-0.2638,  0.9841, -0.6284,  ..., -1.1226, -0.4530,  0.9735],
         [-0.4620,  1.7716,  1.5304,  ..., -1.5734, -0.2069, -1.0493],
         [-0.0661,  1.1195,  1.3723,  ...,  0.3606, -0.0736,  0.7544],
         ...,
         [-0.6897, -1.7122,  1.2382,  ...,  0.6036, -0.3586,  0.0761],
         [ 0.9480,  0.9402,  2.9017,  ...,  2.2300,  0.1182,  1.3676],
         [-0.3157,  0.2849, -0.6486,  ..., -2.6925,  2.3997,  0.5418]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 1.2491,  0.8235, -0.7230,  ...,  0.7797,  1.2842,  0.3789],
         [-2.0246,  0.1150,  0.2123,  ...,  0.1163,  1.8176,  0.5925],
         [ 0.2687,  1.8103,  0.9064,  ...,  1.5947,  0.3645,  0.4070],
         ...,
         [-2.4615,  1.9421,  0.3896,  ...,  0.5216, -1.4999,  0.0149],
         [-1.4326, -0.1307, -1.0293,  ...,  0.1748,  0.0907, -0.9291],
         [-0.0890, -1.2117,  0.6332,  ..., -0.0726, -1.4908,  0.2153]],

        [[ 1.8102, -1.8968, -0.2309,  ...,  1.5643, -0.1491, -0.1909],
         [-0.8267,  1.0439, -1.2669,  ...,  1.6034,  2.0367,  2.0954],
         [ 0.0223, -1.9738, -1.9426,  ...,  2.2356,  0.2463,  0.5791],
         ...,
         [-1.4632,  0.9743,  1.0269,  ...,  0.6014,  2.2812, -0.9350],
         [ 1.2463,  0.1171, -0.0218,  ...,  0.4066, -0.5065, -1.7352],
         [ 1.9697, -1.0703, -0.6107,  ...,  0.9339,  1.0641, -0.0416]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 72.912, Val Loss : 61.969
======> Trajectory Loss : 7.726, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.651, BelowGroundPenalize Loss : 0.098
===> [Minibatch 31/129].........IDX = 0 :  tensor([[[-0.7726, -0.1507,  0.1004,  ...,  0.6799,  1.6971, -0.9726],
         [-0.0410, -1.2602,  0.4879,  ..., -0.1295, -1.4638,  0.8681],
         [ 1.8479, -0.3037,  0.0123,  ...,  0.9619, -1.1206,  1.7546],
         ...,
         [-1.4614,  0.3725, -0.5160,  ...,  0.9808,  0.1521,  2.1079],
         [-0.6760, -0.4465, -1.4253,  ..., -0.0156, -0.5050, -0.6366],
         [-0.6656, -1.2977,  0.9631,  ...,  0.1640,  0.6572,  0.3783]],

        [[-0.2638,  0.9841, -0.6284,  ..., -1.1226, -0.4530,  0.9735],
         [-0.4620,  1.7716,  1.5304,  ..., -1.5734, -0.2069, -1.0493],
         [-0.0661,  1.1195,  1.3723,  ...,  0.3606, -0.0736,  0.7544],
         ...,
         [-0.6897, -1.7122,  1.2382,  ...,  0.6036, -0.3586,  0.0761],
         [ 0.9480,  0.9402,  2.9017,  ...,  2.2300,  0.1182,  1.3676],
         [-0.3157,  0.2849, -0.6486,  ..., -2.6925,  2.3997,  0.5418]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 1.2491,  0.8235, -0.7230,  ...,  0.7797,  1.2842,  0.3789],
         [-2.0246,  0.1150,  0.2123,  ...,  0.1163,  1.8176,  0.5925],
         [ 0.2687,  1.8103,  0.9064,  ...,  1.5947,  0.3645,  0.4070],
         ...,
         [-2.4615,  1.9421,  0.3896,  ...,  0.5216, -1.4999,  0.0149],
         [-1.4326, -0.1307, -1.0293,  ...,  0.1748,  0.0907, -0.9291],
         [-0.0890, -1.2117,  0.6332,  ..., -0.0726, -1.4908,  0.2153]],

        [[ 1.8102, -1.8968, -0.2309,  ...,  1.5643, -0.1491, -0.1909],
         [-0.8267,  1.0439, -1.2669,  ...,  1.6034,  2.0367,  2.0954],
         [ 0.0223, -1.9738, -1.9426,  ...,  2.2356,  0.2463,  0.5791],
         ...,
         [-1.4632,  0.9743,  1.0269,  ...,  0.6014,  2.2812, -0.9350],
         [ 1.2463,  0.1171, -0.0218,  ...,  0.4066, -0.5065, -1.7352],
         [ 1.9697, -1.0703, -0.6107,  ...,  0.9339,  1.0641, -0.0416]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[-0.7726, -0.1507,  0.1004,  ...,  0.6799,  1.6971, -0.9726],
         [-0.0410, -1.2602,  0.4879,  ..., -0.1295, -1.4638,  0.8681],
         [ 1.8479, -0.3037,  0.0123,  ...,  0.9619, -1.1206,  1.7546],
         ...,
         [-1.4614,  0.3725, -0.5160,  ...,  0.9808,  0.1521,  2.1079],
         [-0.6760, -0.4465, -1.4253,  ..., -0.0156, -0.5050, -0.6366],
         [-0.6656, -1.2977,  0.9631,  ...,  0.1640,  0.6572,  0.3783]],

        [[-0.2638,  0.9841, -0.6284,  ..., -1.1226, -0.4530,  0.9735],
         [-0.4620,  1.7716,  1.5304,  ..., -1.5734, -0.2069, -1.0493],
         [-0.0661,  1.1195,  1.3723,  ...,  0.3606, -0.0736,  0.7544],
         ...,
         [-0.6897, -1.7122,  1.2382,  ...,  0.6036, -0.3586,  0.0761],
         [ 0.9480,  0.9402,  2.9017,  ...,  2.2300,  0.1182,  1.3676],
         [-0.3157,  0.2849, -0.6486,  ..., -2.6925,  2.3997,  0.5418]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 1.2491,  0.8235, -0.7230,  ...,  0.7797,  1.2842,  0.3789],
         [-2.0246,  0.1150,  0.2123,  ...,  0.1163,  1.8176,  0.5925],
         [ 0.2687,  1.8103,  0.9064,  ...,  1.5947,  0.3645,  0.4070],
         ...,
         [-2.4615,  1.9421,  0.3896,  ...,  0.5216, -1.4999,  0.0149],
         [-1.4326, -0.1307, -1.0293,  ...,  0.1748,  0.0907, -0.9291],
         [-0.0890, -1.2117,  0.6332,  ..., -0.0726, -1.4908,  0.2153]],

        [[ 1.8102, -1.8968, -0.2309,  ...,  1.5643, -0.1491, -0.1909],
         [-0.8267,  1.0439, -1.2669,  ...,  1.6034,  2.0367,  2.0954],
         [ 0.0223, -1.9738, -1.9426,  ...,  2.2356,  0.2463,  0.5791],
         ...,
         [-1.4632,  0.9743,  1.0269,  ...,  0.6014,  2.2812, -0.9350],
         [ 1.2463,  0.1171, -0.0218,  ...,  0.4066, -0.5065, -1.7352],
         [ 1.9697, -1.0703, -0.6107,  ...,  0.9339,  1.0641, -0.0416]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 39.969, Val Loss : 42.784
======> Trajectory Loss : 8.362, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.315, BelowGroundPenalize Loss : 0.140
===> [Minibatch 32/129].........IDX = 0 :  tensor([[[-0.7726, -0.1507,  0.1004,  ...,  0.6799,  1.6971, -0.9726],
         [-0.0410, -1.2602,  0.4879,  ..., -0.1295, -1.4638,  0.8681],
         [ 1.8479, -0.3037,  0.0123,  ...,  0.9619, -1.1206,  1.7546],
         ...,
         [-1.4614,  0.3725, -0.5160,  ...,  0.9808,  0.1521,  2.1079],
         [-0.6760, -0.4465, -1.4253,  ..., -0.0156, -0.5050, -0.6366],
         [-0.6656, -1.2977,  0.9631,  ...,  0.1640,  0.6572,  0.3783]],

        [[-0.2638,  0.9841, -0.6284,  ..., -1.1226, -0.4530,  0.9735],
         [-0.4620,  1.7716,  1.5304,  ..., -1.5734, -0.2069, -1.0493],
         [-0.0661,  1.1195,  1.3723,  ...,  0.3606, -0.0736,  0.7544],
         ...,
         [-0.6897, -1.7122,  1.2382,  ...,  0.6036, -0.3586,  0.0761],
         [ 0.9480,  0.9402,  2.9017,  ...,  2.2300,  0.1182,  1.3676],
         [-0.3157,  0.2849, -0.6486,  ..., -2.6925,  2.3997,  0.5418]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 1.2491,  0.8235, -0.7230,  ...,  0.7797,  1.2842,  0.3789],
         [-2.0246,  0.1150,  0.2123,  ...,  0.1163,  1.8176,  0.5925],
         [ 0.2687,  1.8103,  0.9064,  ...,  1.5947,  0.3645,  0.4070],
         ...,
         [-2.4615,  1.9421,  0.3896,  ...,  0.5216, -1.4999,  0.0149],
         [-1.4326, -0.1307, -1.0293,  ...,  0.1748,  0.0907, -0.9291],
         [-0.0890, -1.2117,  0.6332,  ..., -0.0726, -1.4908,  0.2153]],

        [[ 1.8102, -1.8968, -0.2309,  ...,  1.5643, -0.1491, -0.1909],
         [-0.8267,  1.0439, -1.2669,  ...,  1.6034,  2.0367,  2.0954],
         [ 0.0223, -1.9738, -1.9426,  ...,  2.2356,  0.2463,  0.5791],
         ...,
         [-1.4632,  0.9743,  1.0269,  ...,  0.6014,  2.2812, -0.9350],
         [ 1.2463,  0.1171, -0.0218,  ...,  0.4066, -0.5065, -1.7352],
         [ 1.9697, -1.0703, -0.6107,  ...,  0.9339,  1.0641, -0.0416]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[-0.7726, -0.1507,  0.1004,  ...,  0.6799,  1.6971, -0.9726],
         [-0.0410, -1.2602,  0.4879,  ..., -0.1295, -1.4638,  0.8681],
         [ 1.8479, -0.3037,  0.0123,  ...,  0.9619, -1.1206,  1.7546],
         ...,
         [-1.4614,  0.3725, -0.5160,  ...,  0.9808,  0.1521,  2.1079],
         [-0.6760, -0.4465, -1.4253,  ..., -0.0156, -0.5050, -0.6366],
         [-0.6656, -1.2977,  0.9631,  ...,  0.1640,  0.6572,  0.3783]],

        [[-0.2638,  0.9841, -0.6284,  ..., -1.1226, -0.4530,  0.9735],
         [-0.4620,  1.7716,  1.5304,  ..., -1.5734, -0.2069, -1.0493],
         [-0.0661,  1.1195,  1.3723,  ...,  0.3606, -0.0736,  0.7544],
         ...,
         [-0.6897, -1.7122,  1.2382,  ...,  0.6036, -0.3586,  0.0761],
         [ 0.9480,  0.9402,  2.9017,  ...,  2.2300,  0.1182,  1.3676],
         [-0.3157,  0.2849, -0.6486,  ..., -2.6925,  2.3997,  0.5418]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 1.2491,  0.8235, -0.7230,  ...,  0.7797,  1.2842,  0.3789],
         [-2.0246,  0.1150,  0.2123,  ...,  0.1163,  1.8176,  0.5925],
         [ 0.2687,  1.8103,  0.9064,  ...,  1.5947,  0.3645,  0.4070],
         ...,
         [-2.4615,  1.9421,  0.3896,  ...,  0.5216, -1.4999,  0.0149],
         [-1.4326, -0.1307, -1.0293,  ...,  0.1748,  0.0907, -0.9291],
         [-0.0890, -1.2117,  0.6332,  ..., -0.0726, -1.4908,  0.2153]],

        [[ 1.8102, -1.8968, -0.2309,  ...,  1.5643, -0.1491, -0.1909],
         [-0.8267,  1.0439, -1.2669,  ...,  1.6034,  2.0367,  2.0954],
         [ 0.0223, -1.9738, -1.9426,  ...,  2.2356,  0.2463,  0.5791],
         ...,
         [-1.4632,  0.9743,  1.0269,  ...,  0.6014,  2.2812, -0.9350],
         [ 1.2463,  0.1171, -0.0218,  ...,  0.4066, -0.5065, -1.7352],
         [ 1.9697, -1.0703, -0.6107,  ...,  0.9339,  1.0641, -0.0416]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 30.150, Val Loss : 55.242
======> Trajectory Loss : 6.111, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.239, BelowGroundPenalize Loss : 0.146
===> [Minibatch 33/129].........IDX = 0 :  tensor([[[-0.7726, -0.1507,  0.1004,  ...,  0.6799,  1.6971, -0.9726],
         [-0.0410, -1.2602,  0.4879,  ..., -0.1295, -1.4638,  0.8681],
         [ 1.8479, -0.3037,  0.0123,  ...,  0.9619, -1.1206,  1.7546],
         ...,
         [-1.4614,  0.3725, -0.5160,  ...,  0.9808,  0.1521,  2.1079],
         [-0.6760, -0.4465, -1.4253,  ..., -0.0156, -0.5050, -0.6366],
         [-0.6656, -1.2977,  0.9631,  ...,  0.1640,  0.6572,  0.3783]],

        [[-0.2638,  0.9841, -0.6284,  ..., -1.1226, -0.4530,  0.9735],
         [-0.4620,  1.7716,  1.5304,  ..., -1.5734, -0.2069, -1.0493],
         [-0.0661,  1.1195,  1.3723,  ...,  0.3606, -0.0736,  0.7544],
         ...,
         [-0.6897, -1.7122,  1.2382,  ...,  0.6036, -0.3586,  0.0761],
         [ 0.9480,  0.9402,  2.9017,  ...,  2.2300,  0.1182,  1.3676],
         [-0.3157,  0.2849, -0.6486,  ..., -2.6925,  2.3997,  0.5418]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 1.2491,  0.8235, -0.7230,  ...,  0.7797,  1.2842,  0.3789],
         [-2.0246,  0.1150,  0.2123,  ...,  0.1163,  1.8176,  0.5925],
         [ 0.2687,  1.8103,  0.9064,  ...,  1.5947,  0.3645,  0.4070],
         ...,
         [-2.4615,  1.9421,  0.3896,  ...,  0.5216, -1.4999,  0.0149],
         [-1.4326, -0.1307, -1.0293,  ...,  0.1748,  0.0907, -0.9291],
         [-0.0890, -1.2117,  0.6332,  ..., -0.0726, -1.4908,  0.2153]],

        [[ 1.8102, -1.8968, -0.2309,  ...,  1.5643, -0.1491, -0.1909],
         [-0.8267,  1.0439, -1.2669,  ...,  1.6034,  2.0367,  2.0954],
         [ 0.0223, -1.9738, -1.9426,  ...,  2.2356,  0.2463,  0.5791],
         ...,
         [-1.4632,  0.9743,  1.0269,  ...,  0.6014,  2.2812, -0.9350],
         [ 1.2463,  0.1171, -0.0218,  ...,  0.4066, -0.5065, -1.7352],
         [ 1.9697, -1.0703, -0.6107,  ...,  0.9339,  1.0641, -0.0416]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[-0.7726, -0.1507,  0.1004,  ...,  0.6799,  1.6971, -0.9726],
         [-0.0410, -1.2602,  0.4879,  ..., -0.1295, -1.4638,  0.8681],
         [ 1.8479, -0.3037,  0.0123,  ...,  0.9619, -1.1206,  1.7546],
         ...,
         [-1.4614,  0.3725, -0.5160,  ...,  0.9808,  0.1521,  2.1079],
         [-0.6760, -0.4465, -1.4253,  ..., -0.0156, -0.5050, -0.6366],
         [-0.6656, -1.2977,  0.9631,  ...,  0.1640,  0.6572,  0.3783]],

        [[-0.2638,  0.9841, -0.6284,  ..., -1.1226, -0.4530,  0.9735],
         [-0.4620,  1.7716,  1.5304,  ..., -1.5734, -0.2069, -1.0493],
         [-0.0661,  1.1195,  1.3723,  ...,  0.3606, -0.0736,  0.7544],
         ...,
         [-0.6897, -1.7122,  1.2382,  ...,  0.6036, -0.3586,  0.0761],
         [ 0.9480,  0.9402,  2.9017,  ...,  2.2300,  0.1182,  1.3676],
         [-0.3157,  0.2849, -0.6486,  ..., -2.6925,  2.3997,  0.5418]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 1.2491,  0.8235, -0.7230,  ...,  0.7797,  1.2842,  0.3789],
         [-2.0246,  0.1150,  0.2123,  ...,  0.1163,  1.8176,  0.5925],
         [ 0.2687,  1.8103,  0.9064,  ...,  1.5947,  0.3645,  0.4070],
         ...,
         [-2.4615,  1.9421,  0.3896,  ...,  0.5216, -1.4999,  0.0149],
         [-1.4326, -0.1307, -1.0293,  ...,  0.1748,  0.0907, -0.9291],
         [-0.0890, -1.2117,  0.6332,  ..., -0.0726, -1.4908,  0.2153]],

        [[ 1.8102, -1.8968, -0.2309,  ...,  1.5643, -0.1491, -0.1909],
         [-0.8267,  1.0439, -1.2669,  ...,  1.6034,  2.0367,  2.0954],
         [ 0.0223, -1.9738, -1.9426,  ...,  2.2356,  0.2463,  0.5791],
         ...,
         [-1.4632,  0.9743,  1.0269,  ...,  0.6014,  2.2812, -0.9350],
         [ 1.2463,  0.1171, -0.0218,  ...,  0.4066, -0.5065, -1.7352],
         [ 1.9697, -1.0703, -0.6107,  ...,  0.9339,  1.0641, -0.0416]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 37.798, Val Loss : 52.056
======> Trajectory Loss : 7.345, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.301, BelowGroundPenalize Loss : 0.383
===> [Minibatch 34/129].........IDX = 0 :  tensor([[[-0.7726, -0.1507,  0.1004,  ...,  0.6799,  1.6971, -0.9726],
         [-0.0410, -1.2602,  0.4879,  ..., -0.1295, -1.4638,  0.8681],
         [ 1.8479, -0.3037,  0.0123,  ...,  0.9619, -1.1206,  1.7546],
         ...,
         [-1.4614,  0.3725, -0.5160,  ...,  0.9808,  0.1521,  2.1079],
         [-0.6760, -0.4465, -1.4253,  ..., -0.0156, -0.5050, -0.6366],
         [-0.6656, -1.2977,  0.9631,  ...,  0.1640,  0.6572,  0.3783]],

        [[-0.2638,  0.9841, -0.6284,  ..., -1.1226, -0.4530,  0.9735],
         [-0.4620,  1.7716,  1.5304,  ..., -1.5734, -0.2069, -1.0493],
         [-0.0661,  1.1195,  1.3723,  ...,  0.3606, -0.0736,  0.7544],
         ...,
         [-0.6897, -1.7122,  1.2382,  ...,  0.6036, -0.3586,  0.0761],
         [ 0.9480,  0.9402,  2.9017,  ...,  2.2300,  0.1182,  1.3676],
         [-0.3157,  0.2849, -0.6486,  ..., -2.6925,  2.3997,  0.5418]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 1.2491,  0.8235, -0.7230,  ...,  0.7797,  1.2842,  0.3789],
         [-2.0246,  0.1150,  0.2123,  ...,  0.1163,  1.8176,  0.5925],
         [ 0.2687,  1.8103,  0.9064,  ...,  1.5947,  0.3645,  0.4070],
         ...,
         [-2.4615,  1.9421,  0.3896,  ...,  0.5216, -1.4999,  0.0149],
         [-1.4326, -0.1307, -1.0293,  ...,  0.1748,  0.0907, -0.9291],
         [-0.0890, -1.2117,  0.6332,  ..., -0.0726, -1.4908,  0.2153]],

        [[ 1.8102, -1.8968, -0.2309,  ...,  1.5643, -0.1491, -0.1909],
         [-0.8267,  1.0439, -1.2669,  ...,  1.6034,  2.0367,  2.0954],
         [ 0.0223, -1.9738, -1.9426,  ...,  2.2356,  0.2463,  0.5791],
         ...,
         [-1.4632,  0.9743,  1.0269,  ...,  0.6014,  2.2812, -0.9350],
         [ 1.2463,  0.1171, -0.0218,  ...,  0.4066, -0.5065, -1.7352],
         [ 1.9697, -1.0703, -0.6107,  ...,  0.9339,  1.0641, -0.0416]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[-0.7726, -0.1507,  0.1004,  ...,  0.6799,  1.6971, -0.9726],
         [-0.0410, -1.2602,  0.4879,  ..., -0.1295, -1.4638,  0.8681],
         [ 1.8479, -0.3037,  0.0123,  ...,  0.9619, -1.1206,  1.7546],
         ...,
         [-1.4614,  0.3725, -0.5160,  ...,  0.9808,  0.1521,  2.1079],
         [-0.6760, -0.4465, -1.4253,  ..., -0.0156, -0.5050, -0.6366],
         [-0.6656, -1.2977,  0.9631,  ...,  0.1640,  0.6572,  0.3783]],

        [[-0.2638,  0.9841, -0.6284,  ..., -1.1226, -0.4530,  0.9735],
         [-0.4620,  1.7716,  1.5304,  ..., -1.5734, -0.2069, -1.0493],
         [-0.0661,  1.1195,  1.3723,  ...,  0.3606, -0.0736,  0.7544],
         ...,
         [-0.6897, -1.7122,  1.2382,  ...,  0.6036, -0.3586,  0.0761],
         [ 0.9480,  0.9402,  2.9017,  ...,  2.2300,  0.1182,  1.3676],
         [-0.3157,  0.2849, -0.6486,  ..., -2.6925,  2.3997,  0.5418]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 1.2491,  0.8235, -0.7230,  ...,  0.7797,  1.2842,  0.3789],
         [-2.0246,  0.1150,  0.2123,  ...,  0.1163,  1.8176,  0.5925],
         [ 0.2687,  1.8103,  0.9064,  ...,  1.5947,  0.3645,  0.4070],
         ...,
         [-2.4615,  1.9421,  0.3896,  ...,  0.5216, -1.4999,  0.0149],
         [-1.4326, -0.1307, -1.0293,  ...,  0.1748,  0.0907, -0.9291],
         [-0.0890, -1.2117,  0.6332,  ..., -0.0726, -1.4908,  0.2153]],

        [[ 1.8102, -1.8968, -0.2309,  ...,  1.5643, -0.1491, -0.1909],
         [-0.8267,  1.0439, -1.2669,  ...,  1.6034,  2.0367,  2.0954],
         [ 0.0223, -1.9738, -1.9426,  ...,  2.2356,  0.2463,  0.5791],
         ...,
         [-1.4632,  0.9743,  1.0269,  ...,  0.6014,  2.2812, -0.9350],
         [ 1.2463,  0.1171, -0.0218,  ...,  0.4066, -0.5065, -1.7352],
         [ 1.9697, -1.0703, -0.6107,  ...,  0.9339,  1.0641, -0.0416]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 31.170, Val Loss : 47.564
======> Trajectory Loss : 7.509, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.230, BelowGroundPenalize Loss : 0.627
===> [Minibatch 35/129].........IDX = 0 :  tensor([[[-0.7726, -0.1507,  0.1004,  ...,  0.6799,  1.6971, -0.9726],
         [-0.0410, -1.2602,  0.4879,  ..., -0.1295, -1.4638,  0.8681],
         [ 1.8479, -0.3037,  0.0123,  ...,  0.9619, -1.1206,  1.7546],
         ...,
         [-1.4614,  0.3725, -0.5160,  ...,  0.9808,  0.1521,  2.1079],
         [-0.6760, -0.4465, -1.4253,  ..., -0.0156, -0.5050, -0.6366],
         [-0.6656, -1.2977,  0.9631,  ...,  0.1640,  0.6572,  0.3783]],

        [[-0.2638,  0.9841, -0.6284,  ..., -1.1226, -0.4530,  0.9735],
         [-0.4620,  1.7716,  1.5304,  ..., -1.5734, -0.2069, -1.0493],
         [-0.0661,  1.1195,  1.3723,  ...,  0.3606, -0.0736,  0.7544],
         ...,
         [-0.6897, -1.7122,  1.2382,  ...,  0.6036, -0.3586,  0.0761],
         [ 0.9480,  0.9402,  2.9017,  ...,  2.2300,  0.1182,  1.3676],
         [-0.3157,  0.2849, -0.6486,  ..., -2.6925,  2.3997,  0.5418]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 1.2491,  0.8235, -0.7230,  ...,  0.7797,  1.2842,  0.3789],
         [-2.0246,  0.1150,  0.2123,  ...,  0.1163,  1.8176,  0.5925],
         [ 0.2687,  1.8103,  0.9064,  ...,  1.5947,  0.3645,  0.4070],
         ...,
         [-2.4615,  1.9421,  0.3896,  ...,  0.5216, -1.4999,  0.0149],
         [-1.4326, -0.1307, -1.0293,  ...,  0.1748,  0.0907, -0.9291],
         [-0.0890, -1.2117,  0.6332,  ..., -0.0726, -1.4908,  0.2153]],

        [[ 1.8102, -1.8968, -0.2309,  ...,  1.5643, -0.1491, -0.1909],
         [-0.8267,  1.0439, -1.2669,  ...,  1.6034,  2.0367,  2.0954],
         [ 0.0223, -1.9738, -1.9426,  ...,  2.2356,  0.2463,  0.5791],
         ...,
         [-1.4632,  0.9743,  1.0269,  ...,  0.6014,  2.2812, -0.9350],
         [ 1.2463,  0.1171, -0.0218,  ...,  0.4066, -0.5065, -1.7352],
         [ 1.9697, -1.0703, -0.6107,  ...,  0.9339,  1.0641, -0.0416]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[-0.7726, -0.1507,  0.1004,  ...,  0.6799,  1.6971, -0.9726],
         [-0.0410, -1.2602,  0.4879,  ..., -0.1295, -1.4638,  0.8681],
         [ 1.8479, -0.3037,  0.0123,  ...,  0.9619, -1.1206,  1.7546],
         ...,
         [-1.4614,  0.3725, -0.5160,  ...,  0.9808,  0.1521,  2.1079],
         [-0.6760, -0.4465, -1.4253,  ..., -0.0156, -0.5050, -0.6366],
         [-0.6656, -1.2977,  0.9631,  ...,  0.1640,  0.6572,  0.3783]],

        [[-0.2638,  0.9841, -0.6284,  ..., -1.1226, -0.4530,  0.9735],
         [-0.4620,  1.7716,  1.5304,  ..., -1.5734, -0.2069, -1.0493],
         [-0.0661,  1.1195,  1.3723,  ...,  0.3606, -0.0736,  0.7544],
         ...,
         [-0.6897, -1.7122,  1.2382,  ...,  0.6036, -0.3586,  0.0761],
         [ 0.9480,  0.9402,  2.9017,  ...,  2.2300,  0.1182,  1.3676],
         [-0.3157,  0.2849, -0.6486,  ..., -2.6925,  2.3997,  0.5418]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 1.2491,  0.8235, -0.7230,  ...,  0.7797,  1.2842,  0.3789],
         [-2.0246,  0.1150,  0.2123,  ...,  0.1163,  1.8176,  0.5925],
         [ 0.2687,  1.8103,  0.9064,  ...,  1.5947,  0.3645,  0.4070],
         ...,
         [-2.4615,  1.9421,  0.3896,  ...,  0.5216, -1.4999,  0.0149],
         [-1.4326, -0.1307, -1.0293,  ...,  0.1748,  0.0907, -0.9291],
         [-0.0890, -1.2117,  0.6332,  ..., -0.0726, -1.4908,  0.2153]],

        [[ 1.8102, -1.8968, -0.2309,  ...,  1.5643, -0.1491, -0.1909],
         [-0.8267,  1.0439, -1.2669,  ...,  1.6034,  2.0367,  2.0954],
         [ 0.0223, -1.9738, -1.9426,  ...,  2.2356,  0.2463,  0.5791],
         ...,
         [-1.4632,  0.9743,  1.0269,  ...,  0.6014,  2.2812, -0.9350],
         [ 1.2463,  0.1171, -0.0218,  ...,  0.4066, -0.5065, -1.7352],
         [ 1.9697, -1.0703, -0.6107,  ...,  0.9339,  1.0641, -0.0416]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 27.099, Val Loss : 43.891
======> Trajectory Loss : 5.045, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.218, BelowGroundPenalize Loss : 0.244
===> [Minibatch 36/129].........IDX = 0 :  tensor([[[-0.7726, -0.1507,  0.1004,  ...,  0.6799,  1.6971, -0.9726],
         [-0.0410, -1.2602,  0.4879,  ..., -0.1295, -1.4638,  0.8681],
         [ 1.8479, -0.3037,  0.0123,  ...,  0.9619, -1.1206,  1.7546],
         ...,
         [-1.4614,  0.3725, -0.5160,  ...,  0.9808,  0.1521,  2.1079],
         [-0.6760, -0.4465, -1.4253,  ..., -0.0156, -0.5050, -0.6366],
         [-0.6656, -1.2977,  0.9631,  ...,  0.1640,  0.6572,  0.3783]],

        [[-0.2638,  0.9841, -0.6284,  ..., -1.1226, -0.4530,  0.9735],
         [-0.4620,  1.7716,  1.5304,  ..., -1.5734, -0.2069, -1.0493],
         [-0.0661,  1.1195,  1.3723,  ...,  0.3606, -0.0736,  0.7544],
         ...,
         [-0.6897, -1.7122,  1.2382,  ...,  0.6036, -0.3586,  0.0761],
         [ 0.9480,  0.9402,  2.9017,  ...,  2.2300,  0.1182,  1.3676],
         [-0.3157,  0.2849, -0.6486,  ..., -2.6925,  2.3997,  0.5418]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 1.2491,  0.8235, -0.7230,  ...,  0.7797,  1.2842,  0.3789],
         [-2.0246,  0.1150,  0.2123,  ...,  0.1163,  1.8176,  0.5925],
         [ 0.2687,  1.8103,  0.9064,  ...,  1.5947,  0.3645,  0.4070],
         ...,
         [-2.4615,  1.9421,  0.3896,  ...,  0.5216, -1.4999,  0.0149],
         [-1.4326, -0.1307, -1.0293,  ...,  0.1748,  0.0907, -0.9291],
         [-0.0890, -1.2117,  0.6332,  ..., -0.0726, -1.4908,  0.2153]],

        [[ 1.8102, -1.8968, -0.2309,  ...,  1.5643, -0.1491, -0.1909],
         [-0.8267,  1.0439, -1.2669,  ...,  1.6034,  2.0367,  2.0954],
         [ 0.0223, -1.9738, -1.9426,  ...,  2.2356,  0.2463,  0.5791],
         ...,
         [-1.4632,  0.9743,  1.0269,  ...,  0.6014,  2.2812, -0.9350],
         [ 1.2463,  0.1171, -0.0218,  ...,  0.4066, -0.5065, -1.7352],
         [ 1.9697, -1.0703, -0.6107,  ...,  0.9339,  1.0641, -0.0416]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[-0.7726, -0.1507,  0.1004,  ...,  0.6799,  1.6971, -0.9726],
         [-0.0410, -1.2602,  0.4879,  ..., -0.1295, -1.4638,  0.8681],
         [ 1.8479, -0.3037,  0.0123,  ...,  0.9619, -1.1206,  1.7546],
         ...,
         [-1.4614,  0.3725, -0.5160,  ...,  0.9808,  0.1521,  2.1079],
         [-0.6760, -0.4465, -1.4253,  ..., -0.0156, -0.5050, -0.6366],
         [-0.6656, -1.2977,  0.9631,  ...,  0.1640,  0.6572,  0.3783]],

        [[-0.2638,  0.9841, -0.6284,  ..., -1.1226, -0.4530,  0.9735],
         [-0.4620,  1.7716,  1.5304,  ..., -1.5734, -0.2069, -1.0493],
         [-0.0661,  1.1195,  1.3723,  ...,  0.3606, -0.0736,  0.7544],
         ...,
         [-0.6897, -1.7122,  1.2382,  ...,  0.6036, -0.3586,  0.0761],
         [ 0.9480,  0.9402,  2.9017,  ...,  2.2300,  0.1182,  1.3676],
         [-0.3157,  0.2849, -0.6486,  ..., -2.6925,  2.3997,  0.5418]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 1.2491,  0.8235, -0.7230,  ...,  0.7797,  1.2842,  0.3789],
         [-2.0246,  0.1150,  0.2123,  ...,  0.1163,  1.8176,  0.5925],
         [ 0.2687,  1.8103,  0.9064,  ...,  1.5947,  0.3645,  0.4070],
         ...,
         [-2.4615,  1.9421,  0.3896,  ...,  0.5216, -1.4999,  0.0149],
         [-1.4326, -0.1307, -1.0293,  ...,  0.1748,  0.0907, -0.9291],
         [-0.0890, -1.2117,  0.6332,  ..., -0.0726, -1.4908,  0.2153]],

        [[ 1.8102, -1.8968, -0.2309,  ...,  1.5643, -0.1491, -0.1909],
         [-0.8267,  1.0439, -1.2669,  ...,  1.6034,  2.0367,  2.0954],
         [ 0.0223, -1.9738, -1.9426,  ...,  2.2356,  0.2463,  0.5791],
         ...,
         [-1.4632,  0.9743,  1.0269,  ...,  0.6014,  2.2812, -0.9350],
         [ 1.2463,  0.1171, -0.0218,  ...,  0.4066, -0.5065, -1.7352],
         [ 1.9697, -1.0703, -0.6107,  ...,  0.9339,  1.0641, -0.0416]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 25.385, Val Loss : 39.710
======> Trajectory Loss : 6.292, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.188, BelowGroundPenalize Loss : 0.330
===> [Minibatch 37/129].........IDX = 0 :  tensor([[[-0.7726, -0.1507,  0.1004,  ...,  0.6799,  1.6971, -0.9726],
         [-0.0410, -1.2602,  0.4879,  ..., -0.1295, -1.4638,  0.8681],
         [ 1.8479, -0.3037,  0.0123,  ...,  0.9619, -1.1206,  1.7546],
         ...,
         [-1.4614,  0.3725, -0.5160,  ...,  0.9808,  0.1521,  2.1079],
         [-0.6760, -0.4465, -1.4253,  ..., -0.0156, -0.5050, -0.6366],
         [-0.6656, -1.2977,  0.9631,  ...,  0.1640,  0.6572,  0.3783]],

        [[-0.2638,  0.9841, -0.6284,  ..., -1.1226, -0.4530,  0.9735],
         [-0.4620,  1.7716,  1.5304,  ..., -1.5734, -0.2069, -1.0493],
         [-0.0661,  1.1195,  1.3723,  ...,  0.3606, -0.0736,  0.7544],
         ...,
         [-0.6897, -1.7122,  1.2382,  ...,  0.6036, -0.3586,  0.0761],
         [ 0.9480,  0.9402,  2.9017,  ...,  2.2300,  0.1182,  1.3676],
         [-0.3157,  0.2849, -0.6486,  ..., -2.6925,  2.3997,  0.5418]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 1.2491,  0.8235, -0.7230,  ...,  0.7797,  1.2842,  0.3789],
         [-2.0246,  0.1150,  0.2123,  ...,  0.1163,  1.8176,  0.5925],
         [ 0.2687,  1.8103,  0.9064,  ...,  1.5947,  0.3645,  0.4070],
         ...,
         [-2.4615,  1.9421,  0.3896,  ...,  0.5216, -1.4999,  0.0149],
         [-1.4326, -0.1307, -1.0293,  ...,  0.1748,  0.0907, -0.9291],
         [-0.0890, -1.2117,  0.6332,  ..., -0.0726, -1.4908,  0.2153]],

        [[ 1.8102, -1.8968, -0.2309,  ...,  1.5643, -0.1491, -0.1909],
         [-0.8267,  1.0439, -1.2669,  ...,  1.6034,  2.0367,  2.0954],
         [ 0.0223, -1.9738, -1.9426,  ...,  2.2356,  0.2463,  0.5791],
         ...,
         [-1.4632,  0.9743,  1.0269,  ...,  0.6014,  2.2812, -0.9350],
         [ 1.2463,  0.1171, -0.0218,  ...,  0.4066, -0.5065, -1.7352],
         [ 1.9697, -1.0703, -0.6107,  ...,  0.9339,  1.0641, -0.0416]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[-0.7726, -0.1507,  0.1004,  ...,  0.6799,  1.6971, -0.9726],
         [-0.0410, -1.2602,  0.4879,  ..., -0.1295, -1.4638,  0.8681],
         [ 1.8479, -0.3037,  0.0123,  ...,  0.9619, -1.1206,  1.7546],
         ...,
         [-1.4614,  0.3725, -0.5160,  ...,  0.9808,  0.1521,  2.1079],
         [-0.6760, -0.4465, -1.4253,  ..., -0.0156, -0.5050, -0.6366],
         [-0.6656, -1.2977,  0.9631,  ...,  0.1640,  0.6572,  0.3783]],

        [[-0.2638,  0.9841, -0.6284,  ..., -1.1226, -0.4530,  0.9735],
         [-0.4620,  1.7716,  1.5304,  ..., -1.5734, -0.2069, -1.0493],
         [-0.0661,  1.1195,  1.3723,  ...,  0.3606, -0.0736,  0.7544],
         ...,
         [-0.6897, -1.7122,  1.2382,  ...,  0.6036, -0.3586,  0.0761],
         [ 0.9480,  0.9402,  2.9017,  ...,  2.2300,  0.1182,  1.3676],
         [-0.3157,  0.2849, -0.6486,  ..., -2.6925,  2.3997,  0.5418]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 1.2491,  0.8235, -0.7230,  ...,  0.7797,  1.2842,  0.3789],
         [-2.0246,  0.1150,  0.2123,  ...,  0.1163,  1.8176,  0.5925],
         [ 0.2687,  1.8103,  0.9064,  ...,  1.5947,  0.3645,  0.4070],
         ...,
         [-2.4615,  1.9421,  0.3896,  ...,  0.5216, -1.4999,  0.0149],
         [-1.4326, -0.1307, -1.0293,  ...,  0.1748,  0.0907, -0.9291],
         [-0.0890, -1.2117,  0.6332,  ..., -0.0726, -1.4908,  0.2153]],

        [[ 1.8102, -1.8968, -0.2309,  ...,  1.5643, -0.1491, -0.1909],
         [-0.8267,  1.0439, -1.2669,  ...,  1.6034,  2.0367,  2.0954],
         [ 0.0223, -1.9738, -1.9426,  ...,  2.2356,  0.2463,  0.5791],
         ...,
         [-1.4632,  0.9743,  1.0269,  ...,  0.6014,  2.2812, -0.9350],
         [ 1.2463,  0.1171, -0.0218,  ...,  0.4066, -0.5065, -1.7352],
         [ 1.9697, -1.0703, -0.6107,  ...,  0.9339,  1.0641, -0.0416]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 24.021, Val Loss : 34.393
======> Trajectory Loss : 5.457, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.185, BelowGroundPenalize Loss : 0.069
===> [Minibatch 38/129].........IDX = 0 :  tensor([[[-0.7726, -0.1507,  0.1004,  ...,  0.6799,  1.6971, -0.9726],
         [-0.0410, -1.2602,  0.4879,  ..., -0.1295, -1.4638,  0.8681],
         [ 1.8479, -0.3037,  0.0123,  ...,  0.9619, -1.1206,  1.7546],
         ...,
         [-1.4614,  0.3725, -0.5160,  ...,  0.9808,  0.1521,  2.1079],
         [-0.6760, -0.4465, -1.4253,  ..., -0.0156, -0.5050, -0.6366],
         [-0.6656, -1.2977,  0.9631,  ...,  0.1640,  0.6572,  0.3783]],

        [[-0.2638,  0.9841, -0.6284,  ..., -1.1226, -0.4530,  0.9735],
         [-0.4620,  1.7716,  1.5304,  ..., -1.5734, -0.2069, -1.0493],
         [-0.0661,  1.1195,  1.3723,  ...,  0.3606, -0.0736,  0.7544],
         ...,
         [-0.6897, -1.7122,  1.2382,  ...,  0.6036, -0.3586,  0.0761],
         [ 0.9480,  0.9402,  2.9017,  ...,  2.2300,  0.1182,  1.3676],
         [-0.3157,  0.2849, -0.6486,  ..., -2.6925,  2.3997,  0.5418]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 1.2491,  0.8235, -0.7230,  ...,  0.7797,  1.2842,  0.3789],
         [-2.0246,  0.1150,  0.2123,  ...,  0.1163,  1.8176,  0.5925],
         [ 0.2687,  1.8103,  0.9064,  ...,  1.5947,  0.3645,  0.4070],
         ...,
         [-2.4615,  1.9421,  0.3896,  ...,  0.5216, -1.4999,  0.0149],
         [-1.4326, -0.1307, -1.0293,  ...,  0.1748,  0.0907, -0.9291],
         [-0.0890, -1.2117,  0.6332,  ..., -0.0726, -1.4908,  0.2153]],

        [[ 1.8102, -1.8968, -0.2309,  ...,  1.5643, -0.1491, -0.1909],
         [-0.8267,  1.0439, -1.2669,  ...,  1.6034,  2.0367,  2.0954],
         [ 0.0223, -1.9738, -1.9426,  ...,  2.2356,  0.2463,  0.5791],
         ...,
         [-1.4632,  0.9743,  1.0269,  ...,  0.6014,  2.2812, -0.9350],
         [ 1.2463,  0.1171, -0.0218,  ...,  0.4066, -0.5065, -1.7352],
         [ 1.9697, -1.0703, -0.6107,  ...,  0.9339,  1.0641, -0.0416]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[-0.7726, -0.1507,  0.1004,  ...,  0.6799,  1.6971, -0.9726],
         [-0.0410, -1.2602,  0.4879,  ..., -0.1295, -1.4638,  0.8681],
         [ 1.8479, -0.3037,  0.0123,  ...,  0.9619, -1.1206,  1.7546],
         ...,
         [-1.4614,  0.3725, -0.5160,  ...,  0.9808,  0.1521,  2.1079],
         [-0.6760, -0.4465, -1.4253,  ..., -0.0156, -0.5050, -0.6366],
         [-0.6656, -1.2977,  0.9631,  ...,  0.1640,  0.6572,  0.3783]],

        [[-0.2638,  0.9841, -0.6284,  ..., -1.1226, -0.4530,  0.9735],
         [-0.4620,  1.7716,  1.5304,  ..., -1.5734, -0.2069, -1.0493],
         [-0.0661,  1.1195,  1.3723,  ...,  0.3606, -0.0736,  0.7544],
         ...,
         [-0.6897, -1.7122,  1.2382,  ...,  0.6036, -0.3586,  0.0761],
         [ 0.9480,  0.9402,  2.9017,  ...,  2.2300,  0.1182,  1.3676],
         [-0.3157,  0.2849, -0.6486,  ..., -2.6925,  2.3997,  0.5418]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 1.2491,  0.8235, -0.7230,  ...,  0.7797,  1.2842,  0.3789],
         [-2.0246,  0.1150,  0.2123,  ...,  0.1163,  1.8176,  0.5925],
         [ 0.2687,  1.8103,  0.9064,  ...,  1.5947,  0.3645,  0.4070],
         ...,
         [-2.4615,  1.9421,  0.3896,  ...,  0.5216, -1.4999,  0.0149],
         [-1.4326, -0.1307, -1.0293,  ...,  0.1748,  0.0907, -0.9291],
         [-0.0890, -1.2117,  0.6332,  ..., -0.0726, -1.4908,  0.2153]],

        [[ 1.8102, -1.8968, -0.2309,  ...,  1.5643, -0.1491, -0.1909],
         [-0.8267,  1.0439, -1.2669,  ...,  1.6034,  2.0367,  2.0954],
         [ 0.0223, -1.9738, -1.9426,  ...,  2.2356,  0.2463,  0.5791],
         ...,
         [-1.4632,  0.9743,  1.0269,  ...,  0.6014,  2.2812, -0.9350],
         [ 1.2463,  0.1171, -0.0218,  ...,  0.4066, -0.5065, -1.7352],
         [ 1.9697, -1.0703, -0.6107,  ...,  0.9339,  1.0641, -0.0416]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 22.005, Val Loss : 34.297
======> Trajectory Loss : 6.299, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.156, BelowGroundPenalize Loss : 0.067
===> [Minibatch 39/129].........IDX = 0 :  tensor([[[-0.7726, -0.1507,  0.1004,  ...,  0.6799,  1.6971, -0.9726],
         [-0.0410, -1.2602,  0.4879,  ..., -0.1295, -1.4638,  0.8681],
         [ 1.8479, -0.3037,  0.0123,  ...,  0.9619, -1.1206,  1.7546],
         ...,
         [-1.4614,  0.3725, -0.5160,  ...,  0.9808,  0.1521,  2.1079],
         [-0.6760, -0.4465, -1.4253,  ..., -0.0156, -0.5050, -0.6366],
         [-0.6656, -1.2977,  0.9631,  ...,  0.1640,  0.6572,  0.3783]],

        [[-0.2638,  0.9841, -0.6284,  ..., -1.1226, -0.4530,  0.9735],
         [-0.4620,  1.7716,  1.5304,  ..., -1.5734, -0.2069, -1.0493],
         [-0.0661,  1.1195,  1.3723,  ...,  0.3606, -0.0736,  0.7544],
         ...,
         [-0.6897, -1.7122,  1.2382,  ...,  0.6036, -0.3586,  0.0761],
         [ 0.9480,  0.9402,  2.9017,  ...,  2.2300,  0.1182,  1.3676],
         [-0.3157,  0.2849, -0.6486,  ..., -2.6925,  2.3997,  0.5418]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 1.2491,  0.8235, -0.7230,  ...,  0.7797,  1.2842,  0.3789],
         [-2.0246,  0.1150,  0.2123,  ...,  0.1163,  1.8176,  0.5925],
         [ 0.2687,  1.8103,  0.9064,  ...,  1.5947,  0.3645,  0.4070],
         ...,
         [-2.4615,  1.9421,  0.3896,  ...,  0.5216, -1.4999,  0.0149],
         [-1.4326, -0.1307, -1.0293,  ...,  0.1748,  0.0907, -0.9291],
         [-0.0890, -1.2117,  0.6332,  ..., -0.0726, -1.4908,  0.2153]],

        [[ 1.8102, -1.8968, -0.2309,  ...,  1.5643, -0.1491, -0.1909],
         [-0.8267,  1.0439, -1.2669,  ...,  1.6034,  2.0367,  2.0954],
         [ 0.0223, -1.9738, -1.9426,  ...,  2.2356,  0.2463,  0.5791],
         ...,
         [-1.4632,  0.9743,  1.0269,  ...,  0.6014,  2.2812, -0.9350],
         [ 1.2463,  0.1171, -0.0218,  ...,  0.4066, -0.5065, -1.7352],
         [ 1.9697, -1.0703, -0.6107,  ...,  0.9339,  1.0641, -0.0416]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[-0.7726, -0.1507,  0.1004,  ...,  0.6799,  1.6971, -0.9726],
         [-0.0410, -1.2602,  0.4879,  ..., -0.1295, -1.4638,  0.8681],
         [ 1.8479, -0.3037,  0.0123,  ...,  0.9619, -1.1206,  1.7546],
         ...,
         [-1.4614,  0.3725, -0.5160,  ...,  0.9808,  0.1521,  2.1079],
         [-0.6760, -0.4465, -1.4253,  ..., -0.0156, -0.5050, -0.6366],
         [-0.6656, -1.2977,  0.9631,  ...,  0.1640,  0.6572,  0.3783]],

        [[-0.2638,  0.9841, -0.6284,  ..., -1.1226, -0.4530,  0.9735],
         [-0.4620,  1.7716,  1.5304,  ..., -1.5734, -0.2069, -1.0493],
         [-0.0661,  1.1195,  1.3723,  ...,  0.3606, -0.0736,  0.7544],
         ...,
         [-0.6897, -1.7122,  1.2382,  ...,  0.6036, -0.3586,  0.0761],
         [ 0.9480,  0.9402,  2.9017,  ...,  2.2300,  0.1182,  1.3676],
         [-0.3157,  0.2849, -0.6486,  ..., -2.6925,  2.3997,  0.5418]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 1.2491,  0.8235, -0.7230,  ...,  0.7797,  1.2842,  0.3789],
         [-2.0246,  0.1150,  0.2123,  ...,  0.1163,  1.8176,  0.5925],
         [ 0.2687,  1.8103,  0.9064,  ...,  1.5947,  0.3645,  0.4070],
         ...,
         [-2.4615,  1.9421,  0.3896,  ...,  0.5216, -1.4999,  0.0149],
         [-1.4326, -0.1307, -1.0293,  ...,  0.1748,  0.0907, -0.9291],
         [-0.0890, -1.2117,  0.6332,  ..., -0.0726, -1.4908,  0.2153]],

        [[ 1.8102, -1.8968, -0.2309,  ...,  1.5643, -0.1491, -0.1909],
         [-0.8267,  1.0439, -1.2669,  ...,  1.6034,  2.0367,  2.0954],
         [ 0.0223, -1.9738, -1.9426,  ...,  2.2356,  0.2463,  0.5791],
         ...,
         [-1.4632,  0.9743,  1.0269,  ...,  0.6014,  2.2812, -0.9350],
         [ 1.2463,  0.1171, -0.0218,  ...,  0.4066, -0.5065, -1.7352],
         [ 1.9697, -1.0703, -0.6107,  ...,  0.9339,  1.0641, -0.0416]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 23.233, Val Loss : 33.583
======> Trajectory Loss : 5.187, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.179, BelowGroundPenalize Loss : 0.130
===> [Minibatch 40/129].........IDX = 0 :  tensor([[[-0.7726, -0.1507,  0.1004,  ...,  0.6799,  1.6971, -0.9726],
         [-0.0410, -1.2602,  0.4879,  ..., -0.1295, -1.4638,  0.8681],
         [ 1.8479, -0.3037,  0.0123,  ...,  0.9619, -1.1206,  1.7546],
         ...,
         [-1.4614,  0.3725, -0.5160,  ...,  0.9808,  0.1521,  2.1079],
         [-0.6760, -0.4465, -1.4253,  ..., -0.0156, -0.5050, -0.6366],
         [-0.6656, -1.2977,  0.9631,  ...,  0.1640,  0.6572,  0.3783]],

        [[-0.2638,  0.9841, -0.6284,  ..., -1.1226, -0.4530,  0.9735],
         [-0.4620,  1.7716,  1.5304,  ..., -1.5734, -0.2069, -1.0493],
         [-0.0661,  1.1195,  1.3723,  ...,  0.3606, -0.0736,  0.7544],
         ...,
         [-0.6897, -1.7122,  1.2382,  ...,  0.6036, -0.3586,  0.0761],
         [ 0.9480,  0.9402,  2.9017,  ...,  2.2300,  0.1182,  1.3676],
         [-0.3157,  0.2849, -0.6486,  ..., -2.6925,  2.3997,  0.5418]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 1.2491,  0.8235, -0.7230,  ...,  0.7797,  1.2842,  0.3789],
         [-2.0246,  0.1150,  0.2123,  ...,  0.1163,  1.8176,  0.5925],
         [ 0.2687,  1.8103,  0.9064,  ...,  1.5947,  0.3645,  0.4070],
         ...,
         [-2.4615,  1.9421,  0.3896,  ...,  0.5216, -1.4999,  0.0149],
         [-1.4326, -0.1307, -1.0293,  ...,  0.1748,  0.0907, -0.9291],
         [-0.0890, -1.2117,  0.6332,  ..., -0.0726, -1.4908,  0.2153]],

        [[ 1.8102, -1.8968, -0.2309,  ...,  1.5643, -0.1491, -0.1909],
         [-0.8267,  1.0439, -1.2669,  ...,  1.6034,  2.0367,  2.0954],
         [ 0.0223, -1.9738, -1.9426,  ...,  2.2356,  0.2463,  0.5791],
         ...,
         [-1.4632,  0.9743,  1.0269,  ...,  0.6014,  2.2812, -0.9350],
         [ 1.2463,  0.1171, -0.0218,  ...,  0.4066, -0.5065, -1.7352],
         [ 1.9697, -1.0703, -0.6107,  ...,  0.9339,  1.0641, -0.0416]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[-0.7726, -0.1507,  0.1004,  ...,  0.6799,  1.6971, -0.9726],
         [-0.0410, -1.2602,  0.4879,  ..., -0.1295, -1.4638,  0.8681],
         [ 1.8479, -0.3037,  0.0123,  ...,  0.9619, -1.1206,  1.7546],
         ...,
         [-1.4614,  0.3725, -0.5160,  ...,  0.9808,  0.1521,  2.1079],
         [-0.6760, -0.4465, -1.4253,  ..., -0.0156, -0.5050, -0.6366],
         [-0.6656, -1.2977,  0.9631,  ...,  0.1640,  0.6572,  0.3783]],

        [[-0.2638,  0.9841, -0.6284,  ..., -1.1226, -0.4530,  0.9735],
         [-0.4620,  1.7716,  1.5304,  ..., -1.5734, -0.2069, -1.0493],
         [-0.0661,  1.1195,  1.3723,  ...,  0.3606, -0.0736,  0.7544],
         ...,
         [-0.6897, -1.7122,  1.2382,  ...,  0.6036, -0.3586,  0.0761],
         [ 0.9480,  0.9402,  2.9017,  ...,  2.2300,  0.1182,  1.3676],
         [-0.3157,  0.2849, -0.6486,  ..., -2.6925,  2.3997,  0.5418]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 1.2491,  0.8235, -0.7230,  ...,  0.7797,  1.2842,  0.3789],
         [-2.0246,  0.1150,  0.2123,  ...,  0.1163,  1.8176,  0.5925],
         [ 0.2687,  1.8103,  0.9064,  ...,  1.5947,  0.3645,  0.4070],
         ...,
         [-2.4615,  1.9421,  0.3896,  ...,  0.5216, -1.4999,  0.0149],
         [-1.4326, -0.1307, -1.0293,  ...,  0.1748,  0.0907, -0.9291],
         [-0.0890, -1.2117,  0.6332,  ..., -0.0726, -1.4908,  0.2153]],

        [[ 1.8102, -1.8968, -0.2309,  ...,  1.5643, -0.1491, -0.1909],
         [-0.8267,  1.0439, -1.2669,  ...,  1.6034,  2.0367,  2.0954],
         [ 0.0223, -1.9738, -1.9426,  ...,  2.2356,  0.2463,  0.5791],
         ...,
         [-1.4632,  0.9743,  1.0269,  ...,  0.6014,  2.2812, -0.9350],
         [ 1.2463,  0.1171, -0.0218,  ...,  0.4066, -0.5065, -1.7352],
         [ 1.9697, -1.0703, -0.6107,  ...,  0.9339,  1.0641, -0.0416]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 25.907, Val Loss : 34.278
======> Trajectory Loss : 5.295, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.205, BelowGroundPenalize Loss : 0.148
===> [Minibatch 41/129].........IDX = 0 :  tensor([[[-0.7726, -0.1507,  0.1004,  ...,  0.6799,  1.6971, -0.9726],
         [-0.0410, -1.2602,  0.4879,  ..., -0.1295, -1.4638,  0.8681],
         [ 1.8479, -0.3037,  0.0123,  ...,  0.9619, -1.1206,  1.7546],
         ...,
         [-1.4614,  0.3725, -0.5160,  ...,  0.9808,  0.1521,  2.1079],
         [-0.6760, -0.4465, -1.4253,  ..., -0.0156, -0.5050, -0.6366],
         [-0.6656, -1.2977,  0.9631,  ...,  0.1640,  0.6572,  0.3783]],

        [[-0.2638,  0.9841, -0.6284,  ..., -1.1226, -0.4530,  0.9735],
         [-0.4620,  1.7716,  1.5304,  ..., -1.5734, -0.2069, -1.0493],
         [-0.0661,  1.1195,  1.3723,  ...,  0.3606, -0.0736,  0.7544],
         ...,
         [-0.6897, -1.7122,  1.2382,  ...,  0.6036, -0.3586,  0.0761],
         [ 0.9480,  0.9402,  2.9017,  ...,  2.2300,  0.1182,  1.3676],
         [-0.3157,  0.2849, -0.6486,  ..., -2.6925,  2.3997,  0.5418]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 1.2491,  0.8235, -0.7230,  ...,  0.7797,  1.2842,  0.3789],
         [-2.0246,  0.1150,  0.2123,  ...,  0.1163,  1.8176,  0.5925],
         [ 0.2687,  1.8103,  0.9064,  ...,  1.5947,  0.3645,  0.4070],
         ...,
         [-2.4615,  1.9421,  0.3896,  ...,  0.5216, -1.4999,  0.0149],
         [-1.4326, -0.1307, -1.0293,  ...,  0.1748,  0.0907, -0.9291],
         [-0.0890, -1.2117,  0.6332,  ..., -0.0726, -1.4908,  0.2153]],

        [[ 1.8102, -1.8968, -0.2309,  ...,  1.5643, -0.1491, -0.1909],
         [-0.8267,  1.0439, -1.2669,  ...,  1.6034,  2.0367,  2.0954],
         [ 0.0223, -1.9738, -1.9426,  ...,  2.2356,  0.2463,  0.5791],
         ...,
         [-1.4632,  0.9743,  1.0269,  ...,  0.6014,  2.2812, -0.9350],
         [ 1.2463,  0.1171, -0.0218,  ...,  0.4066, -0.5065, -1.7352],
         [ 1.9697, -1.0703, -0.6107,  ...,  0.9339,  1.0641, -0.0416]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[-0.7726, -0.1507,  0.1004,  ...,  0.6799,  1.6971, -0.9726],
         [-0.0410, -1.2602,  0.4879,  ..., -0.1295, -1.4638,  0.8681],
         [ 1.8479, -0.3037,  0.0123,  ...,  0.9619, -1.1206,  1.7546],
         ...,
         [-1.4614,  0.3725, -0.5160,  ...,  0.9808,  0.1521,  2.1079],
         [-0.6760, -0.4465, -1.4253,  ..., -0.0156, -0.5050, -0.6366],
         [-0.6656, -1.2977,  0.9631,  ...,  0.1640,  0.6572,  0.3783]],

        [[-0.2638,  0.9841, -0.6284,  ..., -1.1226, -0.4530,  0.9735],
         [-0.4620,  1.7716,  1.5304,  ..., -1.5734, -0.2069, -1.0493],
         [-0.0661,  1.1195,  1.3723,  ...,  0.3606, -0.0736,  0.7544],
         ...,
         [-0.6897, -1.7122,  1.2382,  ...,  0.6036, -0.3586,  0.0761],
         [ 0.9480,  0.9402,  2.9017,  ...,  2.2300,  0.1182,  1.3676],
         [-0.3157,  0.2849, -0.6486,  ..., -2.6925,  2.3997,  0.5418]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 1.2491,  0.8235, -0.7230,  ...,  0.7797,  1.2842,  0.3789],
         [-2.0246,  0.1150,  0.2123,  ...,  0.1163,  1.8176,  0.5925],
         [ 0.2687,  1.8103,  0.9064,  ...,  1.5947,  0.3645,  0.4070],
         ...,
         [-2.4615,  1.9421,  0.3896,  ...,  0.5216, -1.4999,  0.0149],
         [-1.4326, -0.1307, -1.0293,  ...,  0.1748,  0.0907, -0.9291],
         [-0.0890, -1.2117,  0.6332,  ..., -0.0726, -1.4908,  0.2153]],

        [[ 1.8102, -1.8968, -0.2309,  ...,  1.5643, -0.1491, -0.1909],
         [-0.8267,  1.0439, -1.2669,  ...,  1.6034,  2.0367,  2.0954],
         [ 0.0223, -1.9738, -1.9426,  ...,  2.2356,  0.2463,  0.5791],
         ...,
         [-1.4632,  0.9743,  1.0269,  ...,  0.6014,  2.2812, -0.9350],
         [ 1.2463,  0.1171, -0.0218,  ...,  0.4066, -0.5065, -1.7352],
         [ 1.9697, -1.0703, -0.6107,  ...,  0.9339,  1.0641, -0.0416]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 21.227, Val Loss : 43.449
======> Trajectory Loss : 4.201, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.169, BelowGroundPenalize Loss : 0.102
===> [Minibatch 42/129].........IDX = 0 :  tensor([[[-0.7726, -0.1507,  0.1004,  ...,  0.6799,  1.6971, -0.9726],
         [-0.0410, -1.2602,  0.4879,  ..., -0.1295, -1.4638,  0.8681],
         [ 1.8479, -0.3037,  0.0123,  ...,  0.9619, -1.1206,  1.7546],
         ...,
         [-1.4614,  0.3725, -0.5160,  ...,  0.9808,  0.1521,  2.1079],
         [-0.6760, -0.4465, -1.4253,  ..., -0.0156, -0.5050, -0.6366],
         [-0.6656, -1.2977,  0.9631,  ...,  0.1640,  0.6572,  0.3783]],

        [[-0.2638,  0.9841, -0.6284,  ..., -1.1226, -0.4530,  0.9735],
         [-0.4620,  1.7716,  1.5304,  ..., -1.5734, -0.2069, -1.0493],
         [-0.0661,  1.1195,  1.3723,  ...,  0.3606, -0.0736,  0.7544],
         ...,
         [-0.6897, -1.7122,  1.2382,  ...,  0.6036, -0.3586,  0.0761],
         [ 0.9480,  0.9402,  2.9017,  ...,  2.2300,  0.1182,  1.3676],
         [-0.3157,  0.2849, -0.6486,  ..., -2.6925,  2.3997,  0.5418]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 1.2491,  0.8235, -0.7230,  ...,  0.7797,  1.2842,  0.3789],
         [-2.0246,  0.1150,  0.2123,  ...,  0.1163,  1.8176,  0.5925],
         [ 0.2687,  1.8103,  0.9064,  ...,  1.5947,  0.3645,  0.4070],
         ...,
         [-2.4615,  1.9421,  0.3896,  ...,  0.5216, -1.4999,  0.0149],
         [-1.4326, -0.1307, -1.0293,  ...,  0.1748,  0.0907, -0.9291],
         [-0.0890, -1.2117,  0.6332,  ..., -0.0726, -1.4908,  0.2153]],

        [[ 1.8102, -1.8968, -0.2309,  ...,  1.5643, -0.1491, -0.1909],
         [-0.8267,  1.0439, -1.2669,  ...,  1.6034,  2.0367,  2.0954],
         [ 0.0223, -1.9738, -1.9426,  ...,  2.2356,  0.2463,  0.5791],
         ...,
         [-1.4632,  0.9743,  1.0269,  ...,  0.6014,  2.2812, -0.9350],
         [ 1.2463,  0.1171, -0.0218,  ...,  0.4066, -0.5065, -1.7352],
         [ 1.9697, -1.0703, -0.6107,  ...,  0.9339,  1.0641, -0.0416]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[-0.7726, -0.1507,  0.1004,  ...,  0.6799,  1.6971, -0.9726],
         [-0.0410, -1.2602,  0.4879,  ..., -0.1295, -1.4638,  0.8681],
         [ 1.8479, -0.3037,  0.0123,  ...,  0.9619, -1.1206,  1.7546],
         ...,
         [-1.4614,  0.3725, -0.5160,  ...,  0.9808,  0.1521,  2.1079],
         [-0.6760, -0.4465, -1.4253,  ..., -0.0156, -0.5050, -0.6366],
         [-0.6656, -1.2977,  0.9631,  ...,  0.1640,  0.6572,  0.3783]],

        [[-0.2638,  0.9841, -0.6284,  ..., -1.1226, -0.4530,  0.9735],
         [-0.4620,  1.7716,  1.5304,  ..., -1.5734, -0.2069, -1.0493],
         [-0.0661,  1.1195,  1.3723,  ...,  0.3606, -0.0736,  0.7544],
         ...,
         [-0.6897, -1.7122,  1.2382,  ...,  0.6036, -0.3586,  0.0761],
         [ 0.9480,  0.9402,  2.9017,  ...,  2.2300,  0.1182,  1.3676],
         [-0.3157,  0.2849, -0.6486,  ..., -2.6925,  2.3997,  0.5418]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 1.2491,  0.8235, -0.7230,  ...,  0.7797,  1.2842,  0.3789],
         [-2.0246,  0.1150,  0.2123,  ...,  0.1163,  1.8176,  0.5925],
         [ 0.2687,  1.8103,  0.9064,  ...,  1.5947,  0.3645,  0.4070],
         ...,
         [-2.4615,  1.9421,  0.3896,  ...,  0.5216, -1.4999,  0.0149],
         [-1.4326, -0.1307, -1.0293,  ...,  0.1748,  0.0907, -0.9291],
         [-0.0890, -1.2117,  0.6332,  ..., -0.0726, -1.4908,  0.2153]],

        [[ 1.8102, -1.8968, -0.2309,  ...,  1.5643, -0.1491, -0.1909],
         [-0.8267,  1.0439, -1.2669,  ...,  1.6034,  2.0367,  2.0954],
         [ 0.0223, -1.9738, -1.9426,  ...,  2.2356,  0.2463,  0.5791],
         ...,
         [-1.4632,  0.9743,  1.0269,  ...,  0.6014,  2.2812, -0.9350],
         [ 1.2463,  0.1171, -0.0218,  ...,  0.4066, -0.5065, -1.7352],
         [ 1.9697, -1.0703, -0.6107,  ...,  0.9339,  1.0641, -0.0416]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 32.292, Val Loss : 35.037
======> Trajectory Loss : 4.128, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.280, BelowGroundPenalize Loss : 0.141
===> [Minibatch 43/129].........IDX = 0 :  tensor([[[-0.7726, -0.1507,  0.1004,  ...,  0.6799,  1.6971, -0.9726],
         [-0.0410, -1.2602,  0.4879,  ..., -0.1295, -1.4638,  0.8681],
         [ 1.8479, -0.3037,  0.0123,  ...,  0.9619, -1.1206,  1.7546],
         ...,
         [-1.4614,  0.3725, -0.5160,  ...,  0.9808,  0.1521,  2.1079],
         [-0.6760, -0.4465, -1.4253,  ..., -0.0156, -0.5050, -0.6366],
         [-0.6656, -1.2977,  0.9631,  ...,  0.1640,  0.6572,  0.3783]],

        [[-0.2638,  0.9841, -0.6284,  ..., -1.1226, -0.4530,  0.9735],
         [-0.4620,  1.7716,  1.5304,  ..., -1.5734, -0.2069, -1.0493],
         [-0.0661,  1.1195,  1.3723,  ...,  0.3606, -0.0736,  0.7544],
         ...,
         [-0.6897, -1.7122,  1.2382,  ...,  0.6036, -0.3586,  0.0761],
         [ 0.9480,  0.9402,  2.9017,  ...,  2.2300,  0.1182,  1.3676],
         [-0.3157,  0.2849, -0.6486,  ..., -2.6925,  2.3997,  0.5418]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 1.2491,  0.8235, -0.7230,  ...,  0.7797,  1.2842,  0.3789],
         [-2.0246,  0.1150,  0.2123,  ...,  0.1163,  1.8176,  0.5925],
         [ 0.2687,  1.8103,  0.9064,  ...,  1.5947,  0.3645,  0.4070],
         ...,
         [-2.4615,  1.9421,  0.3896,  ...,  0.5216, -1.4999,  0.0149],
         [-1.4326, -0.1307, -1.0293,  ...,  0.1748,  0.0907, -0.9291],
         [-0.0890, -1.2117,  0.6332,  ..., -0.0726, -1.4908,  0.2153]],

        [[ 1.8102, -1.8968, -0.2309,  ...,  1.5643, -0.1491, -0.1909],
         [-0.8267,  1.0439, -1.2669,  ...,  1.6034,  2.0367,  2.0954],
         [ 0.0223, -1.9738, -1.9426,  ...,  2.2356,  0.2463,  0.5791],
         ...,
         [-1.4632,  0.9743,  1.0269,  ...,  0.6014,  2.2812, -0.9350],
         [ 1.2463,  0.1171, -0.0218,  ...,  0.4066, -0.5065, -1.7352],
         [ 1.9697, -1.0703, -0.6107,  ...,  0.9339,  1.0641, -0.0416]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[-0.7726, -0.1507,  0.1004,  ...,  0.6799,  1.6971, -0.9726],
         [-0.0410, -1.2602,  0.4879,  ..., -0.1295, -1.4638,  0.8681],
         [ 1.8479, -0.3037,  0.0123,  ...,  0.9619, -1.1206,  1.7546],
         ...,
         [-1.4614,  0.3725, -0.5160,  ...,  0.9808,  0.1521,  2.1079],
         [-0.6760, -0.4465, -1.4253,  ..., -0.0156, -0.5050, -0.6366],
         [-0.6656, -1.2977,  0.9631,  ...,  0.1640,  0.6572,  0.3783]],

        [[-0.2638,  0.9841, -0.6284,  ..., -1.1226, -0.4530,  0.9735],
         [-0.4620,  1.7716,  1.5304,  ..., -1.5734, -0.2069, -1.0493],
         [-0.0661,  1.1195,  1.3723,  ...,  0.3606, -0.0736,  0.7544],
         ...,
         [-0.6897, -1.7122,  1.2382,  ...,  0.6036, -0.3586,  0.0761],
         [ 0.9480,  0.9402,  2.9017,  ...,  2.2300,  0.1182,  1.3676],
         [-0.3157,  0.2849, -0.6486,  ..., -2.6925,  2.3997,  0.5418]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 1.2491,  0.8235, -0.7230,  ...,  0.7797,  1.2842,  0.3789],
         [-2.0246,  0.1150,  0.2123,  ...,  0.1163,  1.8176,  0.5925],
         [ 0.2687,  1.8103,  0.9064,  ...,  1.5947,  0.3645,  0.4070],
         ...,
         [-2.4615,  1.9421,  0.3896,  ...,  0.5216, -1.4999,  0.0149],
         [-1.4326, -0.1307, -1.0293,  ...,  0.1748,  0.0907, -0.9291],
         [-0.0890, -1.2117,  0.6332,  ..., -0.0726, -1.4908,  0.2153]],

        [[ 1.8102, -1.8968, -0.2309,  ...,  1.5643, -0.1491, -0.1909],
         [-0.8267,  1.0439, -1.2669,  ...,  1.6034,  2.0367,  2.0954],
         [ 0.0223, -1.9738, -1.9426,  ...,  2.2356,  0.2463,  0.5791],
         ...,
         [-1.4632,  0.9743,  1.0269,  ...,  0.6014,  2.2812, -0.9350],
         [ 1.2463,  0.1171, -0.0218,  ...,  0.4066, -0.5065, -1.7352],
         [ 1.9697, -1.0703, -0.6107,  ...,  0.9339,  1.0641, -0.0416]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 21.259, Val Loss : 26.721
======> Trajectory Loss : 5.980, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.153, BelowGroundPenalize Loss : 0.027
===> [Minibatch 44/129].........IDX = 0 :  tensor([[[-0.7726, -0.1507,  0.1004,  ...,  0.6799,  1.6971, -0.9726],
         [-0.0410, -1.2602,  0.4879,  ..., -0.1295, -1.4638,  0.8681],
         [ 1.8479, -0.3037,  0.0123,  ...,  0.9619, -1.1206,  1.7546],
         ...,
         [-1.4614,  0.3725, -0.5160,  ...,  0.9808,  0.1521,  2.1079],
         [-0.6760, -0.4465, -1.4253,  ..., -0.0156, -0.5050, -0.6366],
         [-0.6656, -1.2977,  0.9631,  ...,  0.1640,  0.6572,  0.3783]],

        [[-0.2638,  0.9841, -0.6284,  ..., -1.1226, -0.4530,  0.9735],
         [-0.4620,  1.7716,  1.5304,  ..., -1.5734, -0.2069, -1.0493],
         [-0.0661,  1.1195,  1.3723,  ...,  0.3606, -0.0736,  0.7544],
         ...,
         [-0.6897, -1.7122,  1.2382,  ...,  0.6036, -0.3586,  0.0761],
         [ 0.9480,  0.9402,  2.9017,  ...,  2.2300,  0.1182,  1.3676],
         [-0.3157,  0.2849, -0.6486,  ..., -2.6925,  2.3997,  0.5418]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 1.2491,  0.8235, -0.7230,  ...,  0.7797,  1.2842,  0.3789],
         [-2.0246,  0.1150,  0.2123,  ...,  0.1163,  1.8176,  0.5925],
         [ 0.2687,  1.8103,  0.9064,  ...,  1.5947,  0.3645,  0.4070],
         ...,
         [-2.4615,  1.9421,  0.3896,  ...,  0.5216, -1.4999,  0.0149],
         [-1.4326, -0.1307, -1.0293,  ...,  0.1748,  0.0907, -0.9291],
         [-0.0890, -1.2117,  0.6332,  ..., -0.0726, -1.4908,  0.2153]],

        [[ 1.8102, -1.8968, -0.2309,  ...,  1.5643, -0.1491, -0.1909],
         [-0.8267,  1.0439, -1.2669,  ...,  1.6034,  2.0367,  2.0954],
         [ 0.0223, -1.9738, -1.9426,  ...,  2.2356,  0.2463,  0.5791],
         ...,
         [-1.4632,  0.9743,  1.0269,  ...,  0.6014,  2.2812, -0.9350],
         [ 1.2463,  0.1171, -0.0218,  ...,  0.4066, -0.5065, -1.7352],
         [ 1.9697, -1.0703, -0.6107,  ...,  0.9339,  1.0641, -0.0416]]],
       device='cuda:0', grad_fn=<SelectBackward>)
