==============================================Features==============================================
Prediction = depth, Environment = unity
Available features :  ['x-0', 'y-1', 'z-2', 'u-3', 'v-4', 'd-5', 'eot-6', 'og-7', 'rad-8', 'f_sin-9', 'f_cos-10', 'g-11']
Selected features :  [6]
1. input_col =  [3, 4, 6]
2. input_startpos_col =  [3, 4, 5, 6]
3. gt_col =  [5, 6]
4. gt_startpos_col =  [0, 1, 2, 6]
5. gt_xyz_col =  [0, 1, 2, 6]
====================================================================================================
[#]Training : Trajectory Estimation
Mixed:   0%|                                                                                      | 0/3 [00:00<?, ?it/s]Mixed: 100%|██████████████████████████████████████████████████████████████████████████████| 3/3 [00:00<00:00, 29.57it/s]Mixed: 100%|██████████████████████████████████████████████████████████████████████████████| 3/3 [00:00<00:00, 29.49it/s]
===============================Dataset shape===============================
Mixed : (6426,)
===========================================================================
Mixed:   0%|                                                                                      | 0/2 [00:00<?, ?it/s]===============================Dataset shape===============================
Mixed : (1029,)
===========================================================================
Mixed: 100%|██████████████████████████████████████████████████████████████████████████████| 2/2 [00:00<00:00, 77.38it/s]
======================================================Summary Batch (batch_size = 128)=========================================================================
Input batch [0] : batch=torch.Size([128, 687, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 687, 3]), initial position=torch.Size([128, 1, 4])
gt batch [0] : batch=torch.Size([128, 687, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 688, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [1] : batch=torch.Size([128, 668, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 668, 3]), initial position=torch.Size([128, 1, 4])
gt batch [1] : batch=torch.Size([128, 668, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 669, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [2] : batch=torch.Size([128, 788, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 788, 3]), initial position=torch.Size([128, 1, 4])
gt batch [2] : batch=torch.Size([128, 788, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 789, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [3] : batch=torch.Size([128, 703, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 703, 3]), initial position=torch.Size([128, 1, 4])
gt batch [3] : batch=torch.Size([128, 703, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 704, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [4] : batch=torch.Size([128, 721, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 721, 3]), initial position=torch.Size([128, 1, 4])
gt batch [4] : batch=torch.Size([128, 721, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 722, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [5] : batch=torch.Size([128, 707, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 707, 3]), initial position=torch.Size([128, 1, 4])
gt batch [5] : batch=torch.Size([128, 707, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 708, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [6] : batch=torch.Size([128, 656, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 656, 3]), initial position=torch.Size([128, 1, 4])
gt batch [6] : batch=torch.Size([128, 656, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 657, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [7] : batch=torch.Size([128, 677, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 677, 3]), initial position=torch.Size([128, 1, 4])
gt batch [7] : batch=torch.Size([128, 677, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 678, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [8] : batch=torch.Size([128, 734, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 734, 3]), initial position=torch.Size([128, 1, 4])
gt batch [8] : batch=torch.Size([128, 734, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 735, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [9] : batch=torch.Size([128, 704, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 704, 3]), initial position=torch.Size([128, 1, 4])
gt batch [9] : batch=torch.Size([128, 704, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 705, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [10] : batch=torch.Size([128, 715, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 715, 3]), initial position=torch.Size([128, 1, 4])
gt batch [10] : batch=torch.Size([128, 715, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 716, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [11] : batch=torch.Size([128, 691, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 691, 3]), initial position=torch.Size([128, 1, 4])
gt batch [11] : batch=torch.Size([128, 691, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 692, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [12] : batch=torch.Size([128, 742, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 742, 3]), initial position=torch.Size([128, 1, 4])
gt batch [12] : batch=torch.Size([128, 742, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 743, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [13] : batch=torch.Size([128, 680, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 680, 3]), initial position=torch.Size([128, 1, 4])
gt batch [13] : batch=torch.Size([128, 680, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 681, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [14] : batch=torch.Size([128, 712, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 712, 3]), initial position=torch.Size([128, 1, 4])
gt batch [14] : batch=torch.Size([128, 712, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 713, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [15] : batch=torch.Size([128, 696, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 696, 3]), initial position=torch.Size([128, 1, 4])
gt batch [15] : batch=torch.Size([128, 696, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 697, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [16] : batch=torch.Size([128, 643, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 643, 3]), initial position=torch.Size([128, 1, 4])
gt batch [16] : batch=torch.Size([128, 643, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 644, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [17] : batch=torch.Size([128, 649, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 649, 3]), initial position=torch.Size([128, 1, 4])
gt batch [17] : batch=torch.Size([128, 649, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 650, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [18] : batch=torch.Size([128, 722, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 722, 3]), initial position=torch.Size([128, 1, 4])
gt batch [18] : batch=torch.Size([128, 722, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 723, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [19] : batch=torch.Size([128, 674, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 674, 3]), initial position=torch.Size([128, 1, 4])
gt batch [19] : batch=torch.Size([128, 674, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 675, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [20] : batch=torch.Size([128, 675, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 675, 3]), initial position=torch.Size([128, 1, 4])
gt batch [20] : batch=torch.Size([128, 675, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 676, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [21] : batch=torch.Size([128, 772, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 772, 3]), initial position=torch.Size([128, 1, 4])
gt batch [21] : batch=torch.Size([128, 772, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 773, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [22] : batch=torch.Size([128, 758, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 758, 3]), initial position=torch.Size([128, 1, 4])
gt batch [22] : batch=torch.Size([128, 758, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 759, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [23] : batch=torch.Size([128, 742, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 742, 3]), initial position=torch.Size([128, 1, 4])
gt batch [23] : batch=torch.Size([128, 742, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 743, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [24] : batch=torch.Size([128, 698, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 698, 3]), initial position=torch.Size([128, 1, 4])
gt batch [24] : batch=torch.Size([128, 698, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 699, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [25] : batch=torch.Size([128, 704, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 704, 3]), initial position=torch.Size([128, 1, 4])
gt batch [25] : batch=torch.Size([128, 704, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 705, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [26] : batch=torch.Size([128, 723, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 723, 3]), initial position=torch.Size([128, 1, 4])
gt batch [26] : batch=torch.Size([128, 723, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 724, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [27] : batch=torch.Size([128, 645, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 645, 3]), initial position=torch.Size([128, 1, 4])
gt batch [27] : batch=torch.Size([128, 645, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 646, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [28] : batch=torch.Size([128, 664, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 664, 3]), initial position=torch.Size([128, 1, 4])
gt batch [28] : batch=torch.Size([128, 664, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 665, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [29] : batch=torch.Size([128, 697, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 697, 3]), initial position=torch.Size([128, 1, 4])
gt batch [29] : batch=torch.Size([128, 697, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 698, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [30] : batch=torch.Size([128, 688, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 688, 3]), initial position=torch.Size([128, 1, 4])
gt batch [30] : batch=torch.Size([128, 688, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 689, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [31] : batch=torch.Size([128, 718, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 718, 3]), initial position=torch.Size([128, 1, 4])
gt batch [31] : batch=torch.Size([128, 718, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 719, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [32] : batch=torch.Size([128, 687, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 687, 3]), initial position=torch.Size([128, 1, 4])
gt batch [32] : batch=torch.Size([128, 687, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 688, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [33] : batch=torch.Size([128, 656, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 656, 3]), initial position=torch.Size([128, 1, 4])
gt batch [33] : batch=torch.Size([128, 656, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 657, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [34] : batch=torch.Size([128, 802, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 802, 3]), initial position=torch.Size([128, 1, 4])
gt batch [34] : batch=torch.Size([128, 802, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 803, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [35] : batch=torch.Size([128, 630, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 630, 3]), initial position=torch.Size([128, 1, 4])
gt batch [35] : batch=torch.Size([128, 630, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 631, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [36] : batch=torch.Size([128, 687, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 687, 3]), initial position=torch.Size([128, 1, 4])
gt batch [36] : batch=torch.Size([128, 687, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 688, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [37] : batch=torch.Size([128, 687, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 687, 3]), initial position=torch.Size([128, 1, 4])
gt batch [37] : batch=torch.Size([128, 687, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 688, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [38] : batch=torch.Size([128, 732, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 732, 3]), initial position=torch.Size([128, 1, 4])
gt batch [38] : batch=torch.Size([128, 732, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 733, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [39] : batch=torch.Size([128, 708, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 708, 3]), initial position=torch.Size([128, 1, 4])
gt batch [39] : batch=torch.Size([128, 708, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 709, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [40] : batch=torch.Size([128, 688, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 688, 3]), initial position=torch.Size([128, 1, 4])
gt batch [40] : batch=torch.Size([128, 688, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 689, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [41] : batch=torch.Size([128, 700, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 700, 3]), initial position=torch.Size([128, 1, 4])
gt batch [41] : batch=torch.Size([128, 700, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 701, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [42] : batch=torch.Size([128, 728, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 728, 3]), initial position=torch.Size([128, 1, 4])
gt batch [42] : batch=torch.Size([128, 728, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 729, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [43] : batch=torch.Size([128, 671, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 671, 3]), initial position=torch.Size([128, 1, 4])
gt batch [43] : batch=torch.Size([128, 671, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 672, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [44] : batch=torch.Size([128, 679, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 679, 3]), initial position=torch.Size([128, 1, 4])
gt batch [44] : batch=torch.Size([128, 679, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 680, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [45] : batch=torch.Size([128, 689, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 689, 3]), initial position=torch.Size([128, 1, 4])
gt batch [45] : batch=torch.Size([128, 689, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 690, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [46] : batch=torch.Size([128, 715, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 715, 3]), initial position=torch.Size([128, 1, 4])
gt batch [46] : batch=torch.Size([128, 715, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 716, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [47] : batch=torch.Size([128, 718, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 718, 3]), initial position=torch.Size([128, 1, 4])
gt batch [47] : batch=torch.Size([128, 718, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 719, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [48] : batch=torch.Size([128, 645, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 645, 3]), initial position=torch.Size([128, 1, 4])
gt batch [48] : batch=torch.Size([128, 645, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 646, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [49] : batch=torch.Size([128, 711, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 711, 3]), initial position=torch.Size([128, 1, 4])
gt batch [49] : batch=torch.Size([128, 711, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 712, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
{'model_flag': BiLSTMResidualTrainableInit(
  (recurrent_blocks): ModuleList(
    (0): LSTM(2, 32, batch_first=True, bidirectional=True)
    (1): LSTM(64, 32, batch_first=True, bidirectional=True)
    (2): LSTM(64, 32, batch_first=True, bidirectional=True)
    (3): LSTM(64, 32, batch_first=True, bidirectional=True)
  )
  (fc_blocks): Sequential(
    (0): Sequential(
      (0): Linear(in_features=64, out_features=32, bias=True)
      (1): LeakyReLU(negative_slope=0.01)
    )
    (1): Sequential(
      (0): Linear(in_features=32, out_features=16, bias=True)
      (1): LeakyReLU(negative_slope=0.01)
    )
    (2): Sequential(
      (0): Linear(in_features=16, out_features=8, bias=True)
      (1): LeakyReLU(negative_slope=0.01)
    )
    (3): Sequential(
      (0): Linear(in_features=8, out_features=4, bias=True)
      (1): LeakyReLU(negative_slope=0.01)
    )
    (4): Sequential(
      (0): Linear(in_features=4, out_features=1, bias=True)
      (1): Sigmoid()
    )
  )
), 'model_depth': BiLSTMResidualTrainableInit(
  (recurrent_blocks): ModuleList(
    (0): LSTM(3, 32, batch_first=True, bidirectional=True)
    (1): LSTM(64, 32, batch_first=True, bidirectional=True)
    (2): LSTM(64, 32, batch_first=True, bidirectional=True)
    (3): LSTM(64, 32, batch_first=True, bidirectional=True)
  )
  (fc_blocks): Sequential(
    (0): Sequential(
      (0): Linear(in_features=64, out_features=32, bias=True)
      (1): LeakyReLU(negative_slope=0.01)
    )
    (1): Sequential(
      (0): Linear(in_features=32, out_features=16, bias=True)
      (1): LeakyReLU(negative_slope=0.01)
    )
    (2): Sequential(
      (0): Linear(in_features=16, out_features=8, bias=True)
      (1): LeakyReLU(negative_slope=0.01)
    )
    (3): Sequential(
      (0): Linear(in_features=8, out_features=4, bias=True)
      (1): LeakyReLU(negative_slope=0.01)
    )
    (4): Sequential(
      (0): Linear(in_features=4, out_features=2, bias=True)
    )
  )
)}
{'model_flag': {'input_size': 2, 'output_size': 1, 'hidden_dim': 32, 'n_layers': 1, 'n_stack': 4, 'recurrent_stacked': [2, 32, 32, 32, 32], 'fc_size': [64, 32, 16, 8, 4, 1]}, 'model_depth': {'input_size': 3, 'output_size': 2, 'hidden_dim': 32, 'n_layers': 1, 'n_stack': 4, 'recurrent_stacked': [3, 32, 32, 32, 32], 'fc_size': [64, 32, 16, 8, 4, 2]}}
===>No model checkpoint
[#] Define the Learning rate, Optimizer, Decay rate and Scheduler...
[#]Model Architecture
####### Model - model_flag #######
BiLSTMResidualTrainableInit(
  (recurrent_blocks): ModuleList(
    (0): LSTM(2, 32, batch_first=True, bidirectional=True)
    (1): LSTM(64, 32, batch_first=True, bidirectional=True)
    (2): LSTM(64, 32, batch_first=True, bidirectional=True)
    (3): LSTM(64, 32, batch_first=True, bidirectional=True)
  )
  (fc_blocks): Sequential(
    (0): Sequential(
      (0): Linear(in_features=64, out_features=32, bias=True)
      (1): LeakyReLU(negative_slope=0.01)
    )
    (1): Sequential(
      (0): Linear(in_features=32, out_features=16, bias=True)
      (1): LeakyReLU(negative_slope=0.01)
    )
    (2): Sequential(
      (0): Linear(in_features=16, out_features=8, bias=True)
      (1): LeakyReLU(negative_slope=0.01)
    )
    (3): Sequential(
      (0): Linear(in_features=8, out_features=4, bias=True)
      (1): LeakyReLU(negative_slope=0.01)
    )
    (4): Sequential(
      (0): Linear(in_features=4, out_features=1, bias=True)
      (1): Sigmoid()
    )
  )
)
####### Model - model_depth #######
BiLSTMResidualTrainableInit(
  (recurrent_blocks): ModuleList(
    (0): LSTM(3, 32, batch_first=True, bidirectional=True)
    (1): LSTM(64, 32, batch_first=True, bidirectional=True)
    (2): LSTM(64, 32, batch_first=True, bidirectional=True)
    (3): LSTM(64, 32, batch_first=True, bidirectional=True)
  )
  (fc_blocks): Sequential(
    (0): Sequential(
      (0): Linear(in_features=64, out_features=32, bias=True)
      (1): LeakyReLU(negative_slope=0.01)
    )
    (1): Sequential(
      (0): Linear(in_features=32, out_features=16, bias=True)
      (1): LeakyReLU(negative_slope=0.01)
    )
    (2): Sequential(
      (0): Linear(in_features=16, out_features=8, bias=True)
      (1): LeakyReLU(negative_slope=0.01)
    )
    (3): Sequential(
      (0): Linear(in_features=8, out_features=4, bias=True)
      (1): LeakyReLU(negative_slope=0.01)
    )
    (4): Sequential(
      (0): Linear(in_features=4, out_features=2, bias=True)
    )
  )
)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[Epoch : 1/100000]<<<<<<<<<<<<<<<<<<<<<<<<<<<<
[#]Learning rate (Depth & EOT) :  0.01
===> [Minibatch 1/50].........
   [##] Training... Train Loss : 1982.568
   ======> Trajectory Loss : 1507.596, EndOfTrajectory Loss : 137.752, Gravity Loss : 0.002, BelowGroundPenalize Loss : 337.218, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 9003.781
   ======> Trajectory Loss : 7712.282, EndOfTrajectory Loss : 137.407, Gravity Loss : 0.011, BelowGroundPenalize Loss : 1154.081, MultiviewReprojection Loss : 0.000
Opening in existing browser session.
[1110/192408.446042:ERROR:nacl_helper_linux.cc(308)] NaCl helper process running without a sandbox!
Most likely you need to configure your SUID sandbox correctly
Opening in existing browser session.
[1110/192408.780081:ERROR:nacl_helper_linux.cc(308)] NaCl helper process running without a sandbox!
Most likely you need to configure your SUID sandbox correctly
Opening in existing browser session.
[1110/192409.062683:ERROR:nacl_helper_linux.cc(308)] NaCl helper process running without a sandbox!
Most likely you need to configure your SUID sandbox correctly
===> [Minibatch 2/50].........
   [##] Training... Train Loss : 1712.938
   ======> Trajectory Loss : 1292.356, EndOfTrajectory Loss : 137.179, Gravity Loss : 0.002, BelowGroundPenalize Loss : 283.401, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 7570.702
   ======> Trajectory Loss : 6466.130, EndOfTrajectory Loss : 135.572, Gravity Loss : 0.009, BelowGroundPenalize Loss : 968.991, MultiviewReprojection Loss : 0.000
===> [Minibatch 3/50].........
   [##] Training... Train Loss : 1522.117
   ======> Trajectory Loss : 1162.371, EndOfTrajectory Loss : 135.466, Gravity Loss : 0.002, BelowGroundPenalize Loss : 224.277, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 6202.968
   ======> Trajectory Loss : 5274.573, EndOfTrajectory Loss : 133.385, Gravity Loss : 0.008, BelowGroundPenalize Loss : 795.002, MultiviewReprojection Loss : 0.000
===> [Minibatch 4/50].........
   [##] Training... Train Loss : 1185.666
   ======> Trajectory Loss : 868.240, EndOfTrajectory Loss : 133.208, Gravity Loss : 0.001, BelowGroundPenalize Loss : 184.217, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 4849.352
   ======> Trajectory Loss : 4099.425, EndOfTrajectory Loss : 127.824, Gravity Loss : 0.006, BelowGroundPenalize Loss : 622.097, MultiviewReprojection Loss : 0.000
===> [Minibatch 5/50].........
   [##] Training... Train Loss : 838.830
   ======> Trajectory Loss : 582.943, EndOfTrajectory Loss : 126.175, Gravity Loss : 0.001, BelowGroundPenalize Loss : 129.711, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 3530.648
   ======> Trajectory Loss : 2957.532, EndOfTrajectory Loss : 120.760, Gravity Loss : 0.005, BelowGroundPenalize Loss : 452.351, MultiviewReprojection Loss : 0.000
===> [Minibatch 6/50].........
   [##] Training... Train Loss : 561.746
   ======> Trajectory Loss : 364.330, EndOfTrajectory Loss : 117.230, Gravity Loss : 0.001, BelowGroundPenalize Loss : 80.186, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 2116.486
   ======> Trajectory Loss : 1734.283, EndOfTrajectory Loss : 113.851, Gravity Loss : 0.004, BelowGroundPenalize Loss : 268.347, MultiviewReprojection Loss : 0.000
===> [Minibatch 7/50].........
   [##] Training... Train Loss : 356.923
   ======> Trajectory Loss : 209.973, EndOfTrajectory Loss : 107.602, Gravity Loss : 0.001, BelowGroundPenalize Loss : 39.347, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 1219.373
   ======> Trajectory Loss : 972.238, EndOfTrajectory Loss : 110.675, Gravity Loss : 0.004, BelowGroundPenalize Loss : 136.455, MultiviewReprojection Loss : 0.000
===> [Minibatch 8/50].........
   [##] Training... Train Loss : 327.676
   ======> Trajectory Loss : 211.025, EndOfTrajectory Loss : 103.915, Gravity Loss : 0.002, BelowGroundPenalize Loss : 12.734, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 855.366
   ======> Trajectory Loss : 662.671, EndOfTrajectory Loss : 96.315, Gravity Loss : 0.003, BelowGroundPenalize Loss : 96.377, MultiviewReprojection Loss : 0.000
===> [Minibatch 9/50].........
   [##] Training... Train Loss : 246.811
   ======> Trajectory Loss : 145.212, EndOfTrajectory Loss : 87.381, Gravity Loss : 0.002, BelowGroundPenalize Loss : 14.217, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 770.836
   ======> Trajectory Loss : 592.622, EndOfTrajectory Loss : 87.000, Gravity Loss : 0.002, BelowGroundPenalize Loss : 91.213, MultiviewReprojection Loss : 0.000
===> [Minibatch 10/50].........
   [##] Training... Train Loss : 185.825
   ======> Trajectory Loss : 88.995, EndOfTrajectory Loss : 83.127, Gravity Loss : 0.001, BelowGroundPenalize Loss : 13.703, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 621.341
   ======> Trajectory Loss : 476.321, EndOfTrajectory Loss : 70.825, Gravity Loss : 0.001, BelowGroundPenalize Loss : 74.193, MultiviewReprojection Loss : 0.000
===> [Minibatch 11/50].........
   [##] Training... Train Loss : 132.213
   ======> Trajectory Loss : 62.366, EndOfTrajectory Loss : 58.868, Gravity Loss : 0.001, BelowGroundPenalize Loss : 10.978, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 614.137
   ======> Trajectory Loss : 291.441, EndOfTrajectory Loss : 277.154, Gravity Loss : 0.001, BelowGroundPenalize Loss : 45.542, MultiviewReprojection Loss : 0.000
===> [Minibatch 12/50].........
   [##] Training... Train Loss : 273.822
   ======> Trajectory Loss : 32.505, EndOfTrajectory Loss : 234.121, Gravity Loss : 0.000, BelowGroundPenalize Loss : 7.197, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 482.431
   ======> Trajectory Loss : 125.926, EndOfTrajectory Loss : 336.957, Gravity Loss : 0.000, BelowGroundPenalize Loss : 19.548, MultiviewReprojection Loss : 0.000
===> [Minibatch 13/50].........
   [##] Training... Train Loss : 333.176
   ======> Trajectory Loss : 16.415, EndOfTrajectory Loss : 313.233, Gravity Loss : 0.000, BelowGroundPenalize Loss : 3.528, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 363.467
   ======> Trajectory Loss : 21.581, EndOfTrajectory Loss : 338.543, Gravity Loss : 0.000, BelowGroundPenalize Loss : 3.342, MultiviewReprojection Loss : 0.000
===> [Minibatch 14/50].........
   [##] Training... Train Loss : 317.158
   ======> Trajectory Loss : 2.985, EndOfTrajectory Loss : 313.640, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.532, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 303.761
   ======> Trajectory Loss : 11.697, EndOfTrajectory Loss : 292.064, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.000, MultiviewReprojection Loss : 0.000
===> [Minibatch 15/50].........
   [##] Training... Train Loss : 259.487
   ======> Trajectory Loss : 2.472, EndOfTrajectory Loss : 257.015, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.000, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 286.590
   ======> Trajectory Loss : 60.109, EndOfTrajectory Loss : 226.480, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.000, MultiviewReprojection Loss : 0.000
===> [Minibatch 16/50].........
   [##] Training... Train Loss : 213.328
   ======> Trajectory Loss : 11.489, EndOfTrajectory Loss : 201.838, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.000, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 262.212
   ======> Trajectory Loss : 94.406, EndOfTrajectory Loss : 167.806, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.000, MultiviewReprojection Loss : 0.000
===> [Minibatch 17/50].........
   [##] Training... Train Loss : 171.525
   ======> Trajectory Loss : 17.753, EndOfTrajectory Loss : 153.772, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.000, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 218.539
   ======> Trajectory Loss : 95.727, EndOfTrajectory Loss : 122.812, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.000, MultiviewReprojection Loss : 0.000
===> [Minibatch 18/50].........
   [##] Training... Train Loss : 133.906
   ======> Trajectory Loss : 17.502, EndOfTrajectory Loss : 116.405, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.000, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 183.367
   ======> Trajectory Loss : 69.939, EndOfTrajectory Loss : 113.428, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.000, MultiviewReprojection Loss : 0.000
===> [Minibatch 19/50].........
   [##] Training... Train Loss : 122.871
   ======> Trajectory Loss : 12.167, EndOfTrajectory Loss : 110.704, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.000, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 138.408
   ======> Trajectory Loss : 35.168, EndOfTrajectory Loss : 103.240, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.000, MultiviewReprojection Loss : 0.000
===> [Minibatch 20/50].........
   [##] Training... Train Loss : 107.569
   ======> Trajectory Loss : 6.395, EndOfTrajectory Loss : 101.174, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.000, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 107.234
   ======> Trajectory Loss : 7.734, EndOfTrajectory Loss : 99.499, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.000, MultiviewReprojection Loss : 0.000
===> [Minibatch 21/50].........
   [##] Training... Train Loss : 93.634
   ======> Trajectory Loss : 1.230, EndOfTrajectory Loss : 92.404, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.000, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 110.417
   ======> Trajectory Loss : 1.691, EndOfTrajectory Loss : 108.464, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.262, MultiviewReprojection Loss : 0.000
===> [Minibatch 22/50].........
   [##] Training... Train Loss : 96.984
   ======> Trajectory Loss : 0.512, EndOfTrajectory Loss : 96.399, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.073, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 114.486
   ======> Trajectory Loss : 7.956, EndOfTrajectory Loss : 105.250, Gravity Loss : 0.000, BelowGroundPenalize Loss : 1.280, MultiviewReprojection Loss : 0.000
===> [Minibatch 23/50].........
   [##] Training... Train Loss : 100.209
   ======> Trajectory Loss : 1.477, EndOfTrajectory Loss : 98.462, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.271, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 109.203
   ======> Trajectory Loss : 9.622, EndOfTrajectory Loss : 98.034, Gravity Loss : 0.000, BelowGroundPenalize Loss : 1.547, MultiviewReprojection Loss : 0.000
===> [Minibatch 24/50].........
   [##] Training... Train Loss : 94.278
   ======> Trajectory Loss : 2.013, EndOfTrajectory Loss : 91.874, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.392, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 99.389
   ======> Trajectory Loss : 5.403, EndOfTrajectory Loss : 93.106, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.881, MultiviewReprojection Loss : 0.000
===> [Minibatch 25/50].........
   [##] Training... Train Loss : 88.801
   ======> Trajectory Loss : 1.199, EndOfTrajectory Loss : 87.373, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.228, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 89.762
   ======> Trajectory Loss : 1.054, EndOfTrajectory Loss : 88.593, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.115, MultiviewReprojection Loss : 0.000
===> [Minibatch 26/50].........
   [##] Training... Train Loss : 85.769
   ======> Trajectory Loss : 0.472, EndOfTrajectory Loss : 85.251, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.047, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 90.401
   ======> Trajectory Loss : 7.106, EndOfTrajectory Loss : 83.295, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.000, MultiviewReprojection Loss : 0.000
===> [Minibatch 27/50].........
   [##] Training... Train Loss : 79.397
   ======> Trajectory Loss : 1.256, EndOfTrajectory Loss : 78.141, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.000, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 91.123
   ======> Trajectory Loss : 13.503, EndOfTrajectory Loss : 77.619, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.000, MultiviewReprojection Loss : 0.000
===> [Minibatch 28/50].........
   [##] Training... Train Loss : 78.280
   ======> Trajectory Loss : 2.223, EndOfTrajectory Loss : 76.057, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.001, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 85.048
   ======> Trajectory Loss : 11.257, EndOfTrajectory Loss : 73.792, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.000, MultiviewReprojection Loss : 0.000
===> [Minibatch 29/50].........
   [##] Training... Train Loss : 67.664
   ======> Trajectory Loss : 2.435, EndOfTrajectory Loss : 65.229, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.000, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 72.708
   ======> Trajectory Loss : 3.768, EndOfTrajectory Loss : 68.939, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.001, MultiviewReprojection Loss : 0.000
===> [Minibatch 30/50].........
   [##] Training... Train Loss : 62.868
   ======> Trajectory Loss : 0.936, EndOfTrajectory Loss : 61.932, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.000, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 63.526
   ======> Trajectory Loss : 1.321, EndOfTrajectory Loss : 62.019, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.187, MultiviewReprojection Loss : 0.000
===> [Minibatch 31/50].........
   [##] Training... Train Loss : 61.088
   ======> Trajectory Loss : 0.521, EndOfTrajectory Loss : 60.497, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.070, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 58.505
   ======> Trajectory Loss : 3.408, EndOfTrajectory Loss : 54.562, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.535, MultiviewReprojection Loss : 0.000
===> [Minibatch 32/50].........
   [##] Training... Train Loss : 53.025
   ======> Trajectory Loss : 0.823, EndOfTrajectory Loss : 52.081, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.121, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 52.955
   ======> Trajectory Loss : 2.200, EndOfTrajectory Loss : 50.414, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.341, MultiviewReprojection Loss : 0.000
===> [Minibatch 33/50].........
   [##] Training... Train Loss : 49.134
   ======> Trajectory Loss : 0.753, EndOfTrajectory Loss : 48.258, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.123, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 42.192
   ======> Trajectory Loss : 0.771, EndOfTrajectory Loss : 41.388, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.032, MultiviewReprojection Loss : 0.000
===> [Minibatch 34/50].........
   [##] Training... Train Loss : 39.651
   ======> Trajectory Loss : 0.244, EndOfTrajectory Loss : 39.389, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.018, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 43.789
   ======> Trajectory Loss : 7.758, EndOfTrajectory Loss : 36.031, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.000, MultiviewReprojection Loss : 0.000
===> [Minibatch 35/50].........
   [##] Training... Train Loss : 33.076
   ======> Trajectory Loss : 1.212, EndOfTrajectory Loss : 31.864, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.000, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 47.305
   ======> Trajectory Loss : 14.183, EndOfTrajectory Loss : 33.122, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.000, MultiviewReprojection Loss : 0.000
===> [Minibatch 36/50].........
   [##] Training... Train Loss : 31.131
   ======> Trajectory Loss : 2.616, EndOfTrajectory Loss : 28.515, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.000, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 45.591
   ======> Trajectory Loss : 12.836, EndOfTrajectory Loss : 32.755, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.000, MultiviewReprojection Loss : 0.000
===> [Minibatch 37/50].........
   [##] Training... Train Loss : 21.250
   ======> Trajectory Loss : 1.937, EndOfTrajectory Loss : 19.313, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.000, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 29.521
   ======> Trajectory Loss : 5.612, EndOfTrajectory Loss : 23.909, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.000, MultiviewReprojection Loss : 0.000
===> [Minibatch 38/50].........
   [##] Training... Train Loss : 18.416
   ======> Trajectory Loss : 0.955, EndOfTrajectory Loss : 17.460, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.000, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 23.422
   ======> Trajectory Loss : 0.621, EndOfTrajectory Loss : 22.774, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.028, MultiviewReprojection Loss : 0.000
===> [Minibatch 39/50].........
   [##] Training... Train Loss : 17.562
   ======> Trajectory Loss : 0.323, EndOfTrajectory Loss : 17.201, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.038, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 22.937
   ======> Trajectory Loss : 1.006, EndOfTrajectory Loss : 21.794, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.137, MultiviewReprojection Loss : 0.000
===> [Minibatch 40/50].........
   [##] Training... Train Loss : 15.636
   ======> Trajectory Loss : 0.573, EndOfTrajectory Loss : 14.981, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.083, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 19.023
   ======> Trajectory Loss : 0.709, EndOfTrajectory Loss : 18.232, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.082, MultiviewReprojection Loss : 0.000
===> [Minibatch 41/50].........
   [##] Training... Train Loss : 15.590
   ======> Trajectory Loss : 0.342, EndOfTrajectory Loss : 15.213, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.035, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 23.381
   ======> Trajectory Loss : 1.157, EndOfTrajectory Loss : 22.221, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.003, MultiviewReprojection Loss : 0.000
===> [Minibatch 42/50].........
   [##] Training... Train Loss : 19.534
   ======> Trajectory Loss : 0.296, EndOfTrajectory Loss : 19.232, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.006, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 14.696
   ======> Trajectory Loss : 1.155, EndOfTrajectory Loss : 13.539, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.001, MultiviewReprojection Loss : 0.000
===> [Minibatch 43/50].........
   [##] Training... Train Loss : 10.577
   ======> Trajectory Loss : 0.262, EndOfTrajectory Loss : 10.313, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.002, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 13.931
   ======> Trajectory Loss : 0.348, EndOfTrajectory Loss : 13.562, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.020, MultiviewReprojection Loss : 0.000
===> [Minibatch 44/50].........
   [##] Training... Train Loss : 9.754
   ======> Trajectory Loss : 0.250, EndOfTrajectory Loss : 9.483, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.020, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 13.307
   ======> Trajectory Loss : 0.311, EndOfTrajectory Loss : 12.984, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.013, MultiviewReprojection Loss : 0.000
===> [Minibatch 45/50].........
   [##] Training... Train Loss : 10.610
   ======> Trajectory Loss : 0.289, EndOfTrajectory Loss : 10.301, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.020, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 17.511
   ======> Trajectory Loss : 1.888, EndOfTrajectory Loss : 15.623, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.000, MultiviewReprojection Loss : 0.000
===> [Minibatch 46/50].........
   [##] Training... Train Loss : 7.007
   ======> Trajectory Loss : 0.367, EndOfTrajectory Loss : 6.638, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.002, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 12.010
   ======> Trajectory Loss : 1.946, EndOfTrajectory Loss : 10.064, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.001, MultiviewReprojection Loss : 0.000
===> [Minibatch 47/50].........
   [##] Training... Train Loss : 19.900
   ======> Trajectory Loss : 0.364, EndOfTrajectory Loss : 19.535, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.001, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 9.894
   ======> Trajectory Loss : 0.380, EndOfTrajectory Loss : 9.506, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.008, MultiviewReprojection Loss : 0.000
===> [Minibatch 48/50].........
   [##] Training... Train Loss : 8.687
   ======> Trajectory Loss : 0.184, EndOfTrajectory Loss : 8.495, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.007, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 10.989
   ======> Trajectory Loss : 1.645, EndOfTrajectory Loss : 9.136, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.208, MultiviewReprojection Loss : 0.000
===> [Minibatch 49/50].........
   [##] Training... Train Loss : 9.889
   ======> Trajectory Loss : 0.540, EndOfTrajectory Loss : 9.281, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.069, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 16.090
   ======> Trajectory Loss : 2.608, EndOfTrajectory Loss : 13.117, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.365, MultiviewReprojection Loss : 0.000
===> [Minibatch 50/50].........
   [##] Training... Train Loss : 11.081
   ======> Trajectory Loss : 0.665, EndOfTrajectory Loss : 10.322, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.094, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 10.954
   ======> Trajectory Loss : 1.231, EndOfTrajectory Loss : 9.562, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.161, MultiviewReprojection Loss : 0.000
[#]Finish Epoch : 1/100000.........Train loss : 245.933, Val loss : 823.101
[+++]Saving the best model checkpoint : Prev loss 20000000000.000 > Curr loss 823.101
[+++]Saving the best model checkpoint to :  ../../model_checkpoints/test_newscripttest_trainable/Test_newscript//Test_newscript_best.pth
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[Epoch : 2/100000]<<<<<<<<<<<<<<<<<<<<<<<<<<<<
[#]Learning rate (Depth & EOT) :  0.01
===> [Minibatch 1/50].........
   [##] Training... Train Loss : 8.664
   ======> Trajectory Loss : 0.511, EndOfTrajectory Loss : 8.094, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.059, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 13.301
   ======> Trajectory Loss : 0.614, EndOfTrajectory Loss : 12.674, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.012, MultiviewReprojection Loss : 0.000
Opening in existing browser session.
[1110/192540.206061:ERROR:nacl_helper_linux.cc(308)] NaCl helper process running without a sandbox!
Most likely you need to configure your SUID sandbox correctly
Opening in existing browser session.
[1110/192540.423600:ERROR:nacl_helper_linux.cc(308)] NaCl helper process running without a sandbox!
Most likely you need to configure your SUID sandbox correctly
Opening in existing browser session.
[1110/192540.714881:ERROR:nacl_helper_linux.cc(308)] NaCl helper process running without a sandbox!
Most likely you need to configure your SUID sandbox correctly
===> [Minibatch 2/50].........
   [##] Training... Train Loss : 6.115
   ======> Trajectory Loss : 0.206, EndOfTrajectory Loss : 5.895, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.014, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 20.965
   ======> Trajectory Loss : 7.899, EndOfTrajectory Loss : 13.066, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.000, MultiviewReprojection Loss : 0.000
===> [Minibatch 3/50].........
   [##] Training... Train Loss : 6.381
   ======> Trajectory Loss : 1.145, EndOfTrajectory Loss : 5.236, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.000, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 28.045
   ======> Trajectory Loss : 14.848, EndOfTrajectory Loss : 13.197, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.000, MultiviewReprojection Loss : 0.000
===> [Minibatch 4/50].........
   [##] Training... Train Loss : 8.767
   ======> Trajectory Loss : 2.297, EndOfTrajectory Loss : 6.470, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.000, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 38.882
   ======> Trajectory Loss : 14.575, EndOfTrajectory Loss : 24.307, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.000, MultiviewReprojection Loss : 0.000
===> [Minibatch 5/50].........
   [##] Training... Train Loss : 30.993
   ======> Trajectory Loss : 1.954, EndOfTrajectory Loss : 29.039, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.000, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 19.100
   ======> Trajectory Loss : 8.000, EndOfTrajectory Loss : 11.100, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.000, MultiviewReprojection Loss : 0.000
===> [Minibatch 6/50].........
   [##] Training... Train Loss : 7.999
   ======> Trajectory Loss : 1.029, EndOfTrajectory Loss : 6.969, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.001, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 12.394
   ======> Trajectory Loss : 1.249, EndOfTrajectory Loss : 11.139, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.005, MultiviewReprojection Loss : 0.000
===> [Minibatch 7/50].........
   [##] Training... Train Loss : 6.318
   ======> Trajectory Loss : 0.241, EndOfTrajectory Loss : 6.071, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.007, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 21.076
   ======> Trajectory Loss : 3.952, EndOfTrajectory Loss : 16.507, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.617, MultiviewReprojection Loss : 0.000
===> [Minibatch 8/50].........
   [##] Training... Train Loss : 11.882
   ======> Trajectory Loss : 1.319, EndOfTrajectory Loss : 10.343, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.221, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 31.489
   ======> Trajectory Loss : 11.037, EndOfTrajectory Loss : 18.685, Gravity Loss : 0.000, BelowGroundPenalize Loss : 1.767, MultiviewReprojection Loss : 0.000
===> [Minibatch 9/50].........
   [##] Training... Train Loss : 11.195
   ======> Trajectory Loss : 3.289, EndOfTrajectory Loss : 7.300, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.606, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 26.192
   ======> Trajectory Loss : 12.984, EndOfTrajectory Loss : 11.137, Gravity Loss : 0.000, BelowGroundPenalize Loss : 2.071, MultiviewReprojection Loss : 0.000
===> [Minibatch 10/50].........
   [##] Training... Train Loss : 9.807
   ======> Trajectory Loss : 3.101, EndOfTrajectory Loss : 6.113, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.593, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 24.423
   ======> Trajectory Loss : 8.356, EndOfTrajectory Loss : 14.758, Gravity Loss : 0.000, BelowGroundPenalize Loss : 1.309, MultiviewReprojection Loss : 0.000
===> [Minibatch 11/50].........
   [##] Training... Train Loss : 14.204
   ======> Trajectory Loss : 2.100, EndOfTrajectory Loss : 11.663, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.440, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 22.395
   ======> Trajectory Loss : 1.893, EndOfTrajectory Loss : 20.239, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.262, MultiviewReprojection Loss : 0.000
===> [Minibatch 12/50].........
   [##] Training... Train Loss : 15.265
   ======> Trajectory Loss : 0.687, EndOfTrajectory Loss : 14.459, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.119, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 19.602
   ======> Trajectory Loss : 2.802, EndOfTrajectory Loss : 16.799, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.001, MultiviewReprojection Loss : 0.000
===> [Minibatch 13/50].........
   [##] Training... Train Loss : 8.141
   ======> Trajectory Loss : 0.324, EndOfTrajectory Loss : 7.817, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.001, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 30.070
   ======> Trajectory Loss : 7.978, EndOfTrajectory Loss : 22.092, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.000, MultiviewReprojection Loss : 0.000
===> [Minibatch 14/50].........
   [##] Training... Train Loss : 18.006
   ======> Trajectory Loss : 0.968, EndOfTrajectory Loss : 17.037, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.001, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 33.884
   ======> Trajectory Loss : 7.447, EndOfTrajectory Loss : 26.437, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.000, MultiviewReprojection Loss : 0.000
===> [Minibatch 15/50].........
   [##] Training... Train Loss : 6.805
   ======> Trajectory Loss : 0.960, EndOfTrajectory Loss : 5.844, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.000, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 25.565
   ======> Trajectory Loss : 2.518, EndOfTrajectory Loss : 23.046, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.002, MultiviewReprojection Loss : 0.000
