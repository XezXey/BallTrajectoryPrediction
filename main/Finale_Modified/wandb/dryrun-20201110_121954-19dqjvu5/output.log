==============================================Features==============================================
Prediction = depth, Environment = unity
Available features :  ['x-0', 'y-1', 'z-2', 'u-3', 'v-4', 'd-5', 'eot-6', 'og-7', 'rad-8', 'f_sin-9', 'f_cos-10', 'g-11']
Selected features :  [6]
1. input_col =  [3, 4, 6]
2. input_startpos_col =  [3, 4, 5, 6]
3. gt_col =  [5, 6]
4. gt_startpos_col =  [0, 1, 2, 6]
5. gt_xyz_col =  [0, 1, 2, 6]
====================================================================================================
[#]Training : Trajectory Estimation
Mixed:   0%|                                                                                                          | 0/3 [00:00<?, ?it/s]Mixed: 100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 3/3 [00:00<00:00, 29.28it/s]Mixed: 100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 3/3 [00:00<00:00, 29.20it/s]
===============================Dataset shape===============================
Mixed : (6426,)
===========================================================================
Mixed:   0%|                                                                                                          | 0/2 [00:00<?, ?it/s]Mixed: 100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 2/2 [00:00<00:00, 75.59it/s]
===============================Dataset shape===============================
Mixed : (1029,)
===========================================================================
======================================================Summary Batch (batch_size = 128)=========================================================================
Input batch [0] : batch=torch.Size([128, 672, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 672, 3]), initial position=torch.Size([128, 1, 4])
gt batch [0] : batch=torch.Size([128, 672, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 673, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [1] : batch=torch.Size([128, 668, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 668, 3]), initial position=torch.Size([128, 1, 4])
gt batch [1] : batch=torch.Size([128, 668, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 669, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [2] : batch=torch.Size([128, 742, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 742, 3]), initial position=torch.Size([128, 1, 4])
gt batch [2] : batch=torch.Size([128, 742, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 743, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [3] : batch=torch.Size([128, 711, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 711, 3]), initial position=torch.Size([128, 1, 4])
gt batch [3] : batch=torch.Size([128, 711, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 712, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [4] : batch=torch.Size([128, 643, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 643, 3]), initial position=torch.Size([128, 1, 4])
gt batch [4] : batch=torch.Size([128, 643, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 644, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [5] : batch=torch.Size([128, 696, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 696, 3]), initial position=torch.Size([128, 1, 4])
gt batch [5] : batch=torch.Size([128, 696, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 697, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [6] : batch=torch.Size([128, 638, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 638, 3]), initial position=torch.Size([128, 1, 4])
gt batch [6] : batch=torch.Size([128, 638, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 639, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [7] : batch=torch.Size([128, 678, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 678, 3]), initial position=torch.Size([128, 1, 4])
gt batch [7] : batch=torch.Size([128, 678, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 679, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [8] : batch=torch.Size([128, 668, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 668, 3]), initial position=torch.Size([128, 1, 4])
gt batch [8] : batch=torch.Size([128, 668, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 669, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [9] : batch=torch.Size([128, 677, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 677, 3]), initial position=torch.Size([128, 1, 4])
gt batch [9] : batch=torch.Size([128, 677, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 678, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [10] : batch=torch.Size([128, 638, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 638, 3]), initial position=torch.Size([128, 1, 4])
gt batch [10] : batch=torch.Size([128, 638, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 639, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [11] : batch=torch.Size([128, 697, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 697, 3]), initial position=torch.Size([128, 1, 4])
gt batch [11] : batch=torch.Size([128, 697, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 698, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [12] : batch=torch.Size([128, 689, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 689, 3]), initial position=torch.Size([128, 1, 4])
gt batch [12] : batch=torch.Size([128, 689, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 690, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [13] : batch=torch.Size([128, 715, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 715, 3]), initial position=torch.Size([128, 1, 4])
gt batch [13] : batch=torch.Size([128, 715, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 716, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [14] : batch=torch.Size([128, 688, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 688, 3]), initial position=torch.Size([128, 1, 4])
gt batch [14] : batch=torch.Size([128, 688, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 689, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [15] : batch=torch.Size([128, 708, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 708, 3]), initial position=torch.Size([128, 1, 4])
gt batch [15] : batch=torch.Size([128, 708, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 709, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [16] : batch=torch.Size([128, 698, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 698, 3]), initial position=torch.Size([128, 1, 4])
gt batch [16] : batch=torch.Size([128, 698, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 699, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [17] : batch=torch.Size([128, 718, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 718, 3]), initial position=torch.Size([128, 1, 4])
gt batch [17] : batch=torch.Size([128, 718, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 719, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [18] : batch=torch.Size([128, 630, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 630, 3]), initial position=torch.Size([128, 1, 4])
gt batch [18] : batch=torch.Size([128, 630, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 631, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [19] : batch=torch.Size([128, 788, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 788, 3]), initial position=torch.Size([128, 1, 4])
gt batch [19] : batch=torch.Size([128, 788, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 789, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [20] : batch=torch.Size([128, 633, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 633, 3]), initial position=torch.Size([128, 1, 4])
gt batch [20] : batch=torch.Size([128, 633, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 634, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [21] : batch=torch.Size([128, 652, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 652, 3]), initial position=torch.Size([128, 1, 4])
gt batch [21] : batch=torch.Size([128, 652, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 653, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [22] : batch=torch.Size([128, 723, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 723, 3]), initial position=torch.Size([128, 1, 4])
gt batch [22] : batch=torch.Size([128, 723, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 724, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [23] : batch=torch.Size([128, 700, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 700, 3]), initial position=torch.Size([128, 1, 4])
gt batch [23] : batch=torch.Size([128, 700, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 701, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [24] : batch=torch.Size([128, 691, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 691, 3]), initial position=torch.Size([128, 1, 4])
gt batch [24] : batch=torch.Size([128, 691, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 692, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [25] : batch=torch.Size([128, 772, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 772, 3]), initial position=torch.Size([128, 1, 4])
gt batch [25] : batch=torch.Size([128, 772, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 773, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [26] : batch=torch.Size([128, 715, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 715, 3]), initial position=torch.Size([128, 1, 4])
gt batch [26] : batch=torch.Size([128, 715, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 716, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [27] : batch=torch.Size([128, 669, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 669, 3]), initial position=torch.Size([128, 1, 4])
gt batch [27] : batch=torch.Size([128, 669, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 670, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [28] : batch=torch.Size([128, 734, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 734, 3]), initial position=torch.Size([128, 1, 4])
gt batch [28] : batch=torch.Size([128, 734, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 735, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [29] : batch=torch.Size([128, 704, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 704, 3]), initial position=torch.Size([128, 1, 4])
gt batch [29] : batch=torch.Size([128, 704, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 705, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [30] : batch=torch.Size([128, 634, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 634, 3]), initial position=torch.Size([128, 1, 4])
gt batch [30] : batch=torch.Size([128, 634, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 635, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [31] : batch=torch.Size([128, 640, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 640, 3]), initial position=torch.Size([128, 1, 4])
gt batch [31] : batch=torch.Size([128, 640, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 641, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [32] : batch=torch.Size([128, 707, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 707, 3]), initial position=torch.Size([128, 1, 4])
gt batch [32] : batch=torch.Size([128, 707, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 708, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [33] : batch=torch.Size([128, 752, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 752, 3]), initial position=torch.Size([128, 1, 4])
gt batch [33] : batch=torch.Size([128, 752, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 753, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [34] : batch=torch.Size([128, 802, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 802, 3]), initial position=torch.Size([128, 1, 4])
gt batch [34] : batch=torch.Size([128, 802, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 803, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [35] : batch=torch.Size([128, 721, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 721, 3]), initial position=torch.Size([128, 1, 4])
gt batch [35] : batch=torch.Size([128, 721, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 722, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [36] : batch=torch.Size([128, 687, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 687, 3]), initial position=torch.Size([128, 1, 4])
gt batch [36] : batch=torch.Size([128, 687, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 688, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [37] : batch=torch.Size([128, 652, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 652, 3]), initial position=torch.Size([128, 1, 4])
gt batch [37] : batch=torch.Size([128, 652, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 653, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [38] : batch=torch.Size([128, 657, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 657, 3]), initial position=torch.Size([128, 1, 4])
gt batch [38] : batch=torch.Size([128, 657, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 658, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [39] : batch=torch.Size([128, 669, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 669, 3]), initial position=torch.Size([128, 1, 4])
gt batch [39] : batch=torch.Size([128, 669, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 670, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [40] : batch=torch.Size([128, 627, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 627, 3]), initial position=torch.Size([128, 1, 4])
gt batch [40] : batch=torch.Size([128, 627, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 628, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [41] : batch=torch.Size([128, 668, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 668, 3]), initial position=torch.Size([128, 1, 4])
gt batch [41] : batch=torch.Size([128, 668, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 669, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [42] : batch=torch.Size([128, 688, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 688, 3]), initial position=torch.Size([128, 1, 4])
gt batch [42] : batch=torch.Size([128, 688, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 689, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [43] : batch=torch.Size([128, 703, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 703, 3]), initial position=torch.Size([128, 1, 4])
gt batch [43] : batch=torch.Size([128, 703, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 704, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [44] : batch=torch.Size([128, 758, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 758, 3]), initial position=torch.Size([128, 1, 4])
gt batch [44] : batch=torch.Size([128, 758, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 759, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [45] : batch=torch.Size([128, 742, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 742, 3]), initial position=torch.Size([128, 1, 4])
gt batch [45] : batch=torch.Size([128, 742, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 743, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [46] : batch=torch.Size([128, 718, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 718, 3]), initial position=torch.Size([128, 1, 4])
gt batch [46] : batch=torch.Size([128, 718, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 719, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [47] : batch=torch.Size([128, 732, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 732, 3]), initial position=torch.Size([128, 1, 4])
gt batch [47] : batch=torch.Size([128, 732, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 733, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [48] : batch=torch.Size([128, 704, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 704, 3]), initial position=torch.Size([128, 1, 4])
gt batch [48] : batch=torch.Size([128, 704, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 705, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [49] : batch=torch.Size([128, 630, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 630, 3]), initial position=torch.Size([128, 1, 4])
gt batch [49] : batch=torch.Size([128, 630, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 631, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
{'model_flag': BiLSTMResidualTrainableInit(
  (recurrent_blocks): ModuleList(
    (0): LSTM(2, 32, batch_first=True, bidirectional=True)
    (1): LSTM(64, 32, batch_first=True, bidirectional=True)
    (2): LSTM(64, 32, batch_first=True, bidirectional=True)
    (3): LSTM(64, 32, batch_first=True, bidirectional=True)
  )
  (fc_blocks): Sequential(
    (0): Sequential(
      (0): Linear(in_features=64, out_features=32, bias=True)
      (1): LeakyReLU(negative_slope=0.01)
    )
    (1): Sequential(
      (0): Linear(in_features=32, out_features=16, bias=True)
      (1): LeakyReLU(negative_slope=0.01)
    )
    (2): Sequential(
      (0): Linear(in_features=16, out_features=8, bias=True)
      (1): LeakyReLU(negative_slope=0.01)
    )
    (3): Sequential(
      (0): Linear(in_features=8, out_features=4, bias=True)
      (1): LeakyReLU(negative_slope=0.01)
    )
    (4): Sequential(
      (0): Linear(in_features=4, out_features=1, bias=True)
      (1): Sigmoid()
    )
  )
), 'model_depth': BiLSTMResidualTrainableInit(
  (recurrent_blocks): ModuleList(
    (0): LSTM(3, 32, batch_first=True, bidirectional=True)
    (1): LSTM(64, 32, batch_first=True, bidirectional=True)
    (2): LSTM(64, 32, batch_first=True, bidirectional=True)
    (3): LSTM(64, 32, batch_first=True, bidirectional=True)
  )
  (fc_blocks): Sequential(
    (0): Sequential(
      (0): Linear(in_features=64, out_features=32, bias=True)
      (1): LeakyReLU(negative_slope=0.01)
    )
    (1): Sequential(
      (0): Linear(in_features=32, out_features=16, bias=True)
      (1): LeakyReLU(negative_slope=0.01)
    )
    (2): Sequential(
      (0): Linear(in_features=16, out_features=8, bias=True)
      (1): LeakyReLU(negative_slope=0.01)
    )
    (3): Sequential(
      (0): Linear(in_features=8, out_features=4, bias=True)
      (1): LeakyReLU(negative_slope=0.01)
    )
    (4): Sequential(
      (0): Linear(in_features=4, out_features=2, bias=True)
    )
  )
)}
{'model_flag': {'input_size': 2, 'output_size': 1, 'hidden_dim': 32, 'n_layers': 1, 'n_stack': 4, 'recurrent_stacked': [2, 32, 32, 32, 32], 'fc_size': [64, 32, 16, 8, 4, 1]}, 'model_depth': {'input_size': 3, 'output_size': 2, 'hidden_dim': 32, 'n_layers': 1, 'n_stack': 4, 'recurrent_stacked': [3, 32, 32, 32, 32], 'fc_size': [64, 32, 16, 8, 4, 2]}}
===>No model checkpoint
[#] Define the Learning rate, Optimizer, Decay rate and Scheduler...
[#]Model Architecture
####### Model - model_flag #######
BiLSTMResidualTrainableInit(
  (recurrent_blocks): ModuleList(
    (0): LSTM(2, 32, batch_first=True, bidirectional=True)
    (1): LSTM(64, 32, batch_first=True, bidirectional=True)
    (2): LSTM(64, 32, batch_first=True, bidirectional=True)
    (3): LSTM(64, 32, batch_first=True, bidirectional=True)
  )
  (fc_blocks): Sequential(
    (0): Sequential(
      (0): Linear(in_features=64, out_features=32, bias=True)
      (1): LeakyReLU(negative_slope=0.01)
    )
    (1): Sequential(
      (0): Linear(in_features=32, out_features=16, bias=True)
      (1): LeakyReLU(negative_slope=0.01)
    )
    (2): Sequential(
      (0): Linear(in_features=16, out_features=8, bias=True)
      (1): LeakyReLU(negative_slope=0.01)
    )
    (3): Sequential(
      (0): Linear(in_features=8, out_features=4, bias=True)
      (1): LeakyReLU(negative_slope=0.01)
    )
    (4): Sequential(
      (0): Linear(in_features=4, out_features=1, bias=True)
      (1): Sigmoid()
    )
  )
)
####### Model - model_depth #######
BiLSTMResidualTrainableInit(
  (recurrent_blocks): ModuleList(
    (0): LSTM(3, 32, batch_first=True, bidirectional=True)
    (1): LSTM(64, 32, batch_first=True, bidirectional=True)
    (2): LSTM(64, 32, batch_first=True, bidirectional=True)
    (3): LSTM(64, 32, batch_first=True, bidirectional=True)
  )
  (fc_blocks): Sequential(
    (0): Sequential(
      (0): Linear(in_features=64, out_features=32, bias=True)
      (1): LeakyReLU(negative_slope=0.01)
    )
    (1): Sequential(
      (0): Linear(in_features=32, out_features=16, bias=True)
      (1): LeakyReLU(negative_slope=0.01)
    )
    (2): Sequential(
      (0): Linear(in_features=16, out_features=8, bias=True)
      (1): LeakyReLU(negative_slope=0.01)
    )
    (3): Sequential(
      (0): Linear(in_features=8, out_features=4, bias=True)
      (1): LeakyReLU(negative_slope=0.01)
    )
    (4): Sequential(
      (0): Linear(in_features=4, out_features=2, bias=True)
    )
  )
)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[Epoch : 1/100000]<<<<<<<<<<<<<<<<<<<<<<<<<<<<
[#]Learning rate (Depth & EOT) :  0.01
===> [Minibatch 1/50].........
   [##] Training... Train Loss : 170.576
   ======> Trajectory Loss : 32.570, EndOfTrajectory Loss : 138.006, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.000, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 146.991
   ======> Trajectory Loss : 9.751, EndOfTrajectory Loss : 137.236, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.004, MultiviewReprojection Loss : 0.000
Opening in existing browser session.
[1110/192001.072115:ERROR:nacl_helper_linux.cc(308)] NaCl helper process running without a sandbox!
Most likely you need to configure your SUID sandbox correctly
Opening in existing browser session.
[1110/192001.396335:ERROR:nacl_helper_linux.cc(308)] NaCl helper process running without a sandbox!
Most likely you need to configure your SUID sandbox correctly
Opening in existing browser session.
[1110/192001.673033:ERROR:nacl_helper_linux.cc(308)] NaCl helper process running without a sandbox!
Most likely you need to configure your SUID sandbox correctly
===> [Minibatch 2/50].........
   [##] Training... Train Loss : 138.820
   ======> Trajectory Loss : 1.799, EndOfTrajectory Loss : 137.000, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.020, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 448.112
   ======> Trajectory Loss : 270.928, EndOfTrajectory Loss : 135.104, Gravity Loss : 0.000, BelowGroundPenalize Loss : 42.080, MultiviewReprojection Loss : 0.000
===> [Minibatch 3/50].........
   [##] Training... Train Loss : 192.735
   ======> Trajectory Loss : 49.118, EndOfTrajectory Loss : 134.421, Gravity Loss : 0.000, BelowGroundPenalize Loss : 9.196, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 296.985
   ======> Trajectory Loss : 143.800, EndOfTrajectory Loss : 130.483, Gravity Loss : 0.000, BelowGroundPenalize Loss : 22.702, MultiviewReprojection Loss : 0.000
===> [Minibatch 4/50].........
   [##] Training... Train Loss : 161.893
   ======> Trajectory Loss : 27.400, EndOfTrajectory Loss : 128.790, Gravity Loss : 0.000, BelowGroundPenalize Loss : 5.703, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 209.407
   ======> Trajectory Loss : 74.238, EndOfTrajectory Loss : 123.270, Gravity Loss : 0.000, BelowGroundPenalize Loss : 11.899, MultiviewReprojection Loss : 0.000
===> [Minibatch 5/50].........
   [##] Training... Train Loss : 134.906
   ======> Trajectory Loss : 11.534, EndOfTrajectory Loss : 121.153, Gravity Loss : 0.000, BelowGroundPenalize Loss : 2.218, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 137.438
   ======> Trajectory Loss : 20.505, EndOfTrajectory Loss : 113.551, Gravity Loss : 0.000, BelowGroundPenalize Loss : 3.383, MultiviewReprojection Loss : 0.000
===> [Minibatch 6/50].........
   [##] Training... Train Loss : 113.413
   ======> Trajectory Loss : 3.550, EndOfTrajectory Loss : 109.145, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.718, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 105.384
   ======> Trajectory Loss : 1.336, EndOfTrajectory Loss : 103.987, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.062, MultiviewReprojection Loss : 0.000
===> [Minibatch 7/50].........
   [##] Training... Train Loss : 98.176
   ======> Trajectory Loss : 0.419, EndOfTrajectory Loss : 97.729, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.027, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 101.646
   ======> Trajectory Loss : 4.702, EndOfTrajectory Loss : 96.943, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.001, MultiviewReprojection Loss : 0.000
===> [Minibatch 8/50].........
   [##] Training... Train Loss : 84.934
   ======> Trajectory Loss : 0.879, EndOfTrajectory Loss : 84.044, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.011, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 88.305
   ======> Trajectory Loss : 3.831, EndOfTrajectory Loss : 84.471, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.002, MultiviewReprojection Loss : 0.000
===> [Minibatch 9/50].........
   [##] Training... Train Loss : 74.521
   ======> Trajectory Loss : 0.716, EndOfTrajectory Loss : 73.801, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.004, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 70.740
   ======> Trajectory Loss : 1.085, EndOfTrajectory Loss : 69.565, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.090, MultiviewReprojection Loss : 0.000
===> [Minibatch 10/50].........
   [##] Training... Train Loss : 61.513
   ======> Trajectory Loss : 0.432, EndOfTrajectory Loss : 61.039, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.041, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 61.220
   ======> Trajectory Loss : 1.088, EndOfTrajectory Loss : 60.040, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.092, MultiviewReprojection Loss : 0.000
===> [Minibatch 11/50].........
   [##] Training... Train Loss : 52.923
   ======> Trajectory Loss : 0.514, EndOfTrajectory Loss : 52.358, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.052, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 62.454
   ======> Trajectory Loss : 2.650, EndOfTrajectory Loss : 59.798, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.006, MultiviewReprojection Loss : 0.000
===> [Minibatch 12/50].........
   [##] Training... Train Loss : 42.204
   ======> Trajectory Loss : 0.680, EndOfTrajectory Loss : 41.520, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.004, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 50.772
   ======> Trajectory Loss : 2.322, EndOfTrajectory Loss : 48.442, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.009, MultiviewReprojection Loss : 0.000
===> [Minibatch 13/50].........
   [##] Training... Train Loss : 39.109
   ======> Trajectory Loss : 0.619, EndOfTrajectory Loss : 38.468, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.022, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 48.859
   ======> Trajectory Loss : 1.142, EndOfTrajectory Loss : 47.599, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.118, MultiviewReprojection Loss : 0.000
===> [Minibatch 14/50].........
   [##] Training... Train Loss : 41.154
   ======> Trajectory Loss : 0.439, EndOfTrajectory Loss : 40.677, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.038, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 29.006
   ======> Trajectory Loss : 1.124, EndOfTrajectory Loss : 27.769, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.112, MultiviewReprojection Loss : 0.000
===> [Minibatch 15/50].........
   [##] Training... Train Loss : 25.555
   ======> Trajectory Loss : 0.508, EndOfTrajectory Loss : 24.987, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.061, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 320.985
   ======> Trajectory Loss : 2.017, EndOfTrajectory Loss : 318.959, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.008, MultiviewReprojection Loss : 0.000
===> [Minibatch 16/50].........
   [##] Training... Train Loss : 272.426
   ======> Trajectory Loss : 0.443, EndOfTrajectory Loss : 271.980, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.003, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 152.673
   ======> Trajectory Loss : 1.813, EndOfTrajectory Loss : 150.850, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.010, MultiviewReprojection Loss : 0.000
===> [Minibatch 17/50].........
   [##] Training... Train Loss : 115.792
   ======> Trajectory Loss : 0.437, EndOfTrajectory Loss : 115.352, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.004, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 51.491
   ======> Trajectory Loss : 1.229, EndOfTrajectory Loss : 50.110, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.152, MultiviewReprojection Loss : 0.000
===> [Minibatch 18/50].........
   [##] Training... Train Loss : 32.227
   ======> Trajectory Loss : 0.391, EndOfTrajectory Loss : 31.808, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.028, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 22.422
   ======> Trajectory Loss : 1.117, EndOfTrajectory Loss : 21.181, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.124, MultiviewReprojection Loss : 0.000
===> [Minibatch 19/50].........
   [##] Training... Train Loss : 12.245
   ======> Trajectory Loss : 0.253, EndOfTrajectory Loss : 11.973, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.019, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 23.084
   ======> Trajectory Loss : 1.984, EndOfTrajectory Loss : 21.095, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.006, MultiviewReprojection Loss : 0.000
===> [Minibatch 20/50].........
   [##] Training... Train Loss : 19.142
   ======> Trajectory Loss : 0.448, EndOfTrajectory Loss : 18.695, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.000, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 21.204
   ======> Trajectory Loss : 1.338, EndOfTrajectory Loss : 19.861, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.005, MultiviewReprojection Loss : 0.000
===> [Minibatch 21/50].........
   [##] Training... Train Loss : 19.633
   ======> Trajectory Loss : 0.251, EndOfTrajectory Loss : 19.382, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.000, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 18.114
   ======> Trajectory Loss : 0.816, EndOfTrajectory Loss : 17.214, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.085, MultiviewReprojection Loss : 0.000
===> [Minibatch 22/50].........
   [##] Training... Train Loss : 9.481
   ======> Trajectory Loss : 0.302, EndOfTrajectory Loss : 9.167, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.012, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 21.112
   ======> Trajectory Loss : 0.728, EndOfTrajectory Loss : 20.312, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.072, MultiviewReprojection Loss : 0.000
===> [Minibatch 23/50].........
   [##] Training... Train Loss : 18.273
   ======> Trajectory Loss : 0.287, EndOfTrajectory Loss : 17.971, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.015, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 18.679
   ======> Trajectory Loss : 1.071, EndOfTrajectory Loss : 17.606, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.002, MultiviewReprojection Loss : 0.000
===> [Minibatch 24/50].........
   [##] Training... Train Loss : 10.717
   ======> Trajectory Loss : 0.352, EndOfTrajectory Loss : 10.364, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.000, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 14.957
   ======> Trajectory Loss : 0.875, EndOfTrajectory Loss : 14.081, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.001, MultiviewReprojection Loss : 0.000
===> [Minibatch 25/50].........
   [##] Training... Train Loss : 19.807
   ======> Trajectory Loss : 0.170, EndOfTrajectory Loss : 19.637, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.000, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 13.698
   ======> Trajectory Loss : 0.701, EndOfTrajectory Loss : 12.933, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.064, MultiviewReprojection Loss : 0.000
===> [Minibatch 26/50].........
   [##] Training... Train Loss : 13.034
   ======> Trajectory Loss : 0.280, EndOfTrajectory Loss : 12.735, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.019, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 19.306
   ======> Trajectory Loss : 0.607, EndOfTrajectory Loss : 18.649, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.051, MultiviewReprojection Loss : 0.000
===> [Minibatch 27/50].........
   [##] Training... Train Loss : 14.857
   ======> Trajectory Loss : 0.263, EndOfTrajectory Loss : 14.581, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.013, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 24.721
   ======> Trajectory Loss : 1.471, EndOfTrajectory Loss : 23.249, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.001, MultiviewReprojection Loss : 0.000
===> [Minibatch 28/50].........
   [##] Training... Train Loss : 23.057
   ======> Trajectory Loss : 0.261, EndOfTrajectory Loss : 22.796, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.000, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 17.234
   ======> Trajectory Loss : 1.336, EndOfTrajectory Loss : 15.897, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.000, MultiviewReprojection Loss : 0.000
===> [Minibatch 29/50].........
   [##] Training... Train Loss : 12.719
   ======> Trajectory Loss : 0.206, EndOfTrajectory Loss : 12.513, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.000, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 11.718
   ======> Trajectory Loss : 0.387, EndOfTrajectory Loss : 11.308, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.023, MultiviewReprojection Loss : 0.000
===> [Minibatch 30/50].........
   [##] Training... Train Loss : 11.501
   ======> Trajectory Loss : 0.084, EndOfTrajectory Loss : 11.416, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.000, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 11.414
   ======> Trajectory Loss : 0.393, EndOfTrajectory Loss : 10.998, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.022, MultiviewReprojection Loss : 0.000
===> [Minibatch 31/50].........
   [##] Training... Train Loss : 5.956
   ======> Trajectory Loss : 0.108, EndOfTrajectory Loss : 5.845, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.002, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 12.343
   ======> Trajectory Loss : 1.639, EndOfTrajectory Loss : 10.702, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.002, MultiviewReprojection Loss : 0.000
===> [Minibatch 32/50].........
   [##] Training... Train Loss : 7.315
   ======> Trajectory Loss : 0.315, EndOfTrajectory Loss : 7.000, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.000, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 14.705
   ======> Trajectory Loss : 1.628, EndOfTrajectory Loss : 13.075, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.002, MultiviewReprojection Loss : 0.000
===> [Minibatch 33/50].........
   [##] Training... Train Loss : 3.482
   ======> Trajectory Loss : 0.258, EndOfTrajectory Loss : 3.223, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.000, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 9.729
   ======> Trajectory Loss : 0.392, EndOfTrajectory Loss : 9.317, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.020, MultiviewReprojection Loss : 0.000
===> [Minibatch 34/50].........
   [##] Training... Train Loss : 7.454
   ======> Trajectory Loss : 0.154, EndOfTrajectory Loss : 7.299, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.000, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 9.007
   ======> Trajectory Loss : 0.491, EndOfTrajectory Loss : 8.477, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.038, MultiviewReprojection Loss : 0.000
===> [Minibatch 35/50].........
   [##] Training... Train Loss : 5.174
   ======> Trajectory Loss : 0.210, EndOfTrajectory Loss : 4.954, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.010, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 7.927
   ======> Trajectory Loss : 0.366, EndOfTrajectory Loss : 7.554, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.007, MultiviewReprojection Loss : 0.000
===> [Minibatch 36/50].........
   [##] Training... Train Loss : 5.537
   ======> Trajectory Loss : 0.164, EndOfTrajectory Loss : 5.364, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.008, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 11.543
   ======> Trajectory Loss : 3.802, EndOfTrajectory Loss : 7.741, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.000, MultiviewReprojection Loss : 0.000
===> [Minibatch 37/50].........
   [##] Training... Train Loss : 9.732
   ======> Trajectory Loss : 0.531, EndOfTrajectory Loss : 9.201, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.000, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 12.052
   ======> Trajectory Loss : 5.508, EndOfTrajectory Loss : 6.544, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.000, MultiviewReprojection Loss : 0.000
===> [Minibatch 38/50].........
   [##] Training... Train Loss : 6.022
   ======> Trajectory Loss : 0.748, EndOfTrajectory Loss : 5.274, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.000, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 9.293
   ======> Trajectory Loss : 2.561, EndOfTrajectory Loss : 6.731, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.000, MultiviewReprojection Loss : 0.000
===> [Minibatch 39/50].........
   [##] Training... Train Loss : 3.564
   ======> Trajectory Loss : 0.326, EndOfTrajectory Loss : 3.238, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.000, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 6.191
   ======> Trajectory Loss : 0.552, EndOfTrajectory Loss : 5.590, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.049, MultiviewReprojection Loss : 0.000
===> [Minibatch 40/50].........
   [##] Training... Train Loss : 8.108
   ======> Trajectory Loss : 0.257, EndOfTrajectory Loss : 7.838, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.013, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 9.734
   ======> Trajectory Loss : 1.012, EndOfTrajectory Loss : 8.605, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.117, MultiviewReprojection Loss : 0.000
===> [Minibatch 41/50].........
   [##] Training... Train Loss : 7.446
   ======> Trajectory Loss : 0.431, EndOfTrajectory Loss : 6.970, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.045, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 6.056
   ======> Trajectory Loss : 0.320, EndOfTrajectory Loss : 5.719, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.017, MultiviewReprojection Loss : 0.000
===> [Minibatch 42/50].........
   [##] Training... Train Loss : 5.167
   ======> Trajectory Loss : 0.200, EndOfTrajectory Loss : 4.957, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.009, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 9.301
   ======> Trajectory Loss : 2.540, EndOfTrajectory Loss : 6.762, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.000, MultiviewReprojection Loss : 0.000
===> [Minibatch 43/50].........
   [##] Training... Train Loss : 5.459
   ======> Trajectory Loss : 0.362, EndOfTrajectory Loss : 5.097, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.000, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 10.550
   ======> Trajectory Loss : 3.856, EndOfTrajectory Loss : 6.694, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.000, MultiviewReprojection Loss : 0.000
===> [Minibatch 44/50].........
   [##] Training... Train Loss : 4.295
   ======> Trajectory Loss : 0.508, EndOfTrajectory Loss : 3.787, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.000, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 8.045
   ======> Trajectory Loss : 1.708, EndOfTrajectory Loss : 6.337, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.000, MultiviewReprojection Loss : 0.000
===> [Minibatch 45/50].........
   [##] Training... Train Loss : 8.212
   ======> Trajectory Loss : 0.342, EndOfTrajectory Loss : 7.869, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.001, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 8.418
   ======> Trajectory Loss : 0.614, EndOfTrajectory Loss : 7.751, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.054, MultiviewReprojection Loss : 0.000
===> [Minibatch 46/50].........
   [##] Training... Train Loss : 3.390
   ======> Trajectory Loss : 0.257, EndOfTrajectory Loss : 3.121, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.013, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 8.071
   ======> Trajectory Loss : 1.308, EndOfTrajectory Loss : 6.602, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.161, MultiviewReprojection Loss : 0.000
===> [Minibatch 47/50].........
   [##] Training... Train Loss : 4.401
   ======> Trajectory Loss : 0.369, EndOfTrajectory Loss : 4.015, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.018, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 7.018
   ======> Trajectory Loss : 0.499, EndOfTrajectory Loss : 6.476, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.043, MultiviewReprojection Loss : 0.000
===> [Minibatch 48/50].........
   [##] Training... Train Loss : 4.139
   ======> Trajectory Loss : 0.149, EndOfTrajectory Loss : 3.985, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.004, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 7.471
   ======> Trajectory Loss : 1.671, EndOfTrajectory Loss : 5.799, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.001, MultiviewReprojection Loss : 0.000
===> [Minibatch 49/50].........
   [##] Training... Train Loss : 8.446
   ======> Trajectory Loss : 0.277, EndOfTrajectory Loss : 8.169, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.000, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 9.679
   ======> Trajectory Loss : 2.666, EndOfTrajectory Loss : 7.013, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.000, MultiviewReprojection Loss : 0.000
===> [Minibatch 50/50].........
   [##] Training... Train Loss : 4.926
   ======> Trajectory Loss : 0.417, EndOfTrajectory Loss : 4.510, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.000, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 3.934
   ======> Trajectory Loss : 1.143, EndOfTrajectory Loss : 2.788, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.002, MultiviewReprojection Loss : 0.000
[#]Finish Epoch : 1/100000.........Train loss : 43.111, Val loss : 56.024
[+++]Saving the best model checkpoint : Prev loss 20000000000.000 > Curr loss 56.024
[+++]Saving the best model checkpoint to :  ../../model_checkpoints/test_newscripttest_trainable/Test_newscript//Test_newscript_best.pth
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[Epoch : 2/100000]<<<<<<<<<<<<<<<<<<<<<<<<<<<<
[#]Learning rate (Depth & EOT) :  0.01
===> [Minibatch 1/50].........
   [##] Training... Train Loss : 2.622
   ======> Trajectory Loss : 0.184, EndOfTrajectory Loss : 2.438, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.000, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 5.256
   ======> Trajectory Loss : 0.555, EndOfTrajectory Loss : 4.652, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.049, MultiviewReprojection Loss : 0.000
Opening in existing browser session.
[1110/192132.251560:ERROR:nacl_helper_linux.cc(308)] NaCl helper process running without a sandbox!
Most likely you need to configure your SUID sandbox correctly
Opening in existing browser session.
[1110/192132.432041:ERROR:nacl_helper_linux.cc(308)] NaCl helper process running without a sandbox!
Most likely you need to configure your SUID sandbox correctly
Opening in existing browser session.
[1110/192132.717395:ERROR:nacl_helper_linux.cc(308)] NaCl helper process running without a sandbox!
Most likely you need to configure your SUID sandbox correctly
===> [Minibatch 2/50].........
   [##] Training... Train Loss : 6.381
   ======> Trajectory Loss : 0.242, EndOfTrajectory Loss : 6.125, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.015, MultiviewReprojection Loss : 0.000
   [##] Validating... Val Loss : 9.640
   ======> Trajectory Loss : 1.222, EndOfTrajectory Loss : 8.261, Gravity Loss : 0.000, BelowGroundPenalize Loss : 0.157, MultiviewReprojection Loss : 0.000
