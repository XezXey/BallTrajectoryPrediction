==============================================Features==============================================
Prediction = depth, Environment = unity
Available features :  ['x-0', 'y-1', 'z-2', 'u-3', 'v-4', 'd-5', 'eot-6', 'og-7', 'rad-8', 'f_sin-9', 'f_cos-10', 'g-11']
Selected features :  [6]
1. input_col =  [3, 4, 6]
2. input_startpos_col =  [3, 4, 5, 6]
3. gt_col =  [5, 6]
4. gt_startpos_col =  [0, 1, 2, 6]
5. gt_xyz_col =  [0, 1, 2, 6]
====================================================================================================
[#]Training : Trajectory Estimation
Mixed:   0%|                                                                                                                                                                                                                                    | 0/3 [00:00<?, ?it/s]Mixed:  67%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▋                                                                         | 2/3 [00:00<00:00, 13.28it/s]Mixed: 100%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 3/3 [00:00<00:00, 12.76it/s]
===============================Dataset shape===============================
Mixed : (16533,)
===========================================================================
Mixed:   0%|                                                                                                                                                                                                                                    | 0/1 [00:00<?, ?it/s]Mixed: 100%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 24.56it/s]
===============================Dataset shape===============================
Mixed : (1841,)
===========================================================================
======================================================Summary Batch (batch_size = 128)=========================================================================
Input batch [0] : batch=torch.Size([128, 882, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 882, 3]), initial position=torch.Size([128, 1, 4])
gt batch [0] : batch=torch.Size([128, 882, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 883, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [1] : batch=torch.Size([128, 849, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 849, 3]), initial position=torch.Size([128, 1, 4])
gt batch [1] : batch=torch.Size([128, 849, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 850, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [2] : batch=torch.Size([128, 718, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 718, 3]), initial position=torch.Size([128, 1, 4])
gt batch [2] : batch=torch.Size([128, 718, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 719, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [3] : batch=torch.Size([128, 869, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 869, 3]), initial position=torch.Size([128, 1, 4])
gt batch [3] : batch=torch.Size([128, 869, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 870, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [4] : batch=torch.Size([128, 875, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 875, 3]), initial position=torch.Size([128, 1, 4])
gt batch [4] : batch=torch.Size([128, 875, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 876, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [5] : batch=torch.Size([128, 884, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 884, 3]), initial position=torch.Size([128, 1, 4])
gt batch [5] : batch=torch.Size([128, 884, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 885, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [6] : batch=torch.Size([128, 969, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 969, 3]), initial position=torch.Size([128, 1, 4])
gt batch [6] : batch=torch.Size([128, 969, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 970, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [7] : batch=torch.Size([128, 1023, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 1023, 3]), initial position=torch.Size([128, 1, 4])
gt batch [7] : batch=torch.Size([128, 1023, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 1024, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [8] : batch=torch.Size([128, 758, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 758, 3]), initial position=torch.Size([128, 1, 4])
gt batch [8] : batch=torch.Size([128, 758, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 759, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [9] : batch=torch.Size([128, 868, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 868, 3]), initial position=torch.Size([128, 1, 4])
gt batch [9] : batch=torch.Size([128, 868, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 869, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [10] : batch=torch.Size([128, 791, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 791, 3]), initial position=torch.Size([128, 1, 4])
gt batch [10] : batch=torch.Size([128, 791, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 792, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [11] : batch=torch.Size([128, 868, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 868, 3]), initial position=torch.Size([128, 1, 4])
gt batch [11] : batch=torch.Size([128, 868, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 869, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [12] : batch=torch.Size([128, 817, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 817, 3]), initial position=torch.Size([128, 1, 4])
gt batch [12] : batch=torch.Size([128, 817, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 818, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [13] : batch=torch.Size([128, 748, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 748, 3]), initial position=torch.Size([128, 1, 4])
gt batch [13] : batch=torch.Size([128, 748, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 749, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [14] : batch=torch.Size([128, 945, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 945, 3]), initial position=torch.Size([128, 1, 4])
gt batch [14] : batch=torch.Size([128, 945, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 946, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [15] : batch=torch.Size([128, 790, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 790, 3]), initial position=torch.Size([128, 1, 4])
gt batch [15] : batch=torch.Size([128, 790, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 791, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [16] : batch=torch.Size([128, 814, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 814, 3]), initial position=torch.Size([128, 1, 4])
gt batch [16] : batch=torch.Size([128, 814, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 815, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [17] : batch=torch.Size([128, 952, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 952, 3]), initial position=torch.Size([128, 1, 4])
gt batch [17] : batch=torch.Size([128, 952, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 953, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [18] : batch=torch.Size([128, 854, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 854, 3]), initial position=torch.Size([128, 1, 4])
gt batch [18] : batch=torch.Size([128, 854, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 855, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [19] : batch=torch.Size([128, 826, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 826, 3]), initial position=torch.Size([128, 1, 4])
gt batch [19] : batch=torch.Size([128, 826, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 827, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [20] : batch=torch.Size([128, 725, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 725, 3]), initial position=torch.Size([128, 1, 4])
gt batch [20] : batch=torch.Size([128, 725, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 726, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [21] : batch=torch.Size([128, 817, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 817, 3]), initial position=torch.Size([128, 1, 4])
gt batch [21] : batch=torch.Size([128, 817, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 818, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [22] : batch=torch.Size([128, 886, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 886, 3]), initial position=torch.Size([128, 1, 4])
gt batch [22] : batch=torch.Size([128, 886, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 887, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [23] : batch=torch.Size([128, 764, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 764, 3]), initial position=torch.Size([128, 1, 4])
gt batch [23] : batch=torch.Size([128, 764, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 765, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [24] : batch=torch.Size([128, 928, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 928, 3]), initial position=torch.Size([128, 1, 4])
gt batch [24] : batch=torch.Size([128, 928, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 929, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [25] : batch=torch.Size([128, 834, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 834, 3]), initial position=torch.Size([128, 1, 4])
gt batch [25] : batch=torch.Size([128, 834, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 835, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [26] : batch=torch.Size([128, 970, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 970, 3]), initial position=torch.Size([128, 1, 4])
gt batch [26] : batch=torch.Size([128, 970, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 971, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [27] : batch=torch.Size([128, 868, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 868, 3]), initial position=torch.Size([128, 1, 4])
gt batch [27] : batch=torch.Size([128, 868, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 869, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [28] : batch=torch.Size([128, 739, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 739, 3]), initial position=torch.Size([128, 1, 4])
gt batch [28] : batch=torch.Size([128, 739, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 740, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [29] : batch=torch.Size([128, 915, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 915, 3]), initial position=torch.Size([128, 1, 4])
gt batch [29] : batch=torch.Size([128, 915, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 916, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [30] : batch=torch.Size([128, 796, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 796, 3]), initial position=torch.Size([128, 1, 4])
gt batch [30] : batch=torch.Size([128, 796, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 797, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [31] : batch=torch.Size([128, 879, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 879, 3]), initial position=torch.Size([128, 1, 4])
gt batch [31] : batch=torch.Size([128, 879, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 880, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [32] : batch=torch.Size([128, 939, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 939, 3]), initial position=torch.Size([128, 1, 4])
gt batch [32] : batch=torch.Size([128, 939, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 940, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [33] : batch=torch.Size([128, 858, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 858, 3]), initial position=torch.Size([128, 1, 4])
gt batch [33] : batch=torch.Size([128, 858, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 859, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [34] : batch=torch.Size([128, 864, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 864, 3]), initial position=torch.Size([128, 1, 4])
gt batch [34] : batch=torch.Size([128, 864, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 865, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [35] : batch=torch.Size([128, 955, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 955, 3]), initial position=torch.Size([128, 1, 4])
gt batch [35] : batch=torch.Size([128, 955, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 956, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [36] : batch=torch.Size([128, 844, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 844, 3]), initial position=torch.Size([128, 1, 4])
gt batch [36] : batch=torch.Size([128, 844, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 845, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [37] : batch=torch.Size([128, 816, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 816, 3]), initial position=torch.Size([128, 1, 4])
gt batch [37] : batch=torch.Size([128, 816, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 817, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [38] : batch=torch.Size([128, 774, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 774, 3]), initial position=torch.Size([128, 1, 4])
gt batch [38] : batch=torch.Size([128, 774, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 775, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [39] : batch=torch.Size([128, 755, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 755, 3]), initial position=torch.Size([128, 1, 4])
gt batch [39] : batch=torch.Size([128, 755, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 756, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [40] : batch=torch.Size([128, 776, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 776, 3]), initial position=torch.Size([128, 1, 4])
gt batch [40] : batch=torch.Size([128, 776, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 777, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [41] : batch=torch.Size([128, 883, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 883, 3]), initial position=torch.Size([128, 1, 4])
gt batch [41] : batch=torch.Size([128, 883, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 884, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [42] : batch=torch.Size([128, 838, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 838, 3]), initial position=torch.Size([128, 1, 4])
gt batch [42] : batch=torch.Size([128, 838, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 839, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [43] : batch=torch.Size([128, 901, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 901, 3]), initial position=torch.Size([128, 1, 4])
gt batch [43] : batch=torch.Size([128, 901, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 902, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [44] : batch=torch.Size([128, 914, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 914, 3]), initial position=torch.Size([128, 1, 4])
gt batch [44] : batch=torch.Size([128, 914, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 915, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [45] : batch=torch.Size([128, 966, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 966, 3]), initial position=torch.Size([128, 1, 4])
gt batch [45] : batch=torch.Size([128, 966, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 967, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [46] : batch=torch.Size([128, 911, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 911, 3]), initial position=torch.Size([128, 1, 4])
gt batch [46] : batch=torch.Size([128, 911, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 912, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [47] : batch=torch.Size([128, 811, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 811, 3]), initial position=torch.Size([128, 1, 4])
gt batch [47] : batch=torch.Size([128, 811, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 812, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [48] : batch=torch.Size([128, 982, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 982, 3]), initial position=torch.Size([128, 1, 4])
gt batch [48] : batch=torch.Size([128, 982, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 983, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [49] : batch=torch.Size([128, 721, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 721, 3]), initial position=torch.Size([128, 1, 4])
gt batch [49] : batch=torch.Size([128, 721, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 722, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [50] : batch=torch.Size([128, 829, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 829, 3]), initial position=torch.Size([128, 1, 4])
gt batch [50] : batch=torch.Size([128, 829, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 830, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [51] : batch=torch.Size([128, 844, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 844, 3]), initial position=torch.Size([128, 1, 4])
gt batch [51] : batch=torch.Size([128, 844, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 845, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [52] : batch=torch.Size([128, 763, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 763, 3]), initial position=torch.Size([128, 1, 4])
gt batch [52] : batch=torch.Size([128, 763, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 764, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [53] : batch=torch.Size([128, 879, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 879, 3]), initial position=torch.Size([128, 1, 4])
gt batch [53] : batch=torch.Size([128, 879, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 880, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [54] : batch=torch.Size([128, 750, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 750, 3]), initial position=torch.Size([128, 1, 4])
gt batch [54] : batch=torch.Size([128, 750, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 751, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [55] : batch=torch.Size([128, 753, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 753, 3]), initial position=torch.Size([128, 1, 4])
gt batch [55] : batch=torch.Size([128, 753, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 754, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [56] : batch=torch.Size([128, 979, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 979, 3]), initial position=torch.Size([128, 1, 4])
gt batch [56] : batch=torch.Size([128, 979, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 980, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [57] : batch=torch.Size([128, 814, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 814, 3]), initial position=torch.Size([128, 1, 4])
gt batch [57] : batch=torch.Size([128, 814, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 815, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [58] : batch=torch.Size([128, 808, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 808, 3]), initial position=torch.Size([128, 1, 4])
gt batch [58] : batch=torch.Size([128, 808, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 809, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [59] : batch=torch.Size([128, 822, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 822, 3]), initial position=torch.Size([128, 1, 4])
gt batch [59] : batch=torch.Size([128, 822, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 823, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [60] : batch=torch.Size([128, 804, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 804, 3]), initial position=torch.Size([128, 1, 4])
gt batch [60] : batch=torch.Size([128, 804, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 805, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [61] : batch=torch.Size([128, 795, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 795, 3]), initial position=torch.Size([128, 1, 4])
gt batch [61] : batch=torch.Size([128, 795, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 796, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [62] : batch=torch.Size([128, 861, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 861, 3]), initial position=torch.Size([128, 1, 4])
gt batch [62] : batch=torch.Size([128, 861, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 862, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [63] : batch=torch.Size([128, 837, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 837, 3]), initial position=torch.Size([128, 1, 4])
gt batch [63] : batch=torch.Size([128, 837, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 838, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [64] : batch=torch.Size([128, 875, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 875, 3]), initial position=torch.Size([128, 1, 4])
gt batch [64] : batch=torch.Size([128, 875, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 876, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [65] : batch=torch.Size([128, 852, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 852, 3]), initial position=torch.Size([128, 1, 4])
gt batch [65] : batch=torch.Size([128, 852, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 853, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [66] : batch=torch.Size([128, 842, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 842, 3]), initial position=torch.Size([128, 1, 4])
gt batch [66] : batch=torch.Size([128, 842, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 843, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [67] : batch=torch.Size([128, 956, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 956, 3]), initial position=torch.Size([128, 1, 4])
gt batch [67] : batch=torch.Size([128, 956, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 957, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [68] : batch=torch.Size([128, 741, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 741, 3]), initial position=torch.Size([128, 1, 4])
gt batch [68] : batch=torch.Size([128, 741, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 742, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [69] : batch=torch.Size([128, 841, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 841, 3]), initial position=torch.Size([128, 1, 4])
gt batch [69] : batch=torch.Size([128, 841, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 842, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [70] : batch=torch.Size([128, 734, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 734, 3]), initial position=torch.Size([128, 1, 4])
gt batch [70] : batch=torch.Size([128, 734, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 735, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [71] : batch=torch.Size([128, 861, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 861, 3]), initial position=torch.Size([128, 1, 4])
gt batch [71] : batch=torch.Size([128, 861, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 862, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [72] : batch=torch.Size([128, 801, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 801, 3]), initial position=torch.Size([128, 1, 4])
gt batch [72] : batch=torch.Size([128, 801, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 802, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [73] : batch=torch.Size([128, 912, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 912, 3]), initial position=torch.Size([128, 1, 4])
gt batch [73] : batch=torch.Size([128, 912, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 913, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [74] : batch=torch.Size([128, 769, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 769, 3]), initial position=torch.Size([128, 1, 4])
gt batch [74] : batch=torch.Size([128, 769, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 770, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [75] : batch=torch.Size([128, 915, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 915, 3]), initial position=torch.Size([128, 1, 4])
gt batch [75] : batch=torch.Size([128, 915, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 916, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [76] : batch=torch.Size([128, 780, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 780, 3]), initial position=torch.Size([128, 1, 4])
gt batch [76] : batch=torch.Size([128, 780, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 781, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [77] : batch=torch.Size([128, 1000, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 1000, 3]), initial position=torch.Size([128, 1, 4])
gt batch [77] : batch=torch.Size([128, 1000, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 1001, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [78] : batch=torch.Size([128, 760, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 760, 3]), initial position=torch.Size([128, 1, 4])
gt batch [78] : batch=torch.Size([128, 760, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 761, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [79] : batch=torch.Size([128, 839, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 839, 3]), initial position=torch.Size([128, 1, 4])
gt batch [79] : batch=torch.Size([128, 839, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 840, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [80] : batch=torch.Size([128, 814, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 814, 3]), initial position=torch.Size([128, 1, 4])
gt batch [80] : batch=torch.Size([128, 814, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 815, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [81] : batch=torch.Size([128, 825, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 825, 3]), initial position=torch.Size([128, 1, 4])
gt batch [81] : batch=torch.Size([128, 825, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 826, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [82] : batch=torch.Size([128, 956, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 956, 3]), initial position=torch.Size([128, 1, 4])
gt batch [82] : batch=torch.Size([128, 956, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 957, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [83] : batch=torch.Size([128, 828, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 828, 3]), initial position=torch.Size([128, 1, 4])
gt batch [83] : batch=torch.Size([128, 828, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 829, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [84] : batch=torch.Size([128, 1000, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 1000, 3]), initial position=torch.Size([128, 1, 4])
gt batch [84] : batch=torch.Size([128, 1000, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 1001, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [85] : batch=torch.Size([128, 771, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 771, 3]), initial position=torch.Size([128, 1, 4])
gt batch [85] : batch=torch.Size([128, 771, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 772, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [86] : batch=torch.Size([128, 963, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 963, 3]), initial position=torch.Size([128, 1, 4])
gt batch [86] : batch=torch.Size([128, 963, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 964, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [87] : batch=torch.Size([128, 744, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 744, 3]), initial position=torch.Size([128, 1, 4])
gt batch [87] : batch=torch.Size([128, 744, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 745, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [88] : batch=torch.Size([128, 903, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 903, 3]), initial position=torch.Size([128, 1, 4])
gt batch [88] : batch=torch.Size([128, 903, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 904, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [89] : batch=torch.Size([128, 904, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 904, 3]), initial position=torch.Size([128, 1, 4])
gt batch [89] : batch=torch.Size([128, 904, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 905, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [90] : batch=torch.Size([128, 688, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 688, 3]), initial position=torch.Size([128, 1, 4])
gt batch [90] : batch=torch.Size([128, 688, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 689, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [91] : batch=torch.Size([128, 861, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 861, 3]), initial position=torch.Size([128, 1, 4])
gt batch [91] : batch=torch.Size([128, 861, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 862, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [92] : batch=torch.Size([128, 943, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 943, 3]), initial position=torch.Size([128, 1, 4])
gt batch [92] : batch=torch.Size([128, 943, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 944, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [93] : batch=torch.Size([128, 892, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 892, 3]), initial position=torch.Size([128, 1, 4])
gt batch [93] : batch=torch.Size([128, 892, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 893, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [94] : batch=torch.Size([128, 849, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 849, 3]), initial position=torch.Size([128, 1, 4])
gt batch [94] : batch=torch.Size([128, 849, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 850, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [95] : batch=torch.Size([128, 917, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 917, 3]), initial position=torch.Size([128, 1, 4])
gt batch [95] : batch=torch.Size([128, 917, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 918, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [96] : batch=torch.Size([128, 922, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 922, 3]), initial position=torch.Size([128, 1, 4])
gt batch [96] : batch=torch.Size([128, 922, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 923, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [97] : batch=torch.Size([128, 945, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 945, 3]), initial position=torch.Size([128, 1, 4])
gt batch [97] : batch=torch.Size([128, 945, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 946, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [98] : batch=torch.Size([128, 854, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 854, 3]), initial position=torch.Size([128, 1, 4])
gt batch [98] : batch=torch.Size([128, 854, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 855, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [99] : batch=torch.Size([128, 884, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 884, 3]), initial position=torch.Size([128, 1, 4])
gt batch [99] : batch=torch.Size([128, 884, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 885, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [100] : batch=torch.Size([128, 869, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 869, 3]), initial position=torch.Size([128, 1, 4])
gt batch [100] : batch=torch.Size([128, 869, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 870, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [101] : batch=torch.Size([128, 751, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 751, 3]), initial position=torch.Size([128, 1, 4])
gt batch [101] : batch=torch.Size([128, 751, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 752, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [102] : batch=torch.Size([128, 840, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 840, 3]), initial position=torch.Size([128, 1, 4])
gt batch [102] : batch=torch.Size([128, 840, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 841, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [103] : batch=torch.Size([128, 779, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 779, 3]), initial position=torch.Size([128, 1, 4])
gt batch [103] : batch=torch.Size([128, 779, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 780, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [104] : batch=torch.Size([128, 700, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 700, 3]), initial position=torch.Size([128, 1, 4])
gt batch [104] : batch=torch.Size([128, 700, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 701, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [105] : batch=torch.Size([128, 878, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 878, 3]), initial position=torch.Size([128, 1, 4])
gt batch [105] : batch=torch.Size([128, 878, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 879, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [106] : batch=torch.Size([128, 793, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 793, 3]), initial position=torch.Size([128, 1, 4])
gt batch [106] : batch=torch.Size([128, 793, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 794, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [107] : batch=torch.Size([128, 995, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 995, 3]), initial position=torch.Size([128, 1, 4])
gt batch [107] : batch=torch.Size([128, 995, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 996, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [108] : batch=torch.Size([128, 861, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 861, 3]), initial position=torch.Size([128, 1, 4])
gt batch [108] : batch=torch.Size([128, 861, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 862, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [109] : batch=torch.Size([128, 901, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 901, 3]), initial position=torch.Size([128, 1, 4])
gt batch [109] : batch=torch.Size([128, 901, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 902, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [110] : batch=torch.Size([128, 761, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 761, 3]), initial position=torch.Size([128, 1, 4])
gt batch [110] : batch=torch.Size([128, 761, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 762, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [111] : batch=torch.Size([128, 943, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 943, 3]), initial position=torch.Size([128, 1, 4])
gt batch [111] : batch=torch.Size([128, 943, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 944, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [112] : batch=torch.Size([128, 764, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 764, 3]), initial position=torch.Size([128, 1, 4])
gt batch [112] : batch=torch.Size([128, 764, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 765, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [113] : batch=torch.Size([128, 961, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 961, 3]), initial position=torch.Size([128, 1, 4])
gt batch [113] : batch=torch.Size([128, 961, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 962, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [114] : batch=torch.Size([128, 891, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 891, 3]), initial position=torch.Size([128, 1, 4])
gt batch [114] : batch=torch.Size([128, 891, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 892, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [115] : batch=torch.Size([128, 914, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 914, 3]), initial position=torch.Size([128, 1, 4])
gt batch [115] : batch=torch.Size([128, 914, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 915, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [116] : batch=torch.Size([128, 897, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 897, 3]), initial position=torch.Size([128, 1, 4])
gt batch [116] : batch=torch.Size([128, 897, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 898, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [117] : batch=torch.Size([128, 1040, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 1040, 3]), initial position=torch.Size([128, 1, 4])
gt batch [117] : batch=torch.Size([128, 1040, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 1041, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [118] : batch=torch.Size([128, 881, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 881, 3]), initial position=torch.Size([128, 1, 4])
gt batch [118] : batch=torch.Size([128, 881, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 882, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [119] : batch=torch.Size([128, 918, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 918, 3]), initial position=torch.Size([128, 1, 4])
gt batch [119] : batch=torch.Size([128, 918, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 919, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [120] : batch=torch.Size([128, 801, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 801, 3]), initial position=torch.Size([128, 1, 4])
gt batch [120] : batch=torch.Size([128, 801, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 802, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [121] : batch=torch.Size([128, 736, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 736, 3]), initial position=torch.Size([128, 1, 4])
gt batch [121] : batch=torch.Size([128, 736, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 737, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [122] : batch=torch.Size([128, 874, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 874, 3]), initial position=torch.Size([128, 1, 4])
gt batch [122] : batch=torch.Size([128, 874, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 875, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [123] : batch=torch.Size([128, 884, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 884, 3]), initial position=torch.Size([128, 1, 4])
gt batch [123] : batch=torch.Size([128, 884, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 885, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [124] : batch=torch.Size([128, 780, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 780, 3]), initial position=torch.Size([128, 1, 4])
gt batch [124] : batch=torch.Size([128, 780, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 781, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [125] : batch=torch.Size([128, 712, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 712, 3]), initial position=torch.Size([128, 1, 4])
gt batch [125] : batch=torch.Size([128, 712, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 713, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [126] : batch=torch.Size([128, 900, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 900, 3]), initial position=torch.Size([128, 1, 4])
gt batch [126] : batch=torch.Size([128, 900, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 901, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [127] : batch=torch.Size([128, 906, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 906, 3]), initial position=torch.Size([128, 1, 4])
gt batch [127] : batch=torch.Size([128, 906, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 907, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [128] : batch=torch.Size([128, 750, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 750, 3]), initial position=torch.Size([128, 1, 4])
gt batch [128] : batch=torch.Size([128, 750, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 751, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
{'flag': {'input_size': 2, 'output_size': 1, 'hidden_dim': 32, 'n_layers': 1, 'n_stack': 4, 'recurrent_stacked': [2, 32, 32, 32, 32], 'fc_size': [64, 32, 16, 8, 4, 1]}, 'depth': {'input_size': 3, 'output_size': 2, 'hidden_dim': 32, 'n_layers': 1, 'n_stack': 4, 'recurrent_stacked': [3, 32, 32, 32, 32], 'fc_size': [64, 32, 16, 8, 4, 2]}}
===>No model checkpoint
[#] Define the Learning rate, Optimizer, Decay rate and Scheduler...
[#]Model Architecture
####### Model - EOT #######
BiLSTMResidualTrainableInit(
  (recurrent_blocks): ModuleList(
    (0): LSTM(2, 32, batch_first=True, bidirectional=True)
    (1): LSTM(64, 32, batch_first=True, bidirectional=True)
    (2): LSTM(64, 32, batch_first=True, bidirectional=True)
    (3): LSTM(64, 32, batch_first=True, bidirectional=True)
  )
  (fc_blocks): Sequential(
    (0): Sequential(
      (0): Linear(in_features=64, out_features=32, bias=True)
      (1): LeakyReLU(negative_slope=0.01)
    )
    (1): Sequential(
      (0): Linear(in_features=32, out_features=16, bias=True)
      (1): LeakyReLU(negative_slope=0.01)
    )
    (2): Sequential(
      (0): Linear(in_features=16, out_features=8, bias=True)
      (1): LeakyReLU(negative_slope=0.01)
    )
    (3): Sequential(
      (0): Linear(in_features=8, out_features=4, bias=True)
      (1): LeakyReLU(negative_slope=0.01)
    )
    (4): Sequential(
      (0): Linear(in_features=4, out_features=1, bias=True)
      (1): Sigmoid()
    )
  )
)
####### Model - Depth #######
BiLSTMResidualTrainableInit(
  (recurrent_blocks): ModuleList(
    (0): LSTM(3, 32, batch_first=True, bidirectional=True)
    (1): LSTM(64, 32, batch_first=True, bidirectional=True)
    (2): LSTM(64, 32, batch_first=True, bidirectional=True)
    (3): LSTM(64, 32, batch_first=True, bidirectional=True)
  )
  (fc_blocks): Sequential(
    (0): Sequential(
      (0): Linear(in_features=64, out_features=32, bias=True)
      (1): LeakyReLU(negative_slope=0.01)
    )
    (1): Sequential(
      (0): Linear(in_features=32, out_features=16, bias=True)
      (1): LeakyReLU(negative_slope=0.01)
    )
    (2): Sequential(
      (0): Linear(in_features=16, out_features=8, bias=True)
      (1): LeakyReLU(negative_slope=0.01)
    )
    (3): Sequential(
      (0): Linear(in_features=8, out_features=4, bias=True)
      (1): LeakyReLU(negative_slope=0.01)
    )
    (4): Sequential(
      (0): Linear(in_features=4, out_features=2, bias=True)
    )
  )
)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[Epoch : 1/100000]<<<<<<<<<<<<<<<<<<<<<<<<<<<<
[#]Learning rate (Depth & EOT) :  0.01
===> [Minibatch 1/129].........tensor([[[-1.4156, -1.6453, -1.4716,  ...,  0.0496,  0.4212, -0.5716],
         [-0.7697,  0.0099,  0.9069,  ..., -0.3425, -0.7951, -0.0148],
         [-0.0989,  1.0496,  1.4006,  ..., -0.7191,  1.3606, -2.2574],
         ...,
         [ 0.4056, -0.4885, -1.0881,  ..., -1.8746,  1.3646, -0.0968],
         [ 1.3266, -0.0069, -0.6118,  ..., -0.9796, -0.2648, -1.2402],
         [-0.9194,  0.4343,  0.6344,  ..., -0.7090, -0.0687, -1.0269]],

        [[ 1.3986, -0.2992,  0.2725,  ...,  0.2147,  1.0993,  0.2449],
         [ 1.1968, -0.4830,  0.6835,  ..., -1.4245, -1.2369,  0.6639],
         [-0.2707, -0.7727,  2.8675,  ..., -0.0443,  0.4641, -1.2255],
         ...,
         [-0.0902, -0.4459,  1.5284,  ..., -1.0506,  0.7682,  0.3327],
         [ 0.0081,  1.2935,  0.9238,  ..., -0.6828, -1.6176, -0.0909],
         [ 1.9305, -0.0975,  1.8209,  ...,  0.3925, -1.2633,  0.0433]]],
       device='cuda:0', grad_fn=<SelectBackward>)
tensor([[[-4.0348e-01, -4.9591e-01,  3.2724e-01,  ..., -1.4055e+00,
           4.7557e-02, -1.4951e+00],
         [ 1.6106e-01,  3.3938e-01, -4.4989e-01,  ..., -1.6936e+00,
           3.4028e-01,  3.9112e-01],
         [ 1.1447e+00,  5.4783e-01, -1.4960e+00,  ..., -3.4079e-01,
          -4.3355e-01, -4.7044e-02],
         ...,
         [-4.7447e-01, -9.4021e-02, -3.3015e+00,  ...,  3.6565e-02,
          -5.9771e-01,  1.1398e-01],
         [-1.2106e+00,  9.3410e-02, -1.1481e+00,  ..., -3.7988e-04,
          -2.1818e+00,  9.0903e-01],
         [ 3.2936e-01,  3.3912e-01,  6.4870e-01,  ..., -1.7427e+00,
          -1.7623e+00, -1.5882e+00]],

        [[-5.4898e-01, -7.9413e-01, -1.1826e+00,  ..., -1.1385e-01,
           2.0171e-01,  4.5813e-01],
         [ 2.4123e+00,  6.8188e-02,  9.8274e-01,  ..., -4.1482e-01,
          -3.8995e-01, -3.5128e-01],
         [ 6.8129e-04,  2.0160e+00,  7.7788e-01,  ...,  6.3955e-02,
           3.4551e-01,  1.4464e+00],
         ...,
         [ 8.1307e-01, -4.0811e-01, -2.3464e-02,  ..., -6.3845e-01,
          -4.0270e-01, -9.9071e-02],
         [-3.4461e-01, -2.6528e-01,  2.9848e-01,  ...,  5.8475e-01,
           5.5826e-02,  1.9001e-01],
         [ 8.9200e-04, -2.0627e-02,  1.0582e+00,  ...,  1.2985e-01,
          -1.2656e+00, -7.3834e-02]]], device='cuda:0',
       grad_fn=<SelectBackward>)
initial_hidden tensor([[[[-0.3941, -0.5050,  0.3176,  ..., -1.3971,  0.0569, -1.5038],
          [ 0.1707,  0.3299, -0.4410,  ..., -1.7029,  0.3479,  0.3825],
          [ 1.1545,  0.5573, -1.5057,  ..., -0.3311, -0.4427, -0.0567],
          ...,
          [-0.4649, -0.1020, -3.3107,  ...,  0.0287, -0.5914,  0.1045],
          [-1.2023,  0.1009, -1.1447,  ..., -0.0073, -2.1741,  0.9007],
          [ 0.3368,  0.3454,  0.6455,  ..., -1.7397, -1.7677, -1.5924]],

         [[-0.5418, -0.8023, -1.1893,  ..., -0.1226,  0.2100,  0.4631],
          [ 2.4217,  0.0590,  0.9908,  ..., -0.4055, -0.3816, -0.3418],
          [ 0.0075,  2.0082,  0.7693,  ...,  0.0545,  0.3550,  1.4382],
          ...,
          [ 0.8226, -0.4174, -0.0318,  ..., -0.6291, -0.3930, -0.0896],
          [-0.3391, -0.2668,  0.2965,  ...,  0.5860,  0.0588,  0.1896],
          [ 0.0046, -0.0268,  1.0551,  ...,  0.1354, -1.2619, -0.0688]]],


        [[[ 0.5102, -1.7292,  0.8426,  ..., -0.0183, -2.4794,  0.4254],
          [-0.4993,  0.3598,  0.4393,  ...,  0.7385, -2.5122,  0.3312],
          [-1.4813, -0.5048,  1.8796,  ..., -1.4854, -2.0313, -0.1354],
          ...,
          [-1.2466,  1.2211, -0.6140,  ...,  0.6868, -0.5320, -0.3087],
          [ 0.0739,  1.2518,  0.5668,  ...,  0.5122,  0.0117,  1.2040],
          [ 2.1646, -0.3075, -0.4575,  ...,  0.4102, -0.3826,  0.7908]],

         [[ 0.5465,  0.5290,  1.4886,  ..., -0.1369, -0.6123,  2.0748],
          [-0.9105,  0.7739,  0.5591,  ..., -0.2983, -0.7242, -0.6337],
          [ 0.0786,  1.1470, -1.1026,  ...,  0.5903,  1.1814, -0.1884],
          ...,
          [-1.2518, -0.0086, -0.7621,  ..., -1.6817,  2.0108, -1.3089],
          [ 2.2445, -2.3558, -1.0277,  ..., -1.2014,  0.9918,  0.2227],
          [-0.2116, -0.7278, -0.8670,  ..., -0.6813,  0.0147, -2.3160]]],


        [[[ 0.3020,  0.9826,  0.5275,  ...,  1.3287,  0.8027,  0.1181],
          [ 0.7280, -0.4363, -0.5693,  ..., -1.7576,  1.3740,  1.5841],
          [ 1.4890, -0.8738,  0.7958,  ..., -0.7111,  1.1995,  0.6227],
          ...,
          [ 0.6463,  1.6664,  0.8453,  ..., -0.5717, -1.3454,  0.0727],
          [-0.3331, -0.5623, -0.3317,  ...,  0.3509, -0.4812,  0.3569],
          [-1.3173, -1.0693,  1.7175,  ...,  0.7739,  0.5104, -1.7912]],

         [[-0.6948, -1.9879,  0.6611,  ..., -2.3607,  0.6253, -2.5347],
          [ 1.0573, -0.9098,  0.3090,  ...,  1.0915,  0.5952,  0.1946],
          [ 1.9425,  0.2052, -0.2165,  ...,  0.8465,  0.5600, -0.3207],
          ...,
          [-1.3250,  2.1739, -0.9070,  ..., -0.6730,  1.4691, -0.3340],
          [ 1.4385, -1.2433, -0.2419,  ...,  0.5034, -1.1146,  1.1407],
          [-1.8906, -0.1097, -0.6529,  ...,  0.4581, -1.1345, -0.7288]]],


        [[[-2.3305, -2.2073, -0.1740,  ...,  0.7104,  0.7125, -0.9775],
          [ 0.0444, -0.0276,  1.3339,  ...,  1.0990,  1.2615,  1.1369],
          [ 1.1585, -0.9422, -0.9885,  ...,  0.0942,  1.0106,  0.2083],
          ...,
          [-1.4301, -2.2291, -1.7061,  ...,  0.5417,  0.9450,  0.9039],
          [ 1.3198, -0.4489,  0.3175,  ..., -0.8543,  0.1591,  0.2092],
          [ 0.1684,  1.4073,  0.3604,  ..., -0.1609, -1.7321,  1.3073]],

         [[ 1.4794,  0.3008,  0.6023,  ...,  1.1484,  0.8906,  0.4869],
          [ 0.9541,  0.8982,  0.1480,  ..., -1.3000, -0.7387,  2.0691],
          [ 0.9924, -0.6598, -1.2309,  ...,  0.2121, -0.0908,  0.6521],
          ...,
          [-0.3663,  0.3751,  0.5013,  ..., -0.4846,  0.2917,  1.0935],
          [ 0.6183, -0.1104, -0.5750,  ..., -0.3163,  0.0874,  0.7819],
          [-0.5902,  0.2345, -0.3534,  ...,  0.3999, -0.1380, -0.3740]]]],
       device='cuda:0') torch.Size([4, 2, 128, 32])
initial_cell tensor([[[[ 8.2884e-03,  5.4913e-01,  2.5889e+00,  ...,  5.3071e-01,
            4.0661e-01, -1.4399e+00],
          [ 4.0711e-01,  8.9531e-02, -1.1513e-01,  ...,  1.8683e+00,
           -1.6410e+00,  7.2797e-01],
          [-4.6407e-01, -5.0100e-01,  9.5519e-02,  ...,  6.7992e-01,
            8.2483e-02,  5.2914e-01],
          ...,
          [-9.5052e-01,  5.8166e-02, -1.5726e+00,  ..., -1.8580e-01,
           -6.6386e-04,  2.2026e-01],
          [ 3.7603e-01,  2.1456e-01, -7.8505e-01,  ...,  9.7785e-01,
            9.6321e-01, -1.8457e+00],
          [ 5.5379e-01, -1.1780e+00, -1.2715e+00,  ..., -1.1804e+00,
           -3.5358e-01, -2.5065e-01]],

         [[-3.1680e-01, -5.2127e-03,  2.2440e-01,  ...,  1.9869e+00,
            1.0472e+00,  3.0847e-01],
          [-3.3555e-01, -1.5797e+00,  2.2885e+00,  ...,  6.0446e-01,
            1.3768e-01,  6.6421e-01],
          [ 4.4654e-01, -7.7877e-02, -2.3337e-01,  ...,  3.1445e-01,
            8.4270e-02, -3.3084e-01],
          ...,
          [-1.8689e-01,  3.6639e-01,  3.1815e-01,  ...,  1.0977e+00,
           -3.8984e-01, -2.0084e-01],
          [ 4.7108e-01,  1.0684e+00, -6.6522e-01,  ...,  4.1370e-01,
            1.1601e+00,  8.8746e-01],
          [ 2.4698e-01,  2.9563e+00,  1.2704e+00,  ..., -7.0401e-02,
            9.3153e-01, -3.3746e-01]]],


        [[[ 7.4978e-01, -6.7340e-01, -7.3031e-01,  ...,  3.5455e-01,
           -2.6438e-01, -1.1007e+00],
          [ 2.3180e+00,  4.7925e-01, -7.6532e-01,  ...,  3.2442e-01,
           -7.3434e-02, -2.8642e-01],
          [ 1.7018e+00,  1.7804e+00, -3.5950e-01,  ..., -1.8554e+00,
            1.0617e+00, -5.9426e-01],
          ...,
          [-6.3546e-02,  5.3460e-01,  1.2817e+00,  ...,  1.6841e-01,
            5.1595e-01,  1.5388e+00],
          [-4.1138e-01, -1.4608e-01,  1.0141e+00,  ...,  3.1214e-02,
            7.1442e-01, -6.2103e-01],
          [ 1.0643e+00, -2.9515e-01,  1.2131e-01,  ...,  6.8624e-02,
           -1.0488e-01,  3.5826e-01]],

         [[ 2.1948e-01, -2.0612e-01,  9.9910e-02,  ..., -6.9500e-01,
            3.0218e-01, -1.5627e+00],
          [-2.1547e+00, -2.9848e-01,  7.9547e-01,  ...,  6.5625e-02,
           -2.8784e-01, -4.6491e-01],
          [-1.3726e+00,  7.4027e-01,  6.0752e-01,  ..., -7.1947e-02,
            9.5334e-01,  1.0355e-01],
          ...,
          [ 1.1420e+00, -2.2198e+00,  1.0638e+00,  ..., -5.9759e-02,
           -1.0581e-01, -1.6453e-01],
          [ 8.1569e-01,  3.3971e-01,  5.5345e-01,  ...,  3.6091e-01,
           -2.6259e-02,  1.0486e-01],
          [-1.5754e+00,  1.2849e+00,  2.1424e-01,  ..., -8.9910e-01,
            2.9642e-01,  4.7191e-01]]],


        [[[ 8.7080e-01, -6.6802e-01,  8.9326e-01,  ...,  1.1900e+00,
           -7.1687e-01, -1.7912e+00],
          [-1.8122e+00,  3.9029e-01, -3.0327e-01,  ...,  2.0359e+00,
           -1.1759e+00, -1.7844e+00],
          [ 4.7331e-01,  2.4851e-01,  4.6732e-01,  ..., -1.4872e+00,
           -1.3614e+00,  9.2154e-01],
          ...,
          [ 6.9002e-01, -5.3453e-01, -1.0394e+00,  ...,  1.2692e+00,
           -7.5504e-01,  2.7701e-01],
          [ 2.7723e-01,  2.5468e-01, -5.7844e-01,  ..., -3.8228e-01,
           -1.4560e+00,  1.3896e+00],
          [ 1.0136e-01, -3.4862e-01, -4.6787e-01,  ..., -1.3164e+00,
           -8.3070e-02,  1.0222e-01]],

         [[-1.1848e+00, -5.7483e-02,  2.5537e-01,  ..., -9.5127e-01,
           -2.4688e+00,  8.6371e-01],
          [-4.7750e-01,  5.7920e-01, -2.3543e-01,  ..., -1.6945e+00,
            7.7767e-01, -9.4256e-01],
          [ 8.1240e-04,  4.6970e-01,  3.7409e-01,  ..., -5.0196e-01,
            1.1942e+00, -1.2867e+00],
          ...,
          [-1.5399e+00, -1.2757e+00, -1.0392e-01,  ..., -1.7044e+00,
           -8.7056e-01, -1.0169e-01],
          [ 2.1338e-01, -3.9026e-01, -9.8817e-01,  ...,  2.7934e-01,
            1.0330e+00,  2.0550e+00],
          [-1.7372e+00, -2.3595e+00,  6.1837e-01,  ...,  4.3351e-01,
            8.2039e-01,  3.8442e-01]]],


        [[[ 4.3239e-01, -1.2754e+00, -3.3879e-01,  ...,  2.2410e-01,
           -1.2246e+00, -1.6599e+00],
          [ 1.0775e+00, -1.2678e+00, -7.2713e-01,  ...,  1.3932e-01,
            7.7141e-02, -1.3174e+00],
          [ 9.8965e-01, -1.5937e-02,  1.4199e+00,  ...,  2.9385e-01,
            5.8025e-01, -2.7988e+00],
          ...,
          [ 1.3941e-01, -6.6800e-01, -1.2080e+00,  ...,  8.6879e-01,
            4.3696e-01,  4.2788e-01],
          [ 8.1247e-01, -1.7529e+00,  7.1599e-02,  ..., -7.4120e-01,
            1.4845e+00,  1.3712e+00],
          [ 7.7393e-01,  9.1851e-01, -1.5605e+00,  ..., -6.6297e-01,
            1.3161e+00,  1.4649e-01]],

         [[-4.1381e-01,  1.8823e+00,  7.3943e-01,  ..., -6.7961e-01,
            2.9239e-01, -4.2257e-01],
          [ 1.0831e+00, -2.4600e+00,  7.0073e-01,  ...,  5.8969e-01,
            6.6783e-01,  1.1500e+00],
          [ 1.8435e+00,  8.4507e-01, -5.2397e-02,  ...,  5.5951e-01,
           -1.7212e+00, -8.4382e-01],
          ...,
          [-4.7670e-01, -5.5976e-01,  1.5163e-01,  ...,  7.4708e-01,
            6.0075e-01, -7.9357e-01],
          [ 1.9105e+00,  2.2024e+00, -9.9525e-01,  ...,  9.3502e-01,
            1.5354e+00, -1.0220e+00],
          [ 1.1688e+00, -1.2169e+00, -3.3776e-01,  ..., -8.3577e-01,
           -1.3912e-01,  2.1583e-01]]]], device='cuda:0') torch.Size([4, 2, 128, 32])
tensor([[[-1.4251, -1.6546, -1.4805,  ...,  0.0438,  0.4213, -0.5809],
         [-0.7789,  0.0166,  0.8981,  ..., -0.3333, -0.7865, -0.0239],
         [-0.1065,  1.0401,  1.3920,  ..., -0.7100,  1.3517, -2.2668],
         ...,
         [ 0.3962, -0.4977, -1.0970,  ..., -1.8671,  1.3580, -0.1061],
         [ 1.3268, -0.0150, -0.6211,  ..., -0.9726, -0.2671, -1.2496],
         [-0.9129,  0.4265,  0.6267,  ..., -0.7018, -0.0598, -1.0359]],

        [[ 1.4086, -0.3092,  0.2824,  ...,  0.2247,  1.1093,  0.2549],
         [ 1.2068, -0.4928,  0.6934,  ..., -1.4344, -1.2468,  0.6541],
         [-0.2607, -0.7642,  2.8576,  ..., -0.0542,  0.4541, -1.2354],
         ...,
         [-0.0802, -0.4361,  1.5384,  ..., -1.0605,  0.7782,  0.3227],
         [ 0.0181,  1.2836,  0.9338,  ..., -0.6728, -1.6076, -0.1008],
         [ 1.9397, -0.1075,  1.8309,  ...,  0.3825, -1.2533,  0.0333]]],
       device='cuda:0', grad_fn=<SelectBackward>)
tensor([[[-0.3941, -0.5050,  0.3176,  ..., -1.3971,  0.0569, -1.5038],
         [ 0.1707,  0.3299, -0.4410,  ..., -1.7029,  0.3479,  0.3825],
         [ 1.1545,  0.5573, -1.5057,  ..., -0.3311, -0.4427, -0.0567],
         ...,
         [-0.4649, -0.1020, -3.3107,  ...,  0.0287, -0.5914,  0.1045],
         [-1.2023,  0.1009, -1.1447,  ..., -0.0073, -2.1741,  0.9007],
         [ 0.3368,  0.3454,  0.6455,  ..., -1.7397, -1.7677, -1.5924]],

        [[-0.5418, -0.8023, -1.1893,  ..., -0.1226,  0.2100,  0.4631],
         [ 2.4217,  0.0590,  0.9908,  ..., -0.4055, -0.3816, -0.3418],
         [ 0.0075,  2.0082,  0.7693,  ...,  0.0545,  0.3550,  1.4382],
         ...,
         [ 0.8226, -0.4174, -0.0318,  ..., -0.6291, -0.3930, -0.0896],
         [-0.3391, -0.2668,  0.2965,  ...,  0.5860,  0.0588,  0.1896],
         [ 0.0046, -0.0268,  1.0551,  ...,  0.1354, -1.2619, -0.0688]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 8037.092, Val Loss : 36913.824
======> Trajectory Loss : 6633.371, Gravity Loss : 0.001, EndOfTrajectory Loss : 1.377, BelowGroundPenalize Loss : 1265.988
Opening in existing browser session.
[1019/152806.427437:ERROR:nacl_helper_linux.cc(308)] NaCl helper process running without a sandbox!
Most likely you need to configure your SUID sandbox correctly
Opening in existing browser session.
[1019/152806.770856:ERROR:nacl_helper_linux.cc(308)] NaCl helper process running without a sandbox!
Most likely you need to configure your SUID sandbox correctly
===> [Minibatch 2/129].........tensor([[[-1.4251, -1.6546, -1.4805,  ...,  0.0438,  0.4213, -0.5809],
         [-0.7789,  0.0166,  0.8981,  ..., -0.3333, -0.7865, -0.0239],
         [-0.1065,  1.0401,  1.3920,  ..., -0.7100,  1.3517, -2.2668],
         ...,
         [ 0.3962, -0.4977, -1.0970,  ..., -1.8671,  1.3580, -0.1061],
         [ 1.3268, -0.0150, -0.6211,  ..., -0.9726, -0.2671, -1.2496],
         [-0.9129,  0.4265,  0.6267,  ..., -0.7018, -0.0598, -1.0359]],

        [[ 1.4086, -0.3092,  0.2824,  ...,  0.2247,  1.1093,  0.2549],
         [ 1.2068, -0.4928,  0.6934,  ..., -1.4344, -1.2468,  0.6541],
         [-0.2607, -0.7642,  2.8576,  ..., -0.0542,  0.4541, -1.2354],
         ...,
         [-0.0802, -0.4361,  1.5384,  ..., -1.0605,  0.7782,  0.3227],
         [ 0.0181,  1.2836,  0.9338,  ..., -0.6728, -1.6076, -0.1008],
         [ 1.9397, -0.1075,  1.8309,  ...,  0.3825, -1.2533,  0.0333]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Opening in existing browser session.
[1019/152807.046239:ERROR:nacl_helper_linux.cc(308)] NaCl helper process running without a sandbox!
Most likely you need to configure your SUID sandbox correctly
tensor([[[-0.3941, -0.5050,  0.3176,  ..., -1.3971,  0.0569, -1.5038],
         [ 0.1707,  0.3299, -0.4410,  ..., -1.7029,  0.3479,  0.3825],
         [ 1.1545,  0.5573, -1.5057,  ..., -0.3311, -0.4427, -0.0567],
         ...,
         [-0.4649, -0.1020, -3.3107,  ...,  0.0287, -0.5914,  0.1045],
         [-1.2023,  0.1009, -1.1447,  ..., -0.0073, -2.1741,  0.9007],
         [ 0.3368,  0.3454,  0.6455,  ..., -1.7397, -1.7677, -1.5924]],

        [[-0.5418, -0.8023, -1.1893,  ..., -0.1226,  0.2100,  0.4631],
         [ 2.4217,  0.0590,  0.9908,  ..., -0.4055, -0.3816, -0.3418],
         [ 0.0075,  2.0082,  0.7693,  ...,  0.0545,  0.3550,  1.4382],
         ...,
         [ 0.8226, -0.4174, -0.0318,  ..., -0.6291, -0.3930, -0.0896],
         [-0.3391, -0.2668,  0.2965,  ...,  0.5860,  0.0588,  0.1896],
         [ 0.0046, -0.0268,  1.0551,  ...,  0.1354, -1.2619, -0.0688]]],
       device='cuda:0', grad_fn=<SelectBackward>)
initial_hidden tensor([[[[-3.8534e-01, -5.1044e-01,  3.1002e-01,  ..., -1.3950e+00,
            6.6069e-02, -1.5080e+00],
          [ 1.7991e-01,  3.2043e-01, -4.3232e-01,  ..., -1.7116e+00,
            3.4473e-01,  3.7373e-01],
          [ 1.1642e+00,  5.6093e-01, -1.5153e+00,  ..., -3.2311e-01,
           -4.5137e-01, -6.3609e-02],
          ...,
          [-4.5738e-01, -1.0982e-01, -3.3161e+00,  ...,  2.1549e-02,
           -5.8797e-01,  9.7051e-02],
          [-1.1938e+00,  1.0310e-01, -1.1385e+00,  ..., -1.4971e-02,
           -2.1684e+00,  8.9216e-01],
          [ 3.4458e-01,  3.5285e-01,  6.3890e-01,  ..., -1.7348e+00,
           -1.7751e+00, -1.5980e+00]],

         [[-5.3460e-01, -8.0834e-01, -1.1964e+00,  ..., -1.2822e-01,
            2.1626e-01,  4.6786e-01],
          [ 2.4289e+00,  5.1740e-02,  9.9721e-01,  ..., -3.9977e-01,
           -3.7328e-01, -3.3328e-01],
          [ 1.5172e-02,  2.0000e+00,  7.6054e-01,  ...,  4.5337e-02,
            3.6446e-01,  1.4350e+00],
          ...,
          [ 8.2931e-01, -4.2401e-01, -3.8401e-02,  ..., -6.2397e-01,
           -3.8602e-01, -8.3596e-02],
          [-3.3353e-01, -2.7077e-01,  2.9206e-01,  ...,  5.8219e-01,
            6.3524e-02,  1.9242e-01],
          [ 1.1690e-02, -3.3909e-02,  1.0482e+00,  ...,  1.3119e-01,
           -1.2557e+00, -6.1830e-02]]],


        [[[ 5.1917e-01, -1.7197e+00,  8.3369e-01,  ..., -2.2901e-02,
           -2.4874e+00,  4.1765e-01],
          [-4.9103e-01,  3.6925e-01,  4.3131e-01,  ...,  7.3834e-01,
           -2.5197e+00,  3.2168e-01],
          [-1.4718e+00, -4.9495e-01,  1.8699e+00,  ..., -1.4951e+00,
           -2.0383e+00, -1.4323e-01],
          ...,
          [-1.2391e+00,  1.2293e+00, -6.2063e-01,  ...,  6.7895e-01,
           -5.4036e-01, -3.1563e-01],
          [ 8.2469e-02,  1.2605e+00,  5.5957e-01,  ...,  5.0442e-01,
            6.4316e-03,  1.1953e+00],
          [ 2.1720e+00, -2.9967e-01, -4.6502e-01,  ...,  4.0370e-01,
           -3.8862e-01,  7.8337e-01]],

         [[ 5.4104e-01,  5.3423e-01,  1.4953e+00,  ..., -1.4174e-01,
           -6.0941e-01,  2.0768e+00],
          [-9.1778e-01,  7.8025e-01,  5.6689e-01,  ..., -3.0016e-01,
           -7.2877e-01, -6.2637e-01],
          [ 7.0366e-02,  1.1558e+00, -1.0986e+00,  ...,  5.9862e-01,
            1.1894e+00, -1.9642e-01],
          ...,
          [-1.2577e+00, -1.9470e-03, -7.5534e-01,  ..., -1.6873e+00,
            2.0040e+00, -1.3019e+00],
          [ 2.2496e+00, -2.3582e+00, -1.0243e+00,  ..., -1.2067e+00,
            9.9712e-01,  2.2247e-01],
          [-2.1816e-01, -7.2587e-01, -8.6015e-01,  ..., -6.8434e-01,
            2.1527e-02, -2.3090e+00]]],


        [[[ 2.9968e-01,  9.7388e-01,  5.3344e-01,  ...,  1.3217e+00,
            7.9925e-01,  1.1180e-01],
          [ 7.3691e-01, -4.2758e-01, -5.6284e-01,  ..., -1.7668e+00,
            1.3662e+00,  1.5865e+00],
          [ 1.4855e+00, -8.7559e-01,  7.8720e-01,  ..., -7.1434e-01,
            1.1906e+00,  6.3160e-01],
          ...,
          [ 6.5336e-01,  1.6735e+00,  8.5211e-01,  ..., -5.7694e-01,
           -1.3506e+00,  8.0069e-02],
          [-3.2574e-01, -5.6898e-01, -3.2656e-01,  ...,  3.4689e-01,
           -4.8918e-01,  3.6479e-01],
          [-1.3248e+00, -1.0766e+00,  1.7223e+00,  ...,  7.7290e-01,
            5.1776e-01, -1.7835e+00]],

         [[-6.9558e-01, -1.9924e+00,  6.5472e-01,  ..., -2.3619e+00,
            6.1816e-01, -2.5298e+00],
          [ 1.0503e+00, -9.1489e-01,  3.0286e-01,  ...,  1.1000e+00,
            6.0312e-01,  1.9995e-01],
          [ 1.9488e+00,  2.1136e-01, -2.2489e-01,  ...,  8.5412e-01,
            5.5172e-01, -3.1298e-01],
          ...,
          [-1.3309e+00,  2.1799e+00, -9.1314e-01,  ..., -6.7856e-01,
            1.4746e+00, -3.3949e-01],
          [ 1.4418e+00, -1.2468e+00, -2.4614e-01,  ...,  4.9930e-01,
           -1.1196e+00,  1.1435e+00],
          [-1.8838e+00, -1.1603e-01, -6.6039e-01,  ...,  4.6528e-01,
           -1.1311e+00, -7.2945e-01]]],


        [[[-2.3386e+00, -2.1996e+00, -1.8279e-01,  ...,  7.0886e-01,
            7.0411e-01, -9.8255e-01],
          [ 3.5705e-02, -1.8996e-02,  1.3382e+00,  ...,  1.1072e+00,
            1.2563e+00,  1.1285e+00],
          [ 1.1493e+00, -9.3477e-01, -9.8204e-01,  ...,  1.0328e-01,
            1.0007e+00,  1.9894e-01],
          ...,
          [-1.4355e+00, -2.2294e+00, -1.7038e+00,  ...,  5.4894e-01,
            9.3703e-01,  8.9635e-01],
          [ 1.3124e+00, -4.4250e-01,  3.2110e-01,  ..., -8.4659e-01,
            1.5302e-01,  2.0247e-01],
          [ 1.6106e-01,  1.4151e+00,  3.6737e-01,  ..., -1.6748e-01,
           -1.7394e+00,  1.3146e+00]],

         [[ 1.4859e+00,  3.0102e-01,  6.0718e-01,  ...,  1.1517e+00,
            8.9517e-01,  4.9065e-01],
          [ 9.6045e-01,  8.9001e-01,  1.5490e-01,  ..., -1.3025e+00,
           -7.4703e-01,  2.0665e+00],
          [ 9.9893e-01, -6.6526e-01, -1.2378e+00,  ...,  2.1578e-01,
           -8.6345e-02,  6.6033e-01],
          ...,
          [-3.6031e-01,  3.7020e-01,  5.0622e-01,  ..., -4.9017e-01,
            2.8579e-01,  1.0996e+00],
          [ 6.2048e-01, -1.0806e-01, -5.7664e-01,  ..., -3.2045e-01,
            8.4007e-02,  7.8385e-01],
          [-5.8300e-01,  2.2786e-01, -3.5971e-01,  ...,  4.0717e-01,
           -1.4478e-01, -3.8080e-01]]]], device='cuda:0') torch.Size([4, 2, 128, 32])
initial_cell tensor([[[[ 0.0165,  0.5398,  2.5943,  ...,  0.5236,  0.4060, -1.4460],
          [ 0.4112,  0.0808, -0.1097,  ...,  1.8771, -1.6494,  0.7273],
          [-0.4547, -0.5108,  0.0932,  ...,  0.6771,  0.0768,  0.5225],
          ...,
          [-0.9438,  0.0506, -1.5640,  ..., -0.1891, -0.0056,  0.2132],
          [ 0.3824,  0.2066, -0.7801,  ...,  0.9705,  0.9556, -1.8531],
          [ 0.5616, -1.1856, -1.2641,  ..., -1.1733, -0.3610, -0.2580]],

         [[-0.3205, -0.0093,  0.2326,  ...,  1.9805,  1.0459,  0.3171],
          [-0.3428, -1.5860,  2.2970,  ...,  0.5972,  0.1431,  0.6735],
          [ 0.4377, -0.0868, -0.2245,  ...,  0.3053,  0.0917, -0.3210],
          ...,
          [-0.1926,  0.3625,  0.3259,  ...,  1.0911, -0.3831, -0.1932],
          [ 0.4660,  1.0675, -0.6596,  ...,  0.4068,  1.1569,  0.8955],
          [ 0.2398,  2.9612,  1.2775,  ..., -0.0776,  0.9376, -0.3300]]],


        [[[ 0.7591, -0.6815, -0.7218,  ...,  0.3462, -0.2715, -1.1098],
          [ 2.3249,  0.4700, -0.7653,  ...,  0.3339, -0.0811, -0.2949],
          [ 1.7115,  1.7710, -0.3643,  ..., -1.8626,  1.0525, -0.6030],
          ...,
          [-0.0567,  0.5269,  1.2876,  ...,  0.1664,  0.5074,  1.5318],
          [-0.4031, -0.1536,  1.0161,  ...,  0.0271,  0.7059, -0.6298],
          [ 1.0723, -0.3026,  0.1287,  ...,  0.0759, -0.1125,  0.3509]],

         [[ 0.2163, -0.1989,  0.1086,  ..., -0.7018,  0.2960, -1.5548],
          [-2.1610, -0.2922,  0.8043,  ...,  0.0581, -0.2831, -0.4564],
          [-1.3808,  0.7316,  0.6165,  ..., -0.0810,  0.9601,  0.1128],
          ...,
          [ 1.1373, -2.2130,  1.0712,  ..., -0.0663, -0.1043, -0.1576],
          [ 0.8135,  0.3441,  0.5613,  ...,  0.3522, -0.0316,  0.1131],
          [-1.5825,  1.2815,  0.2219,  ..., -0.9060,  0.3000,  0.4794]]],


        [[[ 0.8788, -0.6776,  0.9014,  ...,  1.1830, -0.7209, -1.7857],
          [-1.8055,  0.3819, -0.2941,  ...,  2.0453, -1.1839, -1.7773],
          [ 0.4822,  0.2386,  0.4706,  ..., -1.4821, -1.3708,  0.9287],
          ...,
          [ 0.6966, -0.5421, -1.0309,  ...,  1.2784, -0.7633,  0.2718],
          [ 0.2836,  0.2456, -0.5718,  ..., -0.3773, -1.4645,  1.3911],
          [ 0.1092, -0.3566, -0.4603,  ..., -1.3092, -0.0903,  0.1012]],

         [[-1.1809, -0.0594,  0.2635,  ..., -0.9577, -2.4762,  0.8715],
          [-0.4841,  0.5816, -0.2269,  ..., -1.7013,  0.7828, -0.9339],
          [-0.0075,  0.4607,  0.3816,  ..., -0.5095,  1.2000, -1.2773],
          ...,
          [-1.5341, -1.2689, -0.0962,  ..., -1.7105, -0.8644, -0.0942],
          [ 0.2137, -0.3889, -0.9850,  ...,  0.2741,  1.0265,  2.0625],
          [-1.7439, -2.3656,  0.6255,  ...,  0.4276,  0.8269,  0.3918]]],


        [[[ 0.4408, -1.2848, -0.3300,  ...,  0.2282, -1.2259, -1.6661],
          [ 1.0712, -1.2758, -0.7188,  ...,  0.1489,  0.0682, -1.3121],
          [ 0.9938, -0.0258,  1.4261,  ...,  0.3010,  0.5709, -2.8038],
          ...,
          [ 0.1339, -0.6753, -1.1996,  ...,  0.8777,  0.4278,  0.4210],
          [ 0.8186, -1.7616,  0.0759,  ..., -0.7356,  1.4769,  1.3648],
          [ 0.7812,  0.9105, -1.5530,  ..., -0.6556,  1.3088,  0.1391]],

         [[-0.4091,  1.8753,  0.7481,  ..., -0.6827,  0.2856, -0.4153],
          [ 1.0755, -2.4683,  0.7092,  ...,  0.5937,  0.6712,  1.1586],
          [ 1.8500,  0.8354, -0.0448,  ...,  0.5525, -1.7144, -0.8343],
          ...,
          [-0.4716, -0.5530,  0.1596,  ...,  0.7526,  0.6030, -0.7866],
          [ 1.9091,  2.1982, -0.9897,  ...,  0.9299,  1.5291, -1.0138],
          [ 1.1621, -1.2242, -0.3303,  ..., -0.8405, -0.1330,  0.2232]]]],
       device='cuda:0') torch.Size([4, 2, 128, 32])
tensor([[[-1.4341, -1.6633, -1.4890,  ...,  0.0402,  0.4264, -0.5878],
         [-0.7854,  0.0238,  0.8910,  ..., -0.3285, -0.7784, -0.0283],
         [-0.1120,  1.0330,  1.3858,  ..., -0.7036,  1.3448, -2.2738],
         ...,
         [ 0.3872, -0.5070, -1.1052,  ..., -1.8694,  1.3526, -0.1150],
         [ 1.3320, -0.0227, -0.6294,  ..., -0.9667, -0.2714, -1.2568],
         [-0.9164,  0.4199,  0.6198,  ..., -0.6986, -0.0537, -1.0417]],

        [[ 1.4186, -0.3182,  0.2756,  ...,  0.2203,  1.1185,  0.2644],
         [ 1.2164, -0.4862,  0.6991,  ..., -1.4439, -1.2566,  0.6459],
         [-0.2557, -0.7713,  2.8498,  ..., -0.0631,  0.4442, -1.2449],
         ...,
         [-0.0769, -0.4427,  1.5474,  ..., -1.0685,  0.7738,  0.3128],
         [ 0.0267,  1.2746,  0.9438,  ..., -0.6687, -1.6011, -0.1105],
         [ 1.9489, -0.1170,  1.8391,  ...,  0.3729, -1.2467,  0.0291]]],
       device='cuda:0', grad_fn=<SelectBackward>)
tensor([[[-0.3853, -0.5104,  0.3100,  ..., -1.3950,  0.0661, -1.5080],
         [ 0.1799,  0.3204, -0.4323,  ..., -1.7116,  0.3447,  0.3737],
         [ 1.1642,  0.5609, -1.5153,  ..., -0.3231, -0.4514, -0.0636],
         ...,
         [-0.4574, -0.1098, -3.3161,  ...,  0.0215, -0.5880,  0.0971],
         [-1.1938,  0.1031, -1.1385,  ..., -0.0150, -2.1684,  0.8922],
         [ 0.3446,  0.3528,  0.6389,  ..., -1.7348, -1.7751, -1.5980]],

        [[-0.5346, -0.8083, -1.1964,  ..., -0.1282,  0.2163,  0.4679],
         [ 2.4289,  0.0517,  0.9972,  ..., -0.3998, -0.3733, -0.3333],
         [ 0.0152,  2.0000,  0.7605,  ...,  0.0453,  0.3645,  1.4350],
         ...,
         [ 0.8293, -0.4240, -0.0384,  ..., -0.6240, -0.3860, -0.0836],
         [-0.3335, -0.2708,  0.2921,  ...,  0.5822,  0.0635,  0.1924],
         [ 0.0117, -0.0339,  1.0482,  ...,  0.1312, -1.2557, -0.0618]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 7178.299, Val Loss : 32685.170
======> Trajectory Loss : 5854.783, Gravity Loss : 0.001, EndOfTrajectory Loss : 1.377, BelowGroundPenalize Loss : 1185.787
===> [Minibatch 3/129].........tensor([[[-1.4341, -1.6633, -1.4890,  ...,  0.0402,  0.4264, -0.5878],
         [-0.7854,  0.0238,  0.8910,  ..., -0.3285, -0.7784, -0.0283],
         [-0.1120,  1.0330,  1.3858,  ..., -0.7036,  1.3448, -2.2738],
         ...,
         [ 0.3872, -0.5070, -1.1052,  ..., -1.8694,  1.3526, -0.1150],
         [ 1.3320, -0.0227, -0.6294,  ..., -0.9667, -0.2714, -1.2568],
         [-0.9164,  0.4199,  0.6198,  ..., -0.6986, -0.0537, -1.0417]],

        [[ 1.4186, -0.3182,  0.2756,  ...,  0.2203,  1.1185,  0.2644],
         [ 1.2164, -0.4862,  0.6991,  ..., -1.4439, -1.2566,  0.6459],
         [-0.2557, -0.7713,  2.8498,  ..., -0.0631,  0.4442, -1.2449],
         ...,
         [-0.0769, -0.4427,  1.5474,  ..., -1.0685,  0.7738,  0.3128],
         [ 0.0267,  1.2746,  0.9438,  ..., -0.6687, -1.6011, -0.1105],
         [ 1.9489, -0.1170,  1.8391,  ...,  0.3729, -1.2467,  0.0291]]],
       device='cuda:0', grad_fn=<SelectBackward>)
tensor([[[-0.3853, -0.5104,  0.3100,  ..., -1.3950,  0.0661, -1.5080],
         [ 0.1799,  0.3204, -0.4323,  ..., -1.7116,  0.3447,  0.3737],
         [ 1.1642,  0.5609, -1.5153,  ..., -0.3231, -0.4514, -0.0636],
         ...,
         [-0.4574, -0.1098, -3.3161,  ...,  0.0215, -0.5880,  0.0971],
         [-1.1938,  0.1031, -1.1385,  ..., -0.0150, -2.1684,  0.8922],
         [ 0.3446,  0.3528,  0.6389,  ..., -1.7348, -1.7751, -1.5980]],

        [[-0.5346, -0.8083, -1.1964,  ..., -0.1282,  0.2163,  0.4679],
         [ 2.4289,  0.0517,  0.9972,  ..., -0.3998, -0.3733, -0.3333],
         [ 0.0152,  2.0000,  0.7605,  ...,  0.0453,  0.3645,  1.4350],
         ...,
         [ 0.8293, -0.4240, -0.0384,  ..., -0.6240, -0.3860, -0.0836],
         [-0.3335, -0.2708,  0.2921,  ...,  0.5822,  0.0635,  0.1924],
         [ 0.0117, -0.0339,  1.0482,  ...,  0.1312, -1.2557, -0.0618]]],
       device='cuda:0', grad_fn=<SelectBackward>)
initial_hidden tensor([[[[-3.7858e-01, -5.1462e-01,  3.0415e-01,  ..., -1.3937e+00,
            7.3130e-02, -1.5110e+00],
          [ 1.8723e-01,  3.1273e-01, -4.2547e-01,  ..., -1.7190e+00,
            3.4307e-01,  3.6782e-01],
          [ 1.1716e+00,  5.6330e-01, -1.5221e+00,  ..., -3.1740e-01,
           -4.5795e-01, -6.8742e-02],
          ...,
          [-4.5146e-01, -1.1606e-01, -3.3195e+00,  ...,  1.5673e-02,
           -5.8542e-01,  9.1462e-02],
          [-1.1861e+00,  1.0412e-01, -1.1334e+00,  ..., -2.1693e-02,
           -2.1637e+00,  8.8536e-01],
          [ 3.5045e-01,  3.5842e-01,  6.3617e-01,  ..., -1.7367e+00,
           -1.7806e+00, -1.5985e+00]],

         [[-5.2911e-01, -8.1237e-01, -1.2018e+00,  ..., -1.3240e-01,
            2.2079e-01,  4.7114e-01],
          [ 2.4343e+00,  4.6395e-02,  1.0012e+00,  ..., -3.9542e-01,
           -3.6700e-01, -3.2695e-01],
          [ 2.0685e-02,  1.9940e+00,  7.5361e-01,  ...,  3.8308e-02,
            3.7164e-01,  1.4319e+00],
          ...,
          [ 8.3460e-01, -4.2892e-01, -4.3554e-02,  ..., -6.2014e-01,
           -3.8073e-01, -7.9079e-02],
          [-3.2949e-01, -2.7248e-01,  2.8823e-01,  ...,  5.7907e-01,
            6.5978e-02,  1.9361e-01],
          [ 1.7147e-02, -3.8530e-02,  1.0428e+00,  ...,  1.2780e-01,
           -1.2507e+00, -5.6733e-02]]],


        [[[ 5.2618e-01, -1.7123e+00,  8.2690e-01,  ..., -2.6077e-02,
           -2.4934e+00,  4.1216e-01],
          [-4.8459e-01,  3.7681e-01,  4.2478e-01,  ...,  7.3868e-01,
           -2.5247e+00,  3.1465e-01],
          [-1.4642e+00, -4.8720e-01,  1.8624e+00,  ..., -1.5030e+00,
           -2.0436e+00, -1.4910e-01],
          ...,
          [-1.2331e+00,  1.2359e+00, -6.2570e-01,  ...,  6.7285e-01,
           -5.4662e-01, -3.2091e-01],
          [ 9.0130e-02,  1.2683e+00,  5.5446e-01,  ...,  4.9855e-01,
            2.1086e-03,  1.1889e+00],
          [ 2.1780e+00, -2.9304e-01, -4.7003e-01,  ...,  3.9933e-01,
           -3.9317e-01,  7.7795e-01]],

         [[ 5.3704e-01,  5.3740e-01,  1.5004e+00,  ..., -1.4520e-01,
           -6.0733e-01,  2.0784e+00],
          [-9.2355e-01,  7.8538e-01,  5.7336e-01,  ..., -3.0222e-01,
           -7.3247e-01, -6.2054e-01],
          [ 6.4078e-02,  1.1626e+00, -1.0955e+00,  ...,  6.0489e-01,
            1.1955e+00, -2.0253e-01],
          ...,
          [-1.2623e+00,  3.3297e-03, -7.5008e-01,  ..., -1.6914e+00,
            1.9990e+00, -1.2966e+00],
          [ 2.2532e+00, -2.3603e+00, -1.0219e+00,  ..., -1.2108e+00,
            1.0011e+00,  2.2315e-01],
          [-2.2311e-01, -7.2385e-01, -8.5476e-01,  ..., -6.8685e-01,
            2.6545e-02, -2.3034e+00]]],


        [[[ 2.9731e-01,  9.6717e-01,  5.3788e-01,  ...,  1.3162e+00,
            7.9627e-01,  1.0648e-01],
          [ 7.4385e-01, -4.2053e-01, -5.5613e-01,  ..., -1.7742e+00,
            1.3598e+00,  1.5895e+00],
          [ 1.4830e+00, -8.7675e-01,  7.8063e-01,  ..., -7.1653e-01,
            1.1838e+00,  6.3855e-01],
          ...,
          [ 6.5878e-01,  1.6789e+00,  8.5724e-01,  ..., -5.8049e-01,
           -1.3536e+00,  8.5874e-02],
          [-3.1972e-01, -5.7491e-01, -3.2241e-01,  ...,  3.4425e-01,
           -4.9630e-01,  3.7158e-01],
          [-1.3304e+00, -1.0825e+00,  1.7251e+00,  ...,  7.7447e-01,
            5.2409e-01, -1.7775e+00]],

         [[-6.9612e-01, -1.9954e+00,  6.5061e-01,  ..., -2.3635e+00,
            6.1308e-01, -2.5260e+00],
          [ 1.0453e+00, -9.1768e-01,  2.9793e-01,  ...,  1.1065e+00,
            6.0944e-01,  2.0377e-01],
          [ 1.9537e+00,  2.1650e-01, -2.3144e-01,  ...,  8.5998e-01,
            5.4566e-01, -3.0717e-01],
          ...,
          [-1.3355e+00,  2.1846e+00, -9.1782e-01,  ..., -6.8276e-01,
            1.4788e+00, -3.4372e-01],
          [ 1.4449e+00, -1.2488e+00, -2.4996e-01,  ...,  4.9619e-01,
           -1.1230e+00,  1.1460e+00],
          [-1.8782e+00, -1.2036e-01, -6.6614e-01,  ...,  4.7073e-01,
           -1.1284e+00, -7.3006e-01]]],


        [[[-2.3443e+00, -2.1937e+00, -1.8991e-01,  ...,  7.0673e-01,
            6.9748e-01, -9.8562e-01],
          [ 2.8558e-02, -1.2292e-02,  1.3415e+00,  ...,  1.1131e+00,
            1.2524e+00,  1.1216e+00],
          [ 1.1422e+00, -9.2831e-01, -9.7759e-01,  ...,  1.0994e-01,
            9.9328e-01,  1.9144e-01],
          ...,
          [-1.4399e+00, -2.2295e+00, -1.7027e+00,  ...,  5.5419e-01,
            9.3083e-01,  8.9042e-01],
          [ 1.3070e+00, -4.3618e-01,  3.2061e-01,  ..., -8.4244e-01,
            1.4846e-01,  1.9617e-01],
          [ 1.5606e-01,  1.4216e+00,  3.7258e-01,  ..., -1.7335e-01,
           -1.7452e+00,  1.3198e+00]],

         [[ 1.4908e+00,  3.0084e-01,  6.1072e-01,  ...,  1.1538e+00,
            8.9830e-01,  4.9268e-01],
          [ 9.6526e-01,  8.8369e-01,  1.6015e-01,  ..., -1.3041e+00,
           -7.5303e-01,  2.0645e+00],
          [ 1.0037e+00, -6.6909e-01, -1.2432e+00,  ...,  2.1827e-01,
           -8.2885e-02,  6.6628e-01],
          ...,
          [-3.5587e-01,  3.6589e-01,  5.1022e-01,  ..., -4.9434e-01,
            2.8134e-01,  1.1041e+00],
          [ 6.2166e-01, -1.0612e-01, -5.7790e-01,  ..., -3.2331e-01,
            8.1837e-02,  7.8503e-01],
          [-5.7746e-01,  2.2285e-01, -3.6420e-01,  ...,  4.1279e-01,
           -1.4994e-01, -3.8565e-01]]]], device='cuda:0') torch.Size([4, 2, 128, 32])
initial_cell tensor([[[[ 0.0228,  0.5323,  2.5985,  ...,  0.5190,  0.4049, -1.4481],
          [ 0.4135,  0.0737, -0.1043,  ...,  1.8839, -1.6574,  0.7300],
          [-0.4482, -0.5185,  0.0930,  ...,  0.6756,  0.0721,  0.5182],
          ...,
          [-0.9389,  0.0448, -1.5569,  ..., -0.1927, -0.0109,  0.2082],
          [ 0.3841,  0.2001, -0.7749,  ...,  0.9642,  0.9489, -1.8558],
          [ 0.5669, -1.1915, -1.2579,  ..., -1.1707, -0.3672, -0.2625]],

         [[-0.3234, -0.0118,  0.2387,  ...,  1.9755,  1.0445,  0.3241],
          [-0.3484, -1.5901,  2.3032,  ...,  0.5911,  0.1470,  0.6813],
          [ 0.4310, -0.0935, -0.2176,  ...,  0.2980,  0.0973, -0.3133],
          ...,
          [-0.1973,  0.3598,  0.3318,  ...,  1.0859, -0.3783, -0.1873],
          [ 0.4624,  1.0678, -0.6558,  ...,  0.4010,  1.1538,  0.9018],
          [ 0.2343,  2.9651,  1.2829,  ..., -0.0833,  0.9414, -0.3241]]],


        [[[ 0.7662, -0.6876, -0.7148,  ...,  0.3404, -0.2773, -1.1163],
          [ 2.3298,  0.4623, -0.7640,  ...,  0.3423, -0.0878, -0.2993],
          [ 1.7188,  1.7641, -0.3677,  ..., -1.8676,  1.0446, -0.6093],
          ...,
          [-0.0515,  0.5212,  1.2931,  ...,  0.1650,  0.5002,  1.5265],
          [-0.3972, -0.1587,  1.0190,  ...,  0.0253,  0.6983, -0.6344],
          [ 1.0782, -0.3059,  0.1350,  ...,  0.0817, -0.1189,  0.3458]],

         [[ 0.2139, -0.1931,  0.1152,  ..., -0.7073,  0.2911, -1.5485],
          [-2.1658, -0.2871,  0.8110,  ...,  0.0519, -0.2796, -0.4495],
          [-1.3870,  0.7253,  0.6234,  ..., -0.0881,  0.9652,  0.1200],
          ...,
          [ 1.1336, -2.2076,  1.0769,  ..., -0.0716, -0.1047, -0.1522],
          [ 0.8121,  0.3477,  0.5671,  ...,  0.3448, -0.0359,  0.1196],
          [-1.5877,  1.2796,  0.2278,  ..., -0.9116,  0.3016,  0.4854]]],


        [[[ 0.8847, -0.6851,  0.9078,  ...,  1.1787, -0.7247, -1.7809],
          [-1.8011,  0.3749, -0.2855,  ...,  2.0534, -1.1909, -1.7711],
          [ 0.4888,  0.2310,  0.4734,  ..., -1.4755, -1.3786,  0.9346],
          ...,
          [ 0.7015, -0.5480, -1.0236,  ...,  1.2860, -0.7701,  0.2680],
          [ 0.2878,  0.2383, -0.5654,  ..., -0.3715, -1.4719,  1.3950],
          [ 0.1146, -0.3629, -0.4540,  ..., -1.3032, -0.0964,  0.1027]],

         [[-1.1784, -0.0601,  0.2694,  ..., -0.9630, -2.4817,  0.8776],
          [-0.4890,  0.5843, -0.2209,  ..., -1.7073,  0.7867, -0.9268],
          [-0.0134,  0.4541,  0.3872,  ..., -0.5153,  1.2044, -1.2700],
          ...,
          [-1.5307, -1.2637, -0.0902,  ..., -1.7153, -0.8598, -0.0884],
          [ 0.2144, -0.3875, -0.9830,  ...,  0.2700,  1.0216,  2.0683],
          [-1.7488, -2.3699,  0.6308,  ...,  0.4229,  0.8311,  0.3976]]],


        [[[ 0.4462, -1.2921, -0.3231,  ...,  0.2325, -1.2278, -1.6700],
          [ 1.0651, -1.2826, -0.7114,  ...,  0.1572,  0.0606, -1.3064],
          [ 0.9963, -0.0334,  1.4308,  ...,  0.3086,  0.5618, -2.8071],
          ...,
          [ 0.1286, -0.6809, -1.1928,  ...,  0.8852,  0.4197,  0.4159],
          [ 0.8202, -1.7682,  0.0793,  ..., -0.7297,  1.4695,  1.3627],
          [ 0.7860,  0.9043, -1.5471,  ..., -0.6492,  1.3017,  0.1341]],

         [[-0.4059,  1.8702,  0.7544,  ..., -0.6858,  0.2807, -0.4094],
          [ 1.0698, -2.4742,  0.7153,  ...,  0.5928,  0.6739,  1.1656],
          [ 1.8548,  0.8281, -0.0390,  ...,  0.5467, -1.7093, -0.8269],
          ...,
          [-0.4685, -0.5482,  0.1657,  ...,  0.7543,  0.6047, -0.7813],
          [ 1.9084,  2.1954, -0.9860,  ...,  0.9253,  1.5247, -1.0074],
          [ 1.1569, -1.2298, -0.3246,  ..., -0.8447, -0.1286,  0.2290]]]],
       device='cuda:0') torch.Size([4, 2, 128, 32])
tensor([[[-1.4426, -1.6656, -1.4967,  ...,  0.0426,  0.4331, -0.5952],
         [-0.7932,  0.0256,  0.8831,  ..., -0.3214, -0.7723, -0.0352],
         [-0.1188,  1.0306,  1.3851,  ..., -0.7047,  1.3422, -2.2736],
         ...,
         [ 0.3780, -0.5161, -1.1124,  ..., -1.8747,  1.3564, -0.1240],
         [ 1.3275, -0.0308, -0.6377,  ..., -0.9702, -0.2775, -1.2629],
         [-0.9215,  0.4160,  0.6123,  ..., -0.6950, -0.0482, -1.0472]],

        [[ 1.4282, -0.3272,  0.2715,  ...,  0.2131,  1.1262,  0.2625],
         [ 1.2260, -0.4813,  0.7068,  ..., -1.4524, -1.2651,  0.6369],
         [-0.2485, -0.7780,  2.8421,  ..., -0.0594,  0.4359, -1.2405],
         ...,
         [-0.0716, -0.4508,  1.5566,  ..., -1.0774,  0.7666,  0.3029],
         [ 0.0346,  1.2680,  0.9418,  ..., -0.6741, -1.6047, -0.1203],
         [ 1.9554, -0.1150,  1.8479,  ...,  0.3697, -1.2414,  0.0317]]],
       device='cuda:0', grad_fn=<SelectBackward>)
tensor([[[-0.3786, -0.5146,  0.3041,  ..., -1.3937,  0.0731, -1.5110],
         [ 0.1872,  0.3127, -0.4255,  ..., -1.7190,  0.3431,  0.3678],
         [ 1.1716,  0.5633, -1.5221,  ..., -0.3174, -0.4580, -0.0687],
         ...,
         [-0.4515, -0.1161, -3.3195,  ...,  0.0157, -0.5854,  0.0915],
         [-1.1861,  0.1041, -1.1334,  ..., -0.0217, -2.1637,  0.8854],
         [ 0.3504,  0.3584,  0.6362,  ..., -1.7367, -1.7806, -1.5985]],

        [[-0.5291, -0.8124, -1.2018,  ..., -0.1324,  0.2208,  0.4711],
         [ 2.4343,  0.0464,  1.0012,  ..., -0.3954, -0.3670, -0.3269],
         [ 0.0207,  1.9940,  0.7536,  ...,  0.0383,  0.3716,  1.4319],
         ...,
         [ 0.8346, -0.4289, -0.0436,  ..., -0.6201, -0.3807, -0.0791],
         [-0.3295, -0.2725,  0.2882,  ...,  0.5791,  0.0660,  0.1936],
         [ 0.0171, -0.0385,  1.0428,  ...,  0.1278, -1.2507, -0.0567]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 7404.041, Val Loss : 28745.455
======> Trajectory Loss : 5991.780, Gravity Loss : 0.001, EndOfTrajectory Loss : 1.379, BelowGroundPenalize Loss : 1274.392
===> [Minibatch 4/129].........tensor([[[-1.4426, -1.6656, -1.4967,  ...,  0.0426,  0.4331, -0.5952],
         [-0.7932,  0.0256,  0.8831,  ..., -0.3214, -0.7723, -0.0352],
         [-0.1188,  1.0306,  1.3851,  ..., -0.7047,  1.3422, -2.2736],
         ...,
         [ 0.3780, -0.5161, -1.1124,  ..., -1.8747,  1.3564, -0.1240],
         [ 1.3275, -0.0308, -0.6377,  ..., -0.9702, -0.2775, -1.2629],
         [-0.9215,  0.4160,  0.6123,  ..., -0.6950, -0.0482, -1.0472]],

        [[ 1.4282, -0.3272,  0.2715,  ...,  0.2131,  1.1262,  0.2625],
         [ 1.2260, -0.4813,  0.7068,  ..., -1.4524, -1.2651,  0.6369],
         [-0.2485, -0.7780,  2.8421,  ..., -0.0594,  0.4359, -1.2405],
         ...,
         [-0.0716, -0.4508,  1.5566,  ..., -1.0774,  0.7666,  0.3029],
         [ 0.0346,  1.2680,  0.9418,  ..., -0.6741, -1.6047, -0.1203],
         [ 1.9554, -0.1150,  1.8479,  ...,  0.3697, -1.2414,  0.0317]]],
       device='cuda:0', grad_fn=<SelectBackward>)
tensor([[[-0.3786, -0.5146,  0.3041,  ..., -1.3937,  0.0731, -1.5110],
         [ 0.1872,  0.3127, -0.4255,  ..., -1.7190,  0.3431,  0.3678],
         [ 1.1716,  0.5633, -1.5221,  ..., -0.3174, -0.4580, -0.0687],
         ...,
         [-0.4515, -0.1161, -3.3195,  ...,  0.0157, -0.5854,  0.0915],
         [-1.1861,  0.1041, -1.1334,  ..., -0.0217, -2.1637,  0.8854],
         [ 0.3504,  0.3584,  0.6362,  ..., -1.7367, -1.7806, -1.5985]],

        [[-0.5291, -0.8124, -1.2018,  ..., -0.1324,  0.2208,  0.4711],
         [ 2.4343,  0.0464,  1.0012,  ..., -0.3954, -0.3670, -0.3269],
         [ 0.0207,  1.9940,  0.7536,  ...,  0.0383,  0.3716,  1.4319],
         ...,
         [ 0.8346, -0.4289, -0.0436,  ..., -0.6201, -0.3807, -0.0791],
         [-0.3295, -0.2725,  0.2882,  ...,  0.5791,  0.0660,  0.1936],
         [ 0.0171, -0.0385,  1.0428,  ...,  0.1278, -1.2507, -0.0567]]],
       device='cuda:0', grad_fn=<SelectBackward>)
initial_hidden tensor([[[[-3.7345e-01, -5.1867e-01,  3.0011e-01,  ..., -1.3949e+00,
            7.9362e-02, -1.5133e+00],
          [ 1.9236e-01,  3.0534e-01, -4.1794e-01,  ..., -1.7261e+00,
            3.4148e-01,  3.6249e-01],
          [ 1.1773e+00,  5.6272e-01, -1.5254e+00,  ..., -3.1554e-01,
           -4.6356e-01, -7.4205e-02],
          ...,
          [-4.4520e-01, -1.2260e-01, -3.3152e+00,  ...,  9.3662e-03,
           -5.8015e-01,  8.4316e-02],
          [-1.1800e+00,  1.0199e-01, -1.1269e+00,  ..., -2.8175e-02,
           -2.1576e+00,  8.7771e-01],
          [ 3.5361e-01,  3.6157e-01,  6.3570e-01,  ..., -1.7395e+00,
           -1.7850e+00, -1.5965e+00]],

         [[-5.2599e-01, -8.1507e-01, -1.2043e+00,  ..., -1.3507e-01,
            2.2380e-01,  4.7062e-01],
          [ 2.4389e+00,  4.2362e-02,  1.0048e+00,  ..., -3.9093e-01,
           -3.6335e-01, -3.2278e-01],
          [ 2.6198e-02,  1.9901e+00,  7.5155e-01,  ...,  3.4913e-02,
            3.7703e-01,  1.4272e+00],
          ...,
          [ 8.3800e-01, -4.3254e-01, -4.2500e-02,  ..., -6.1407e-01,
           -3.7762e-01, -7.8334e-02],
          [-3.2560e-01, -2.7145e-01,  2.8547e-01,  ...,  5.8103e-01,
            6.7926e-02,  1.9282e-01],
          [ 2.1401e-02, -4.0762e-02,  1.0400e+00,  ...,  1.2795e-01,
           -1.2501e+00, -5.3042e-02]]],


        [[[ 5.3263e-01, -1.7050e+00,  8.2142e-01,  ..., -3.1288e-02,
           -2.4989e+00,  4.0752e-01],
          [-4.7858e-01,  3.8395e-01,  4.1924e-01,  ...,  7.3647e-01,
           -2.5286e+00,  3.0907e-01],
          [-1.4571e+00, -4.8002e-01,  1.8562e+00,  ..., -1.5113e+00,
           -2.0487e+00, -1.5260e-01],
          ...,
          [-1.2260e+00,  1.2435e+00, -6.2822e-01,  ...,  6.6531e-01,
           -5.5086e-01, -3.2356e-01],
          [ 9.7828e-02,  1.2763e+00,  5.5070e-01,  ...,  4.9291e-01,
           -2.5310e-03,  1.1835e+00],
          [ 2.1824e+00, -2.8675e-01, -4.7338e-01,  ...,  3.9420e-01,
           -3.9396e-01,  7.7374e-01]],

         [[ 5.3393e-01,  5.3960e-01,  1.5040e+00,  ..., -1.4699e-01,
           -6.0513e-01,  2.0800e+00],
          [-9.2722e-01,  7.8896e-01,  5.7719e-01,  ..., -3.0251e-01,
           -7.3456e-01, -6.1637e-01],
          [ 5.9231e-02,  1.1662e+00, -1.0935e+00,  ...,  6.0954e-01,
            1.1996e+00, -2.0600e-01],
          ...,
          [-1.2661e+00,  5.5655e-03, -7.4613e-01,  ..., -1.6934e+00,
            1.9964e+00, -1.2944e+00],
          [ 2.2565e+00, -2.3617e+00, -1.0214e+00,  ..., -1.2125e+00,
            1.0038e+00,  2.2261e-01],
          [-2.2739e-01, -7.2547e-01, -8.5075e-01,  ..., -6.8812e-01,
            3.0218e-02, -2.2993e+00]]],


        [[[ 2.9622e-01,  9.6200e-01,  5.4346e-01,  ...,  1.3127e+00,
            7.9688e-01,  1.0235e-01],
          [ 7.5111e-01, -4.1306e-01, -5.4875e-01,  ..., -1.7811e+00,
            1.3548e+00,  1.5926e+00],
          [ 1.4815e+00, -8.7629e-01,  7.7637e-01,  ..., -7.1779e-01,
            1.1795e+00,  6.4146e-01],
          ...,
          [ 6.6499e-01,  1.6857e+00,  8.6352e-01,  ..., -5.7846e-01,
           -1.3495e+00,  9.0592e-02],
          [-3.1625e-01, -5.7331e-01, -3.1621e-01,  ...,  3.3992e-01,
           -5.0368e-01,  3.7584e-01],
          [-1.3341e+00, -1.0867e+00,  1.7300e+00,  ...,  7.7232e-01,
            5.3000e-01, -1.7728e+00]],

         [[-6.9666e-01, -1.9980e+00,  6.4721e-01,  ..., -2.3637e+00,
            6.0992e-01, -2.5242e+00],
          [ 1.0410e+00, -9.2052e-01,  2.9454e-01,  ...,  1.1116e+00,
            6.1389e-01,  2.0634e-01],
          [ 1.9568e+00,  2.1908e-01, -2.3663e-01,  ...,  8.6396e-01,
            5.4249e-01, -3.0467e-01],
          ...,
          [-1.3385e+00,  2.1881e+00, -9.2171e-01,  ..., -6.8299e-01,
            1.4842e+00, -3.4755e-01],
          [ 1.4449e+00, -1.2494e+00, -2.5291e-01,  ...,  4.9406e-01,
           -1.1236e+00,  1.1463e+00],
          [-1.8750e+00, -1.2387e-01, -6.7125e-01,  ...,  4.7496e-01,
           -1.1248e+00, -7.3060e-01]]],


        [[[-2.3483e+00, -2.1889e+00, -1.9544e-01,  ...,  7.0711e-01,
            6.9196e-01, -9.8904e-01],
          [ 2.1635e-02, -5.5280e-03,  1.3454e+00,  ...,  1.1192e+00,
            1.2480e+00,  1.1153e+00],
          [ 1.1371e+00, -9.2084e-01, -9.7618e-01,  ...,  1.1485e-01,
            9.8698e-01,  1.8408e-01],
          ...,
          [-1.4429e+00, -2.2246e+00, -1.7002e+00,  ...,  5.6099e-01,
            9.2450e-01,  8.8300e-01],
          [ 1.3043e+00, -4.2939e-01,  3.1759e-01,  ..., -8.3840e-01,
            1.4309e-01,  1.8919e-01],
          [ 1.5247e-01,  1.4281e+00,  3.7632e-01,  ..., -1.7794e-01,
           -1.7512e+00,  1.3235e+00]],

         [[ 1.4948e+00,  3.0191e-01,  6.1360e-01,  ...,  1.1562e+00,
            9.0128e-01,  4.9342e-01],
          [ 9.6937e-01,  8.7974e-01,  1.6395e-01,  ..., -1.3061e+00,
           -7.5686e-01,  2.0616e+00],
          [ 1.0090e+00, -6.6749e-01, -1.2464e+00,  ...,  2.2100e-01,
           -7.9514e-02,  6.6980e-01],
          ...,
          [-3.5175e-01,  3.6943e-01,  5.1283e-01,  ..., -4.9746e-01,
            2.8280e-01,  1.1039e+00],
          [ 6.2218e-01, -1.0430e-01, -5.7965e-01,  ..., -3.2626e-01,
            8.1230e-02,  7.8506e-01],
          [-5.7305e-01,  2.2021e-01, -3.6802e-01,  ...,  4.1713e-01,
           -1.5363e-01, -3.8992e-01]]]], device='cuda:0') torch.Size([4, 2, 128, 32])
initial_cell tensor([[[[ 0.0272,  0.5264,  2.6028,  ...,  0.5137,  0.4034, -1.4481],
          [ 0.4137,  0.0679, -0.0984,  ...,  1.8892, -1.6652,  0.7330],
          [-0.4435, -0.5231,  0.0954,  ...,  0.6713,  0.0670,  0.5170],
          ...,
          [-0.9367,  0.0413, -1.5499,  ..., -0.1984, -0.0177,  0.2065],
          [ 0.3836,  0.1956, -0.7731,  ...,  0.9648,  0.9422, -1.8543],
          [ 0.5709, -1.1960, -1.2535,  ..., -1.1664, -0.3732, -0.2656]],

         [[-0.3231, -0.0140,  0.2435,  ...,  1.9725,  1.0445,  0.3278],
          [-0.3521, -1.5934,  2.3079,  ...,  0.5874,  0.1503,  0.6843],
          [ 0.4287, -0.0988, -0.2126,  ...,  0.2938,  0.1024, -0.3095],
          ...,
          [-0.1959,  0.3582,  0.3356,  ...,  1.0844, -0.3731, -0.1900],
          [ 0.4648,  1.0689, -0.6540,  ...,  0.3995,  1.1543,  0.9025],
          [ 0.2309,  2.9684,  1.2869,  ..., -0.0871,  0.9454, -0.3204]]],


        [[[ 0.7719, -0.6912, -0.7080,  ...,  0.3345, -0.2831, -1.1209],
          [ 2.3336,  0.4577, -0.7617,  ...,  0.3494, -0.0943, -0.3005],
          [ 1.7247,  1.7615, -0.3696,  ..., -1.8720,  1.0364, -0.6137],
          ...,
          [-0.0474,  0.5187,  1.2994,  ...,  0.1641,  0.4922,  1.5238],
          [-0.3940, -0.1608,  1.0204,  ...,  0.0282,  0.6906, -0.6347],
          [ 1.0826, -0.3077,  0.1396,  ...,  0.0878, -0.1252,  0.3424]],

         [[ 0.2128, -0.1884,  0.1200,  ..., -0.7108,  0.2884, -1.5446],
          [-2.1693, -0.2828,  0.8161,  ...,  0.0479, -0.2765, -0.4451],
          [-1.3909,  0.7211,  0.6283,  ..., -0.0922,  0.9698,  0.1249],
          ...,
          [ 1.1326, -2.2024,  1.0804,  ..., -0.0735, -0.1012, -0.1501],
          [ 0.8125,  0.3511,  0.5701,  ...,  0.3424, -0.0366,  0.1218],
          [-1.5915,  1.2796,  0.2321,  ..., -0.9152,  0.3042,  0.4897]]],


        [[[ 0.8894, -0.6910,  0.9135,  ...,  1.1764, -0.7285, -1.7773],
          [-1.7976,  0.3697, -0.2780,  ...,  2.0608, -1.1975, -1.7657],
          [ 0.4942,  0.2250,  0.4764,  ..., -1.4682, -1.3863,  0.9399],
          ...,
          [ 0.7052, -0.5520, -1.0181,  ...,  1.2943, -0.7777,  0.2657],
          [ 0.2914,  0.2339, -0.5635,  ..., -0.3644, -1.4796,  1.4005],
          [ 0.1188, -0.3678, -0.4494,  ..., -1.2975, -0.1024,  0.1053]],

         [[-1.1754, -0.0597,  0.2726,  ..., -0.9666, -2.4854,  0.8818],
          [-0.4930,  0.5874, -0.2174,  ..., -1.7102,  0.7900, -0.9228],
          [-0.0163,  0.4497,  0.3907,  ..., -0.5183,  1.2086, -1.2653],
          ...,
          [-1.5262, -1.2577, -0.0890,  ..., -1.7176, -0.8542, -0.0863],
          [ 0.2151, -0.3850, -0.9834,  ...,  0.2681,  1.0205,  2.0713],
          [-1.7526, -2.3720,  0.6339,  ...,  0.4202,  0.8359,  0.4019]]],


        [[[ 0.4514, -1.2977, -0.3180,  ...,  0.2374, -1.2323, -1.6734],
          [ 1.0605, -1.2878, -0.7060,  ...,  0.1652,  0.0524, -1.3018],
          [ 0.9991, -0.0393,  1.4342,  ...,  0.3169,  0.5530, -2.8094],
          ...,
          [ 0.1292, -0.6847, -1.1907,  ...,  0.8933,  0.4127,  0.4115],
          [ 0.8228, -1.7728,  0.0799,  ..., -0.7231,  1.4615,  1.3638],
          [ 0.7900,  0.8995, -1.5426,  ..., -0.6435,  1.2943,  0.1308]],

         [[-0.4026,  1.8701,  0.7578,  ..., -0.6866,  0.2773, -0.4057],
          [ 1.0656, -2.4763,  0.7191,  ...,  0.5958,  0.6762,  1.1704],
          [ 1.8601,  0.8249, -0.0354,  ...,  0.5455, -1.7050, -0.8217],
          ...,
          [-0.4640, -0.5415,  0.1670,  ...,  0.7595,  0.6072, -0.7799],
          [ 1.9095,  2.1984, -0.9861,  ...,  0.9245,  1.5221, -1.0050],
          [ 1.1536, -1.2335, -0.3217,  ..., -0.8470, -0.1250,  0.2333]]]],
       device='cuda:0') torch.Size([4, 2, 128, 32])
tensor([[[-1.4515, -1.6699, -1.4975,  ...,  0.0456,  0.4406, -0.6033],
         [-0.8015,  0.0295,  0.8791,  ..., -0.3147, -0.7655, -0.0414],
         [-0.1260,  1.0290,  1.3882,  ..., -0.7072,  1.3387, -2.2748],
         ...,
         [ 0.3689, -0.5192, -1.1133,  ..., -1.8808,  1.3591, -0.1332],
         [ 1.3216, -0.0388, -0.6397,  ..., -0.9765, -0.2847, -1.2703],
         [-0.9241,  0.4130,  0.6082,  ..., -0.6980, -0.0418, -1.0526]],

        [[ 1.4365, -0.3349,  0.2648,  ...,  0.2054,  1.1224,  0.2652],
         [ 1.2357, -0.4825,  0.7152,  ..., -1.4606, -1.2740,  0.6320],
         [-0.2403, -0.7854,  2.8338,  ..., -0.0529,  0.4277, -1.2339],
         ...,
         [-0.0680, -0.4596,  1.5661,  ..., -1.0862,  0.7584,  0.2931],
         [ 0.0433,  1.2602,  0.9449,  ..., -0.6810, -1.6110, -0.1292],
         [ 1.9615, -0.1140,  1.8570,  ...,  0.3697, -1.2370,  0.0371]]],
       device='cuda:0', grad_fn=<SelectBackward>)
tensor([[[-0.3734, -0.5187,  0.3001,  ..., -1.3949,  0.0794, -1.5133],
         [ 0.1924,  0.3053, -0.4179,  ..., -1.7261,  0.3415,  0.3625],
         [ 1.1773,  0.5627, -1.5254,  ..., -0.3155, -0.4636, -0.0742],
         ...,
         [-0.4452, -0.1226, -3.3152,  ...,  0.0094, -0.5801,  0.0843],
         [-1.1800,  0.1020, -1.1269,  ..., -0.0282, -2.1576,  0.8777],
         [ 0.3536,  0.3616,  0.6357,  ..., -1.7395, -1.7850, -1.5965]],

        [[-0.5260, -0.8151, -1.2043,  ..., -0.1351,  0.2238,  0.4706],
         [ 2.4389,  0.0424,  1.0048,  ..., -0.3909, -0.3633, -0.3228],
         [ 0.0262,  1.9901,  0.7516,  ...,  0.0349,  0.3770,  1.4272],
         ...,
         [ 0.8380, -0.4325, -0.0425,  ..., -0.6141, -0.3776, -0.0783],
         [-0.3256, -0.2715,  0.2855,  ...,  0.5810,  0.0679,  0.1928],
         [ 0.0214, -0.0408,  1.0400,  ...,  0.1279, -1.2501, -0.0530]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 6008.926, Val Loss : 24853.791
======> Trajectory Loss : 5001.635, Gravity Loss : 0.000, EndOfTrajectory Loss : 1.374, BelowGroundPenalize Loss : 869.877
===> [Minibatch 5/129].........tensor([[[-1.4515, -1.6699, -1.4975,  ...,  0.0456,  0.4406, -0.6033],
         [-0.8015,  0.0295,  0.8791,  ..., -0.3147, -0.7655, -0.0414],
         [-0.1260,  1.0290,  1.3882,  ..., -0.7072,  1.3387, -2.2748],
         ...,
         [ 0.3689, -0.5192, -1.1133,  ..., -1.8808,  1.3591, -0.1332],
         [ 1.3216, -0.0388, -0.6397,  ..., -0.9765, -0.2847, -1.2703],
         [-0.9241,  0.4130,  0.6082,  ..., -0.6980, -0.0418, -1.0526]],

        [[ 1.4365, -0.3349,  0.2648,  ...,  0.2054,  1.1224,  0.2652],
         [ 1.2357, -0.4825,  0.7152,  ..., -1.4606, -1.2740,  0.6320],
         [-0.2403, -0.7854,  2.8338,  ..., -0.0529,  0.4277, -1.2339],
         ...,
         [-0.0680, -0.4596,  1.5661,  ..., -1.0862,  0.7584,  0.2931],
         [ 0.0433,  1.2602,  0.9449,  ..., -0.6810, -1.6110, -0.1292],
         [ 1.9615, -0.1140,  1.8570,  ...,  0.3697, -1.2370,  0.0371]]],
       device='cuda:0', grad_fn=<SelectBackward>)
tensor([[[-0.3734, -0.5187,  0.3001,  ..., -1.3949,  0.0794, -1.5133],
         [ 0.1924,  0.3053, -0.4179,  ..., -1.7261,  0.3415,  0.3625],
         [ 1.1773,  0.5627, -1.5254,  ..., -0.3155, -0.4636, -0.0742],
         ...,
         [-0.4452, -0.1226, -3.3152,  ...,  0.0094, -0.5801,  0.0843],
         [-1.1800,  0.1020, -1.1269,  ..., -0.0282, -2.1576,  0.8777],
         [ 0.3536,  0.3616,  0.6357,  ..., -1.7395, -1.7850, -1.5965]],

        [[-0.5260, -0.8151, -1.2043,  ..., -0.1351,  0.2238,  0.4706],
         [ 2.4389,  0.0424,  1.0048,  ..., -0.3909, -0.3633, -0.3228],
         [ 0.0262,  1.9901,  0.7516,  ...,  0.0349,  0.3770,  1.4272],
         ...,
         [ 0.8380, -0.4325, -0.0425,  ..., -0.6141, -0.3776, -0.0783],
         [-0.3256, -0.2715,  0.2855,  ...,  0.5810,  0.0679,  0.1928],
         [ 0.0214, -0.0408,  1.0400,  ...,  0.1279, -1.2501, -0.0530]]],
       device='cuda:0', grad_fn=<SelectBackward>)
initial_hidden tensor([[[[-3.7099e-01, -5.2410e-01,  2.9945e-01,  ..., -1.3997e+00,
            8.6134e-02, -1.5178e+00],
          [ 1.9572e-01,  2.9748e-01, -4.0970e-01,  ..., -1.7335e+00,
            3.3888e-01,  3.5824e-01],
          [ 1.1819e+00,  5.6156e-01, -1.5274e+00,  ..., -3.1484e-01,
           -4.6851e-01, -7.9216e-02],
          ...,
          [-4.3926e-01, -1.3014e-01, -3.3093e+00,  ...,  1.9315e-03,
           -5.7386e-01,  7.6525e-02],
          [-1.1729e+00,  9.6715e-02, -1.1200e+00,  ..., -3.4573e-02,
           -2.1524e+00,  8.7024e-01],
          [ 3.5538e-01,  3.6292e-01,  6.3754e-01,  ..., -1.7442e+00,
           -1.7890e+00, -1.5958e+00]],

         [[-5.2513e-01, -8.1700e-01, -1.2052e+00,  ..., -1.3686e-01,
            2.2593e-01,  4.6803e-01],
          [ 2.4426e+00,  3.8991e-02,  1.0078e+00,  ..., -3.8650e-01,
           -3.6028e-01, -3.2016e-01],
          [ 3.0714e-02,  1.9869e+00,  7.5034e-01,  ...,  3.2459e-02,
            3.8153e-01,  1.4229e+00],
          ...,
          [ 8.4038e-01, -4.3555e-01, -4.1387e-02,  ..., -6.0846e-01,
           -3.7519e-01, -7.8300e-02],
          [-3.2370e-01, -2.6981e-01,  2.8218e-01,  ...,  5.8444e-01,
            7.1353e-02,  1.8962e-01],
          [ 2.4939e-02, -4.2309e-02,  1.0378e+00,  ...,  1.2849e-01,
           -1.2498e+00, -4.9993e-02]]],


        [[[ 5.3977e-01, -1.6969e+00,  8.1538e-01,  ..., -3.7786e-02,
           -2.5053e+00,  4.0203e-01],
          [-4.7212e-01,  3.9163e-01,  4.1420e-01,  ...,  7.3139e-01,
           -2.5319e+00,  3.0403e-01],
          [-1.4508e+00, -4.7369e-01,  1.8508e+00,  ..., -1.5189e+00,
           -2.0534e+00, -1.5528e-01],
          ...,
          [-1.2185e+00,  1.2516e+00, -6.2984e-01,  ...,  6.5704e-01,
           -5.5616e-01, -3.2466e-01],
          [ 1.0492e-01,  1.2834e+00,  5.5159e-01,  ...,  4.8691e-01,
           -8.6421e-03,  1.1769e+00],
          [ 2.1859e+00, -2.8046e-01, -4.7573e-01,  ...,  3.8807e-01,
           -3.9299e-01,  7.7009e-01]],

         [[ 5.3155e-01,  5.4102e-01,  1.5071e+00,  ..., -1.4824e-01,
           -6.0313e-01,  2.0816e+00],
          [-9.3004e-01,  7.9142e-01,  5.8037e-01,  ..., -3.0243e-01,
           -7.3642e-01, -6.1290e-01],
          [ 5.5211e-02,  1.1688e+00, -1.0917e+00,  ...,  6.1326e-01,
            1.2028e+00, -2.0841e-01],
          ...,
          [-1.2692e+00,  6.8395e-03, -7.4268e-01,  ..., -1.6947e+00,
            1.9946e+00, -1.2927e+00],
          [ 2.2607e+00, -2.3636e+00, -1.0219e+00,  ..., -1.2136e+00,
            1.0053e+00,  2.2044e-01],
          [-2.3097e-01, -7.2753e-01, -8.4736e-01,  ..., -6.8953e-01,
            3.3054e-02, -2.2958e+00]]],


        [[[ 2.9373e-01,  9.5978e-01,  5.4989e-01,  ...,  1.3116e+00,
            8.0060e-01,  9.6769e-02],
          [ 7.5910e-01, -4.0510e-01, -5.4090e-01,  ..., -1.7883e+00,
            1.3510e+00,  1.5968e+00],
          [ 1.4803e+00, -8.7502e-01,  7.7318e-01,  ..., -7.1846e-01,
            1.1764e+00,  6.4267e-01],
          ...,
          [ 6.7133e-01,  1.6931e+00,  8.7079e-01,  ..., -5.7412e-01,
           -1.3437e+00,  9.4181e-02],
          [-3.1080e-01, -5.6851e-01, -3.0956e-01,  ...,  3.3715e-01,
           -5.1143e-01,  3.7650e-01],
          [-1.3362e+00, -1.0901e+00,  1.7352e+00,  ...,  7.7108e-01,
            5.3617e-01, -1.7687e+00]],

         [[-6.9636e-01, -2.0004e+00,  6.4420e-01,  ..., -2.3638e+00,
            6.0754e-01, -2.5235e+00],
          [ 1.0373e+00, -9.2206e-01,  2.9207e-01,  ...,  1.1156e+00,
            6.1700e-01,  2.0816e-01],
          [ 1.9593e+00,  2.2109e-01, -2.4104e-01,  ...,  8.6698e-01,
            5.4002e-01, -3.0286e-01],
          ...,
          [-1.3402e+00,  2.1913e+00, -9.2518e-01,  ..., -6.8281e-01,
            1.4886e+00, -3.5064e-01],
          [ 1.4431e+00, -1.2486e+00, -2.5499e-01,  ...,  4.9104e-01,
           -1.1238e+00,  1.1458e+00],
          [-1.8722e+00, -1.2671e-01, -6.7566e-01,  ...,  4.7836e-01,
           -1.1220e+00, -7.3061e-01]]],


        [[[-2.3471e+00, -2.1827e+00, -1.9997e-01,  ...,  7.1132e-01,
            6.8722e-01, -9.9409e-01],
          [ 1.4229e-02,  1.8985e-03,  1.3501e+00,  ...,  1.1262e+00,
            1.2422e+00,  1.1086e+00],
          [ 1.1330e+00, -9.1334e-01, -9.7577e-01,  ...,  1.1937e-01,
            9.8145e-01,  1.7719e-01],
          ...,
          [-1.4443e+00, -2.2182e+00, -1.6969e+00,  ...,  5.6847e-01,
            9.1765e-01,  8.7506e-01],
          [ 1.3068e+00, -4.2300e-01,  3.1229e-01,  ..., -8.3467e-01,
            1.3670e-01,  1.8259e-01],
          [ 1.5005e-01,  1.4344e+00,  3.7903e-01,  ..., -1.8209e-01,
           -1.7569e+00,  1.3258e+00]],

         [[ 1.4982e+00,  3.0386e-01,  6.1627e-01,  ...,  1.1589e+00,
            9.0443e-01,  4.9311e-01],
          [ 9.7296e-01,  8.7735e-01,  1.6676e-01,  ..., -1.3081e+00,
           -7.5917e-01,  2.0580e+00],
          [ 1.0139e+00, -6.6519e-01, -1.2490e+00,  ...,  2.2319e-01,
           -7.6588e-02,  6.7247e-01],
          ...,
          [-3.4819e-01,  3.7389e-01,  5.1459e-01,  ..., -5.0019e-01,
            2.8509e-01,  1.1033e+00],
          [ 6.2217e-01, -1.0377e-01, -5.8176e-01,  ..., -3.3039e-01,
            8.2864e-02,  7.8426e-01],
          [-5.6935e-01,  2.1840e-01, -3.7110e-01,  ...,  4.2068e-01,
           -1.5658e-01, -3.9348e-01]]]], device='cuda:0') torch.Size([4, 2, 128, 32])
initial_cell tensor([[[[ 0.0300,  0.5219,  2.6081,  ...,  0.5074,  0.3989, -1.4452],
          [ 0.4121,  0.0637, -0.0911,  ...,  1.8903, -1.6735,  0.7350],
          [-0.4397, -0.5268,  0.0975,  ...,  0.6680,  0.0624,  0.5165],
          ...,
          [-0.9358,  0.0390, -1.5427,  ..., -0.2050, -0.0254,  0.2055],
          [ 0.3785,  0.1981, -0.7680,  ...,  0.9604,  0.9351, -1.8500],
          [ 0.5738, -1.1992, -1.2496,  ..., -1.1632, -0.3791, -0.2680]],

         [[-0.3203, -0.0150,  0.2471,  ...,  1.9707,  1.0457,  0.3292],
          [-0.3544, -1.5954,  2.3116,  ...,  0.5849,  0.1535,  0.6855],
          [ 0.4274, -0.1030, -0.2086,  ...,  0.2906,  0.1068, -0.3069],
          ...,
          [-0.1937,  0.3585,  0.3384,  ...,  1.0836, -0.3682, -0.1930],
          [ 0.4698,  1.0723, -0.6548,  ...,  0.4005,  1.1575,  0.8998],
          [ 0.2282,  2.9715,  1.2901,  ..., -0.0901,  0.9491, -0.3175]]],


        [[[ 0.7768, -0.6919, -0.7004,  ...,  0.3292, -0.2900, -1.1232],
          [ 2.3365,  0.4569, -0.7574,  ...,  0.3548, -0.1012, -0.3003],
          [ 1.7298,  1.7599, -0.3712,  ..., -1.8756,  1.0287, -0.6171],
          ...,
          [-0.0438,  0.5176,  1.3062,  ...,  0.1631,  0.4838,  1.5222],
          [-0.3938, -0.1568,  1.0253,  ...,  0.0316,  0.6834, -0.6303],
          [ 1.0863, -0.3072,  0.1438,  ...,  0.0929, -0.1314,  0.3399]],

         [[ 0.2131, -0.1831,  0.1236,  ..., -0.7130,  0.2867, -1.5422],
          [-2.1718, -0.2783,  0.8201,  ...,  0.0450, -0.2739, -0.4419],
          [-1.3938,  0.7182,  0.6323,  ..., -0.0954,  0.9737,  0.1288],
          ...,
          [ 1.1326, -2.1970,  1.0832,  ..., -0.0748, -0.0982, -0.1487],
          [ 0.8155,  0.3558,  0.5706,  ...,  0.3431, -0.0353,  0.1206],
          [-1.5944,  1.2806,  0.2355,  ..., -0.9181,  0.3063,  0.4933]]],


        [[[ 0.8935, -0.6954,  0.9189,  ...,  1.1786, -0.7342, -1.7744],
          [-1.7945,  0.3658, -0.2699,  ...,  2.0685, -1.2044, -1.7610],
          [ 0.4989,  0.2201,  0.4788,  ..., -1.4607, -1.3935,  0.9445],
          ...,
          [ 0.7083, -0.5550, -1.0131,  ...,  1.3029, -0.7854,  0.2638],
          [ 0.2953,  0.2343, -0.5586,  ..., -0.3576, -1.4873,  1.4068],
          [ 0.1221, -0.3717, -0.4453,  ..., -1.2920, -0.1079,  0.1076]],

         [[-1.1707, -0.0573,  0.2736,  ..., -0.9690, -2.4885,  0.8850],
          [-0.4958,  0.5917, -0.2158,  ..., -1.7119,  0.7928, -0.9198],
          [-0.0173,  0.4466,  0.3933,  ..., -0.5205,  1.2122, -1.2615],
          ...,
          [-1.5205, -1.2514, -0.0887,  ..., -1.7192, -0.8497, -0.0848],
          [ 0.2188, -0.3808, -0.9864,  ...,  0.2676,  1.0214,  2.0727],
          [-1.7551, -2.3731,  0.6362,  ...,  0.4181,  0.8400,  0.4055]]],


        [[[ 0.4579, -1.3019, -0.3142,  ...,  0.2433, -1.2382, -1.6763],
          [ 1.0579, -1.2920, -0.7006,  ...,  0.1737,  0.0438, -1.2984],
          [ 1.0019, -0.0442,  1.4370,  ...,  0.3251,  0.5441, -2.8114],
          ...,
          [ 0.1321, -0.6875, -1.1899,  ...,  0.9016,  0.4048,  0.4074],
          [ 0.8279, -1.7734,  0.0762,  ..., -0.7163,  1.4550,  1.3643],
          [ 0.7938,  0.8958, -1.5389,  ..., -0.6381,  1.2865,  0.1281]],

         [[-0.3988,  1.8732,  0.7588,  ..., -0.6857,  0.2745, -0.4033],
          [ 1.0626, -2.4757,  0.7213,  ...,  0.6000,  0.6780,  1.1739],
          [ 1.8649,  0.8230, -0.0327,  ...,  0.5451, -1.7014, -0.8175],
          ...,
          [-0.4595, -0.5345,  0.1671,  ...,  0.7651,  0.6084, -0.7790],
          [ 1.9128,  2.2038, -0.9897,  ...,  0.9270,  1.5192, -1.0059],
          [ 1.1511, -1.2363, -0.3198,  ..., -0.8486, -0.1222,  0.2369]]]],
       device='cuda:0') torch.Size([4, 2, 128, 32])
tensor([[[-1.4605, -1.6761, -1.4981,  ...,  0.0511,  0.4480, -0.6114],
         [-0.8088,  0.0277,  0.8815,  ..., -0.3116, -0.7582, -0.0420],
         [-0.1340,  1.0311,  1.3940,  ..., -0.7128,  1.3378, -2.2709],
         ...,
         [ 0.3601, -0.5249, -1.1146,  ..., -1.8877,  1.3557, -0.1424],
         [ 1.3184, -0.0470, -0.6442,  ..., -0.9785, -0.2910, -1.2783],
         [-0.9196,  0.4168,  0.6099,  ..., -0.6947, -0.0361, -1.0589]],

        [[ 1.4448, -0.3433,  0.2573,  ...,  0.1969,  1.1162,  0.2700],
         [ 1.2451, -0.4879,  0.7235,  ..., -1.4693, -1.2827,  0.6353],
         [-0.2322, -0.7929,  2.8295,  ..., -0.0454,  0.4190, -1.2288],
         ...,
         [-0.0617, -0.4671,  1.5757,  ..., -1.0944,  0.7496,  0.2928],
         [ 0.0523,  1.2521,  0.9503,  ..., -0.6890, -1.6186, -0.1384],
         [ 1.9684, -0.1129,  1.8659,  ...,  0.3731, -1.2353,  0.0436]]],
       device='cuda:0', grad_fn=<SelectBackward>)
tensor([[[-3.7099e-01, -5.2410e-01,  2.9945e-01,  ..., -1.3997e+00,
           8.6134e-02, -1.5178e+00],
         [ 1.9572e-01,  2.9748e-01, -4.0970e-01,  ..., -1.7335e+00,
           3.3888e-01,  3.5824e-01],
         [ 1.1819e+00,  5.6156e-01, -1.5274e+00,  ..., -3.1484e-01,
          -4.6851e-01, -7.9216e-02],
         ...,
         [-4.3926e-01, -1.3014e-01, -3.3093e+00,  ...,  1.9315e-03,
          -5.7386e-01,  7.6525e-02],
         [-1.1729e+00,  9.6715e-02, -1.1200e+00,  ..., -3.4573e-02,
          -2.1524e+00,  8.7024e-01],
         [ 3.5538e-01,  3.6292e-01,  6.3754e-01,  ..., -1.7442e+00,
          -1.7890e+00, -1.5958e+00]],

        [[-5.2513e-01, -8.1700e-01, -1.2052e+00,  ..., -1.3686e-01,
           2.2593e-01,  4.6803e-01],
         [ 2.4426e+00,  3.8991e-02,  1.0078e+00,  ..., -3.8650e-01,
          -3.6028e-01, -3.2016e-01],
         [ 3.0714e-02,  1.9869e+00,  7.5034e-01,  ...,  3.2459e-02,
           3.8153e-01,  1.4229e+00],
         ...,
         [ 8.4038e-01, -4.3555e-01, -4.1387e-02,  ..., -6.0846e-01,
          -3.7519e-01, -7.8300e-02],
         [-3.2370e-01, -2.6981e-01,  2.8218e-01,  ...,  5.8444e-01,
           7.1353e-02,  1.8962e-01],
         [ 2.4939e-02, -4.2309e-02,  1.0378e+00,  ...,  1.2849e-01,
          -1.2498e+00, -4.9993e-02]]], device='cuda:0',
       grad_fn=<SelectBackward>)
Train Loss : 4441.554, Val Loss : 20953.127
======> Trajectory Loss : 3623.193, Gravity Loss : 0.000, EndOfTrajectory Loss : 1.368, BelowGroundPenalize Loss : 681.568
===> [Minibatch 6/129].........tensor([[[-1.4605, -1.6761, -1.4981,  ...,  0.0511,  0.4480, -0.6114],
         [-0.8088,  0.0277,  0.8815,  ..., -0.3116, -0.7582, -0.0420],
         [-0.1340,  1.0311,  1.3940,  ..., -0.7128,  1.3378, -2.2709],
         ...,
         [ 0.3601, -0.5249, -1.1146,  ..., -1.8877,  1.3557, -0.1424],
         [ 1.3184, -0.0470, -0.6442,  ..., -0.9785, -0.2910, -1.2783],
         [-0.9196,  0.4168,  0.6099,  ..., -0.6947, -0.0361, -1.0589]],

        [[ 1.4448, -0.3433,  0.2573,  ...,  0.1969,  1.1162,  0.2700],
         [ 1.2451, -0.4879,  0.7235,  ..., -1.4693, -1.2827,  0.6353],
         [-0.2322, -0.7929,  2.8295,  ..., -0.0454,  0.4190, -1.2288],
         ...,
         [-0.0617, -0.4671,  1.5757,  ..., -1.0944,  0.7496,  0.2928],
         [ 0.0523,  1.2521,  0.9503,  ..., -0.6890, -1.6186, -0.1384],
         [ 1.9684, -0.1129,  1.8659,  ...,  0.3731, -1.2353,  0.0436]]],
       device='cuda:0', grad_fn=<SelectBackward>)
tensor([[[-3.7099e-01, -5.2410e-01,  2.9945e-01,  ..., -1.3997e+00,
           8.6134e-02, -1.5178e+00],
         [ 1.9572e-01,  2.9748e-01, -4.0970e-01,  ..., -1.7335e+00,
           3.3888e-01,  3.5824e-01],
         [ 1.1819e+00,  5.6156e-01, -1.5274e+00,  ..., -3.1484e-01,
          -4.6851e-01, -7.9216e-02],
         ...,
         [-4.3926e-01, -1.3014e-01, -3.3093e+00,  ...,  1.9315e-03,
          -5.7386e-01,  7.6525e-02],
         [-1.1729e+00,  9.6715e-02, -1.1200e+00,  ..., -3.4573e-02,
          -2.1524e+00,  8.7024e-01],
         [ 3.5538e-01,  3.6292e-01,  6.3754e-01,  ..., -1.7442e+00,
          -1.7890e+00, -1.5958e+00]],

        [[-5.2513e-01, -8.1700e-01, -1.2052e+00,  ..., -1.3686e-01,
           2.2593e-01,  4.6803e-01],
         [ 2.4426e+00,  3.8991e-02,  1.0078e+00,  ..., -3.8650e-01,
          -3.6028e-01, -3.2016e-01],
         [ 3.0714e-02,  1.9869e+00,  7.5034e-01,  ...,  3.2459e-02,
           3.8153e-01,  1.4229e+00],
         ...,
         [ 8.4038e-01, -4.3555e-01, -4.1387e-02,  ..., -6.0846e-01,
          -3.7519e-01, -7.8300e-02],
         [-3.2370e-01, -2.6981e-01,  2.8218e-01,  ...,  5.8444e-01,
           7.1353e-02,  1.8962e-01],
         [ 2.4939e-02, -4.2309e-02,  1.0378e+00,  ...,  1.2849e-01,
          -1.2498e+00, -4.9993e-02]]], device='cuda:0',
       grad_fn=<SelectBackward>)
initial_hidden tensor([[[[-0.3703, -0.5308,  0.3020,  ..., -1.4061,  0.0937, -1.5234],
          [ 0.1985,  0.2901, -0.4019,  ..., -1.7403,  0.3364,  0.3545],
          [ 1.1848,  0.5575, -1.5258,  ..., -0.3179, -0.4737, -0.0851],
          ...,
          [-0.4332, -0.1375, -3.3022,  ..., -0.0055, -0.5671,  0.0685],
          [-1.1657,  0.0902, -1.1130,  ..., -0.0421, -2.1537,  0.8622],
          [ 0.3522,  0.3592,  0.6428,  ..., -1.7498, -1.7945, -1.5937]],

         [[-0.5254, -0.8186, -1.2063,  ..., -0.1385,  0.2278,  0.4650],
          [ 2.4456,  0.0362,  1.0101,  ..., -0.3827, -0.3576, -0.3180],
          [ 0.0320,  1.9826,  0.7483,  ...,  0.0306,  0.3860,  1.4193],
          ...,
          [ 0.8410, -0.4382, -0.0425,  ..., -0.6047, -0.3723, -0.0792],
          [-0.3231, -0.2706,  0.2799,  ...,  0.5856,  0.0761,  0.1868],
          [ 0.0281, -0.0432,  1.0341,  ...,  0.1287, -1.2465, -0.0474]]],


        [[[ 0.5474, -1.6884,  0.8084,  ..., -0.0452, -2.5123,  0.3956],
          [-0.4663,  0.3987,  0.4097,  ...,  0.7262, -2.5348,  0.2996],
          [-1.4442, -0.4667,  1.8449,  ..., -1.5271, -2.0571, -0.1575],
          ...,
          [-1.2103,  1.2599, -0.6324,  ...,  0.6493, -0.5622, -0.3250],
          [ 0.1128,  1.2911,  0.5483,  ...,  0.4797, -0.0155,  1.1695],
          [ 2.1869, -0.2733, -0.4781,  ...,  0.3823, -0.3888,  0.7644]],

         [[ 0.5298,  0.5420,  1.5103,  ..., -0.1499, -0.6018,  2.0828],
          [-0.9324,  0.7935,  0.5832,  ..., -0.3027, -0.7381, -0.6100],
          [ 0.0513,  1.1696, -1.0886,  ...,  0.6159,  1.2048, -0.2095],
          ...,
          [-1.2712,  0.0060, -0.7392,  ..., -1.6957,  1.9950, -1.2908],
          [ 2.2648, -2.3649, -1.0219,  ..., -1.2156,  1.0049,  0.2188],
          [-0.2328, -0.7304, -0.8436,  ..., -0.6936,  0.0341, -2.2913]]],


        [[[ 0.2905,  0.9596,  0.5572,  ...,  1.3110,  0.8061,  0.0902],
          [ 0.7666, -0.3977, -0.5336,  ..., -1.7945,  1.3479,  1.6007],
          [ 1.4799, -0.8722,  0.7715,  ..., -0.7173,  1.1758,  0.6393],
          ...,
          [ 0.6781,  1.7012,  0.8788,  ..., -0.5679, -1.3371,  0.0955],
          [-0.3043, -0.5653, -0.3022,  ...,  0.3393, -0.5189,  0.3758],
          [-1.3344, -1.0943,  1.7416,  ...,  0.7749,  0.5426, -1.7660]],

         [[-0.6947, -2.0023,  0.6420,  ..., -2.3654,  0.6049, -2.5222],
          [ 1.0343, -0.9231,  0.2900,  ...,  1.1188,  0.6194,  0.2098],
          [ 1.9625,  0.2234, -0.2453,  ...,  0.8678,  0.5361, -0.2994],
          ...,
          [-1.3372,  2.1955, -0.9297,  ..., -0.6847,  1.4884, -0.3513],
          [ 1.4417, -1.2493, -0.2554,  ...,  0.4875, -1.1253,  1.1455],
          [-1.8672, -0.1281, -0.6800,  ...,  0.4795, -1.1248, -0.7271]]],


        [[[-2.3438, -2.1757, -0.2052,  ...,  0.7170,  0.6816, -0.9998],
          [ 0.0075,  0.0086,  1.3543,  ...,  1.1324,  1.2366,  1.1025],
          [ 1.1300, -0.9053, -0.9781,  ...,  0.1245,  0.9754,  0.1694],
          ...,
          [-1.4407, -2.2109, -1.6983,  ...,  0.5766,  0.9105,  0.8665],
          [ 1.3094, -0.4157,  0.3058,  ..., -0.8297,  0.1296,  0.1752],
          [ 0.1515,  1.4416,  0.3783,  ..., -0.1880, -1.7638,  1.3240]],

         [[ 1.5010,  0.3052,  0.6188,  ...,  1.1613,  0.9073,  0.4926],
          [ 0.9760,  0.8754,  0.1691,  ..., -1.3098, -0.7611,  2.0548],
          [ 1.0186, -0.6624, -1.2504,  ...,  0.2242, -0.0742,  0.6741],
          ...,
          [-0.3452,  0.3800,  0.5137,  ..., -0.5029,  0.2883,  1.1017],
          [ 0.6210, -0.1049, -0.5825,  ..., -0.3337,  0.0845,  0.7841],
          [-0.5662,  0.2177, -0.3714,  ...,  0.4234, -0.1590, -0.3974]]]],
       device='cuda:0') torch.Size([4, 2, 128, 32])
initial_cell tensor([[[[ 0.0306,  0.5165,  2.6143,  ...,  0.5002,  0.3930, -1.4440],
          [ 0.4102,  0.0601, -0.0838,  ...,  1.8904, -1.6810,  0.7363],
          [-0.4376, -0.5283,  0.1026,  ...,  0.6638,  0.0565,  0.5148],
          ...,
          [-0.9373,  0.0380, -1.5357,  ..., -0.2120, -0.0333,  0.2022],
          [ 0.3719,  0.1992, -0.7616,  ...,  0.9544,  0.9272, -1.8465],
          [ 0.5731, -1.2006, -1.2435,  ..., -1.1656, -0.3862, -0.2707]],

         [[-0.3168, -0.0144,  0.2499,  ...,  1.9692,  1.0470,  0.3303],
          [-0.3564, -1.5969,  2.3147,  ...,  0.5828,  0.1562,  0.6865],
          [ 0.4278, -0.1059, -0.2052,  ...,  0.2881,  0.1109, -0.3046],
          ...,
          [-0.1893,  0.3627,  0.3403,  ...,  1.0840, -0.3630, -0.1944],
          [ 0.4744,  1.0762, -0.6545,  ...,  0.4025,  1.1606,  0.8976],
          [ 0.2270,  2.9763,  1.2926,  ..., -0.0925,  0.9529, -0.3140]]],


        [[[ 0.7806, -0.6910, -0.6923,  ...,  0.3242, -0.2976, -1.1245],
          [ 2.3389,  0.4568, -0.7531,  ...,  0.3594, -0.1076, -0.2999],
          [ 1.7339,  1.7607, -0.3715,  ..., -1.8782,  1.0204, -0.6199],
          ...,
          [-0.0404,  0.5189,  1.3127,  ...,  0.1617,  0.4752,  1.5214],
          [-0.3950, -0.1516,  1.0317,  ...,  0.0323,  0.6754, -0.6254],
          [ 1.0876, -0.3025,  0.1500,  ...,  0.0977, -0.1385,  0.3387]],

         [[ 0.2143, -0.1771,  0.1265,  ..., -0.7150,  0.2848, -1.5402],
          [-2.1738, -0.2743,  0.8235,  ...,  0.0425, -0.2716, -0.4392],
          [-1.3951,  0.7178,  0.6358,  ..., -0.0980,  0.9770,  0.1323],
          ...,
          [ 1.1352, -2.1904,  1.0854,  ..., -0.0749, -0.0983, -0.1465],
          [ 0.8187,  0.3608,  0.5720,  ...,  0.3456, -0.0362,  0.1195],
          [-1.5951,  1.2846,  0.2384,  ..., -0.9205,  0.3055,  0.4971]]],


        [[[ 0.8968, -0.6992,  0.9253,  ...,  1.1832, -0.7407, -1.7722],
          [-1.7918,  0.3625, -0.2622,  ...,  2.0757, -1.2106, -1.7569],
          [ 0.5029,  0.2158,  0.4821,  ..., -1.4534, -1.4012,  0.9488],
          ...,
          [ 0.7115, -0.5572, -1.0066,  ...,  1.3106, -0.7936,  0.2610],
          [ 0.2988,  0.2346, -0.5522,  ..., -0.3498, -1.4955,  1.4128],
          [ 0.1230, -0.3756, -0.4392,  ..., -1.2852, -0.1143,  0.1102]],

         [[-1.1649, -0.0538,  0.2739,  ..., -0.9711, -2.4915,  0.8879],
          [-0.4979,  0.5956, -0.2145,  ..., -1.7134,  0.7951, -0.9172],
          [-0.0138,  0.4454,  0.3952,  ..., -0.5225,  1.2148, -1.2577],
          ...,
          [-1.5147, -1.2443, -0.0894,  ..., -1.7198, -0.8502, -0.0816],
          [ 0.2234, -0.3767, -0.9879,  ...,  0.2685,  1.0205,  2.0739],
          [-1.7523, -2.3705,  0.6381,  ...,  0.4160,  0.8384,  0.4094]]],


        [[[ 0.4638, -1.3057, -0.3100,  ...,  0.2501, -1.2449, -1.6783],
          [ 1.0558, -1.2957, -0.6957,  ...,  0.1815,  0.0357, -1.2954],
          [ 1.0054, -0.0486,  1.4397,  ...,  0.3334,  0.5360, -2.8142],
          ...,
          [ 0.1378, -0.6898, -1.1863,  ...,  0.9102,  0.3963,  0.4021],
          [ 0.8332, -1.7747,  0.0769,  ..., -0.7087,  1.4475,  1.3666],
          [ 0.7983,  0.8912, -1.5345,  ..., -0.6312,  1.2797,  0.1270]],

         [[-0.3947,  1.8767,  0.7592,  ..., -0.6845,  0.2717, -0.4011],
          [ 1.0601, -2.4751,  0.7232,  ...,  0.6037,  0.6795,  1.1770],
          [ 1.8704,  0.8223, -0.0305,  ...,  0.5455, -1.6986, -0.8137],
          ...,
          [-0.4538, -0.5267,  0.1663,  ...,  0.7719,  0.6049, -0.7761],
          [ 1.9160,  2.2088, -0.9910,  ...,  0.9310,  1.5152, -1.0069],
          [ 1.1511, -1.2378, -0.3188,  ..., -0.8487, -0.1221,  0.2406]]]],
       device='cuda:0') torch.Size([4, 2, 128, 32])
tensor([[[-1.4684, -1.6831, -1.4966,  ...,  0.0548,  0.4518, -0.6172],
         [-0.8106,  0.0267,  0.8866,  ..., -0.3141, -0.7509, -0.0383],
         [-0.1417,  1.0339,  1.4005,  ..., -0.7192,  1.3328, -2.2721],
         ...,
         [ 0.3511, -0.5291, -1.1185,  ..., -1.8945,  1.3531, -0.1516],
         [ 1.3134, -0.0538, -0.6503,  ..., -0.9762, -0.2880, -1.2856],
         [-0.9166,  0.4168,  0.6093,  ..., -0.6890, -0.0294, -1.0663]],

        [[ 1.4535, -0.3519,  0.2492,  ...,  0.1883,  1.1090,  0.2700],
         [ 1.2546, -0.4948,  0.7323,  ..., -1.4785, -1.2918,  0.6393],
         [-0.2234, -0.8010,  2.8304,  ..., -0.0383,  0.4101, -1.2276],
         ...,
         [-0.0547, -0.4754,  1.5855,  ..., -1.1031,  0.7405,  0.2942],
         [ 0.0616,  1.2435,  0.9553,  ..., -0.6975, -1.6267, -0.1477],
         [ 1.9763, -0.1148,  1.8752,  ...,  0.3748, -1.2348,  0.0511]]],
       device='cuda:0', grad_fn=<SelectBackward>)
tensor([[[-0.3703, -0.5308,  0.3020,  ..., -1.4061,  0.0937, -1.5234],
         [ 0.1985,  0.2901, -0.4019,  ..., -1.7403,  0.3364,  0.3545],
         [ 1.1848,  0.5575, -1.5258,  ..., -0.3179, -0.4737, -0.0851],
         ...,
         [-0.4332, -0.1375, -3.3022,  ..., -0.0055, -0.5671,  0.0685],
         [-1.1657,  0.0902, -1.1130,  ..., -0.0421, -2.1537,  0.8622],
         [ 0.3522,  0.3592,  0.6428,  ..., -1.7498, -1.7945, -1.5937]],

        [[-0.5254, -0.8186, -1.2063,  ..., -0.1385,  0.2278,  0.4650],
         [ 2.4456,  0.0362,  1.0101,  ..., -0.3827, -0.3576, -0.3180],
         [ 0.0320,  1.9826,  0.7483,  ...,  0.0306,  0.3860,  1.4193],
         ...,
         [ 0.8410, -0.4382, -0.0425,  ..., -0.6047, -0.3723, -0.0792],
         [-0.3231, -0.2706,  0.2799,  ...,  0.5856,  0.0761,  0.1868],
         [ 0.0281, -0.0432,  1.0341,  ...,  0.1287, -1.2465, -0.0474]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 4219.379, Val Loss : 19406.453
======> Trajectory Loss : 3419.739, Gravity Loss : 0.000, EndOfTrajectory Loss : 1.355, BelowGroundPenalize Loss : 664.125
===> [Minibatch 7/129].........tensor([[[-1.4684, -1.6831, -1.4966,  ...,  0.0548,  0.4518, -0.6172],
         [-0.8106,  0.0267,  0.8866,  ..., -0.3141, -0.7509, -0.0383],
         [-0.1417,  1.0339,  1.4005,  ..., -0.7192,  1.3328, -2.2721],
         ...,
         [ 0.3511, -0.5291, -1.1185,  ..., -1.8945,  1.3531, -0.1516],
         [ 1.3134, -0.0538, -0.6503,  ..., -0.9762, -0.2880, -1.2856],
         [-0.9166,  0.4168,  0.6093,  ..., -0.6890, -0.0294, -1.0663]],

        [[ 1.4535, -0.3519,  0.2492,  ...,  0.1883,  1.1090,  0.2700],
         [ 1.2546, -0.4948,  0.7323,  ..., -1.4785, -1.2918,  0.6393],
         [-0.2234, -0.8010,  2.8304,  ..., -0.0383,  0.4101, -1.2276],
         ...,
         [-0.0547, -0.4754,  1.5855,  ..., -1.1031,  0.7405,  0.2942],
         [ 0.0616,  1.2435,  0.9553,  ..., -0.6975, -1.6267, -0.1477],
         [ 1.9763, -0.1148,  1.8752,  ...,  0.3748, -1.2348,  0.0511]]],
       device='cuda:0', grad_fn=<SelectBackward>)
tensor([[[-0.3703, -0.5308,  0.3020,  ..., -1.4061,  0.0937, -1.5234],
         [ 0.1985,  0.2901, -0.4019,  ..., -1.7403,  0.3364,  0.3545],
         [ 1.1848,  0.5575, -1.5258,  ..., -0.3179, -0.4737, -0.0851],
         ...,
         [-0.4332, -0.1375, -3.3022,  ..., -0.0055, -0.5671,  0.0685],
         [-1.1657,  0.0902, -1.1130,  ..., -0.0421, -2.1537,  0.8622],
         [ 0.3522,  0.3592,  0.6428,  ..., -1.7498, -1.7945, -1.5937]],

        [[-0.5254, -0.8186, -1.2063,  ..., -0.1385,  0.2278,  0.4650],
         [ 2.4456,  0.0362,  1.0101,  ..., -0.3827, -0.3576, -0.3180],
         [ 0.0320,  1.9826,  0.7483,  ...,  0.0306,  0.3860,  1.4193],
         ...,
         [ 0.8410, -0.4382, -0.0425,  ..., -0.6047, -0.3723, -0.0792],
         [-0.3231, -0.2706,  0.2799,  ...,  0.5856,  0.0761,  0.1868],
         [ 0.0281, -0.0432,  1.0341,  ...,  0.1287, -1.2465, -0.0474]]],
       device='cuda:0', grad_fn=<SelectBackward>)
initial_hidden tensor([[[[-3.6963e-01, -5.3827e-01,  3.0629e-01,  ..., -1.4134e+00,
            1.0187e-01, -1.5285e+00],
          [ 2.0110e-01,  2.8267e-01, -3.9412e-01,  ..., -1.7477e+00,
            3.3285e-01,  3.5354e-01],
          [ 1.1874e+00,  5.5312e-01, -1.5239e+00,  ..., -3.2128e-01,
           -4.7810e-01, -8.9966e-02],
          ...,
          [-4.2649e-01, -1.4527e-01, -3.2948e+00,  ..., -1.3218e-02,
           -5.6074e-01,  6.1040e-02],
          [-1.1584e+00,  8.2780e-02, -1.1053e+00,  ..., -5.0273e-02,
           -2.1532e+00,  8.5387e-01],
          [ 3.4829e-01,  3.5375e-01,  6.4918e-01,  ..., -1.7564e+00,
           -1.8004e+00, -1.5890e+00]],

         [[-5.2665e-01, -8.1755e-01, -1.2037e+00,  ..., -1.3949e-01,
            2.2863e-01,  4.6037e-01],
          [ 2.4486e+00,  3.3768e-02,  1.0133e+00,  ..., -3.7891e-01,
           -3.5678e-01, -3.1689e-01],
          [ 3.3999e-02,  1.9790e+00,  7.4782e-01,  ...,  2.9334e-02,
            3.8987e-01,  1.4149e+00],
          ...,
          [ 8.4131e-01, -4.4171e-01, -4.0252e-02,  ..., -5.9953e-01,
           -3.7064e-01, -8.1868e-02],
          [-3.1940e-01, -2.6793e-01,  2.8151e-01,  ...,  5.9021e-01,
            7.9581e-02,  1.8192e-01],
          [ 2.8573e-02, -4.3326e-02,  1.0367e+00,  ...,  1.3275e-01,
           -1.2490e+00, -4.9151e-02]]],


        [[[ 5.5522e-01, -1.6796e+00,  8.0091e-01,  ..., -5.3104e-02,
           -2.5198e+00,  3.8864e-01],
          [-4.6105e-01,  4.0516e-01,  4.0521e-01,  ...,  7.2071e-01,
           -2.5365e+00,  2.9654e-01],
          [-1.4382e+00, -4.6052e-01,  1.8396e+00,  ..., -1.5348e+00,
           -2.0601e+00, -1.5934e-01],
          ...,
          [-1.2023e+00,  1.2681e+00, -6.3490e-01,  ...,  6.4179e-01,
           -5.6794e-01, -3.2433e-01],
          [ 1.2086e-01,  1.2989e+00,  5.4277e-01,  ...,  4.7260e-01,
           -2.0599e-02,  1.1622e+00],
          [ 2.1860e+00, -2.6579e-01, -4.8118e-01,  ...,  3.7600e-01,
           -3.8460e-01,  7.5920e-01]],

         [[ 5.2842e-01,  5.4377e-01,  1.5104e+00,  ..., -1.4826e-01,
           -5.9846e-01,  2.0835e+00],
          [-9.3407e-01,  7.9526e-01,  5.8402e-01,  ..., -3.0054e-01,
           -7.3860e-01, -6.0833e-01],
          [ 4.8075e-02,  1.1702e+00, -1.0865e+00,  ...,  6.1814e-01,
            1.2065e+00, -2.1056e-01],
          ...,
          [-1.2739e+00,  4.9848e-03, -7.3679e-01,  ..., -1.6953e+00,
            1.9956e+00, -1.2916e+00],
          [ 2.2644e+00, -2.3688e+00, -1.0235e+00,  ..., -1.2123e+00,
            1.0056e+00,  2.1503e-01],
          [-2.3645e-01, -7.3521e-01, -8.4343e-01,  ..., -6.9192e-01,
            3.5304e-02, -2.2922e+00]]],


        [[[ 2.8738e-01,  9.6151e-01,  5.6472e-01,  ...,  1.3102e+00,
            8.1224e-01,  8.3166e-02],
          [ 7.7388e-01, -3.9069e-01, -5.2592e-01,  ..., -1.8005e+00,
            1.3454e+00,  1.6051e+00],
          [ 1.4797e+00, -8.6966e-01,  7.6995e-01,  ..., -7.1602e-01,
            1.1752e+00,  6.3616e-01],
          ...,
          [ 6.8360e-01,  1.7084e+00,  8.8666e-01,  ..., -5.6155e-01,
           -1.3309e+00,  9.6429e-02],
          [-2.9758e-01, -5.6683e-01, -2.9543e-01,  ...,  3.4422e-01,
           -5.2640e-01,  3.7691e-01],
          [-1.3319e+00, -1.0982e+00,  1.7474e+00,  ...,  7.7894e-01,
            5.4992e-01, -1.7646e+00]],

         [[-6.9734e-01, -2.0042e+00,  6.3939e-01,  ..., -2.3635e+00,
            6.0644e-01, -2.5247e+00],
          [ 1.0312e+00, -9.2501e-01,  2.8882e-01,  ...,  1.1220e+00,
            6.2201e-01,  2.0996e-01],
          [ 1.9648e+00,  2.2547e-01, -2.4898e-01,  ...,  8.6841e-01,
            5.3399e-01, -2.9768e-01],
          ...,
          [-1.3363e+00,  2.1986e+00, -9.3311e-01,  ..., -6.8351e-01,
            1.4909e+00, -3.5345e-01],
          [ 1.4376e+00, -1.2478e+00, -2.5694e-01,  ...,  4.8911e-01,
           -1.1221e+00,  1.1417e+00],
          [-1.8690e+00, -1.2921e-01, -6.8437e-01,  ...,  4.8171e-01,
           -1.1222e+00, -7.2828e-01]]],


        [[[-2.3398e+00, -2.1688e+00, -2.1101e-01,  ...,  7.2279e-01,
            6.7654e-01, -1.0058e+00],
          [ 1.1474e-03,  1.5090e-02,  1.3575e+00,  ...,  1.1377e+00,
            1.2312e+00,  1.0968e+00],
          [ 1.1275e+00, -8.9829e-01, -9.8036e-01,  ...,  1.2898e-01,
            9.7017e-01,  1.6240e-01],
          ...,
          [-1.4371e+00, -2.2043e+00, -1.7019e+00,  ...,  5.8368e-01,
            9.0422e-01,  8.5883e-01],
          [ 1.3128e+00, -4.0777e-01,  2.9856e-01,  ..., -8.2646e-01,
            1.2681e-01,  1.6727e-01],
          [ 1.5405e-01,  1.4490e+00,  3.7611e-01,  ..., -1.9459e-01,
           -1.7708e+00,  1.3210e+00]],

         [[ 1.5035e+00,  3.0904e-01,  6.1946e-01,  ...,  1.1642e+00,
            9.1088e-01,  4.9239e-01],
          [ 9.7890e-01,  8.7441e-01,  1.7089e-01,  ..., -1.3117e+00,
           -7.6242e-01,  2.0520e+00],
          [ 1.0231e+00, -6.5954e-01, -1.2518e+00,  ...,  2.2544e-01,
           -7.1888e-02,  6.7539e-01],
          ...,
          [-3.4211e-01,  3.8576e-01,  5.1362e-01,  ..., -5.0530e-01,
            2.9248e-01,  1.0994e+00],
          [ 6.2267e-01, -1.0377e-01, -5.8609e-01,  ..., -3.3731e-01,
            8.7755e-02,  7.8285e-01],
          [-5.6316e-01,  2.1977e-01, -3.7376e-01,  ...,  4.2535e-01,
           -1.6017e-01, -3.9859e-01]]]], device='cuda:0') torch.Size([4, 2, 128, 32])
initial_cell tensor([[[[ 0.0288,  0.5101,  2.6213,  ...,  0.4928,  0.3866, -1.4397],
          [ 0.4076,  0.0565, -0.0762,  ...,  1.8897, -1.6890,  0.7402],
          [-0.4365, -0.5296,  0.1083,  ...,  0.6600,  0.0510,  0.5136],
          ...,
          [-0.9408,  0.0359, -1.5284,  ..., -0.2182, -0.0417,  0.2004],
          [ 0.3644,  0.1971, -0.7544,  ...,  0.9520,  0.9187, -1.8409],
          [ 0.5705, -1.2045, -1.2367,  ..., -1.1650, -0.3942, -0.2696]],

         [[-0.3121, -0.0173,  0.2518,  ...,  1.9688,  1.0506,  0.3275],
          [-0.3574, -1.5998,  2.3170,  ...,  0.5813,  0.1593,  0.6849],
          [ 0.4284, -0.1087, -0.2025,  ...,  0.2861,  0.1148, -0.3034],
          ...,
          [-0.1846,  0.3632,  0.3410,  ...,  1.0850, -0.3569, -0.1986],
          [ 0.4803,  1.0744, -0.6575,  ...,  0.4059,  1.1657,  0.8925],
          [ 0.2273,  2.9764,  1.2932,  ..., -0.0938,  0.9582, -0.3157]]],


        [[[ 0.7832, -0.6896, -0.6838,  ...,  0.3204, -0.3057, -1.1233],
          [ 2.3404,  0.4571, -0.7484,  ...,  0.3644, -0.1142, -0.2978],
          [ 1.7373,  1.7615, -0.3713,  ..., -1.8801,  1.0125, -0.6221],
          ...,
          [-0.0384,  0.5203,  1.3198,  ...,  0.1632,  0.4664,  1.5218],
          [-0.3995, -0.1466,  1.0389,  ...,  0.0369,  0.6669, -0.6188],
          [ 1.0857, -0.2982,  0.1567,  ...,  0.1041, -0.1464,  0.3401]],

         [[ 0.2146, -0.1765,  0.1277,  ..., -0.7150,  0.2872, -1.5419],
          [-2.1758, -0.2717,  0.8259,  ...,  0.0408, -0.2689, -0.4381],
          [-1.3963,  0.7172,  0.6386,  ..., -0.1001,  0.9801,  0.1350],
          ...,
          [ 1.1370, -2.1857,  1.0866,  ..., -0.0742, -0.0956, -0.1466],
          [ 0.8192,  0.3610,  0.5697,  ...,  0.3505, -0.0326,  0.1148],
          [-1.5970,  1.2853,  0.2386,  ..., -0.9212,  0.3090,  0.4976]]],


        [[[ 0.8992, -0.7028,  0.9321,  ...,  1.1892, -0.7480, -1.7688],
          [-1.7901,  0.3594, -0.2542,  ...,  2.0833, -1.2168, -1.7527],
          [ 0.5062,  0.2121,  0.4855,  ..., -1.4462, -1.4083,  0.9528],
          ...,
          [ 0.7133, -0.5592, -0.9996,  ...,  1.3189, -0.8019,  0.2603],
          [ 0.2997,  0.2333, -0.5447,  ..., -0.3415, -1.5041,  1.4191],
          [ 0.1214, -0.3796, -0.4323,  ..., -1.2775, -0.1209,  0.1142]],

         [[-1.1655, -0.0526,  0.2716,  ..., -0.9719, -2.4919,  0.8882],
          [-0.5011,  0.5985, -0.2148,  ..., -1.7141,  0.7981, -0.9171],
          [-0.0115,  0.4444,  0.3965,  ..., -0.5241,  1.2174, -1.2549],
          ...,
          [-1.5114, -1.2386, -0.0915,  ..., -1.7200, -0.8479, -0.0812],
          [ 0.2218, -0.3736, -0.9921,  ...,  0.2709,  1.0243,  2.0719],
          [-1.7539, -2.3688,  0.6361,  ...,  0.4158,  0.8422,  0.4106]]],


        [[[ 0.4646, -1.3092, -0.3056,  ...,  0.2576, -1.2518, -1.6764],
          [ 1.0524, -1.2991, -0.6907,  ...,  0.1895,  0.0275, -1.2906],
          [ 1.0079, -0.0525,  1.4421,  ...,  0.3412,  0.5282, -2.8164],
          ...,
          [ 0.1403, -0.6920, -1.1825,  ...,  0.9187,  0.3878,  0.4019],
          [ 0.8309, -1.7769,  0.0797,  ..., -0.7005,  1.4393,  1.3717],
          [ 0.7970,  0.8866, -1.5299,  ..., -0.6235,  1.2718,  0.1308]],

         [[-0.3925,  1.8807,  0.7568,  ..., -0.6830,  0.2722, -0.4022],
          [ 1.0578, -2.4743,  0.7241,  ...,  0.6071,  0.6818,  1.1791],
          [ 1.8749,  0.8217, -0.0291,  ...,  0.5459, -1.6960, -0.8106],
          ...,
          [-0.4496, -0.5197,  0.1642,  ...,  0.7779,  0.6049, -0.7762],
          [ 1.9169,  2.2139, -0.9958,  ...,  0.9349,  1.5179, -1.0114],
          [ 1.1499, -1.2386, -0.3224,  ..., -0.8487, -0.1186,  0.2418]]]],
       device='cuda:0') torch.Size([4, 2, 128, 32])
tensor([[[-1.4761, -1.6877, -1.4954,  ...,  0.0594,  0.4570, -0.6236],
         [-0.8157,  0.0303,  0.8825,  ..., -0.3094, -0.7547, -0.0429],
         [-0.1491,  1.0360,  1.4070,  ..., -0.7220,  1.3288, -2.2744],
         ...,
         [ 0.3445, -0.5351, -1.1242,  ..., -1.8909,  1.3574, -0.1578],
         [ 1.3079, -0.0615, -0.6575,  ..., -0.9709, -0.2825, -1.2933],
         [-0.9180,  0.4123,  0.6066,  ..., -0.6822, -0.0225, -1.0740]],

        [[ 1.4626, -0.3608,  0.2411,  ...,  0.1794,  1.1014,  0.2666],
         [ 1.2644, -0.5025,  0.7415,  ..., -1.4879, -1.3008,  0.6449],
         [-0.2143, -0.8093,  2.8344,  ..., -0.0339,  0.4010, -1.2284],
         ...,
         [-0.0470, -0.4842,  1.5954,  ..., -1.1122,  0.7312,  0.2925],
         [ 0.0711,  1.2343,  0.9599,  ..., -0.7065, -1.6351, -0.1569],
         [ 1.9849, -0.1187,  1.8844,  ...,  0.3716, -1.2333,  0.0590]]],
       device='cuda:0', grad_fn=<SelectBackward>)
tensor([[[-0.3696, -0.5383,  0.3063,  ..., -1.4134,  0.1019, -1.5285],
         [ 0.2011,  0.2827, -0.3941,  ..., -1.7477,  0.3329,  0.3535],
         [ 1.1874,  0.5531, -1.5239,  ..., -0.3213, -0.4781, -0.0900],
         ...,
         [-0.4265, -0.1453, -3.2948,  ..., -0.0132, -0.5607,  0.0610],
         [-1.1584,  0.0828, -1.1053,  ..., -0.0503, -2.1532,  0.8539],
         [ 0.3483,  0.3537,  0.6492,  ..., -1.7564, -1.8004, -1.5890]],

        [[-0.5267, -0.8175, -1.2037,  ..., -0.1395,  0.2286,  0.4604],
         [ 2.4486,  0.0338,  1.0133,  ..., -0.3789, -0.3568, -0.3169],
         [ 0.0340,  1.9790,  0.7478,  ...,  0.0293,  0.3899,  1.4149],
         ...,
         [ 0.8413, -0.4417, -0.0403,  ..., -0.5995, -0.3706, -0.0819],
         [-0.3194, -0.2679,  0.2815,  ...,  0.5902,  0.0796,  0.1819],
         [ 0.0286, -0.0433,  1.0367,  ...,  0.1327, -1.2490, -0.0492]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 4069.738, Val Loss : 17901.697
======> Trajectory Loss : 3309.754, Gravity Loss : 0.000, EndOfTrajectory Loss : 1.330, BelowGroundPenalize Loss : 627.000
===> [Minibatch 8/129].........tensor([[[-1.4761, -1.6877, -1.4954,  ...,  0.0594,  0.4570, -0.6236],
         [-0.8157,  0.0303,  0.8825,  ..., -0.3094, -0.7547, -0.0429],
         [-0.1491,  1.0360,  1.4070,  ..., -0.7220,  1.3288, -2.2744],
         ...,
         [ 0.3445, -0.5351, -1.1242,  ..., -1.8909,  1.3574, -0.1578],
         [ 1.3079, -0.0615, -0.6575,  ..., -0.9709, -0.2825, -1.2933],
         [-0.9180,  0.4123,  0.6066,  ..., -0.6822, -0.0225, -1.0740]],

        [[ 1.4626, -0.3608,  0.2411,  ...,  0.1794,  1.1014,  0.2666],
         [ 1.2644, -0.5025,  0.7415,  ..., -1.4879, -1.3008,  0.6449],
         [-0.2143, -0.8093,  2.8344,  ..., -0.0339,  0.4010, -1.2284],
         ...,
         [-0.0470, -0.4842,  1.5954,  ..., -1.1122,  0.7312,  0.2925],
         [ 0.0711,  1.2343,  0.9599,  ..., -0.7065, -1.6351, -0.1569],
         [ 1.9849, -0.1187,  1.8844,  ...,  0.3716, -1.2333,  0.0590]]],
       device='cuda:0', grad_fn=<SelectBackward>)
tensor([[[-0.3696, -0.5383,  0.3063,  ..., -1.4134,  0.1019, -1.5285],
         [ 0.2011,  0.2827, -0.3941,  ..., -1.7477,  0.3329,  0.3535],
         [ 1.1874,  0.5531, -1.5239,  ..., -0.3213, -0.4781, -0.0900],
         ...,
         [-0.4265, -0.1453, -3.2948,  ..., -0.0132, -0.5607,  0.0610],
         [-1.1584,  0.0828, -1.1053,  ..., -0.0503, -2.1532,  0.8539],
         [ 0.3483,  0.3537,  0.6492,  ..., -1.7564, -1.8004, -1.5890]],

        [[-0.5267, -0.8175, -1.2037,  ..., -0.1395,  0.2286,  0.4604],
         [ 2.4486,  0.0338,  1.0133,  ..., -0.3789, -0.3568, -0.3169],
         [ 0.0340,  1.9790,  0.7478,  ...,  0.0293,  0.3899,  1.4149],
         ...,
         [ 0.8413, -0.4417, -0.0403,  ..., -0.5995, -0.3706, -0.0819],
         [-0.3194, -0.2679,  0.2815,  ...,  0.5902,  0.0796,  0.1819],
         [ 0.0286, -0.0433,  1.0367,  ...,  0.1327, -1.2490, -0.0492]]],
       device='cuda:0', grad_fn=<SelectBackward>)
initial_hidden tensor([[[[-0.3677, -0.5457,  0.3094,  ..., -1.4195,  0.1083, -1.5317],
          [ 0.2034,  0.2761, -0.3872,  ..., -1.7543,  0.3297,  0.3528],
          [ 1.1900,  0.5491, -1.5222,  ..., -0.3246, -0.4817, -0.0937],
          ...,
          [-0.4205, -0.1521, -3.2882,  ..., -0.0200, -0.5552,  0.0547],
          [-1.1517,  0.0761, -1.0985,  ..., -0.0577, -2.1527,  0.8464],
          [ 0.3447,  0.3488,  0.6549,  ..., -1.7623, -1.8055, -1.5848]],

         [[-0.5299, -0.8136, -1.1989,  ..., -0.1407,  0.2297,  0.4545],
          [ 2.4512,  0.0317,  1.0160,  ..., -0.3755, -0.3561, -0.3160],
          [ 0.0374,  1.9757,  0.7496,  ...,  0.0287,  0.3930,  1.4091],
          ...,
          [ 0.8416, -0.4449, -0.0380,  ..., -0.5947, -0.3693, -0.0845],
          [-0.3160, -0.2654,  0.2830,  ...,  0.5945,  0.0826,  0.1774],
          [ 0.0289, -0.0434,  1.0391,  ...,  0.1365, -1.2514, -0.0509]]],


        [[[ 0.5625, -1.6719,  0.7941,  ..., -0.0592, -2.5255,  0.3827],
          [-0.4564,  0.4109,  0.4012,  ...,  0.7159, -2.5378,  0.2939],
          [-1.4329, -0.4551,  1.8349,  ..., -1.5414, -2.0626, -0.1612],
          ...,
          [-1.1954,  1.2753, -0.6371,  ...,  0.6352, -0.5729, -0.3237],
          [ 0.1281,  1.3059,  0.5375,  ...,  0.4663, -0.0252,  1.1558],
          [ 2.1851, -0.2591, -0.4839,  ...,  0.3704, -0.3811,  0.7547]],

         [[ 0.5276,  0.5471,  1.5075,  ..., -0.1443, -0.5935,  2.0823],
          [-0.9355,  0.7968,  0.5846,  ..., -0.2984, -0.7390, -0.6070],
          [ 0.0451,  1.1701, -1.0860,  ...,  0.6203,  1.2073, -0.2117],
          ...,
          [-1.2765,  0.0040, -0.7347,  ..., -1.6947,  1.9959, -1.2926],
          [ 2.2638, -2.3726, -1.0246,  ..., -1.2092,  1.0062,  0.2116],
          [-0.2398, -0.7396, -0.8434,  ..., -0.6903,  0.0363, -2.2932]]],


        [[[ 0.2852,  0.9637,  0.5707,  ...,  1.3092,  0.8173,  0.0783],
          [ 0.7804, -0.3844, -0.5191,  ..., -1.8058,  1.3432,  1.6089],
          [ 1.4795, -0.8676,  0.7685,  ..., -0.7149,  1.1745,  0.6336],
          ...,
          [ 0.6884,  1.7148,  0.8936,  ..., -0.5560, -1.3256,  0.0972],
          [-0.2916, -0.5684, -0.2894,  ...,  0.3488, -0.5333,  0.3780],
          [-1.3295, -1.1016,  1.7524,  ...,  0.7824,  0.5564, -1.7635]],

         [[-0.7023, -2.0064,  0.6352,  ..., -2.3590,  0.6109, -2.5296],
          [ 1.0286, -0.9267,  0.2878,  ...,  1.1248,  0.6243,  0.2100],
          [ 1.9655,  0.2279, -0.2521,  ...,  0.8689,  0.5348, -0.2986],
          ...,
          [-1.3357,  2.2013, -0.9361,  ..., -0.6821,  1.4935, -0.3556],
          [ 1.4338, -1.2463, -0.2585,  ...,  0.4908, -1.1191,  1.1381],
          [-1.8707, -0.1301, -0.6882,  ...,  0.4837, -1.1197, -0.7294]]],


        [[[-2.3367, -2.1639, -0.2160,  ...,  0.7267,  0.6742, -1.0108],
          [-0.0044,  0.0208,  1.3603,  ...,  1.1423,  1.2264,  1.0917],
          [ 1.1253, -0.8926, -0.9822,  ...,  0.1328,  0.9657,  0.1563],
          ...,
          [-1.4341, -2.1986, -1.7051,  ...,  0.5899,  0.8987,  0.8521],
          [ 1.3159, -0.4006,  0.2920,  ..., -0.8237,  0.1245,  0.1601],
          [ 0.1564,  1.4556,  0.3741,  ..., -0.2004, -1.7770,  1.3182]],

         [[ 1.5057,  0.3145,  0.6171,  ...,  1.1683,  0.9160,  0.4924],
          [ 0.9814,  0.8737,  0.1724,  ..., -1.3134, -0.7636,  2.0496],
          [ 1.0281, -0.6558, -1.2537,  ...,  0.2274, -0.0693,  0.6764],
          ...,
          [-0.3393,  0.3909,  0.5137,  ..., -0.5074,  0.2964,  1.0972],
          [ 0.6243, -0.1025, -0.5895,  ..., -0.3405,  0.0908,  0.7818],
          [-0.5605,  0.2218, -0.3760,  ...,  0.4270, -0.1611, -0.3995]]]],
       device='cuda:0') torch.Size([4, 2, 128, 32])
initial_cell tensor([[[[ 0.0267,  0.5031,  2.6275,  ...,  0.4916,  0.3801, -1.4339],
          [ 0.4053,  0.0532, -0.0693,  ...,  1.8891, -1.6960,  0.7438],
          [-0.4358, -0.5310,  0.1133,  ...,  0.6578,  0.0461,  0.5141],
          ...,
          [-0.9439,  0.0340, -1.5220,  ..., -0.2235, -0.0491,  0.1992],
          [ 0.3576,  0.1949, -0.7478,  ...,  0.9502,  0.9111, -1.8358],
          [ 0.5682, -1.2081, -1.2306,  ..., -1.1644, -0.4013, -0.2686]],

         [[-0.3062, -0.0224,  0.2517,  ...,  1.9693,  1.0558,  0.3222],
          [-0.3583, -1.6023,  2.3190,  ...,  0.5801,  0.1620,  0.6833],
          [ 0.4293, -0.1113, -0.2009,  ...,  0.2846,  0.1185, -0.3041],
          ...,
          [-0.1804,  0.3635,  0.3415,  ...,  1.0860, -0.3514, -0.2026],
          [ 0.4856,  1.0727, -0.6605,  ...,  0.4091,  1.1703,  0.8876],
          [ 0.2277,  2.9765,  1.2935,  ..., -0.0949,  0.9631, -0.3174]]],


        [[[ 0.7848, -0.6889, -0.6761,  ...,  0.3178, -0.3133, -1.1210],
          [ 2.3418,  0.4573, -0.7442,  ...,  0.3689, -0.1201, -0.2958],
          [ 1.7402,  1.7621, -0.3712,  ..., -1.8814,  1.0053, -0.6237],
          ...,
          [-0.0367,  0.5215,  1.3260,  ...,  0.1646,  0.4587,  1.5221],
          [-0.4038, -0.1423,  1.0454,  ...,  0.0414,  0.6592, -0.6129],
          [ 1.0838, -0.2944,  0.1626,  ...,  0.1100, -0.1535,  0.3414]],

         [[ 0.2129, -0.1794,  0.1262,  ..., -0.7124,  0.2922, -1.5467],
          [-2.1775, -0.2695,  0.8281,  ...,  0.0394, -0.2665, -0.4373],
          [-1.3976,  0.7168,  0.6405,  ..., -0.1015,  0.9834,  0.1364],
          ...,
          [ 1.1384, -2.1817,  1.0875,  ..., -0.0735, -0.0930, -0.1470],
          [ 0.8195,  0.3611,  0.5675,  ...,  0.3550, -0.0291,  0.1103],
          [-1.5988,  1.2860,  0.2386,  ..., -0.9217,  0.3122,  0.4979]]],


        [[[ 0.9010, -0.7062,  0.9383,  ...,  1.1949, -0.7546, -1.7650],
          [-1.7886,  0.3566, -0.2472,  ...,  2.0900, -1.2224, -1.7490],
          [ 0.5090,  0.2087,  0.4885,  ..., -1.4397, -1.4146,  0.9567],
          ...,
          [ 0.7148, -0.5610, -0.9933,  ...,  1.3262, -0.8091,  0.2598],
          [ 0.3003,  0.2320, -0.5380,  ..., -0.3339, -1.5118,  1.4250],
          [ 0.1199, -0.3831, -0.4263,  ..., -1.2707, -0.1267,  0.1177]],

         [[-1.1697, -0.0530,  0.2668,  ..., -0.9699, -2.4900,  0.8854],
          [-0.5039,  0.6011, -0.2151,  ..., -1.7148,  0.8008, -0.9171],
          [-0.0111,  0.4439,  0.3968,  ..., -0.5251,  1.2205, -1.2536],
          ...,
          [-1.5088, -1.2335, -0.0936,  ..., -1.7201, -0.8456, -0.0810],
          [ 0.2201, -0.3708, -0.9961,  ...,  0.2730,  1.0280,  2.0701],
          [-1.7554, -2.3671,  0.6342,  ...,  0.4157,  0.8457,  0.4115]]],


        [[[ 0.4616, -1.3124, -0.3015,  ...,  0.2648, -1.2582, -1.6732],
          [ 1.0492, -1.3020, -0.6863,  ...,  0.1967,  0.0202, -1.2863],
          [ 1.0092, -0.0560,  1.4443,  ...,  0.3482,  0.5212, -2.8179],
          ...,
          [ 0.1422, -0.6939, -1.1792,  ...,  0.9262,  0.3803,  0.4019],
          [ 0.8285, -1.7788,  0.0824,  ..., -0.6931,  1.4318,  1.3766],
          [ 0.7958,  0.8826, -1.5259,  ..., -0.6166,  1.2648,  0.1344]],

         [[-0.3929,  1.8856,  0.7518,  ..., -0.6803,  0.2758, -0.4066],
          [ 1.0558, -2.4736,  0.7248,  ...,  0.6100,  0.6839,  1.1809],
          [ 1.8786,  0.8215, -0.0289,  ...,  0.5463, -1.6936, -0.8085],
          ...,
          [-0.4460, -0.5135,  0.1621,  ...,  0.7833,  0.6054, -0.7768],
          [ 1.9175,  2.2185, -1.0003,  ...,  0.9382,  1.5207, -1.0157],
          [ 1.1489, -1.2392, -0.3257,  ..., -0.8487, -0.1153,  0.2428]]]],
       device='cuda:0') torch.Size([4, 2, 128, 32])
tensor([[[-1.4832, -1.6891, -1.4909,  ...,  0.0602,  0.4634, -0.6301],
         [-0.8200,  0.0336,  0.8788,  ..., -0.3054, -0.7578, -0.0468],
         [-0.1554,  1.0334,  1.4142,  ..., -0.7255,  1.3229, -2.2797],
         ...,
         [ 0.3371, -0.5347, -1.1308,  ..., -1.8888,  1.3620, -0.1651],
         [ 1.3040, -0.0691, -0.6632,  ..., -0.9690, -0.2791, -1.3001],
         [-0.9186,  0.4060,  0.6027,  ..., -0.6746, -0.0150, -1.0822]],

        [[ 1.4719, -0.3697,  0.2336,  ...,  0.1704,  1.0939,  0.2613],
         [ 1.2743, -0.5109,  0.7509,  ..., -1.4976, -1.3098,  0.6516],
         [-0.2049, -0.8178,  2.8403,  ..., -0.0323,  0.3925, -1.2328],
         ...,
         [-0.0388, -0.4934,  1.6054,  ..., -1.1217,  0.7218,  0.2890],
         [ 0.0809,  1.2249,  0.9648,  ..., -0.7158, -1.6434, -0.1661],
         [ 1.9939, -0.1241,  1.8935,  ...,  0.3660, -1.2303,  0.0671]]],
       device='cuda:0', grad_fn=<SelectBackward>)
tensor([[[-0.3677, -0.5457,  0.3094,  ..., -1.4195,  0.1083, -1.5317],
         [ 0.2034,  0.2761, -0.3872,  ..., -1.7543,  0.3297,  0.3528],
         [ 1.1900,  0.5491, -1.5222,  ..., -0.3246, -0.4817, -0.0937],
         ...,
         [-0.4205, -0.1521, -3.2882,  ..., -0.0200, -0.5552,  0.0547],
         [-1.1517,  0.0761, -1.0985,  ..., -0.0577, -2.1527,  0.8464],
         [ 0.3447,  0.3488,  0.6549,  ..., -1.7623, -1.8055, -1.5848]],

        [[-0.5299, -0.8136, -1.1989,  ..., -0.1407,  0.2297,  0.4545],
         [ 2.4512,  0.0317,  1.0160,  ..., -0.3755, -0.3561, -0.3160],
         [ 0.0374,  1.9757,  0.7496,  ...,  0.0287,  0.3930,  1.4091],
         ...,
         [ 0.8416, -0.4449, -0.0380,  ..., -0.5947, -0.3693, -0.0845],
         [-0.3160, -0.2654,  0.2830,  ...,  0.5945,  0.0826,  0.1774],
         [ 0.0289, -0.0434,  1.0391,  ...,  0.1365, -1.2514, -0.0509]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 3830.384, Val Loss : 16333.705
======> Trajectory Loss : 3037.256, Gravity Loss : 0.000, EndOfTrajectory Loss : 1.288, BelowGroundPenalize Loss : 664.290
===> [Minibatch 9/129].........tensor([[[-1.4832, -1.6891, -1.4909,  ...,  0.0602,  0.4634, -0.6301],
         [-0.8200,  0.0336,  0.8788,  ..., -0.3054, -0.7578, -0.0468],
         [-0.1554,  1.0334,  1.4142,  ..., -0.7255,  1.3229, -2.2797],
         ...,
         [ 0.3371, -0.5347, -1.1308,  ..., -1.8888,  1.3620, -0.1651],
         [ 1.3040, -0.0691, -0.6632,  ..., -0.9690, -0.2791, -1.3001],
         [-0.9186,  0.4060,  0.6027,  ..., -0.6746, -0.0150, -1.0822]],

        [[ 1.4719, -0.3697,  0.2336,  ...,  0.1704,  1.0939,  0.2613],
         [ 1.2743, -0.5109,  0.7509,  ..., -1.4976, -1.3098,  0.6516],
         [-0.2049, -0.8178,  2.8403,  ..., -0.0323,  0.3925, -1.2328],
         ...,
         [-0.0388, -0.4934,  1.6054,  ..., -1.1217,  0.7218,  0.2890],
         [ 0.0809,  1.2249,  0.9648,  ..., -0.7158, -1.6434, -0.1661],
         [ 1.9939, -0.1241,  1.8935,  ...,  0.3660, -1.2303,  0.0671]]],
       device='cuda:0', grad_fn=<SelectBackward>)
tensor([[[-0.3677, -0.5457,  0.3094,  ..., -1.4195,  0.1083, -1.5317],
         [ 0.2034,  0.2761, -0.3872,  ..., -1.7543,  0.3297,  0.3528],
         [ 1.1900,  0.5491, -1.5222,  ..., -0.3246, -0.4817, -0.0937],
         ...,
         [-0.4205, -0.1521, -3.2882,  ..., -0.0200, -0.5552,  0.0547],
         [-1.1517,  0.0761, -1.0985,  ..., -0.0577, -2.1527,  0.8464],
         [ 0.3447,  0.3488,  0.6549,  ..., -1.7623, -1.8055, -1.5848]],

        [[-0.5299, -0.8136, -1.1989,  ..., -0.1407,  0.2297,  0.4545],
         [ 2.4512,  0.0317,  1.0160,  ..., -0.3755, -0.3561, -0.3160],
         [ 0.0374,  1.9757,  0.7496,  ...,  0.0287,  0.3930,  1.4091],
         ...,
         [ 0.8416, -0.4449, -0.0380,  ..., -0.5947, -0.3693, -0.0845],
         [-0.3160, -0.2654,  0.2830,  ...,  0.5945,  0.0826,  0.1774],
         [ 0.0289, -0.0434,  1.0391,  ...,  0.1365, -1.2514, -0.0509]]],
       device='cuda:0', grad_fn=<SelectBackward>)
initial_hidden tensor([[[[-3.6618e-01, -5.5258e-01,  3.1236e-01,  ..., -1.4253e+00,
            1.1406e-01, -1.5350e+00],
          [ 2.0482e-01,  2.6953e-01, -3.8038e-01,  ..., -1.7602e+00,
            3.2575e-01,  3.5162e-01],
          [ 1.1923e+00,  5.4552e-01, -1.5207e+00,  ..., -3.2752e-01,
           -4.8487e-01, -9.7047e-02],
          ...,
          [-4.1510e-01, -1.5828e-01, -3.2824e+00,  ..., -2.6035e-02,
           -5.5021e-01,  4.8929e-02],
          [-1.1457e+00,  7.0082e-02, -1.0925e+00,  ..., -6.4373e-02,
           -2.1524e+00,  8.3969e-01],
          [ 3.4149e-01,  3.4429e-01,  6.6008e-01,  ..., -1.7676e+00,
           -1.8102e+00, -1.5811e+00]],

         [[-5.3265e-01, -8.1008e-01, -1.1946e+00,  ..., -1.4176e-01,
            2.3055e-01,  4.4927e-01],
          [ 2.4537e+00,  2.9706e-02,  1.0188e+00,  ..., -3.7243e-01,
           -3.5582e-01, -3.1547e-01],
          [ 4.0461e-02,  1.9728e+00,  7.5123e-01,  ...,  2.8170e-02,
            3.9579e-01,  1.4039e+00],
          ...,
          [ 8.4178e-01, -4.4782e-01, -3.5896e-02,  ..., -5.9036e-01,
           -3.6809e-01, -8.6933e-02],
          [-3.1294e-01, -2.6323e-01,  2.8427e-01,  ...,  5.9835e-01,
            8.5322e-02,  1.7331e-01],
          [ 2.9213e-02, -4.3515e-02,  1.0414e+00,  ...,  1.3977e-01,
           -1.2535e+00, -5.2430e-02]]],


        [[[ 5.6905e-01, -1.6649e+00,  7.8792e-01,  ..., -6.4842e-02,
           -2.5308e+00,  3.7733e-01],
          [-4.5212e-01,  4.1634e-01,  3.9759e-01,  ...,  7.1074e-01,
           -2.5395e+00,  2.9143e-01],
          [-1.4282e+00, -4.5032e-01,  1.8307e+00,  ..., -1.5473e+00,
           -2.0648e+00, -1.6277e-01],
          ...,
          [-1.1892e+00,  1.2817e+00, -6.3899e-01,  ...,  6.2929e-01,
           -5.7735e-01, -3.2321e-01],
          [ 1.3457e-01,  1.3122e+00,  5.3290e-01,  ...,  4.6066e-01,
           -2.9389e-02,  1.1501e+00],
          [ 2.1843e+00, -2.5313e-01, -4.8627e-01,  ...,  3.6543e-01,
           -3.7788e-01,  7.5065e-01]],

         [[ 5.2679e-01,  5.5005e-01,  1.5047e+00,  ..., -1.4067e-01,
           -5.8907e-01,  2.0813e+00],
          [-9.3682e-01,  7.9806e-01,  5.8453e-01,  ..., -2.9549e-01,
           -7.3896e-01, -6.0626e-01],
          [ 4.2446e-02,  1.1701e+00, -1.0856e+00,  ...,  6.2227e-01,
            1.2081e+00, -2.1264e-01],
          ...,
          [-1.2788e+00,  3.1978e-03, -7.3287e-01,  ..., -1.6941e+00,
            1.9962e+00, -1.2935e+00],
          [ 2.2633e+00, -2.3760e+00, -1.0257e+00,  ..., -1.2064e+00,
            1.0068e+00,  2.0861e-01],
          [-2.4273e-01, -7.4353e-01, -8.4334e-01,  ..., -6.8877e-01,
            3.7183e-02, -2.2941e+00]]],


        [[[ 2.8312e-01,  9.6573e-01,  5.7608e-01,  ...,  1.3083e+00,
            8.2209e-01,  7.3722e-02],
          [ 7.8660e-01, -3.7853e-01, -5.1273e-01,  ..., -1.8106e+00,
            1.3414e+00,  1.6120e+00],
          [ 1.4794e+00, -8.6571e-01,  7.6724e-01,  ..., -7.1384e-01,
            1.1740e+00,  6.3128e-01],
          ...,
          [ 6.9272e-01,  1.7204e+00,  8.9967e-01,  ..., -5.5098e-01,
           -1.3208e+00,  9.7939e-02],
          [-2.8634e-01, -5.6974e-01, -2.8396e-01,  ...,  3.5299e-01,
           -5.3945e-01,  3.7884e-01],
          [-1.3274e+00, -1.1046e+00,  1.7568e+00,  ...,  7.8551e-01,
            5.6223e-01, -1.7625e+00]],

         [[-7.0674e-01, -2.0083e+00,  6.3148e-01,  ..., -2.3551e+00,
            6.1489e-01, -2.5340e+00],
          [ 1.0261e+00, -9.2840e-01,  2.8709e-01,  ...,  1.1274e+00,
            6.2643e-01,  2.0968e-01],
          [ 1.9660e+00,  2.3001e-01, -2.5485e-01,  ...,  8.6939e-01,
            5.3553e-01, -2.9948e-01],
          ...,
          [-1.3353e+00,  2.2036e+00, -9.3869e-01,  ..., -6.8079e-01,
            1.4958e+00, -3.5747e-01],
          [ 1.4304e+00, -1.2451e+00, -2.5991e-01,  ...,  4.9241e-01,
           -1.1164e+00,  1.1349e+00],
          [-1.8723e+00, -1.3093e-01, -6.9165e-01,  ...,  4.8542e-01,
           -1.1175e+00, -7.3048e-01]]],


        [[[-2.3339e+00, -2.1596e+00, -2.2047e-01,  ...,  7.3029e-01,
            6.7188e-01, -1.0154e+00],
          [-9.3384e-03,  2.6168e-02,  1.3630e+00,  ...,  1.1465e+00,
            1.2217e+00,  1.0871e+00],
          [ 1.1234e+00, -8.8748e-01, -9.8376e-01,  ...,  1.3625e-01,
            9.6169e-01,  1.5079e-01],
          ...,
          [-1.4313e+00, -2.1935e+00, -1.7079e+00,  ...,  5.9536e-01,
            8.9383e-01,  8.4606e-01],
          [ 1.3186e+00, -3.9419e-01,  2.8625e-01,  ..., -8.2131e-01,
            1.2244e-01,  1.5379e-01],
          [ 1.5843e-01,  1.4614e+00,  3.7237e-01,  ..., -2.0557e-01,
           -1.7825e+00,  1.3158e+00]],

         [[ 1.5076e+00,  3.1939e-01,  6.1488e-01,  ...,  1.1718e+00,
            9.2055e-01,  4.9236e-01],
          [ 9.8372e-01,  8.7316e-01,  1.7367e-01,  ..., -1.3149e+00,
           -7.6454e-01,  2.0475e+00],
          [ 1.0325e+00, -6.5254e-01, -1.2553e+00,  ...,  2.2914e-01,
           -6.6964e-02,  6.7719e-01],
          ...,
          [-3.3686e-01,  3.9541e-01,  5.1369e-01,  ..., -5.0917e-01,
            2.9988e-01,  1.0953e+00],
          [ 6.2579e-01, -1.0148e-01, -5.9253e-01,  ..., -3.4328e-01,
            9.3547e-02,  7.8092e-01],
          [-5.5820e-01,  2.2362e-01, -3.7792e-01,  ...,  4.2848e-01,
           -1.6191e-01, -4.0031e-01]]]], device='cuda:0') torch.Size([4, 2, 128, 32])
initial_cell tensor([[[[ 0.0248,  0.4969,  2.6335,  ...,  0.4904,  0.3744, -1.4290],
          [ 0.4031,  0.0504, -0.0623,  ...,  1.8874, -1.7026,  0.7437],
          [-0.4352, -0.5323,  0.1178,  ...,  0.6559,  0.0417,  0.5145],
          ...,
          [-0.9466,  0.0323, -1.5162,  ..., -0.2282, -0.0557,  0.1981],
          [ 0.3515,  0.1930, -0.7420,  ...,  0.9486,  0.9042, -1.8313],
          [ 0.5660, -1.2113, -1.2252,  ..., -1.1639, -0.4077, -0.2677]],

         [[-0.3010, -0.0270,  0.2516,  ...,  1.9698,  1.0605,  0.3174],
          [-0.3587, -1.6051,  2.3207,  ...,  0.5790,  0.1647,  0.6811],
          [ 0.4302, -0.1137, -0.1995,  ...,  0.2833,  0.1219, -0.3048],
          ...,
          [-0.1767,  0.3637,  0.3419,  ...,  1.0869, -0.3464, -0.2063],
          [ 0.4902,  1.0711, -0.6631,  ...,  0.4118,  1.1744,  0.8833],
          [ 0.2280,  2.9765,  1.2938,  ..., -0.0959,  0.9674, -0.3190]]],


        [[[ 0.7863, -0.6881, -0.6692,  ...,  0.3155, -0.3202, -1.1190],
          [ 2.3430,  0.4579, -0.7401,  ...,  0.3727, -0.1257, -0.2942],
          [ 1.7427,  1.7626, -0.3710,  ..., -1.8826,  0.9990, -0.6251],
          ...,
          [-0.0352,  0.5225,  1.3315,  ...,  0.1659,  0.4517,  1.5224],
          [-0.4076, -0.1384,  1.0512,  ...,  0.0453,  0.6523, -0.6076],
          [ 1.0822, -0.2910,  0.1680,  ...,  0.1151, -0.1598,  0.3426]],

         [[ 0.2114, -0.1822,  0.1249,  ..., -0.7100,  0.2967, -1.5509],
          [-2.1790, -0.2680,  0.8298,  ...,  0.0383, -0.2640, -0.4371],
          [-1.3989,  0.7165,  0.6422,  ..., -0.1028,  0.9863,  0.1376],
          ...,
          [ 1.1397, -2.1781,  1.0884,  ..., -0.0729, -0.0907, -0.1474],
          [ 0.8197,  0.3611,  0.5655,  ...,  0.3591, -0.0260,  0.1063],
          [-1.6004,  1.2865,  0.2386,  ..., -0.9221,  0.3152,  0.4982]]],


        [[[ 0.9026, -0.7091,  0.9439,  ...,  1.2002, -0.7605, -1.7617],
          [-1.7871,  0.3542, -0.2405,  ...,  2.0964, -1.2275, -1.7458],
          [ 0.5115,  0.2058,  0.4913,  ..., -1.4339, -1.4202,  0.9601],
          ...,
          [ 0.7161, -0.5626, -0.9877,  ...,  1.3327, -0.8156,  0.2594],
          [ 0.3008,  0.2308, -0.5320,  ..., -0.3272, -1.5187,  1.4302],
          [ 0.1186, -0.3863, -0.4209,  ..., -1.2645, -0.1319,  0.1207]],

         [[-1.1736, -0.0535,  0.2625,  ..., -0.9681, -2.4883,  0.8828],
          [-0.5067,  0.6032, -0.2157,  ..., -1.7151,  0.8036, -0.9176],
          [-0.0109,  0.4435,  0.3971,  ..., -0.5259,  1.2233, -1.2524],
          ...,
          [-1.5065, -1.2290, -0.0955,  ..., -1.7203, -0.8435, -0.0810],
          [ 0.2186, -0.3683, -0.9997,  ...,  0.2748,  1.0313,  2.0684],
          [-1.7568, -2.3657,  0.6325,  ...,  0.4157,  0.8490,  0.4123]]],


        [[[ 0.4590, -1.3151, -0.2978,  ...,  0.2713, -1.2638, -1.6704],
          [ 1.0468, -1.3045, -0.6822,  ...,  0.2034,  0.0135, -1.2826],
          [ 1.0104, -0.0591,  1.4462,  ...,  0.3544,  0.5150, -2.8193],
          ...,
          [ 0.1439, -0.6957, -1.1762,  ...,  0.9328,  0.3736,  0.4019],
          [ 0.8265, -1.7805,  0.0848,  ..., -0.6864,  1.4252,  1.3809],
          [ 0.7947,  0.8790, -1.5224,  ..., -0.6104,  1.2585,  0.1376]],

         [[-0.3933,  1.8900,  0.7474,  ..., -0.6778,  0.2790, -0.4105],
          [ 1.0539, -2.4730,  0.7253,  ...,  0.6129,  0.6862,  1.1823],
          [ 1.8818,  0.8213, -0.0287,  ...,  0.5466, -1.6915, -0.8067],
          ...,
          [-0.4429, -0.5080,  0.1602,  ...,  0.7880,  0.6058, -0.7773],
          [ 1.9180,  2.2225, -1.0044,  ...,  0.9411,  1.5232, -1.0195],
          [ 1.1479, -1.2398, -0.3288,  ..., -0.8486, -0.1124,  0.2436]]]],
       device='cuda:0') torch.Size([4, 2, 128, 32])
tensor([[[-1.4895, -1.6904, -1.4870,  ...,  0.0608,  0.4690, -0.6358],
         [-0.8258,  0.0298,  0.8736,  ..., -0.3005, -0.7617, -0.0519],
         [-0.1616,  1.0295,  1.4216,  ..., -0.7230,  1.3158, -2.2860],
         ...,
         [ 0.3302, -0.5333, -1.1362,  ..., -1.8869,  1.3662, -0.1719],
         [ 1.3002, -0.0766, -0.6682,  ..., -0.9667, -0.2758, -1.3067],
         [-0.9192,  0.4007,  0.5992,  ..., -0.6680, -0.0084, -1.0893]],

        [[ 1.4813, -0.3787,  0.2270,  ...,  0.1613,  1.0872,  0.2547],
         [ 1.2843, -0.5198,  0.7605,  ..., -1.5076, -1.3186,  0.6591],
         [-0.1953, -0.8263,  2.8475,  ..., -0.0335,  0.3846, -1.2388],
         ...,
         [-0.0302, -0.5029,  1.6155,  ..., -1.1314,  0.7124,  0.2844],
         [ 0.0908,  1.2153,  0.9697,  ..., -0.7254, -1.6518, -0.1752],
         [ 2.0033, -0.1306,  1.9028,  ...,  0.3590, -1.2254,  0.0753]]],
       device='cuda:0', grad_fn=<SelectBackward>)
tensor([[[-0.3662, -0.5526,  0.3124,  ..., -1.4253,  0.1141, -1.5350],
         [ 0.2048,  0.2695, -0.3804,  ..., -1.7602,  0.3257,  0.3516],
         [ 1.1923,  0.5455, -1.5207,  ..., -0.3275, -0.4849, -0.0970],
         ...,
         [-0.4151, -0.1583, -3.2824,  ..., -0.0260, -0.5502,  0.0489],
         [-1.1457,  0.0701, -1.0925,  ..., -0.0644, -2.1524,  0.8397],
         [ 0.3415,  0.3443,  0.6601,  ..., -1.7676, -1.8102, -1.5811]],

        [[-0.5327, -0.8101, -1.1946,  ..., -0.1418,  0.2306,  0.4493],
         [ 2.4537,  0.0297,  1.0188,  ..., -0.3724, -0.3558, -0.3155],
         [ 0.0405,  1.9728,  0.7512,  ...,  0.0282,  0.3958,  1.4039],
         ...,
         [ 0.8418, -0.4478, -0.0359,  ..., -0.5904, -0.3681, -0.0869],
         [-0.3129, -0.2632,  0.2843,  ...,  0.5984,  0.0853,  0.1733],
         [ 0.0292, -0.0435,  1.0414,  ...,  0.1398, -1.2535, -0.0524]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 3096.611, Val Loss : 15182.459
======> Trajectory Loss : 2556.033, Gravity Loss : 0.000, EndOfTrajectory Loss : 1.209, BelowGroundPenalize Loss : 419.709
===> [Minibatch 10/129].........tensor([[[-1.4895, -1.6904, -1.4870,  ...,  0.0608,  0.4690, -0.6358],
         [-0.8258,  0.0298,  0.8736,  ..., -0.3005, -0.7617, -0.0519],
         [-0.1616,  1.0295,  1.4216,  ..., -0.7230,  1.3158, -2.2860],
         ...,
         [ 0.3302, -0.5333, -1.1362,  ..., -1.8869,  1.3662, -0.1719],
         [ 1.3002, -0.0766, -0.6682,  ..., -0.9667, -0.2758, -1.3067],
         [-0.9192,  0.4007,  0.5992,  ..., -0.6680, -0.0084, -1.0893]],

        [[ 1.4813, -0.3787,  0.2270,  ...,  0.1613,  1.0872,  0.2547],
         [ 1.2843, -0.5198,  0.7605,  ..., -1.5076, -1.3186,  0.6591],
         [-0.1953, -0.8263,  2.8475,  ..., -0.0335,  0.3846, -1.2388],
         ...,
         [-0.0302, -0.5029,  1.6155,  ..., -1.1314,  0.7124,  0.2844],
         [ 0.0908,  1.2153,  0.9697,  ..., -0.7254, -1.6518, -0.1752],
         [ 2.0033, -0.1306,  1.9028,  ...,  0.3590, -1.2254,  0.0753]]],
       device='cuda:0', grad_fn=<SelectBackward>)
tensor([[[-0.3662, -0.5526,  0.3124,  ..., -1.4253,  0.1141, -1.5350],
         [ 0.2048,  0.2695, -0.3804,  ..., -1.7602,  0.3257,  0.3516],
         [ 1.1923,  0.5455, -1.5207,  ..., -0.3275, -0.4849, -0.0970],
         ...,
         [-0.4151, -0.1583, -3.2824,  ..., -0.0260, -0.5502,  0.0489],
         [-1.1457,  0.0701, -1.0925,  ..., -0.0644, -2.1524,  0.8397],
         [ 0.3415,  0.3443,  0.6601,  ..., -1.7676, -1.8102, -1.5811]],

        [[-0.5327, -0.8101, -1.1946,  ..., -0.1418,  0.2306,  0.4493],
         [ 2.4537,  0.0297,  1.0188,  ..., -0.3724, -0.3558, -0.3155],
         [ 0.0405,  1.9728,  0.7512,  ...,  0.0282,  0.3958,  1.4039],
         ...,
         [ 0.8418, -0.4478, -0.0359,  ..., -0.5904, -0.3681, -0.0869],
         [-0.3129, -0.2632,  0.2843,  ...,  0.5984,  0.0853,  0.1733],
         [ 0.0292, -0.0435,  1.0414,  ...,  0.1398, -1.2535, -0.0524]]],
       device='cuda:0', grad_fn=<SelectBackward>)
initial_hidden tensor([[[[-3.6491e-01, -5.5882e-01,  3.1513e-01,  ..., -1.4305e+00,
            1.1927e-01, -1.5381e+00],
          [ 2.0600e-01,  2.6341e-01, -3.7388e-01,  ..., -1.7657e+00,
            3.2179e-01,  3.5036e-01],
          [ 1.1942e+00,  5.4181e-01, -1.5191e+00,  ..., -3.3043e-01,
           -4.8788e-01, -1.0026e-01],
          ...,
          [-4.1033e-01, -1.6381e-01, -3.2771e+00,  ..., -3.1453e-02,
           -5.4581e-01,  4.3770e-02],
          [-1.1403e+00,  6.4734e-02, -1.0870e+00,  ..., -7.0331e-02,
           -2.1521e+00,  8.3368e-01],
          [ 3.3847e-01,  3.4006e-01,  6.6488e-01,  ..., -1.7725e+00,
           -1.8144e+00, -1.5781e+00]],

         [[-5.3507e-01, -8.0694e-01, -1.1907e+00,  ..., -1.4268e-01,
            2.3133e-01,  4.4459e-01],
          [ 2.4560e+00,  2.7909e-02,  1.0216e+00,  ..., -3.6964e-01,
           -3.5563e-01, -3.1510e-01],
          [ 4.3542e-02,  1.9702e+00,  7.5307e-01,  ...,  2.7739e-02,
            3.9833e-01,  1.3990e+00],
          ...,
          [ 8.4197e-01, -4.5040e-01, -3.4002e-02,  ..., -5.8649e-01,
           -3.6703e-01, -8.9111e-02],
          [-3.1026e-01, -2.6130e-01,  2.8542e-01,  ...,  6.0177e-01,
            8.7691e-02,  1.6972e-01],
          [ 2.9428e-02, -4.3783e-02,  1.0435e+00,  ...,  1.4279e-01,
           -1.2555e+00, -5.3925e-02]]],


        [[[ 5.7486e-01, -1.6585e+00,  7.8238e-01,  ..., -6.9919e-02,
           -2.5356e+00,  3.7247e-01],
          [-4.4824e-01,  4.2136e-01,  3.9435e-01,  ...,  7.0579e-01,
           -2.5411e+00,  2.8919e-01],
          [-1.4240e+00, -4.4593e-01,  1.8269e+00,  ..., -1.5529e+00,
           -2.0669e+00, -1.6407e-01],
          ...,
          [-1.1836e+00,  1.2875e+00, -6.4068e-01,  ...,  6.2400e-01,
           -5.8135e-01, -3.2274e-01],
          [ 1.4033e-01,  1.3177e+00,  5.2878e-01,  ...,  4.5561e-01,
           -3.3076e-02,  1.1450e+00],
          [ 2.1834e+00, -2.4764e-01, -4.8837e-01,  ...,  3.6077e-01,
           -3.7510e-01,  7.4703e-01]],

         [[ 5.2608e-01,  5.5264e-01,  1.5023e+00,  ..., -1.3745e-01,
           -5.8509e-01,  2.0804e+00],
          [-9.3796e-01,  7.9910e-01,  5.8417e-01,  ..., -2.9249e-01,
           -7.3875e-01, -6.0581e-01],
          [ 4.0090e-02,  1.1699e+00, -1.0855e+00,  ...,  6.2414e-01,
            1.2088e+00, -2.1362e-01],
          ...,
          [-1.2809e+00,  2.4279e-03, -7.3126e-01,  ..., -1.6936e+00,
            1.9966e+00, -1.2943e+00],
          [ 2.2629e+00, -2.3790e+00, -1.0266e+00,  ..., -1.2039e+00,
            1.0073e+00,  2.0593e-01],
          [-2.4539e-01, -7.4714e-01, -8.4342e-01,  ..., -6.8729e-01,
            3.8040e-02, -2.2950e+00]]],


        [[[ 2.8132e-01,  9.6763e-01,  5.8091e-01,  ...,  1.3076e+00,
            8.2642e-01,  6.9566e-02],
          [ 7.9235e-01, -3.7313e-01, -5.0695e-01,  ..., -1.8148e+00,
            1.3399e+00,  1.6144e+00],
          [ 1.4794e+00, -8.6394e-01,  7.6607e-01,  ..., -7.1282e-01,
            1.1736e+00,  6.2900e-01],
          ...,
          [ 6.9649e-01,  1.7254e+00,  9.0513e-01,  ..., -5.4652e-01,
           -1.3166e+00,  9.8532e-02],
          [-2.8168e-01, -5.7093e-01, -2.7913e-01,  ...,  3.5668e-01,
           -5.4485e-01,  3.7958e-01],
          [-1.3254e+00, -1.1072e+00,  1.7607e+00,  ...,  7.8838e-01,
            5.6754e-01, -1.7616e+00]],

         [[-7.1074e-01, -2.0101e+00,  6.2816e-01,  ..., -2.3516e+00,
            6.1847e-01, -2.5379e+00],
          [ 1.0238e+00, -9.2999e-01,  2.8646e-01,  ...,  1.1297e+00,
            6.2839e-01,  2.0928e-01],
          [ 1.9663e+00,  2.3173e-01, -2.5728e-01,  ...,  8.6981e-01,
            5.3645e-01, -3.0056e-01],
          ...,
          [-1.3349e+00,  2.2057e+00, -9.4100e-01,  ..., -6.7959e-01,
            1.4979e+00, -3.5918e-01],
          [ 1.4273e+00, -1.2440e+00, -2.6110e-01,  ...,  4.9381e-01,
           -1.1140e+00,  1.1321e+00],
          [-1.8738e+00, -1.3167e-01, -6.9468e-01,  ...,  4.8701e-01,
           -1.1155e+00, -7.3153e-01]]],


        [[[-2.3314e+00, -2.1558e+00, -2.2443e-01,  ...,  7.3348e-01,
            6.6977e-01, -1.0194e+00],
          [-1.3670e-02,  3.1025e-02,  1.3653e+00,  ...,  1.1503e+00,
            1.2174e+00,  1.0828e+00],
          [ 1.1217e+00, -8.8290e-01, -9.8530e-01,  ...,  1.3935e-01,
            9.5807e-01,  1.4584e-01],
          ...,
          [-1.4289e+00, -2.1890e+00, -1.7103e+00,  ...,  6.0023e-01,
            8.8946e-01,  8.4071e-01],
          [ 1.3210e+00, -3.8850e-01,  2.8113e-01,  ..., -8.1915e-01,
            1.2060e-01,  1.4814e-01],
          [ 1.6039e-01,  1.4664e+00,  3.7078e-01,  ..., -2.1014e-01,
           -1.7876e+00,  1.3135e+00]],

         [[ 1.5093e+00,  3.2378e-01,  6.1291e-01,  ...,  1.1750e+00,
            9.2458e-01,  4.9236e-01],
          [ 9.8576e-01,  8.7278e-01,  1.7478e-01,  ..., -1.3164e+00,
           -7.6539e-01,  2.0457e+00],
          [ 1.0365e+00, -6.4954e-01, -1.2568e+00,  ...,  2.3080e-01,
           -6.4867e-02,  6.7787e-01],
          ...,
          [-3.3467e-01,  3.9944e-01,  5.1372e-01,  ..., -5.1074e-01,
            3.0295e-01,  1.0936e+00],
          [ 6.2707e-01, -1.0056e-01, -5.9519e-01,  ..., -3.4568e-01,
            9.5908e-02,  7.8014e-01],
          [-5.5612e-01,  2.2531e-01, -3.7973e-01,  ...,  4.2978e-01,
           -1.6260e-01, -4.0096e-01]]]], device='cuda:0') torch.Size([4, 2, 128, 32])
initial_cell tensor([[[[ 0.0230,  0.4913,  2.6388,  ...,  0.4892,  0.3692, -1.4248],
          [ 0.4011,  0.0477, -0.0556,  ...,  1.8854, -1.7087,  0.7430],
          [-0.4347, -0.5335,  0.1222,  ...,  0.6541,  0.0376,  0.5144],
          ...,
          [-0.9491,  0.0307, -1.5111,  ..., -0.2325, -0.0616,  0.1970],
          [ 0.3460,  0.1912, -0.7367,  ...,  0.9472,  0.8981, -1.8273],
          [ 0.5641, -1.2143, -1.2202,  ..., -1.1636, -0.4135, -0.2670]],

         [[-0.2962, -0.0312,  0.2515,  ...,  1.9702,  1.0647,  0.3131],
          [-0.3590, -1.6079,  2.3223,  ...,  0.5782,  0.1673,  0.6789],
          [ 0.4311, -0.1159, -0.1983,  ...,  0.2822,  0.1250, -0.3056],
          ...,
          [-0.1734,  0.3637,  0.3423,  ...,  1.0876, -0.3420, -0.2096],
          [ 0.4943,  1.0698, -0.6654,  ...,  0.4142,  1.1781,  0.8794],
          [ 0.2284,  2.9763,  1.2941,  ..., -0.0967,  0.9714, -0.3205]]],


        [[[ 0.7876, -0.6875, -0.6630,  ...,  0.3135, -0.3263, -1.1172],
          [ 2.3441,  0.4586, -0.7364,  ...,  0.3760, -0.1308, -0.2929],
          [ 1.7450,  1.7631, -0.3709,  ..., -1.8837,  0.9931, -0.6264],
          ...,
          [-0.0339,  0.5235,  1.3365,  ...,  0.1670,  0.4455,  1.5227],
          [-0.4109, -0.1350,  1.0564,  ...,  0.0487,  0.6461, -0.6028],
          [ 1.0808, -0.2878,  0.1728,  ...,  0.1197, -0.1656,  0.3437]],

         [[ 0.2101, -0.1847,  0.1237,  ..., -0.7078,  0.3008, -1.5548],
          [-2.1804, -0.2667,  0.8313,  ...,  0.0375, -0.2617, -0.4371],
          [-1.4000,  0.7160,  0.6437,  ..., -0.1038,  0.9891,  0.1385],
          ...,
          [ 1.1408, -2.1750,  1.0891,  ..., -0.0723, -0.0885, -0.1477],
          [ 0.8199,  0.3611,  0.5637,  ...,  0.3627, -0.0232,  0.1027],
          [-1.6018,  1.2869,  0.2385,  ..., -0.9225,  0.3179,  0.4983]]],


        [[[ 0.9040, -0.7118,  0.9489,  ...,  1.2049, -0.7657, -1.7589],
          [-1.7858,  0.3521, -0.2342,  ...,  2.1022, -1.2320, -1.7430],
          [ 0.5138,  0.2031,  0.4938,  ..., -1.4284, -1.4253,  0.9631],
          ...,
          [ 0.7173, -0.5640, -0.9827,  ...,  1.3385, -0.8214,  0.2590],
          [ 0.3013,  0.2298, -0.5266,  ..., -0.3211, -1.5248,  1.4348],
          [ 0.1175, -0.3890, -0.4160,  ..., -1.2590, -0.1366,  0.1233]],

         [[-1.1771, -0.0539,  0.2587,  ..., -0.9665, -2.4867,  0.8805],
          [-0.5093,  0.6049, -0.2164,  ..., -1.7152,  0.8062, -0.9184],
          [-0.0109,  0.4430,  0.3972,  ..., -0.5265,  1.2259, -1.2515],
          ...,
          [-1.5045, -1.2251, -0.0972,  ..., -1.7203, -0.8416, -0.0810],
          [ 0.2172, -0.3662, -1.0028,  ...,  0.2765,  1.0342,  2.0670],
          [-1.7582, -2.3644,  0.6309,  ...,  0.4157,  0.8520,  0.4130]]],


        [[[ 0.4568, -1.3176, -0.2946,  ...,  0.2771, -1.2687, -1.6679],
          [ 1.0448, -1.3068, -0.6785,  ...,  0.2094,  0.0073, -1.2794],
          [ 1.0115, -0.0618,  1.4480,  ...,  0.3600,  0.5093, -2.8205],
          ...,
          [ 0.1455, -0.6972, -1.1736,  ...,  0.9388,  0.3677,  0.4019],
          [ 0.8247, -1.7820,  0.0870,  ..., -0.6805,  1.4192,  1.3847],
          [ 0.7938,  0.8759, -1.5192,  ..., -0.6048,  1.2528,  0.1404]],

         [[-0.3937,  1.8939,  0.7434,  ..., -0.6757,  0.2820, -0.4140],
          [ 1.0523, -2.4724,  0.7257,  ...,  0.6157,  0.6884,  1.1835],
          [ 1.8846,  0.8211, -0.0287,  ...,  0.5469, -1.6896, -0.8052],
          ...,
          [-0.4403, -0.5032,  0.1585,  ...,  0.7922,  0.6063, -0.7778],
          [ 1.9184,  2.2261, -1.0080,  ...,  0.9436,  1.5254, -1.0229],
          [ 1.1470, -1.2403, -0.3315,  ..., -0.8486, -0.1098,  0.2443]]]],
       device='cuda:0') torch.Size([4, 2, 128, 32])
tensor([[[-1.4961e+00, -1.6889e+00, -1.4816e+00,  ...,  6.4824e-02,
           4.7532e-01, -6.4207e-01],
         [-8.3131e-01,  2.5401e-02,  8.6783e-01,  ..., -2.9607e-01,
          -7.6328e-01, -5.6292e-02],
         [-1.6793e-01,  1.0243e+00,  1.4283e+00,  ..., -7.1773e-01,
           1.3080e+00, -2.2922e+00],
         ...,
         [ 3.2366e-01, -5.3108e-01, -1.1397e+00,  ..., -1.8855e+00,
           1.3705e+00, -1.7819e-01],
         [ 1.2954e+00, -8.4701e-02, -6.7182e-01,  ..., -9.6174e-01,
          -2.7137e-01, -1.3143e+00],
         [-9.2315e-01,  3.9424e-01,  6.0172e-01,  ..., -6.6151e-01,
          -1.0476e-03, -1.0967e+00]],

        [[ 1.4909e+00, -3.8782e-01,  2.2198e-01,  ...,  1.5195e-01,
           1.0816e+00,  2.4742e-01],
         [ 1.2943e+00, -5.2903e-01,  7.7022e-01,  ..., -1.5176e+00,
          -1.3275e+00,  6.6696e-01],
         [-1.8575e-01, -8.3497e-01,  2.8556e+00,  ..., -3.7220e-02,
           3.7677e-01, -1.2461e+00],
         ...,
         [-2.1388e-02, -5.1269e-01,  1.6257e+00,  ..., -1.1413e+00,
           7.0302e-01,  2.7967e-01],
         [ 1.0084e-01,  1.2054e+00,  9.7479e-01,  ..., -7.3523e-01,
          -1.6601e+00, -1.8446e-01],
         [ 2.0130e+00, -1.3759e-01,  1.9121e+00,  ...,  3.5113e-01,
          -1.2193e+00,  8.3653e-02]]], device='cuda:0',
       grad_fn=<SelectBackward>)
tensor([[[-0.3649, -0.5588,  0.3151,  ..., -1.4305,  0.1193, -1.5381],
         [ 0.2060,  0.2634, -0.3739,  ..., -1.7657,  0.3218,  0.3504],
         [ 1.1942,  0.5418, -1.5191,  ..., -0.3304, -0.4879, -0.1003],
         ...,
         [-0.4103, -0.1638, -3.2771,  ..., -0.0315, -0.5458,  0.0438],
         [-1.1403,  0.0647, -1.0870,  ..., -0.0703, -2.1521,  0.8337],
         [ 0.3385,  0.3401,  0.6649,  ..., -1.7725, -1.8144, -1.5781]],

        [[-0.5351, -0.8069, -1.1907,  ..., -0.1427,  0.2313,  0.4446],
         [ 2.4560,  0.0279,  1.0216,  ..., -0.3696, -0.3556, -0.3151],
         [ 0.0435,  1.9702,  0.7531,  ...,  0.0277,  0.3983,  1.3990],
         ...,
         [ 0.8420, -0.4504, -0.0340,  ..., -0.5865, -0.3670, -0.0891],
         [-0.3103, -0.2613,  0.2854,  ...,  0.6018,  0.0877,  0.1697],
         [ 0.0294, -0.0438,  1.0435,  ...,  0.1428, -1.2555, -0.0539]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 2819.474, Val Loss : 14064.155
======> Trajectory Loss : 2263.519, Gravity Loss : 0.000, EndOfTrajectory Loss : 1.127, BelowGroundPenalize Loss : 443.224
===> [Minibatch 11/129].........tensor([[[-1.4961e+00, -1.6889e+00, -1.4816e+00,  ...,  6.4824e-02,
           4.7532e-01, -6.4207e-01],
         [-8.3131e-01,  2.5401e-02,  8.6783e-01,  ..., -2.9607e-01,
          -7.6328e-01, -5.6292e-02],
         [-1.6793e-01,  1.0243e+00,  1.4283e+00,  ..., -7.1773e-01,
           1.3080e+00, -2.2922e+00],
         ...,
         [ 3.2366e-01, -5.3108e-01, -1.1397e+00,  ..., -1.8855e+00,
           1.3705e+00, -1.7819e-01],
         [ 1.2954e+00, -8.4701e-02, -6.7182e-01,  ..., -9.6174e-01,
          -2.7137e-01, -1.3143e+00],
         [-9.2315e-01,  3.9424e-01,  6.0172e-01,  ..., -6.6151e-01,
          -1.0476e-03, -1.0967e+00]],

        [[ 1.4909e+00, -3.8782e-01,  2.2198e-01,  ...,  1.5195e-01,
           1.0816e+00,  2.4742e-01],
         [ 1.2943e+00, -5.2903e-01,  7.7022e-01,  ..., -1.5176e+00,
          -1.3275e+00,  6.6696e-01],
         [-1.8575e-01, -8.3497e-01,  2.8556e+00,  ..., -3.7220e-02,
           3.7677e-01, -1.2461e+00],
         ...,
         [-2.1388e-02, -5.1269e-01,  1.6257e+00,  ..., -1.1413e+00,
           7.0302e-01,  2.7967e-01],
         [ 1.0084e-01,  1.2054e+00,  9.7479e-01,  ..., -7.3523e-01,
          -1.6601e+00, -1.8446e-01],
         [ 2.0130e+00, -1.3759e-01,  1.9121e+00,  ...,  3.5113e-01,
          -1.2193e+00,  8.3653e-02]]], device='cuda:0',
       grad_fn=<SelectBackward>)
tensor([[[-0.3649, -0.5588,  0.3151,  ..., -1.4305,  0.1193, -1.5381],
         [ 0.2060,  0.2634, -0.3739,  ..., -1.7657,  0.3218,  0.3504],
         [ 1.1942,  0.5418, -1.5191,  ..., -0.3304, -0.4879, -0.1003],
         ...,
         [-0.4103, -0.1638, -3.2771,  ..., -0.0315, -0.5458,  0.0438],
         [-1.1403,  0.0647, -1.0870,  ..., -0.0703, -2.1521,  0.8337],
         [ 0.3385,  0.3401,  0.6649,  ..., -1.7725, -1.8144, -1.5781]],

        [[-0.5351, -0.8069, -1.1907,  ..., -0.1427,  0.2313,  0.4446],
         [ 2.4560,  0.0279,  1.0216,  ..., -0.3696, -0.3556, -0.3151],
         [ 0.0435,  1.9702,  0.7531,  ...,  0.0277,  0.3983,  1.3990],
         ...,
         [ 0.8420, -0.4504, -0.0340,  ..., -0.5865, -0.3670, -0.0891],
         [-0.3103, -0.2613,  0.2854,  ...,  0.6018,  0.0877,  0.1697],
         [ 0.0294, -0.0438,  1.0435,  ...,  0.1428, -1.2555, -0.0539]]],
       device='cuda:0', grad_fn=<SelectBackward>)
initial_hidden tensor([[[[-3.6381e-01, -5.6446e-01,  3.1766e-01,  ..., -1.4353e+00,
            1.2396e-01, -1.5409e+00],
          [ 2.0680e-01,  2.5760e-01, -3.6777e-01,  ..., -1.7706e+00,
            3.1742e-01,  3.4906e-01],
          [ 1.1959e+00,  5.3840e-01, -1.5176e+00,  ..., -3.3308e-01,
           -4.9062e-01, -1.0318e-01],
          ...,
          [-4.0615e-01, -1.6894e-01, -3.2722e+00,  ..., -3.6477e-02,
           -5.4182e-01,  3.8963e-02],
          [-1.1354e+00,  5.9887e-02, -1.0821e+00,  ..., -7.5719e-02,
           -2.1519e+00,  8.2819e-01],
          [ 3.3564e-01,  3.3604e-01,  6.6936e-01,  ..., -1.7771e+00,
           -1.8183e+00, -1.5757e+00]],

         [[-5.3719e-01, -8.0413e-01, -1.1871e+00,  ..., -1.4350e-01,
            2.3200e-01,  4.4040e-01],
          [ 2.4581e+00,  2.6248e-02,  1.0242e+00,  ..., -3.6712e-01,
           -3.5552e-01, -3.1488e-01],
          [ 4.6361e-02,  1.9679e+00,  7.5478e-01,  ...,  2.7359e-02,
            4.0062e-01,  1.3946e+00],
          ...,
          [ 8.4215e-01, -4.5289e-01, -3.2083e-02,  ..., -5.8290e-01,
           -3.6612e-01, -9.1247e-02],
          [-3.0783e-01, -2.5961e-01,  2.8644e-01,  ...,  6.0485e-01,
            8.9831e-02,  1.6650e-01],
          [ 2.9590e-02, -4.4176e-02,  1.0455e+00,  ...,  1.4555e-01,
           -1.2573e+00, -5.5354e-02]]],


        [[[ 5.8004e-01, -1.6528e+00,  7.7740e-01,  ..., -7.4497e-02,
           -2.5400e+00,  3.6812e-01],
          [-4.4471e-01,  4.2597e-01,  3.9143e-01,  ...,  7.0107e-01,
           -2.5427e+00,  2.8715e-01],
          [-1.4201e+00, -4.4197e-01,  1.8234e+00,  ..., -1.5579e+00,
           -2.0687e+00, -1.6521e-01],
          ...,
          [-1.1786e+00,  1.2927e+00, -6.4218e-01,  ...,  6.1915e-01,
           -5.8512e-01, -3.2229e-01],
          [ 1.4552e-01,  1.3228e+00,  5.2508e-01,  ...,  4.5103e-01,
           -3.6398e-02,  1.1405e+00],
          [ 2.1827e+00, -2.4261e-01, -4.9023e-01,  ...,  3.5643e-01,
           -3.7271e-01,  7.4378e-01]],

         [[ 5.2545e-01,  5.5492e-01,  1.5001e+00,  ..., -1.3457e-01,
           -5.8153e-01,  2.0796e+00],
          [-9.3898e-01,  7.9997e-01,  5.8359e-01,  ..., -2.8941e-01,
           -7.3835e-01, -6.0560e-01],
          [ 3.7985e-02,  1.1697e+00, -1.0854e+00,  ...,  6.2585e-01,
            1.2095e+00, -2.1452e-01],
          ...,
          [-1.2828e+00,  1.6658e-03, -7.2989e-01,  ..., -1.6930e+00,
            1.9969e+00, -1.2953e+00],
          [ 2.2625e+00, -2.3817e+00, -1.0275e+00,  ..., -1.2017e+00,
            1.0078e+00,  2.0349e-01],
          [-2.4780e-01, -7.5048e-01, -8.4357e-01,  ..., -6.8585e-01,
            3.8865e-02, -2.2960e+00]]],


        [[[ 2.7971e-01,  9.6934e-01,  5.8522e-01,  ...,  1.3069e+00,
            8.3031e-01,  6.5807e-02],
          [ 7.9766e-01, -3.6818e-01, -5.0166e-01,  ..., -1.8186e+00,
            1.3387e+00,  1.6164e+00],
          [ 1.4794e+00, -8.6235e-01,  7.6502e-01,  ..., -7.1188e-01,
            1.1733e+00,  6.2692e-01],
          ...,
          [ 6.9981e-01,  1.7300e+00,  9.1010e-01,  ..., -5.4243e-01,
           -1.3127e+00,  9.8947e-02],
          [-2.7753e-01, -5.7198e-01, -2.7479e-01,  ...,  3.6004e-01,
           -5.4963e-01,  3.8017e-01],
          [-1.3236e+00, -1.1095e+00,  1.7641e+00,  ...,  7.9101e-01,
            5.7238e-01, -1.7610e+00]],

         [[-7.1433e-01, -2.0116e+00,  6.2519e-01,  ..., -2.3484e+00,
            6.2168e-01, -2.5414e+00],
          [ 1.0218e+00, -9.3147e-01,  2.8593e-01,  ...,  1.1319e+00,
            6.3020e-01,  2.0883e-01],
          [ 1.9666e+00,  2.3320e-01, -2.5945e-01,  ...,  8.7018e-01,
            5.3731e-01, -3.0159e-01],
          ...,
          [-1.3347e+00,  2.2074e+00, -9.4307e-01,  ..., -6.7833e-01,
            1.5000e+00, -3.6081e-01],
          [ 1.4246e+00, -1.2430e+00, -2.6216e-01,  ...,  4.9511e-01,
           -1.1118e+00,  1.1295e+00],
          [-1.8753e+00, -1.3234e-01, -6.9738e-01,  ...,  4.8846e-01,
           -1.1136e+00, -7.3255e-01]]],


        [[[-2.3291e+00, -2.1524e+00, -2.2796e-01,  ...,  7.3633e-01,
            6.6788e-01, -1.0229e+00],
          [-1.7478e-02,  3.5435e-02,  1.3675e+00,  ...,  1.1538e+00,
            1.2134e+00,  1.0790e+00],
          [ 1.1202e+00, -8.7881e-01, -9.8669e-01,  ...,  1.4212e-01,
            9.5482e-01,  1.4139e-01],
          ...,
          [-1.4266e+00, -2.1849e+00, -1.7123e+00,  ...,  6.0460e-01,
            8.8550e-01,  8.3589e-01],
          [ 1.3232e+00, -3.8341e-01,  2.7656e-01,  ..., -8.1720e-01,
            1.1891e-01,  1.4306e-01],
          [ 1.6223e-01,  1.4709e+00,  3.6935e-01,  ..., -2.1423e-01,
           -1.7921e+00,  1.3115e+00]],

         [[ 1.5108e+00,  3.2770e-01,  6.1115e-01,  ...,  1.1778e+00,
            9.2817e-01,  4.9237e-01],
          [ 9.8760e-01,  8.7250e-01,  1.7575e-01,  ..., -1.3176e+00,
           -7.6614e-01,  2.0442e+00],
          [ 1.0401e+00, -6.4689e-01, -1.2581e+00,  ...,  2.3229e-01,
           -6.2998e-02,  6.7847e-01],
          ...,
          [-3.3270e-01,  4.0307e-01,  5.1373e-01,  ..., -5.1212e-01,
            3.0575e-01,  1.0920e+00],
          [ 6.2820e-01, -9.9750e-02, -5.9756e-01,  ..., -3.4776e-01,
            9.7999e-02,  7.7943e-01],
          [-5.5426e-01,  2.2687e-01, -3.8138e-01,  ...,  4.3095e-01,
           -1.6319e-01, -4.0150e-01]]]], device='cuda:0') torch.Size([4, 2, 128, 32])
initial_cell tensor([[[[ 2.1455e-02,  4.8615e-01,  2.6436e+00,  ...,  4.8806e-01,
            3.6454e-01, -1.4211e+00],
          [ 3.9918e-01,  4.5330e-02, -4.9364e-02,  ...,  1.8833e+00,
           -1.7145e+00,  7.4140e-01],
          [-4.3426e-01, -5.3451e-01,  1.2620e-01,  ...,  6.5245e-01,
            3.3948e-02,  5.1422e-01],
          ...,
          [-9.5137e-01,  2.9215e-02, -1.5063e+00,  ..., -2.3641e-01,
           -6.7046e-02,  1.9570e-01],
          [ 3.4106e-01,  1.8967e-01, -7.3199e-01,  ...,  9.4572e-01,
            8.9266e-01, -1.8238e+00],
          [ 5.6229e-01, -1.2170e+00, -1.2157e+00,  ..., -1.1635e+00,
           -4.1878e-01, -2.6656e-01]],

         [[-2.9196e-01, -3.4970e-02,  2.5142e-01,  ...,  1.9706e+00,
            1.0685e+00,  3.0914e-01],
          [-3.5916e-01, -1.6107e+00,  2.3236e+00,  ...,  5.7745e-01,
            1.6970e-01,  6.7667e-01],
          [ 4.3186e-01, -1.1798e-01, -1.9719e-01,  ...,  2.8120e-01,
            1.2782e-01, -3.0644e-01],
          ...,
          [-1.7036e-01,  3.6356e-01,  3.4262e-01,  ...,  1.0884e+00,
           -3.3776e-01, -2.1282e-01],
          [ 4.9797e-01,  1.0685e+00, -6.6751e-01,  ...,  4.1638e-01,
            1.1814e+00,  8.7588e-01],
          [ 2.2871e-01,  2.9761e+00,  1.2943e+00,  ..., -9.7429e-02,
            9.7518e-01, -3.2195e-01]]],


        [[[ 7.8881e-01, -6.8685e-01, -6.5746e-01,  ...,  3.1174e-01,
           -3.3189e-01, -1.1156e+00],
          [ 2.3451e+00,  4.5934e-01, -7.3299e-01,  ...,  3.7893e-01,
           -1.3556e-01, -2.9175e-01],
          [ 1.7470e+00,  1.7636e+00, -3.7068e-01,  ..., -1.8846e+00,
            9.8777e-01, -6.2756e-01],
          ...,
          [-3.2691e-02,  5.2441e-01,  1.3409e+00,  ...,  1.6812e-01,
            4.3984e-01,  1.5230e+00],
          [-4.1387e-01, -1.3186e-01,  1.0611e+00,  ...,  5.1795e-02,
            6.4053e-01, -5.9860e-01],
          [ 1.0795e+00, -2.8489e-01,  1.7713e-01,  ...,  1.2382e-01,
           -1.7085e-01,  3.4463e-01]],

         [[ 2.0888e-01, -1.8701e-01,  1.2260e-01,  ..., -7.0579e-01,
            3.0444e-01, -1.5583e+00],
          [-2.1817e+00, -2.6575e-01,  8.3264e-01,  ...,  3.6809e-02,
           -2.5939e-01, -4.3729e-01],
          [-1.4010e+00,  7.1562e-01,  6.4500e-01,  ..., -1.0462e-01,
            9.9157e-01,  1.3936e-01],
          ...,
          [ 1.1418e+00, -2.1723e+00,  1.0898e+00,  ..., -7.1617e-02,
           -8.6380e-02, -1.4819e-01],
          [ 8.2009e-01,  3.6112e-01,  5.6210e-01,  ...,  3.6599e-01,
           -2.0668e-02,  9.9517e-02],
          [-1.6031e+00,  1.2872e+00,  2.3845e-01,  ..., -9.2268e-01,
            3.2043e-01,  4.9842e-01]]],


        [[[ 9.0522e-01, -7.1412e-01,  9.5344e-01,  ...,  1.2092e+00,
           -7.7036e-01, -1.7564e+00],
          [-1.7847e+00,  3.5024e-01, -2.2842e-01,  ...,  2.1076e+00,
           -1.2361e+00, -1.7406e+00],
          [ 5.1577e-01,  2.0078e-01,  4.9615e-01,  ..., -1.4234e+00,
           -1.4298e+00,  9.6582e-01],
          ...,
          [ 7.1833e-01, -5.6530e-01, -9.7808e-01,  ...,  1.3439e+00,
           -8.2653e-01,  2.5860e-01],
          [ 3.0174e-01,  2.2894e-01, -5.2170e-01,  ..., -3.1564e-01,
           -1.5302e+00,  1.4389e+00],
          [ 1.1648e-01, -3.9151e-01, -4.1152e-01,  ..., -1.2539e+00,
           -1.4075e-01,  1.2561e-01]],

         [[-1.1803e+00, -5.4377e-02,  2.5526e-01,  ..., -9.6500e-01,
           -2.4854e+00,  8.7846e-01],
          [-5.1179e-01,  6.0644e-01, -2.1702e-01,  ..., -1.7152e+00,
            8.0867e-01, -9.1929e-01],
          [-1.0851e-02,  4.4267e-01,  3.9735e-01,  ..., -5.2711e-01,
            1.2283e+00, -1.2507e+00],
          ...,
          [-1.5028e+00, -1.2216e+00, -9.8792e-02,  ..., -1.7204e+00,
           -8.3975e-01, -8.1108e-02],
          [ 2.1598e-01, -3.6442e-01, -1.0056e+00,  ...,  2.7791e-01,
            1.0368e+00,  2.0657e+00],
          [-1.7595e+00, -2.3634e+00,  6.2941e-01,  ...,  4.1586e-01,
            8.5478e-01,  4.1356e-01]]],


        [[[ 4.5481e-01, -1.3198e+00, -2.9165e-01,  ...,  2.8236e-01,
           -1.2731e+00, -1.6657e+00],
          [ 1.0432e+00, -1.3088e+00, -6.7521e-01,  ...,  2.1494e-01,
            1.7206e-03, -1.2765e+00],
          [ 1.0126e+00, -6.4236e-02,  1.4495e+00,  ...,  3.6508e-01,
            5.0410e-01, -2.8216e+00],
          ...,
          [ 1.4697e-01, -6.9859e-01, -1.1712e+00,  ...,  9.4407e-01,
            3.6221e-01,  4.0191e-01],
          [ 8.2315e-01, -1.7833e+00,  8.8896e-02,  ..., -6.7524e-01,
            1.4139e+00,  1.3881e+00],
          [ 7.9305e-01,  8.7303e-01, -1.5164e+00,  ..., -5.9974e-01,
            1.2475e+00,  1.4295e-01]],

         [[-3.9408e-01,  1.8973e+00,  7.3987e-01,  ..., -6.7385e-01,
            2.8457e-01, -4.1717e-01],
          [ 1.0508e+00, -2.4718e+00,  7.2604e-01,  ...,  6.1825e-01,
            6.9044e-01,  1.1846e+00],
          [ 1.8871e+00,  8.2100e-01, -2.8632e-02,  ...,  5.4725e-01,
           -1.6879e+00, -8.0380e-01],
          ...,
          [-4.3793e-01, -4.9881e-01,  1.5692e-01,  ...,  7.9604e-01,
            6.0690e-01, -7.7846e-01],
          [ 1.9187e+00,  2.2293e+00, -1.0112e+00,  ...,  9.4588e-01,
            1.5275e+00, -1.0260e+00],
          [ 1.1462e+00, -1.2407e+00, -3.3406e-01,  ..., -8.4847e-01,
           -1.0731e-01,  2.4482e-01]]]], device='cuda:0') torch.Size([4, 2, 128, 32])
tensor([[[-1.5036, -1.6916, -1.4750,  ...,  0.0606,  0.4827, -0.6461],
         [-0.8382,  0.0193,  0.8608,  ..., -0.2900, -0.7657, -0.0622],
         [-0.1753,  1.0180,  1.4360,  ..., -0.7111,  1.3000, -2.2995],
         ...,
         [ 0.3161, -0.5336, -1.1454,  ..., -1.8817,  1.3716, -0.1856],
         [ 1.2907, -0.0921, -0.6750,  ..., -0.9573, -0.2671, -1.3212],
         [-0.9262,  0.3890,  0.6034,  ..., -0.6559,  0.0050, -1.1032]],

        [[ 1.5008, -0.3973,  0.2199,  ...,  0.1423,  1.0792,  0.2395],
         [ 1.3043, -0.5386,  0.7801,  ..., -1.5279, -1.3363,  0.6753],
         [-0.1774, -0.8437,  2.8641,  ..., -0.0426,  0.3683, -1.2542],
         ...,
         [-0.0124, -0.5227,  1.6360,  ..., -1.1514,  0.6936,  0.2752],
         [ 0.1110,  1.1953,  0.9808,  ..., -0.7452, -1.6688, -0.1939],
         [ 2.0229, -0.1437,  1.9215,  ...,  0.3426, -1.2121,  0.0924]]],
       device='cuda:0', grad_fn=<SelectBackward>)
tensor([[[-0.3638, -0.5645,  0.3177,  ..., -1.4353,  0.1240, -1.5409],
         [ 0.2068,  0.2576, -0.3678,  ..., -1.7706,  0.3174,  0.3491],
         [ 1.1959,  0.5384, -1.5176,  ..., -0.3331, -0.4906, -0.1032],
         ...,
         [-0.4061, -0.1689, -3.2722,  ..., -0.0365, -0.5418,  0.0390],
         [-1.1354,  0.0599, -1.0821,  ..., -0.0757, -2.1519,  0.8282],
         [ 0.3356,  0.3360,  0.6694,  ..., -1.7771, -1.8183, -1.5757]],

        [[-0.5372, -0.8041, -1.1871,  ..., -0.1435,  0.2320,  0.4404],
         [ 2.4581,  0.0262,  1.0242,  ..., -0.3671, -0.3555, -0.3149],
         [ 0.0464,  1.9679,  0.7548,  ...,  0.0274,  0.4006,  1.3946],
         ...,
         [ 0.8422, -0.4529, -0.0321,  ..., -0.5829, -0.3661, -0.0912],
         [-0.3078, -0.2596,  0.2864,  ...,  0.6049,  0.0898,  0.1665],
         [ 0.0296, -0.0442,  1.0455,  ...,  0.1455, -1.2573, -0.0554]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 2778.057, Val Loss : 12975.749
======> Trajectory Loss : 2297.249, Gravity Loss : 0.000, EndOfTrajectory Loss : 1.011, BelowGroundPenalize Loss : 379.681
===> [Minibatch 12/129].........tensor([[[-1.5036, -1.6916, -1.4750,  ...,  0.0606,  0.4827, -0.6461],
         [-0.8382,  0.0193,  0.8608,  ..., -0.2900, -0.7657, -0.0622],
         [-0.1753,  1.0180,  1.4360,  ..., -0.7111,  1.3000, -2.2995],
         ...,
         [ 0.3161, -0.5336, -1.1454,  ..., -1.8817,  1.3716, -0.1856],
         [ 1.2907, -0.0921, -0.6750,  ..., -0.9573, -0.2671, -1.3212],
         [-0.9262,  0.3890,  0.6034,  ..., -0.6559,  0.0050, -1.1032]],

        [[ 1.5008, -0.3973,  0.2199,  ...,  0.1423,  1.0792,  0.2395],
         [ 1.3043, -0.5386,  0.7801,  ..., -1.5279, -1.3363,  0.6753],
         [-0.1774, -0.8437,  2.8641,  ..., -0.0426,  0.3683, -1.2542],
         ...,
         [-0.0124, -0.5227,  1.6360,  ..., -1.1514,  0.6936,  0.2752],
         [ 0.1110,  1.1953,  0.9808,  ..., -0.7452, -1.6688, -0.1939],
         [ 2.0229, -0.1437,  1.9215,  ...,  0.3426, -1.2121,  0.0924]]],
       device='cuda:0', grad_fn=<SelectBackward>)
tensor([[[-0.3638, -0.5645,  0.3177,  ..., -1.4353,  0.1240, -1.5409],
         [ 0.2068,  0.2576, -0.3678,  ..., -1.7706,  0.3174,  0.3491],
         [ 1.1959,  0.5384, -1.5176,  ..., -0.3331, -0.4906, -0.1032],
         ...,
         [-0.4061, -0.1689, -3.2722,  ..., -0.0365, -0.5418,  0.0390],
         [-1.1354,  0.0599, -1.0821,  ..., -0.0757, -2.1519,  0.8282],
         [ 0.3356,  0.3360,  0.6694,  ..., -1.7771, -1.8183, -1.5757]],

        [[-0.5372, -0.8041, -1.1871,  ..., -0.1435,  0.2320,  0.4404],
         [ 2.4581,  0.0262,  1.0242,  ..., -0.3671, -0.3555, -0.3149],
         [ 0.0464,  1.9679,  0.7548,  ...,  0.0274,  0.4006,  1.3946],
         ...,
         [ 0.8422, -0.4529, -0.0321,  ..., -0.5829, -0.3661, -0.0912],
         [-0.3078, -0.2596,  0.2864,  ...,  0.6049,  0.0898,  0.1665],
         [ 0.0296, -0.0442,  1.0455,  ...,  0.1455, -1.2573, -0.0554]]],
       device='cuda:0', grad_fn=<SelectBackward>)
initial_hidden tensor([[[[-3.6287e-01, -5.6974e-01,  3.2009e-01,  ..., -1.4398e+00,
            1.2820e-01, -1.5436e+00],
          [ 2.0731e-01,  2.5161e-01, -3.6165e-01,  ..., -1.7754e+00,
            3.1220e-01,  3.4745e-01],
          [ 1.1974e+00,  5.3501e-01, -1.5163e+00,  ..., -3.3556e-01,
           -4.9318e-01, -1.0594e-01],
          ...,
          [-4.0241e-01, -1.7359e-01, -3.2677e+00,  ..., -4.1034e-02,
           -5.3827e-01,  3.4598e-02],
          [-1.1310e+00,  5.4918e-02, -1.0773e+00,  ..., -8.0992e-02,
           -2.1525e+00,  8.2272e-01],
          [ 3.3302e-01,  3.3226e-01,  6.7352e-01,  ..., -1.7814e+00,
           -1.8218e+00, -1.5737e+00]],

         [[-5.3899e-01, -8.0162e-01, -1.1839e+00,  ..., -1.4423e-01,
            2.3260e-01,  4.3664e-01],
          [ 2.4602e+00,  2.4629e-02,  1.0269e+00,  ..., -3.6482e-01,
           -3.5562e-01, -3.1477e-01],
          [ 4.9096e-02,  1.9657e+00,  7.5647e-01,  ...,  2.7015e-02,
            4.0272e-01,  1.3906e+00],
          ...,
          [ 8.4232e-01, -4.5516e-01, -3.0333e-02,  ..., -5.7966e-01,
           -3.6530e-01, -9.3193e-02],
          [-3.0516e-01, -2.5832e-01,  2.8734e-01,  ...,  6.0792e-01,
            9.2279e-02,  1.6334e-01],
          [ 2.9724e-02, -4.4680e-02,  1.0474e+00,  ...,  1.4804e-01,
           -1.2590e+00, -5.6684e-02]]],


        [[[ 5.8470e-01, -1.6475e+00,  7.7288e-01,  ..., -7.8711e-02,
           -2.5440e+00,  3.6420e-01],
          [-4.4146e-01,  4.3036e-01,  3.8887e-01,  ...,  6.9628e-01,
           -2.5443e+00,  2.8536e-01],
          [-1.4166e+00, -4.3836e-01,  1.8203e+00,  ..., -1.5626e+00,
           -2.0703e+00, -1.6614e-01],
          ...,
          [-1.1740e+00,  1.2975e+00, -6.4352e-01,  ...,  6.1477e-01,
           -5.8854e-01, -3.2188e-01],
          [ 1.5030e-01,  1.3274e+00,  5.2166e-01,  ...,  4.4657e-01,
           -3.9748e-02,  1.1365e+00],
          [ 2.1819e+00, -2.3799e-01, -4.9185e-01,  ...,  3.5239e-01,
           -3.7075e-01,  7.4089e-01]],

         [[ 5.2487e-01,  5.5692e-01,  1.4981e+00,  ..., -1.3196e-01,
           -5.7829e-01,  2.0789e+00],
          [-9.4000e-01,  8.0059e-01,  5.8258e-01,  ..., -2.8578e-01,
           -7.3750e-01, -6.0580e-01],
          [ 3.6086e-02,  1.1695e+00, -1.0855e+00,  ...,  6.2747e-01,
            1.2101e+00, -2.1539e-01],
          ...,
          [-1.2845e+00,  9.6347e-04, -7.2868e-01,  ..., -1.6924e+00,
            1.9973e+00, -1.2962e+00],
          [ 2.2619e+00, -2.3846e+00, -1.0288e+00,  ..., -1.1992e+00,
            1.0087e+00,  2.0063e-01],
          [-2.4998e-01, -7.5359e-01, -8.4376e-01,  ..., -6.8447e-01,
            3.9662e-02, -2.2970e+00]]],


        [[[ 2.7825e-01,  9.7099e-01,  5.8913e-01,  ...,  1.3062e+00,
            8.3394e-01,  6.2282e-02],
          [ 8.0267e-01, -3.6353e-01, -4.9653e-01,  ..., -1.8219e+00,
            1.3375e+00,  1.6173e+00],
          [ 1.4794e+00, -8.6087e-01,  7.6407e-01,  ..., -7.1100e-01,
            1.1731e+00,  6.2492e-01],
          ...,
          [ 7.0277e-01,  1.7340e+00,  9.1457e-01,  ..., -5.3874e-01,
           -1.3091e+00,  9.9295e-02],
          [-2.7384e-01, -5.7291e-01, -2.7073e-01,  ...,  3.6344e-01,
           -5.5388e-01,  3.7978e-01],
          [-1.3219e+00, -1.1116e+00,  1.7671e+00,  ...,  7.9341e-01,
            5.7679e-01, -1.7604e+00]],

         [[-7.1760e-01, -2.0131e+00,  6.2249e-01,  ..., -2.3456e+00,
            6.2458e-01, -2.5446e+00],
          [ 1.0200e+00, -9.3291e-01,  2.8546e-01,  ...,  1.1340e+00,
            6.3201e-01,  2.0817e-01],
          [ 1.9668e+00,  2.3442e-01, -2.6140e-01,  ...,  8.7050e-01,
            5.3819e-01, -3.0264e-01],
          ...,
          [-1.3346e+00,  2.2090e+00, -9.4493e-01,  ..., -6.7718e-01,
            1.5018e+00, -3.6228e-01],
          [ 1.4218e+00, -1.2422e+00, -2.6320e-01,  ...,  4.9673e-01,
           -1.1097e+00,  1.1269e+00],
          [-1.8766e+00, -1.3299e-01, -6.9979e-01,  ...,  4.8979e-01,
           -1.1119e+00, -7.3355e-01]]],


        [[[-2.3270e+00, -2.1494e+00, -2.3112e-01,  ...,  7.3891e-01,
            6.6615e-01, -1.0261e+00],
          [-2.0757e-02,  3.9520e-02,  1.3697e+00,  ...,  1.1570e+00,
            1.2097e+00,  1.0753e+00],
          [ 1.1189e+00, -8.7511e-01, -9.8797e-01,  ...,  1.4463e-01,
            9.5187e-01,  1.3737e-01],
          ...,
          [-1.4245e+00, -2.1813e+00, -1.7139e+00,  ...,  6.0851e-01,
            8.8194e-01,  8.3156e-01],
          [ 1.3251e+00, -3.7878e-01,  2.7242e-01,  ..., -8.1529e-01,
            1.1729e-01,  1.3839e-01],
          [ 1.6393e-01,  1.4748e+00,  3.6807e-01,  ..., -2.1789e-01,
           -1.7963e+00,  1.3096e+00]],

         [[ 1.5121e+00,  3.3126e-01,  6.0951e-01,  ...,  1.1803e+00,
            9.3140e-01,  4.9239e-01],
          [ 9.8925e-01,  8.7232e-01,  1.7660e-01,  ..., -1.3188e+00,
           -7.6682e-01,  2.0428e+00],
          [ 1.0432e+00, -6.4450e-01, -1.2593e+00,  ...,  2.3366e-01,
           -6.1321e-02,  6.7900e-01],
          ...,
          [-3.3093e-01,  4.0633e-01,  5.1374e-01,  ..., -5.1335e-01,
            3.0826e-01,  1.0906e+00],
          [ 6.2920e-01, -9.9064e-02, -5.9987e-01,  ..., -3.4953e-01,
            9.9943e-02,  7.7875e-01],
          [-5.5258e-01,  2.2832e-01, -3.8291e-01,  ...,  4.3200e-01,
           -1.6372e-01, -4.0195e-01]]]], device='cuda:0') torch.Size([4, 2, 128, 32])
initial_cell tensor([[[[ 0.0200,  0.4814,  2.6480,  ...,  0.4870,  0.3602, -1.4179],
          [ 0.3974,  0.0429, -0.0430,  ...,  1.8808, -1.7202,  0.7389],
          [-0.4339, -0.5355,  0.1299,  ...,  0.6510,  0.0306,  0.5140],
          ...,
          [-0.9534,  0.0279, -1.5019,  ..., -0.2399, -0.0720,  0.1945],
          [ 0.3366,  0.1872, -0.7275,  ...,  0.9442,  0.8872, -1.8209],
          [ 0.5606, -1.2195, -1.2115,  ..., -1.1635, -0.4236, -0.2662]],

         [[-0.2881, -0.0384,  0.2514,  ...,  1.9709,  1.0719,  0.3056],
          [-0.3591, -1.6137,  2.3248,  ...,  0.5768,  0.1722,  0.6743],
          [ 0.4326, -0.1199, -0.1962,  ...,  0.2803,  0.1304, -0.3072],
          ...,
          [-0.1676,  0.3633,  0.3429,  ...,  1.0891, -0.3340, -0.2157],
          [ 0.5014,  1.0669, -0.6696,  ...,  0.4184,  1.1849,  0.8725],
          [ 0.2290,  2.9757,  1.2945,  ..., -0.0981,  0.9786, -0.3233]]],


        [[[ 0.7899, -0.6863, -0.6524,  ...,  0.3102, -0.3370, -1.1142],
          [ 2.3460,  0.4602, -0.7297,  ...,  0.3815, -0.1402, -0.2907],
          [ 1.7489,  1.7640, -0.3705,  ..., -1.8855,  0.9829, -0.6286],
          ...,
          [-0.0316,  0.5252,  1.3449,  ...,  0.1691,  0.4347,  1.5232],
          [-0.4164, -0.1290,  1.0653,  ...,  0.0546,  0.6353, -0.5948],
          [ 1.0784, -0.2822,  0.1811,  ...,  0.1275, -0.1757,  0.3455]],

         [[ 0.2078, -0.1892,  0.1216,  ..., -0.7039,  0.3078, -1.5615],
          [-2.1828, -0.2653,  0.8337,  ...,  0.0363, -0.2570, -0.4377],
          [-1.4019,  0.7152,  0.6461,  ..., -0.1053,  0.9939,  0.1400],
          ...,
          [ 1.1426, -2.1699,  1.0903,  ..., -0.0710, -0.0844, -0.1486],
          [ 0.8201,  0.3607,  0.5605,  ...,  0.3693, -0.0179,  0.0963],
          [-1.6042,  1.2874,  0.2383,  ..., -0.9228,  0.3228,  0.4985]]],


        [[[ 0.9063, -0.7162,  0.9575,  ...,  1.2131, -0.7746, -1.7541],
          [-1.7836,  0.3486, -0.2227,  ...,  2.1127, -1.2399, -1.7384],
          [ 0.5176,  0.1987,  0.4983,  ..., -1.4188, -1.4338,  0.9682],
          ...,
          [ 0.7193, -0.5664, -0.9739,  ...,  1.3487, -0.8312,  0.2583],
          [ 0.3022,  0.2282, -0.5171,  ..., -0.3105, -1.5352,  1.4424],
          [ 0.1156, -0.3937, -0.4075,  ..., -1.2493, -0.1445,  0.1276]],

         [[-1.1832, -0.0549,  0.2522,  ..., -0.9637, -2.4842,  0.8766],
          [-0.5143,  0.6075, -0.2177,  ..., -1.7150,  0.8112, -0.9204],
          [-0.0109,  0.4423,  0.3974,  ..., -0.5276,  1.2305, -1.2500],
          ...,
          [-1.5013, -1.2185, -0.1002,  ..., -1.7204, -0.8381, -0.0812],
          [ 0.2146, -0.3631, -1.0083,  ...,  0.2794,  1.0396,  2.0645],
          [-1.7607, -2.3625,  0.6281,  ...,  0.4160,  0.8574,  0.4141]]],


        [[[ 0.4531, -1.3218, -0.2890,  ...,  0.2871, -1.2771, -1.6638],
          [ 1.0419, -1.3105, -0.6721,  ...,  0.2201, -0.0036, -1.2739],
          [ 1.0136, -0.0664,  1.4509,  ...,  0.3696,  0.4994, -2.8226],
          ...,
          [ 0.1483, -0.6998, -1.1690,  ...,  0.9488,  0.3573,  0.4019],
          [ 0.8219, -1.7845,  0.0907,  ..., -0.6701,  1.4087,  1.3911],
          [ 0.7924,  0.8705, -1.5138,  ..., -0.5951,  1.2428,  0.1452]],

         [[-0.3945,  1.9004,  0.7367,  ..., -0.6722,  0.2869, -0.4200],
          [ 1.0494, -2.4713,  0.7263,  ...,  0.6208,  0.6926,  1.1855],
          [ 1.8892,  0.8209, -0.0286,  ...,  0.5476, -1.6864, -0.8026],
          ...,
          [-0.4359, -0.4949,  0.1555,  ...,  0.7995,  0.6075, -0.7791],
          [ 1.9188,  2.2321, -1.0144,  ...,  0.9481,  1.5298, -1.0289],
          [ 1.1455, -1.2411, -0.3364,  ..., -0.8484, -0.1051,  0.2453]]]],
       device='cuda:0') torch.Size([4, 2, 128, 32])
tensor([[[-1.5114, -1.6967, -1.4680,  ...,  0.0637,  0.4907, -0.6516],
         [-0.8449,  0.0128,  0.8534,  ..., -0.2836, -0.7709, -0.0687],
         [-0.1833,  1.0117,  1.4440,  ..., -0.7053,  1.2934, -2.3069],
         ...,
         [ 0.3095, -0.5388, -1.1511,  ..., -1.8758,  1.3670, -0.1922],
         [ 1.2856, -0.1001, -0.6782,  ..., -0.9513, -0.2634, -1.3291],
         [-0.9313,  0.3835,  0.6000,  ..., -0.6509,  0.0108, -1.1097]],

        [[ 1.5109, -0.4070,  0.2191,  ...,  0.1324,  1.0784,  0.2312],
         [ 1.3108, -0.5482,  0.7882,  ..., -1.5369, -1.3456,  0.6793],
         [-0.1727, -0.8518,  2.8688,  ..., -0.0486,  0.3602, -1.2610],
         ...,
         [-0.0042, -0.5322,  1.6443,  ..., -1.1612,  0.6838,  0.2696],
         [ 0.1212,  1.1851,  0.9881,  ..., -0.7534, -1.6779, -0.2035],
         [ 2.0330, -0.1428,  1.9302,  ...,  0.3337, -1.2055,  0.1011]]],
       device='cuda:0', grad_fn=<SelectBackward>)
tensor([[[-0.3629, -0.5697,  0.3201,  ..., -1.4398,  0.1282, -1.5436],
         [ 0.2073,  0.2516, -0.3616,  ..., -1.7754,  0.3122,  0.3475],
         [ 1.1974,  0.5350, -1.5163,  ..., -0.3356, -0.4932, -0.1059],
         ...,
         [-0.4024, -0.1736, -3.2677,  ..., -0.0410, -0.5383,  0.0346],
         [-1.1310,  0.0549, -1.0773,  ..., -0.0810, -2.1525,  0.8227],
         [ 0.3330,  0.3323,  0.6735,  ..., -1.7814, -1.8218, -1.5737]],

        [[-0.5390, -0.8016, -1.1839,  ..., -0.1442,  0.2326,  0.4366],
         [ 2.4602,  0.0246,  1.0269,  ..., -0.3648, -0.3556, -0.3148],
         [ 0.0491,  1.9657,  0.7565,  ...,  0.0270,  0.4027,  1.3906],
         ...,
         [ 0.8423, -0.4552, -0.0303,  ..., -0.5797, -0.3653, -0.0932],
         [-0.3052, -0.2583,  0.2873,  ...,  0.6079,  0.0923,  0.1633],
         [ 0.0297, -0.0447,  1.0474,  ...,  0.1480, -1.2590, -0.0567]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 2302.148, Val Loss : 11918.676
======> Trajectory Loss : 1870.088, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.927, BelowGroundPenalize Loss : 339.348
===> [Minibatch 13/129].........tensor([[[-1.5114, -1.6967, -1.4680,  ...,  0.0637,  0.4907, -0.6516],
         [-0.8449,  0.0128,  0.8534,  ..., -0.2836, -0.7709, -0.0687],
         [-0.1833,  1.0117,  1.4440,  ..., -0.7053,  1.2934, -2.3069],
         ...,
         [ 0.3095, -0.5388, -1.1511,  ..., -1.8758,  1.3670, -0.1922],
         [ 1.2856, -0.1001, -0.6782,  ..., -0.9513, -0.2634, -1.3291],
         [-0.9313,  0.3835,  0.6000,  ..., -0.6509,  0.0108, -1.1097]],

        [[ 1.5109, -0.4070,  0.2191,  ...,  0.1324,  1.0784,  0.2312],
         [ 1.3108, -0.5482,  0.7882,  ..., -1.5369, -1.3456,  0.6793],
         [-0.1727, -0.8518,  2.8688,  ..., -0.0486,  0.3602, -1.2610],
         ...,
         [-0.0042, -0.5322,  1.6443,  ..., -1.1612,  0.6838,  0.2696],
         [ 0.1212,  1.1851,  0.9881,  ..., -0.7534, -1.6779, -0.2035],
         [ 2.0330, -0.1428,  1.9302,  ...,  0.3337, -1.2055,  0.1011]]],
       device='cuda:0', grad_fn=<SelectBackward>)
tensor([[[-0.3629, -0.5697,  0.3201,  ..., -1.4398,  0.1282, -1.5436],
         [ 0.2073,  0.2516, -0.3616,  ..., -1.7754,  0.3122,  0.3475],
         [ 1.1974,  0.5350, -1.5163,  ..., -0.3356, -0.4932, -0.1059],
         ...,
         [-0.4024, -0.1736, -3.2677,  ..., -0.0410, -0.5383,  0.0346],
         [-1.1310,  0.0549, -1.0773,  ..., -0.0810, -2.1525,  0.8227],
         [ 0.3330,  0.3323,  0.6735,  ..., -1.7814, -1.8218, -1.5737]],

        [[-0.5390, -0.8016, -1.1839,  ..., -0.1442,  0.2326,  0.4366],
         [ 2.4602,  0.0246,  1.0269,  ..., -0.3648, -0.3556, -0.3148],
         [ 0.0491,  1.9657,  0.7565,  ...,  0.0270,  0.4027,  1.3906],
         ...,
         [ 0.8423, -0.4552, -0.0303,  ..., -0.5797, -0.3653, -0.0932],
         [-0.3052, -0.2583,  0.2873,  ...,  0.6079,  0.0923,  0.1633],
         [ 0.0297, -0.0447,  1.0474,  ...,  0.1480, -1.2590, -0.0567]]],
       device='cuda:0', grad_fn=<SelectBackward>)
initial_hidden tensor([[[[-3.6204e-01, -5.7464e-01,  3.2238e-01,  ..., -1.4441e+00,
            1.3204e-01, -1.5462e+00],
          [ 2.0776e-01,  2.4609e-01, -3.5605e-01,  ..., -1.7797e+00,
            3.0729e-01,  3.4596e-01],
          [ 1.1985e+00,  5.3088e-01, -1.5145e+00,  ..., -3.3846e-01,
           -4.9574e-01, -1.0896e-01],
          ...,
          [-3.9909e-01, -1.7785e-01, -3.2636e+00,  ..., -4.5192e-02,
           -5.3516e-01,  3.0618e-02],
          [-1.1268e+00,  4.9458e-02, -1.0721e+00,  ..., -8.6567e-02,
           -2.1540e+00,  8.1681e-01],
          [ 3.3040e-01,  3.2818e-01,  6.7762e-01,  ..., -1.7856e+00,
           -1.8252e+00, -1.5728e+00]],

         [[-5.4052e-01, -7.9935e-01, -1.1810e+00,  ..., -1.4491e-01,
            2.3314e-01,  4.3325e-01],
          [ 2.4621e+00,  2.3162e-02,  1.0294e+00,  ..., -3.6276e-01,
           -3.5573e-01, -3.1470e-01],
          [ 5.2329e-02,  1.9636e+00,  7.5856e-01,  ...,  2.6695e-02,
            4.0480e-01,  1.3865e+00],
          ...,
          [ 8.4247e-01, -4.5727e-01, -2.8717e-02,  ..., -5.7673e-01,
           -3.6457e-01, -9.4990e-02],
          [-3.0200e-01, -2.5758e-01,  2.8804e-01,  ...,  6.1113e-01,
            9.5377e-02,  1.5994e-01],
          [ 2.9817e-02, -4.5662e-02,  1.0495e+00,  ...,  1.5037e-01,
           -1.2607e+00, -5.8085e-02]]],


        [[[ 5.8888e-01, -1.6427e+00,  7.6877e-01,  ..., -8.2555e-02,
           -2.5477e+00,  3.6065e-01],
          [-4.3851e-01,  4.3436e-01,  3.8657e-01,  ...,  6.9190e-01,
           -2.5459e+00,  2.8377e-01],
          [-1.4134e+00, -4.3492e-01,  1.8174e+00,  ..., -1.5672e+00,
           -2.0720e+00, -1.6677e-01],
          ...,
          [-1.1699e+00,  1.3018e+00, -6.4471e-01,  ...,  6.1079e-01,
           -5.9166e-01, -3.2150e-01],
          [ 1.5480e-01,  1.3320e+00,  5.1842e-01,  ...,  4.4201e-01,
           -4.3336e-02,  1.1330e+00],
          [ 2.1811e+00, -2.3359e-01, -4.9321e-01,  ...,  3.4834e-01,
           -3.6970e-01,  7.3840e-01]],

         [[ 5.2432e-01,  5.5868e-01,  1.4963e+00,  ..., -1.2959e-01,
           -5.7530e-01,  2.0782e+00],
          [-9.4092e-01,  8.0112e-01,  5.8161e-01,  ..., -2.8243e-01,
           -7.3667e-01, -6.0603e-01],
          [ 3.4327e-02,  1.1690e+00, -1.0861e+00,  ...,  6.2930e-01,
            1.2108e+00, -2.1653e-01],
          ...,
          [-1.2861e+00,  3.0576e-04, -7.2761e-01,  ..., -1.6918e+00,
            1.9976e+00, -1.2970e+00],
          [ 2.2611e+00, -2.3881e+00, -1.0309e+00,  ..., -1.1962e+00,
            1.0105e+00,  1.9705e-01],
          [-2.5209e-01, -7.5680e-01, -8.4412e-01,  ..., -6.8291e-01,
            4.0591e-02, -2.2982e+00]]],


        [[[ 2.7693e-01,  9.7254e-01,  5.9265e-01,  ...,  1.3056e+00,
            8.3730e-01,  5.9010e-02],
          [ 8.0720e-01, -3.5933e-01, -4.9189e-01,  ..., -1.8249e+00,
            1.3365e+00,  1.6180e+00],
          [ 1.4795e+00, -8.5942e-01,  7.6319e-01,  ..., -7.1009e-01,
            1.1731e+00,  6.2272e-01],
          ...,
          [ 7.0541e-01,  1.7377e+00,  9.1861e-01,  ..., -5.3540e-01,
           -1.3060e+00,  9.9579e-02],
          [-2.7061e-01, -5.7375e-01, -2.6688e-01,  ...,  3.6705e-01,
           -5.5755e-01,  3.7802e-01],
          [-1.3203e+00, -1.1134e+00,  1.7697e+00,  ...,  7.9558e-01,
            5.8092e-01, -1.7600e+00]],

         [[-7.2061e-01, -2.0144e+00,  6.2001e-01,  ..., -2.3430e+00,
            6.2722e-01, -2.5476e+00],
          [ 1.0183e+00, -9.3420e-01,  2.8505e-01,  ...,  1.1359e+00,
            6.3365e-01,  2.0756e-01],
          [ 1.9667e+00,  2.3523e-01, -2.6316e-01,  ...,  8.7082e-01,
            5.3936e-01, -3.0404e-01],
          ...,
          [-1.3345e+00,  2.2104e+00, -9.4660e-01,  ..., -6.7610e-01,
            1.5036e+00, -3.6363e-01],
          [ 1.4186e+00, -1.2415e+00, -2.6432e-01,  ...,  4.9895e-01,
           -1.1074e+00,  1.1239e+00],
          [-1.8781e+00, -1.3369e-01, -7.0196e-01,  ...,  4.9110e-01,
           -1.1102e+00, -7.3470e-01]]],


        [[[-2.3251e+00, -2.1467e+00, -2.3396e-01,  ...,  7.4123e-01,
            6.6460e-01, -1.0290e+00],
          [-2.3666e-02,  4.3202e-02,  1.3717e+00,  ...,  1.1599e+00,
            1.2063e+00,  1.0721e+00],
          [ 1.1177e+00, -8.7170e-01, -9.8922e-01,  ...,  1.4696e-01,
            9.4916e-01,  1.3362e-01],
          ...,
          [-1.4226e+00, -2.1781e+00, -1.7154e+00,  ...,  6.1202e-01,
            8.7872e-01,  8.2766e-01],
          [ 1.3269e+00, -3.7452e-01,  2.6866e-01,  ..., -8.1340e-01,
            1.1577e-01,  1.3400e-01],
          [ 1.6561e-01,  1.4783e+00,  3.6693e-01,  ..., -2.2122e-01,
           -1.8001e+00,  1.3079e+00]],

         [[ 1.5133e+00,  3.3451e-01,  6.0799e-01,  ...,  1.1826e+00,
            9.3431e-01,  4.9242e-01],
          [ 9.9073e-01,  8.7217e-01,  1.7735e-01,  ..., -1.3198e+00,
           -7.6742e-01,  2.0416e+00],
          [ 1.0461e+00, -6.4223e-01, -1.2605e+00,  ...,  2.3508e-01,
           -5.9784e-02,  6.7945e-01],
          ...,
          [-3.2934e-01,  4.0926e-01,  5.1373e-01,  ..., -5.1443e-01,
            3.1051e-01,  1.0894e+00],
          [ 6.3011e-01, -9.8509e-02, -6.0227e-01,  ..., -3.5095e-01,
            1.0186e-01,  7.7797e-01],
          [-5.5107e-01,  2.2977e-01, -3.8443e-01,  ...,  4.3298e-01,
           -1.6416e-01, -4.0228e-01]]]], device='cuda:0') torch.Size([4, 2, 128, 32])
initial_cell tensor([[[[ 0.0187,  0.4769,  2.6521,  ...,  0.4860,  0.3561, -1.4151],
          [ 0.3957,  0.0407, -0.0371,  ...,  1.8785, -1.7254,  0.7367],
          [-0.4337, -0.5364,  0.1339,  ...,  0.6492,  0.0273,  0.5132],
          ...,
          [-0.9553,  0.0266, -1.4980,  ..., -0.2431, -0.0765,  0.1933],
          [ 0.3324,  0.1837, -0.7229,  ...,  0.9420,  0.8817, -1.8188],
          [ 0.5591, -1.2223, -1.2076,  ..., -1.1637, -0.4283, -0.2661]],

         [[-0.2845, -0.0416,  0.2513,  ...,  1.9713,  1.0751,  0.3023],
          [-0.3590, -1.6165,  2.3259,  ...,  0.5762,  0.1744,  0.6721],
          [ 0.4335, -0.1220, -0.1955,  ...,  0.2796,  0.1330, -0.3083],
          ...,
          [-0.1651,  0.3630,  0.3431,  ...,  1.0897, -0.3305, -0.2184],
          [ 0.5047,  1.0647, -0.6718,  ...,  0.4202,  1.1890,  0.8690],
          [ 0.2294,  2.9751,  1.2946,  ..., -0.0986,  0.9822, -0.3247]]],


        [[[ 0.7908, -0.6858, -0.6479,  ...,  0.3088, -0.3417, -1.1129],
          [ 2.3468,  0.4610, -0.7267,  ...,  0.3838, -0.1445, -0.2897],
          [ 1.7506,  1.7646, -0.3702,  ..., -1.8861,  0.9780, -0.6295],
          ...,
          [-0.0306,  0.5259,  1.3486,  ...,  0.1700,  0.4300,  1.5234],
          [-0.4186, -0.1263,  1.0693,  ...,  0.0574,  0.6300, -0.5913],
          [ 1.0775, -0.2796,  0.1847,  ...,  0.1308, -0.1802,  0.3463]],

         [[ 0.2069, -0.1913,  0.1207,  ..., -0.7022,  0.3110, -1.5645],
          [-2.1839, -0.2650,  0.8347,  ...,  0.0359, -0.2549, -0.4381],
          [-1.4028,  0.7146,  0.6471,  ..., -0.1058,  0.9962,  0.1405],
          ...,
          [ 1.1434, -2.1678,  1.0908,  ..., -0.0705, -0.0826, -0.1490],
          [ 0.8200,  0.3598,  0.5588,  ...,  0.3730, -0.0147,  0.0930],
          [-1.6054,  1.2874,  0.2382,  ..., -0.9228,  0.3253,  0.4983]]],


        [[[ 0.9074, -0.7181,  0.9612,  ...,  1.2167, -0.7783, -1.7521],
          [-1.7826,  0.3471, -0.2176,  ...,  2.1173, -1.2433, -1.7365],
          [ 0.5192,  0.1968,  0.5004,  ..., -1.4141, -1.4375,  0.9704],
          ...,
          [ 0.7201, -0.5675, -0.9701,  ...,  1.3530, -0.8354,  0.2580],
          [ 0.3026,  0.2275, -0.5124,  ..., -0.3053, -1.5398,  1.4456],
          [ 0.1148, -0.3957, -0.4038,  ..., -1.2449, -0.1479,  0.1294]],

         [[-1.1859, -0.0556,  0.2494,  ..., -0.9624, -2.4831,  0.8749],
          [-0.5165,  0.6085, -0.2184,  ..., -1.7149,  0.8134, -0.9214],
          [-0.0113,  0.4419,  0.3975,  ..., -0.5279,  1.2327, -1.2496],
          ...,
          [-1.5000, -1.2157, -0.1015,  ..., -1.7204, -0.8365, -0.0814],
          [ 0.2130, -0.3624, -1.0109,  ...,  0.2810,  1.0428,  2.0633],
          [-1.7622, -2.3620,  0.6268,  ...,  0.4164,  0.8601,  0.4144]]],


        [[[ 0.4516, -1.3236, -0.2866,  ...,  0.2915, -1.2807, -1.6620],
          [ 1.0407, -1.3121, -0.6694,  ...,  0.2248, -0.0084, -1.2715],
          [ 1.0145, -0.0684,  1.4522,  ...,  0.3739,  0.4948, -2.8235],
          ...,
          [ 0.1495, -0.7009, -1.1670,  ...,  0.9531,  0.3528,  0.4020],
          [ 0.8209, -1.7855,  0.0924,  ..., -0.6650,  1.4034,  1.3939],
          [ 0.7919,  0.8682, -1.5115,  ..., -0.5909,  1.2382,  0.1473]],

         [[-0.3948,  1.9031,  0.7338,  ..., -0.6707,  0.2891, -0.4226],
          [ 1.0481, -2.4709,  0.7265,  ...,  0.6232,  0.6946,  1.1863],
          [ 1.8910,  0.8207, -0.0288,  ...,  0.5479, -1.6850, -0.8016],
          ...,
          [-0.4341, -0.4914,  0.1542,  ...,  0.8025,  0.6081, -0.7796],
          [ 1.9187,  2.2346, -1.0177,  ...,  0.9503,  1.5328, -1.0320],
          [ 1.1447, -1.2415, -0.3386,  ..., -0.8482, -0.1028,  0.2457]]]],
       device='cuda:0') torch.Size([4, 2, 128, 32])
tensor([[[-1.5199e+00, -1.7006e+00, -1.4603e+00,  ...,  6.4692e-02,
           4.9669e-01, -6.5773e-01],
         [-8.5091e-01,  7.1429e-03,  8.4662e-01,  ..., -2.7788e-01,
          -7.7553e-01, -7.4463e-02],
         [-1.9047e-01,  1.0057e+00,  1.4520e+00,  ..., -6.9947e-01,
           1.2885e+00, -2.3140e+00],
         ...,
         [ 3.0220e-01, -5.4519e-01, -1.1577e+00,  ..., -1.8696e+00,
           1.3610e+00, -1.9969e-01],
         [ 1.2804e+00, -1.0829e-01, -6.8147e-01,  ..., -9.4558e-01,
          -2.6044e-01, -1.3365e+00],
         [-9.3610e-01,  3.7659e-01,  5.9912e-01,  ..., -6.4547e-01,
           1.7900e-02, -1.1171e+00]],

        [[ 1.5202e+00, -4.1528e-01,  2.1637e-01,  ...,  1.2312e-01,
           1.0759e+00,  2.2609e-01],
         [ 1.3134e+00, -5.5691e-01,  7.9131e-01,  ..., -1.5414e+00,
          -1.3551e+00,  6.7915e-01],
         [-1.7207e-01, -8.5717e-01,  2.8669e+00,  ..., -5.1109e-02,
           3.5177e-01, -1.2595e+00],
         ...,
         [ 1.2812e-03, -5.3760e-01,  1.6460e+00,  ..., -1.1677e+00,
           6.7386e-01,  2.6324e-01],
         [ 1.3101e-01,  1.1803e+00,  9.9577e-01,  ..., -7.5616e-01,
          -1.6873e+00, -2.1163e-01],
         [ 2.0420e+00, -1.3818e-01,  1.9352e+00,  ...,  3.2826e-01,
          -1.2048e+00,  1.0865e-01]]], device='cuda:0',
       grad_fn=<SelectBackward>)
tensor([[[-0.3620, -0.5746,  0.3224,  ..., -1.4441,  0.1320, -1.5462],
         [ 0.2078,  0.2461, -0.3561,  ..., -1.7797,  0.3073,  0.3460],
         [ 1.1985,  0.5309, -1.5145,  ..., -0.3385, -0.4957, -0.1090],
         ...,
         [-0.3991, -0.1778, -3.2636,  ..., -0.0452, -0.5352,  0.0306],
         [-1.1268,  0.0495, -1.0721,  ..., -0.0866, -2.1540,  0.8168],
         [ 0.3304,  0.3282,  0.6776,  ..., -1.7856, -1.8252, -1.5728]],

        [[-0.5405, -0.7994, -1.1810,  ..., -0.1449,  0.2331,  0.4332],
         [ 2.4621,  0.0232,  1.0294,  ..., -0.3628, -0.3557, -0.3147],
         [ 0.0523,  1.9636,  0.7586,  ...,  0.0267,  0.4048,  1.3865],
         ...,
         [ 0.8425, -0.4573, -0.0287,  ..., -0.5767, -0.3646, -0.0950],
         [-0.3020, -0.2576,  0.2880,  ...,  0.6111,  0.0954,  0.1599],
         [ 0.0298, -0.0457,  1.0495,  ...,  0.1504, -1.2607, -0.0581]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 2282.624, Val Loss : 10885.614
======> Trajectory Loss : 1885.319, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.914, BelowGroundPenalize Loss : 305.933
===> [Minibatch 14/129].........tensor([[[-1.5199e+00, -1.7006e+00, -1.4603e+00,  ...,  6.4692e-02,
           4.9669e-01, -6.5773e-01],
         [-8.5091e-01,  7.1429e-03,  8.4662e-01,  ..., -2.7788e-01,
          -7.7553e-01, -7.4463e-02],
         [-1.9047e-01,  1.0057e+00,  1.4520e+00,  ..., -6.9947e-01,
           1.2885e+00, -2.3140e+00],
         ...,
         [ 3.0220e-01, -5.4519e-01, -1.1577e+00,  ..., -1.8696e+00,
           1.3610e+00, -1.9969e-01],
         [ 1.2804e+00, -1.0829e-01, -6.8147e-01,  ..., -9.4558e-01,
          -2.6044e-01, -1.3365e+00],
         [-9.3610e-01,  3.7659e-01,  5.9912e-01,  ..., -6.4547e-01,
           1.7900e-02, -1.1171e+00]],

        [[ 1.5202e+00, -4.1528e-01,  2.1637e-01,  ...,  1.2312e-01,
           1.0759e+00,  2.2609e-01],
         [ 1.3134e+00, -5.5691e-01,  7.9131e-01,  ..., -1.5414e+00,
          -1.3551e+00,  6.7915e-01],
         [-1.7207e-01, -8.5717e-01,  2.8669e+00,  ..., -5.1109e-02,
           3.5177e-01, -1.2595e+00],
         ...,
         [ 1.2812e-03, -5.3760e-01,  1.6460e+00,  ..., -1.1677e+00,
           6.7386e-01,  2.6324e-01],
         [ 1.3101e-01,  1.1803e+00,  9.9577e-01,  ..., -7.5616e-01,
          -1.6873e+00, -2.1163e-01],
         [ 2.0420e+00, -1.3818e-01,  1.9352e+00,  ...,  3.2826e-01,
          -1.2048e+00,  1.0865e-01]]], device='cuda:0',
       grad_fn=<SelectBackward>)
tensor([[[-0.3620, -0.5746,  0.3224,  ..., -1.4441,  0.1320, -1.5462],
         [ 0.2078,  0.2461, -0.3561,  ..., -1.7797,  0.3073,  0.3460],
         [ 1.1985,  0.5309, -1.5145,  ..., -0.3385, -0.4957, -0.1090],
         ...,
         [-0.3991, -0.1778, -3.2636,  ..., -0.0452, -0.5352,  0.0306],
         [-1.1268,  0.0495, -1.0721,  ..., -0.0866, -2.1540,  0.8168],
         [ 0.3304,  0.3282,  0.6776,  ..., -1.7856, -1.8252, -1.5728]],

        [[-0.5405, -0.7994, -1.1810,  ..., -0.1449,  0.2331,  0.4332],
         [ 2.4621,  0.0232,  1.0294,  ..., -0.3628, -0.3557, -0.3147],
         [ 0.0523,  1.9636,  0.7586,  ...,  0.0267,  0.4048,  1.3865],
         ...,
         [ 0.8425, -0.4573, -0.0287,  ..., -0.5767, -0.3646, -0.0950],
         [-0.3020, -0.2576,  0.2880,  ...,  0.6111,  0.0954,  0.1599],
         [ 0.0298, -0.0457,  1.0495,  ...,  0.1504, -1.2607, -0.0581]]],
       device='cuda:0', grad_fn=<SelectBackward>)
initial_hidden tensor([[[[-3.6138e-01, -5.7968e-01,  3.2491e-01,  ..., -1.4489e+00,
            1.3562e-01, -1.5494e+00],
          [ 2.0788e-01,  2.4058e-01, -3.5048e-01,  ..., -1.7839e+00,
            3.0198e-01,  3.4405e-01],
          [ 1.1993e+00,  5.2646e-01, -1.5125e+00,  ..., -3.4156e-01,
           -4.9804e-01, -1.1210e-01],
          ...,
          [-3.9619e-01, -1.8194e-01, -3.2596e+00,  ..., -4.9139e-02,
           -5.3251e-01,  2.6714e-02],
          [-1.1229e+00,  4.4357e-02, -1.0672e+00,  ..., -9.1713e-02,
           -2.1555e+00,  8.1129e-01],
          [ 3.2769e-01,  3.2358e-01,  6.8185e-01,  ..., -1.7900e+00,
           -1.8287e+00, -1.5730e+00]],

         [[-5.4155e-01, -7.9718e-01, -1.1782e+00,  ..., -1.4558e-01,
            2.3358e-01,  4.3004e-01],
          [ 2.4639e+00,  2.1735e-02,  1.0319e+00,  ..., -3.6090e-01,
           -3.5591e-01, -3.1472e-01],
          [ 5.6031e-02,  1.9614e+00,  7.6098e-01,  ...,  2.6375e-02,
            4.0692e-01,  1.3823e+00],
          ...,
          [ 8.4263e-01, -4.5938e-01, -2.7118e-02,  ..., -5.7399e-01,
           -3.6392e-01, -9.6777e-02],
          [-2.9905e-01, -2.5700e-01,  2.8864e-01,  ...,  6.1409e-01,
            9.8310e-02,  1.5680e-01],
          [ 2.9874e-02, -4.7177e-02,  1.0516e+00,  ...,  1.5258e-01,
           -1.2625e+00, -5.9620e-02]]],


        [[[ 5.9264e-01, -1.6381e+00,  7.6486e-01,  ..., -8.6228e-02,
           -2.5515e+00,  3.5730e-01],
          [-4.3580e-01,  4.3812e-01,  3.8453e-01,  ...,  6.8757e-01,
           -2.5474e+00,  2.8236e-01],
          [-1.4104e+00, -4.3162e-01,  1.8146e+00,  ..., -1.5718e+00,
           -2.0735e+00, -1.6707e-01],
          ...,
          [-1.1662e+00,  1.3058e+00, -6.4575e-01,  ...,  6.0709e-01,
           -5.9467e-01, -3.2112e-01],
          [ 1.5889e-01,  1.3361e+00,  5.1549e-01,  ...,  4.3780e-01,
           -4.6653e-02,  1.1298e+00],
          [ 2.1803e+00, -2.2929e-01, -4.9433e-01,  ...,  3.4418e-01,
           -3.6951e-01,  7.3633e-01]],

         [[ 5.2372e-01,  5.6020e-01,  1.4944e+00,  ..., -1.2723e-01,
           -5.7224e-01,  2.0774e+00],
          [-9.4182e-01,  8.0147e-01,  5.8040e-01,  ..., -2.7881e-01,
           -7.3552e-01, -6.0654e-01],
          [ 3.2691e-02,  1.1684e+00, -1.0872e+00,  ...,  6.3136e-01,
            1.2118e+00, -2.1795e-01],
          ...,
          [-1.2876e+00, -3.6724e-04, -7.2671e-01,  ..., -1.6912e+00,
            1.9981e+00, -1.2979e+00],
          [ 2.2603e+00, -2.3914e+00, -1.0328e+00,  ..., -1.1934e+00,
            1.0121e+00,  1.9367e-01],
          [-2.5414e-01, -7.6019e-01, -8.4464e-01,  ..., -6.8116e-01,
            4.1668e-02, -2.2997e+00]]],


        [[[ 2.7567e-01,  9.7420e-01,  5.9590e-01,  ...,  1.3049e+00,
            8.4072e-01,  5.5648e-02],
          [ 8.1139e-01, -3.5545e-01, -4.8732e-01,  ..., -1.8275e+00,
            1.3355e+00,  1.6180e+00],
          [ 1.4796e+00, -8.5795e-01,  7.6235e-01,  ..., -7.0907e-01,
            1.1735e+00,  6.2025e-01],
          ...,
          [ 7.0772e-01,  1.7411e+00,  9.2235e-01,  ..., -5.3228e-01,
           -1.3030e+00,  9.9743e-02],
          [-2.6772e-01, -5.7449e-01, -2.6337e-01,  ...,  3.7039e-01,
           -5.6080e-01,  3.7629e-01],
          [-1.3188e+00, -1.1149e+00,  1.7721e+00,  ...,  7.9756e-01,
            5.8482e-01, -1.7599e+00]],

         [[-7.2361e-01, -2.0159e+00,  6.1748e-01,  ..., -2.3406e+00,
            6.2976e-01, -2.5506e+00],
          [ 1.0167e+00, -9.3544e-01,  2.8468e-01,  ...,  1.1377e+00,
            6.3524e-01,  2.0688e-01],
          [ 1.9665e+00,  2.3570e-01, -2.6477e-01,  ...,  8.7117e-01,
            5.4083e-01, -3.0570e-01],
          ...,
          [-1.3346e+00,  2.2115e+00, -9.4814e-01,  ..., -6.7499e-01,
            1.5052e+00, -3.6495e-01],
          [ 1.4157e+00, -1.2410e+00, -2.6536e-01,  ...,  5.0106e-01,
           -1.1053e+00,  1.1212e+00],
          [-1.8797e+00, -1.3446e-01, -7.0389e-01,  ...,  4.9242e-01,
           -1.1085e+00, -7.3602e-01]]],


        [[[-2.3233e+00, -2.1443e+00, -2.3655e-01,  ...,  7.4341e-01,
            6.6319e-01, -1.0315e+00],
          [-2.6193e-02,  4.6585e-02,  1.3737e+00,  ...,  1.1625e+00,
            1.2032e+00,  1.0690e+00],
          [ 1.1168e+00, -8.6857e-01, -9.9044e-01,  ...,  1.4914e-01,
            9.4661e-01,  1.3009e-01],
          ...,
          [-1.4208e+00, -2.1752e+00, -1.7165e+00,  ...,  6.1519e-01,
            8.7579e-01,  8.2413e-01],
          [ 1.3286e+00, -3.7067e-01,  2.6528e-01,  ..., -8.1170e-01,
            1.1439e-01,  1.3002e-01],
          [ 1.6730e-01,  1.4814e+00,  3.6591e-01,  ..., -2.2429e-01,
           -1.8037e+00,  1.3063e+00]],

         [[ 1.5144e+00,  3.3763e-01,  6.0638e-01,  ...,  1.1848e+00,
            9.3706e-01,  4.9249e-01],
          [ 9.9207e-01,  8.7208e-01,  1.7801e-01,  ..., -1.3207e+00,
           -7.6796e-01,  2.0406e+00],
          [ 1.0488e+00, -6.4005e-01, -1.2616e+00,  ...,  2.3652e-01,
           -5.8364e-02,  6.7984e-01],
          ...,
          [-3.2791e-01,  4.1193e-01,  5.1371e-01,  ..., -5.1538e-01,
            3.1256e-01,  1.0882e+00],
          [ 6.3092e-01, -9.8028e-02, -6.0447e-01,  ..., -3.5218e-01,
            1.0360e-01,  7.7726e-01],
          [-5.4968e-01,  2.3121e-01, -3.8596e-01,  ...,  4.3390e-01,
           -1.6452e-01, -4.0249e-01]]]], device='cuda:0') torch.Size([4, 2, 128, 32])
initial_cell tensor([[[[ 0.0174,  0.4719,  2.6561,  ...,  0.4848,  0.3517, -1.4129],
          [ 0.3942,  0.0385, -0.0313,  ...,  1.8759, -1.7305,  0.7334],
          [-0.4337, -0.5373,  0.1383,  ...,  0.6473,  0.0243,  0.5122],
          ...,
          [-0.9570,  0.0253, -1.4942,  ..., -0.2462, -0.0807,  0.1921],
          [ 0.3285,  0.1805, -0.7185,  ...,  0.9398,  0.8767, -1.8171],
          [ 0.5576, -1.2253, -1.2038,  ..., -1.1639, -0.4329, -0.2662]],

         [[-0.2809, -0.0448,  0.2512,  ...,  1.9715,  1.0781,  0.2992],
          [-0.3588, -1.6194,  2.3268,  ...,  0.5757,  0.1767,  0.6698],
          [ 0.4344, -0.1242, -0.1948,  ...,  0.2789,  0.1356, -0.3096],
          ...,
          [-0.1628,  0.3625,  0.3433,  ...,  1.0903, -0.3271, -0.2209],
          [ 0.5077,  1.0626, -0.6738,  ...,  0.4219,  1.1929,  0.8658],
          [ 0.2298,  2.9740,  1.2947,  ..., -0.0991,  0.9859, -0.3263]]],


        [[[ 0.7917, -0.6853, -0.6437,  ...,  0.3077, -0.3462, -1.1117],
          [ 2.3476,  0.4618, -0.7238,  ...,  0.3859, -0.1486, -0.2888],
          [ 1.7521,  1.7652, -0.3698,  ..., -1.8868,  0.9731, -0.6303],
          ...,
          [-0.0297,  0.5266,  1.3519,  ...,  0.1709,  0.4256,  1.5236],
          [-0.4206, -0.1238,  1.0730,  ...,  0.0598,  0.6251, -0.5882],
          [ 1.0766, -0.2771,  0.1881,  ...,  0.1339, -0.1846,  0.3470]],

         [[ 0.2059, -0.1937,  0.1197,  ..., -0.7004,  0.3142, -1.5674],
          [-2.1849, -0.2651,  0.8356,  ...,  0.0356, -0.2527, -0.4387],
          [-1.4036,  0.7139,  0.6479,  ..., -0.1061,  0.9987,  0.1406],
          ...,
          [ 1.1440, -2.1661,  1.0912,  ..., -0.0699, -0.0807, -0.1495],
          [ 0.8198,  0.3589,  0.5572,  ...,  0.3763, -0.0116,  0.0899],
          [-1.6064,  1.2871,  0.2379,  ..., -0.9227,  0.3278,  0.4981]]],


        [[[ 0.9083, -0.7198,  0.9647,  ...,  1.2202, -0.7818, -1.7504],
          [-1.7817,  0.3457, -0.2126,  ...,  2.1217, -1.2465, -1.7348],
          [ 0.5206,  0.1950,  0.5026,  ..., -1.4091, -1.4410,  0.9722],
          ...,
          [ 0.7209, -0.5684, -0.9665,  ...,  1.3570, -0.8392,  0.2577],
          [ 0.3030,  0.2269, -0.5081,  ..., -0.3005, -1.5439,  1.4484],
          [ 0.1141, -0.3975, -0.4003,  ..., -1.2407, -0.1510,  0.1309]],

         [[-1.1886, -0.0567,  0.2468,  ..., -0.9612, -2.4821,  0.8733],
          [-0.5187,  0.6091, -0.2191,  ..., -1.7146,  0.8157, -0.9225],
          [-0.0119,  0.4415,  0.3974,  ..., -0.5281,  1.2350, -1.2495],
          ...,
          [-1.4990, -1.2133, -0.1027,  ..., -1.7204, -0.8350, -0.0816],
          [ 0.2115, -0.3618, -1.0133,  ...,  0.2825,  1.0457,  2.0622],
          [-1.7639, -2.3619,  0.6256,  ...,  0.4169,  0.8628,  0.4147]]],


        [[[ 0.4503, -1.3251, -0.2844,  ...,  0.2957, -1.2839, -1.6605],
          [ 1.0397, -1.3135, -0.6669,  ...,  0.2291, -0.0130, -1.2694],
          [ 1.0156, -0.0702,  1.4534,  ...,  0.3779,  0.4904, -2.8243],
          ...,
          [ 0.1507, -0.7019, -1.1653,  ...,  0.9571,  0.3488,  0.4020],
          [ 0.8201, -1.7864,  0.0940,  ..., -0.6603,  1.3985,  1.3963],
          [ 0.7915,  0.8662, -1.5094,  ..., -0.5868,  1.2337,  0.1492]],

         [[-0.3954,  1.9055,  0.7311,  ..., -0.6692,  0.2912, -0.4252],
          [ 1.0469, -2.4706,  0.7266,  ...,  0.6254,  0.6966,  1.1870],
          [ 1.8924,  0.8206, -0.0290,  ...,  0.5483, -1.6838, -0.8009],
          ...,
          [-0.4326, -0.4882,  0.1530,  ...,  0.8053,  0.6089, -0.7803],
          [ 1.9184,  2.2369, -1.0208,  ...,  0.9524,  1.5355, -1.0348],
          [ 1.1438, -1.2418, -0.3409,  ..., -0.8480, -0.1006,  0.2459]]]],
       device='cuda:0') torch.Size([4, 2, 128, 32])
tensor([[[-1.5290e+00, -1.7025e+00, -1.4522e+00,  ...,  6.3649e-02,
           4.9820e-01, -6.6395e-01],
         [-8.5815e-01,  1.1966e-04,  8.3906e-01,  ..., -2.7112e-01,
          -7.8186e-01, -8.1354e-02],
         [-1.9699e-01,  1.0003e+00,  1.4589e+00,  ..., -6.9429e-01,
           1.2841e+00, -2.3203e+00],
         ...,
         [ 2.9564e-01, -5.5089e-01, -1.1638e+00,  ..., -1.8642e+00,
           1.3555e+00, -2.0637e-01],
         [ 1.2750e+00, -1.1573e-01, -6.8459e-01,  ..., -9.4097e-01,
          -2.5776e-01, -1.3434e+00],
         [-9.4034e-01,  3.6872e-01,  6.0283e-01,  ..., -6.3869e-01,
           2.5866e-02, -1.1252e+00]],

        [[ 1.5285e+00, -4.2024e-01,  2.1121e-01,  ...,  1.1467e-01,
           1.0711e+00,  2.2521e-01],
         [ 1.3141e+00, -5.6390e-01,  7.9136e-01,  ..., -1.5429e+00,
          -1.3645e+00,  6.7801e-01],
         [-1.7347e-01, -8.5978e-01,  2.8623e+00,  ..., -5.1719e-02,
           3.4275e-01, -1.2548e+00],
         ...,
         [ 5.5075e-03, -5.3932e-01,  1.6440e+00,  ..., -1.1719e+00,
           6.6363e-01,  2.5896e-01],
         [ 1.4094e-01,  1.1801e+00,  1.0040e+00,  ..., -7.5512e-01,
          -1.6971e+00, -2.1762e-01],
         [ 2.0503e+00, -1.3182e-01,  1.9368e+00,  ...,  3.2533e-01,
          -1.2071e+00,  1.1550e-01]]], device='cuda:0',
       grad_fn=<SelectBackward>)
tensor([[[-0.3614, -0.5797,  0.3249,  ..., -1.4489,  0.1356, -1.5494],
         [ 0.2079,  0.2406, -0.3505,  ..., -1.7839,  0.3020,  0.3441],
         [ 1.1993,  0.5265, -1.5125,  ..., -0.3416, -0.4980, -0.1121],
         ...,
         [-0.3962, -0.1819, -3.2596,  ..., -0.0491, -0.5325,  0.0267],
         [-1.1229,  0.0444, -1.0672,  ..., -0.0917, -2.1555,  0.8113],
         [ 0.3277,  0.3236,  0.6818,  ..., -1.7900, -1.8287, -1.5730]],

        [[-0.5415, -0.7972, -1.1782,  ..., -0.1456,  0.2336,  0.4300],
         [ 2.4639,  0.0217,  1.0319,  ..., -0.3609, -0.3559, -0.3147],
         [ 0.0560,  1.9614,  0.7610,  ...,  0.0264,  0.4069,  1.3823],
         ...,
         [ 0.8426, -0.4594, -0.0271,  ..., -0.5740, -0.3639, -0.0968],
         [-0.2990, -0.2570,  0.2886,  ...,  0.6141,  0.0983,  0.1568],
         [ 0.0299, -0.0472,  1.0516,  ...,  0.1526, -1.2625, -0.0596]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 2239.792, Val Loss : 9878.653
======> Trajectory Loss : 1836.909, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.859, BelowGroundPenalize Loss : 317.026
===> [Minibatch 15/129].........tensor([[[-1.5290e+00, -1.7025e+00, -1.4522e+00,  ...,  6.3649e-02,
           4.9820e-01, -6.6395e-01],
         [-8.5815e-01,  1.1966e-04,  8.3906e-01,  ..., -2.7112e-01,
          -7.8186e-01, -8.1354e-02],
         [-1.9699e-01,  1.0003e+00,  1.4589e+00,  ..., -6.9429e-01,
           1.2841e+00, -2.3203e+00],
         ...,
         [ 2.9564e-01, -5.5089e-01, -1.1638e+00,  ..., -1.8642e+00,
           1.3555e+00, -2.0637e-01],
         [ 1.2750e+00, -1.1573e-01, -6.8459e-01,  ..., -9.4097e-01,
          -2.5776e-01, -1.3434e+00],
         [-9.4034e-01,  3.6872e-01,  6.0283e-01,  ..., -6.3869e-01,
           2.5866e-02, -1.1252e+00]],

        [[ 1.5285e+00, -4.2024e-01,  2.1121e-01,  ...,  1.1467e-01,
           1.0711e+00,  2.2521e-01],
         [ 1.3141e+00, -5.6390e-01,  7.9136e-01,  ..., -1.5429e+00,
          -1.3645e+00,  6.7801e-01],
         [-1.7347e-01, -8.5978e-01,  2.8623e+00,  ..., -5.1719e-02,
           3.4275e-01, -1.2548e+00],
         ...,
         [ 5.5075e-03, -5.3932e-01,  1.6440e+00,  ..., -1.1719e+00,
           6.6363e-01,  2.5896e-01],
         [ 1.4094e-01,  1.1801e+00,  1.0040e+00,  ..., -7.5512e-01,
          -1.6971e+00, -2.1762e-01],
         [ 2.0503e+00, -1.3182e-01,  1.9368e+00,  ...,  3.2533e-01,
          -1.2071e+00,  1.1550e-01]]], device='cuda:0',
       grad_fn=<SelectBackward>)
tensor([[[-0.3614, -0.5797,  0.3249,  ..., -1.4489,  0.1356, -1.5494],
         [ 0.2079,  0.2406, -0.3505,  ..., -1.7839,  0.3020,  0.3441],
         [ 1.1993,  0.5265, -1.5125,  ..., -0.3416, -0.4980, -0.1121],
         ...,
         [-0.3962, -0.1819, -3.2596,  ..., -0.0491, -0.5325,  0.0267],
         [-1.1229,  0.0444, -1.0672,  ..., -0.0917, -2.1555,  0.8113],
         [ 0.3277,  0.3236,  0.6818,  ..., -1.7900, -1.8287, -1.5730]],

        [[-0.5415, -0.7972, -1.1782,  ..., -0.1456,  0.2336,  0.4300],
         [ 2.4639,  0.0217,  1.0319,  ..., -0.3609, -0.3559, -0.3147],
         [ 0.0560,  1.9614,  0.7610,  ...,  0.0264,  0.4069,  1.3823],
         ...,
         [ 0.8426, -0.4594, -0.0271,  ..., -0.5740, -0.3639, -0.0968],
         [-0.2990, -0.2570,  0.2886,  ...,  0.6141,  0.0983,  0.1568],
         [ 0.0299, -0.0472,  1.0516,  ...,  0.1526, -1.2625, -0.0596]]],
       device='cuda:0', grad_fn=<SelectBackward>)
initial_hidden tensor([[[[-3.6111e-01, -5.8560e-01,  3.2831e-01,  ..., -1.4548e+00,
            1.3913e-01, -1.5541e+00],
          [ 2.0776e-01,  2.3485e-01, -3.4485e-01,  ..., -1.7880e+00,
            2.9594e-01,  3.4179e-01],
          [ 1.2000e+00,  5.2214e-01, -1.5105e+00,  ..., -3.4447e-01,
           -5.0023e-01, -1.1512e-01],
          ...,
          [-3.9402e-01, -1.8620e-01, -3.2555e+00,  ..., -5.3072e-02,
           -5.3014e-01,  2.2425e-02],
          [-1.1192e+00,  3.9227e-02, -1.0623e+00,  ..., -9.6776e-02,
           -2.1572e+00,  8.0578e-01],
          [ 3.2520e-01,  3.1931e-01,  6.8576e-01,  ..., -1.7940e+00,
           -1.8319e+00, -1.5734e+00]],

         [[-5.4164e-01, -7.9489e-01, -1.1751e+00,  ..., -1.4631e-01,
            2.3394e-01,  4.2679e-01],
          [ 2.4658e+00,  2.0298e-02,  1.0344e+00,  ..., -3.5920e-01,
           -3.5616e-01, -3.1485e-01],
          [ 5.9565e-02,  1.9594e+00,  7.6329e-01,  ...,  2.6074e-02,
            4.0891e-01,  1.3785e+00],
          ...,
          [ 8.4286e-01, -4.6201e-01, -2.5280e-02,  ..., -5.7125e-01,
           -3.6333e-01, -9.8925e-02],
          [-2.9606e-01, -2.5675e-01,  2.8903e-01,  ...,  6.1693e-01,
            1.0144e-01,  1.5365e-01],
          [ 2.9924e-02, -4.8605e-02,  1.0536e+00,  ...,  1.5457e-01,
           -1.2640e+00, -6.1033e-02]]],


        [[[ 5.9597e-01, -1.6334e+00,  7.6087e-01,  ..., -8.9999e-02,
           -2.5559e+00,  3.5393e-01],
          [-4.3328e-01,  4.4171e-01,  3.8271e-01,  ...,  6.8329e-01,
           -2.5490e+00,  2.8114e-01],
          [-1.4077e+00, -4.2860e-01,  1.8120e+00,  ..., -1.5760e+00,
           -2.0750e+00, -1.6729e-01],
          ...,
          [-1.1625e+00,  1.3099e+00, -6.4654e-01,  ...,  6.0343e-01,
           -5.9794e-01, -3.2068e-01],
          [ 1.6267e-01,  1.3400e+00,  5.1278e-01,  ...,  4.3379e-01,
           -4.9896e-02,  1.1270e+00],
          [ 2.1795e+00, -2.2537e-01, -4.9533e-01,  ...,  3.4037e-01,
           -3.6940e-01,  7.3446e-01]],

         [[ 5.2290e-01,  5.6140e-01,  1.4921e+00,  ..., -1.2459e-01,
           -5.6865e-01,  2.0762e+00],
          [-9.4273e-01,  8.0161e-01,  5.7887e-01,  ..., -2.7484e-01,
           -7.3398e-01, -6.0738e-01],
          [ 3.1209e-02,  1.1677e+00, -1.0882e+00,  ...,  6.3330e-01,
            1.2126e+00, -2.1933e-01],
          ...,
          [-1.2892e+00, -1.2221e-03, -7.2609e-01,  ..., -1.6902e+00,
            1.9989e+00, -1.2993e+00],
          [ 2.2595e+00, -2.3948e+00, -1.0348e+00,  ..., -1.1905e+00,
            1.0141e+00,  1.9017e-01],
          [-2.5599e-01, -7.6329e-01, -8.4512e-01,  ..., -6.7954e-01,
            4.2661e-02, -2.3010e+00]]],


        [[[ 2.7442e-01,  9.7623e-01,  5.9898e-01,  ...,  1.3040e+00,
            8.4461e-01,  5.1795e-02],
          [ 8.1527e-01, -3.5186e-01, -4.8271e-01,  ..., -1.8297e+00,
            1.3346e+00,  1.6173e+00],
          [ 1.4796e+00, -8.5660e-01,  7.6159e-01,  ..., -7.0810e-01,
            1.1739e+00,  6.1792e-01],
          ...,
          [ 7.0955e-01,  1.7442e+00,  9.2600e-01,  ..., -5.2916e-01,
           -1.3001e+00,  9.9632e-02],
          [-2.6512e-01, -5.7514e-01, -2.6014e-01,  ...,  3.7363e-01,
           -5.6361e-01,  3.7424e-01],
          [-1.3173e+00, -1.1163e+00,  1.7742e+00,  ...,  7.9935e-01,
            5.8837e-01, -1.7598e+00]],

         [[-7.2693e-01, -2.0179e+00,  6.1455e-01,  ..., -2.3380e+00,
            6.3247e-01, -2.5540e+00],
          [ 1.0153e+00, -9.3668e-01,  2.8435e-01,  ...,  1.1395e+00,
            6.3682e-01,  2.0614e-01],
          [ 1.9662e+00,  2.3605e-01, -2.6622e-01,  ...,  8.7151e-01,
            5.4224e-01, -3.0728e-01],
          ...,
          [-1.3350e+00,  2.2124e+00, -9.4965e-01,  ..., -6.7353e-01,
            1.5072e+00, -3.6645e-01],
          [ 1.4128e+00, -1.2405e+00, -2.6636e-01,  ...,  5.0329e-01,
           -1.1033e+00,  1.1186e+00],
          [-1.8811e+00, -1.3515e-01, -7.0562e-01,  ...,  4.9362e-01,
           -1.1070e+00, -7.3723e-01]]],


        [[[-2.3215e+00, -2.1423e+00, -2.3897e-01,  ...,  7.4554e-01,
            6.6190e-01, -1.0340e+00],
          [-2.8361e-02,  4.9715e-02,  1.3755e+00,  ...,  1.1650e+00,
            1.2004e+00,  1.0662e+00],
          [ 1.1159e+00, -8.6574e-01, -9.9155e-01,  ...,  1.5112e-01,
            9.4429e-01,  1.2689e-01],
          ...,
          [-1.4188e+00, -2.1728e+00, -1.7168e+00,  ...,  6.1804e-01,
            8.7302e-01,  8.2089e-01],
          [ 1.3301e+00, -3.6718e-01,  2.6221e-01,  ..., -8.1013e-01,
            1.1317e-01,  1.2637e-01],
          [ 1.6883e-01,  1.4842e+00,  3.6500e-01,  ..., -2.2706e-01,
           -1.8070e+00,  1.3049e+00]],

         [[ 1.5154e+00,  3.4086e-01,  6.0442e-01,  ...,  1.1873e+00,
            9.3987e-01,  4.9258e-01],
          [ 9.9329e-01,  8.7204e-01,  1.7857e-01,  ..., -1.3216e+00,
           -7.6842e-01,  2.0396e+00],
          [ 1.0513e+00, -6.3807e-01, -1.2626e+00,  ...,  2.3783e-01,
           -5.7077e-02,  6.8018e-01],
          ...,
          [-3.2656e-01,  4.1442e-01,  5.1361e-01,  ..., -5.1621e-01,
            3.1453e-01,  1.0871e+00],
          [ 6.3166e-01, -9.7626e-02, -6.0655e-01,  ..., -3.5319e-01,
            1.0524e-01,  7.7652e-01],
          [-5.4843e-01,  2.3252e-01, -3.8734e-01,  ...,  4.3472e-01,
           -1.6484e-01, -4.0268e-01]]]], device='cuda:0') torch.Size([4, 2, 128, 32])
initial_cell tensor([[[[ 0.0162,  0.4658,  2.6607,  ...,  0.4830,  0.3463, -1.4122],
          [ 0.3927,  0.0362, -0.0255,  ...,  1.8731, -1.7356,  0.7298],
          [-0.4338, -0.5381,  0.1424,  ...,  0.6456,  0.0215,  0.5112],
          ...,
          [-0.9589,  0.0241, -1.4901,  ..., -0.2497, -0.0846,  0.1904],
          [ 0.3249,  0.1772, -0.7143,  ...,  0.9371,  0.8720, -1.8160],
          [ 0.5562, -1.2281, -1.2004,  ..., -1.1641, -0.4371, -0.2663]],

         [[-0.2769, -0.0483,  0.2510,  ...,  1.9717,  1.0814,  0.2958],
          [-0.3584, -1.6226,  2.3276,  ...,  0.5752,  0.1790,  0.6674],
          [ 0.4352, -0.1263, -0.1943,  ...,  0.2783,  0.1380, -0.3108],
          ...,
          [-0.1605,  0.3611,  0.3433,  ...,  1.0909, -0.3234, -0.2238],
          [ 0.5105,  1.0604, -0.6758,  ...,  0.4234,  1.1968,  0.8628],
          [ 0.2302,  2.9730,  1.2948,  ..., -0.0996,  0.9893, -0.3277]]],


        [[[ 0.7925, -0.6848, -0.6397,  ...,  0.3070, -0.3511, -1.1107],
          [ 2.3483,  0.4626, -0.7211,  ...,  0.3879, -0.1526, -0.2880],
          [ 1.7534,  1.7659, -0.3694,  ..., -1.8874,  0.9685, -0.6310],
          ...,
          [-0.0289,  0.5273,  1.3552,  ...,  0.1717,  0.4210,  1.5238],
          [-0.4223, -0.1215,  1.0763,  ...,  0.0621,  0.6205, -0.5854],
          [ 1.0759, -0.2749,  0.1911,  ...,  0.1367, -0.1886,  0.3477]],

         [[ 0.2049, -0.1971,  0.1187,  ..., -0.6983,  0.3181, -1.5708],
          [-2.1858, -0.2655,  0.8363,  ...,  0.0355, -0.2506, -0.4395],
          [-1.4043,  0.7132,  0.6486,  ..., -0.1063,  1.0009,  0.1408],
          ...,
          [ 1.1446, -2.1649,  1.0915,  ..., -0.0692, -0.0783, -0.1502],
          [ 0.8196,  0.3579,  0.5557,  ...,  0.3796, -0.0086,  0.0868],
          [-1.6074,  1.2869,  0.2376,  ..., -0.9226,  0.3302,  0.4978]]],


        [[[ 0.9091, -0.7214,  0.9682,  ...,  1.2239, -0.7852, -1.7488],
          [-1.7809,  0.3445, -0.2076,  ...,  2.1258, -1.2494, -1.7333],
          [ 0.5220,  0.1935,  0.5047,  ..., -1.4043, -1.4442,  0.9740],
          ...,
          [ 0.7216, -0.5692, -0.9627,  ...,  1.3610, -0.8428,  0.2574],
          [ 0.3034,  0.2264, -0.5040,  ..., -0.2960, -1.5477,  1.4509],
          [ 0.1135, -0.3991, -0.3971,  ..., -1.2368, -0.1539,  0.1323]],

         [[-1.1917, -0.0589,  0.2442,  ..., -0.9598, -2.4811,  0.8717],
          [-0.5209,  0.6096, -0.2198,  ..., -1.7143,  0.8179, -0.9239],
          [-0.0125,  0.4410,  0.3973,  ..., -0.5282,  1.2371, -1.2494],
          ...,
          [-1.4985, -1.2113, -0.1040,  ..., -1.7203, -0.8334, -0.0821],
          [ 0.2100, -0.3614, -1.0155,  ...,  0.2839,  1.0486,  2.0612],
          [-1.7655, -2.3618,  0.6244,  ...,  0.4174,  0.8653,  0.4150]]],


        [[[ 0.4496, -1.3266, -0.2823,  ...,  0.3002, -1.2871, -1.6591],
          [ 1.0390, -1.3148, -0.6646,  ...,  0.2331, -0.0173, -1.2675],
          [ 1.0165, -0.0718,  1.4545,  ...,  0.3816,  0.4863, -2.8250],
          ...,
          [ 0.1520, -0.7029, -1.1636,  ...,  0.9607,  0.3448,  0.4020],
          [ 0.8194, -1.7873,  0.0954,  ..., -0.6558,  1.3939,  1.3986],
          [ 0.7912,  0.8644, -1.5075,  ..., -0.5832,  1.2297,  0.1508]],

         [[-0.3966,  1.9076,  0.7285,  ..., -0.6677,  0.2936, -0.4278],
          [ 1.0458, -2.4702,  0.7267,  ...,  0.6276,  0.6987,  1.1876],
          [ 1.8937,  0.8205, -0.0292,  ...,  0.5487, -1.6826, -0.8002],
          ...,
          [-0.4316, -0.4854,  0.1517,  ...,  0.8080,  0.6103, -0.7812],
          [ 1.9181,  2.2389, -1.0237,  ...,  0.9543,  1.5384, -1.0374],
          [ 1.1431, -1.2421, -0.3429,  ..., -0.8478, -0.0985,  0.2461]]]],
       device='cuda:0') torch.Size([4, 2, 128, 32])
tensor([[[-1.5374, -1.7042, -1.4448,  ...,  0.0626,  0.4992, -0.6696],
         [-0.8662, -0.0074,  0.8310,  ..., -0.2640, -0.7887, -0.0890],
         [-0.2017,  0.9943,  1.4665,  ..., -0.6879,  1.2782, -2.3271],
         ...,
         [ 0.2896, -0.5554, -1.1692,  ..., -1.8597,  1.3504, -0.2124],
         [ 1.2703, -0.1226, -0.6876,  ..., -0.9367, -0.2555, -1.3498],
         [-0.9438,  0.3616,  0.6059,  ..., -0.6325,  0.0329, -1.1326]],

        [[ 1.5357, -0.4228,  0.2045,  ...,  0.1068,  1.0649,  0.2275],
         [ 1.3143, -0.5700,  0.7899,  ..., -1.5428, -1.3736,  0.6779],
         [-0.1757, -0.8608,  2.8561,  ..., -0.0531,  0.3333, -1.2484],
         ...,
         [ 0.0092, -0.5388,  1.6399,  ..., -1.1748,  0.6532,  0.2582],
         [ 0.1511,  1.1824,  1.0127,  ..., -0.7521, -1.7073, -0.2213],
         [ 2.0584, -0.1244,  1.9361,  ...,  0.3235, -1.2107,  0.1226]]],
       device='cuda:0', grad_fn=<SelectBackward>)
tensor([[[-0.3611, -0.5856,  0.3283,  ..., -1.4548,  0.1391, -1.5541],
         [ 0.2078,  0.2348, -0.3449,  ..., -1.7880,  0.2959,  0.3418],
         [ 1.2000,  0.5221, -1.5105,  ..., -0.3445, -0.5002, -0.1151],
         ...,
         [-0.3940, -0.1862, -3.2555,  ..., -0.0531, -0.5301,  0.0224],
         [-1.1192,  0.0392, -1.0623,  ..., -0.0968, -2.1572,  0.8058],
         [ 0.3252,  0.3193,  0.6858,  ..., -1.7940, -1.8319, -1.5734]],

        [[-0.5416, -0.7949, -1.1751,  ..., -0.1463,  0.2339,  0.4268],
         [ 2.4658,  0.0203,  1.0344,  ..., -0.3592, -0.3562, -0.3148],
         [ 0.0596,  1.9594,  0.7633,  ...,  0.0261,  0.4089,  1.3785],
         ...,
         [ 0.8429, -0.4620, -0.0253,  ..., -0.5712, -0.3633, -0.0989],
         [-0.2961, -0.2567,  0.2890,  ...,  0.6169,  0.1014,  0.1537],
         [ 0.0299, -0.0486,  1.0536,  ...,  0.1546, -1.2640, -0.0610]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 2073.585, Val Loss : 8905.974
======> Trajectory Loss : 1672.737, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.812, BelowGroundPenalize Loss : 319.662
===> [Minibatch 16/129].........tensor([[[-1.5374, -1.7042, -1.4448,  ...,  0.0626,  0.4992, -0.6696],
         [-0.8662, -0.0074,  0.8310,  ..., -0.2640, -0.7887, -0.0890],
         [-0.2017,  0.9943,  1.4665,  ..., -0.6879,  1.2782, -2.3271],
         ...,
         [ 0.2896, -0.5554, -1.1692,  ..., -1.8597,  1.3504, -0.2124],
         [ 1.2703, -0.1226, -0.6876,  ..., -0.9367, -0.2555, -1.3498],
         [-0.9438,  0.3616,  0.6059,  ..., -0.6325,  0.0329, -1.1326]],

        [[ 1.5357, -0.4228,  0.2045,  ...,  0.1068,  1.0649,  0.2275],
         [ 1.3143, -0.5700,  0.7899,  ..., -1.5428, -1.3736,  0.6779],
         [-0.1757, -0.8608,  2.8561,  ..., -0.0531,  0.3333, -1.2484],
         ...,
         [ 0.0092, -0.5388,  1.6399,  ..., -1.1748,  0.6532,  0.2582],
         [ 0.1511,  1.1824,  1.0127,  ..., -0.7521, -1.7073, -0.2213],
         [ 2.0584, -0.1244,  1.9361,  ...,  0.3235, -1.2107,  0.1226]]],
       device='cuda:0', grad_fn=<SelectBackward>)
tensor([[[-0.3611, -0.5856,  0.3283,  ..., -1.4548,  0.1391, -1.5541],
         [ 0.2078,  0.2348, -0.3449,  ..., -1.7880,  0.2959,  0.3418],
         [ 1.2000,  0.5221, -1.5105,  ..., -0.3445, -0.5002, -0.1151],
         ...,
         [-0.3940, -0.1862, -3.2555,  ..., -0.0531, -0.5301,  0.0224],
         [-1.1192,  0.0392, -1.0623,  ..., -0.0968, -2.1572,  0.8058],
         [ 0.3252,  0.3193,  0.6858,  ..., -1.7940, -1.8319, -1.5734]],

        [[-0.5416, -0.7949, -1.1751,  ..., -0.1463,  0.2339,  0.4268],
         [ 2.4658,  0.0203,  1.0344,  ..., -0.3592, -0.3562, -0.3148],
         [ 0.0596,  1.9594,  0.7633,  ...,  0.0261,  0.4089,  1.3785],
         ...,
         [ 0.8429, -0.4620, -0.0253,  ..., -0.5712, -0.3633, -0.0989],
         [-0.2961, -0.2567,  0.2890,  ...,  0.6169,  0.1014,  0.1537],
         [ 0.0299, -0.0486,  1.0536,  ...,  0.1546, -1.2640, -0.0610]]],
       device='cuda:0', grad_fn=<SelectBackward>)
initial_hidden tensor([[[[-3.6114e-01, -5.9184e-01,  3.3215e-01,  ..., -1.4612e+00,
            1.4236e-01, -1.5593e+00],
          [ 2.0756e-01,  2.2942e-01, -3.3957e-01,  ..., -1.7918e+00,
            2.9008e-01,  3.3954e-01],
          [ 1.2005e+00,  5.1763e-01, -1.5084e+00,  ..., -3.4745e-01,
           -5.0246e-01, -1.1821e-01],
          ...,
          [-3.9220e-01, -1.9024e-01, -3.2515e+00,  ..., -5.6791e-02,
           -5.2811e-01,  1.8309e-02],
          [-1.1159e+00,  3.3873e-02, -1.0573e+00,  ..., -1.0192e-01,
           -2.1596e+00,  8.0012e-01],
          [ 3.2283e-01,  3.1509e-01,  6.8951e-01,  ..., -1.7978e+00,
           -1.8350e+00, -1.5741e+00]],

         [[-5.4124e-01, -7.9261e-01, -1.1720e+00,  ..., -1.4704e-01,
            2.3420e-01,  4.2366e-01],
          [ 2.4676e+00,  1.8961e-02,  1.0368e+00,  ..., -3.5767e-01,
           -3.5640e-01, -3.1500e-01],
          [ 6.3120e-02,  1.9574e+00,  7.6557e-01,  ...,  2.5781e-02,
            4.1085e-01,  1.3748e+00],
          ...,
          [ 8.4308e-01, -4.6456e-01, -2.3546e-02,  ..., -5.6871e-01,
           -3.6279e-01, -1.0100e-01],
          [-2.9295e-01, -2.5691e-01,  2.8908e-01,  ...,  6.1971e-01,
            1.0496e-01,  1.5036e-01],
          [ 2.9967e-02, -5.0106e-02,  1.0555e+00,  ...,  1.5638e-01,
           -1.2655e+00, -6.2404e-02]]],


        [[[ 5.9894e-01, -1.6288e+00,  7.5705e-01,  ..., -9.3659e-02,
           -2.5604e+00,  3.5075e-01],
          [-4.3100e-01,  4.4499e-01,  3.8107e-01,  ...,  6.7933e-01,
           -2.5505e+00,  2.8005e-01],
          [-1.4052e+00, -4.2579e-01,  1.8097e+00,  ..., -1.5800e+00,
           -2.0763e+00, -1.6740e-01],
          ...,
          [-1.1592e+00,  1.3136e+00, -6.4724e-01,  ...,  6.0007e-01,
           -6.0102e-01, -3.2028e-01],
          [ 1.6620e-01,  1.3436e+00,  5.1027e-01,  ...,  4.2991e-01,
           -5.3145e-02,  1.1245e+00],
          [ 2.1788e+00, -2.2172e-01, -4.9621e-01,  ...,  3.3677e-01,
           -3.6953e-01,  7.3283e-01]],

         [[ 5.2202e-01,  5.6235e-01,  1.4898e+00,  ..., -1.2194e-01,
           -5.6494e-01,  2.0749e+00],
          [-9.4358e-01,  8.0170e-01,  5.7741e-01,  ..., -2.7109e-01,
           -7.3247e-01, -6.0823e-01],
          [ 2.9854e-02,  1.1670e+00, -1.0894e+00,  ...,  6.3522e-01,
            1.2135e+00, -2.2077e-01],
          ...,
          [-1.2907e+00, -2.0502e-03, -7.2557e-01,  ..., -1.6891e+00,
            1.9998e+00, -1.3006e+00],
          [ 2.2586e+00, -2.3984e+00, -1.0370e+00,  ..., -1.1876e+00,
            1.0163e+00,  1.8644e-01],
          [-2.5771e-01, -7.6622e-01, -8.4561e-01,  ..., -6.7801e-01,
            4.3621e-02, -2.3023e+00]]],


        [[[ 2.7329e-01,  9.7828e-01,  6.0182e-01,  ...,  1.3030e+00,
            8.4848e-01,  4.7933e-02],
          [ 8.1878e-01, -3.4860e-01, -4.7841e-01,  ..., -1.8316e+00,
            1.3338e+00,  1.6165e+00],
          [ 1.4797e+00, -8.5533e-01,  7.6088e-01,  ..., -7.0718e-01,
            1.1743e+00,  6.1566e-01],
          ...,
          [ 7.1116e-01,  1.7470e+00,  9.2933e-01,  ..., -5.2628e-01,
           -1.2975e+00,  9.9485e-02],
          [-2.6274e-01, -5.7572e-01, -2.5714e-01,  ...,  3.7679e-01,
           -5.6600e-01,  3.7176e-01],
          [-1.3160e+00, -1.1176e+00,  1.7760e+00,  ...,  8.0097e-01,
            5.9162e-01, -1.7597e+00]],

         [[-7.3025e-01, -2.0200e+00,  6.1158e-01,  ..., -2.3354e+00,
            6.3513e-01, -2.5575e+00],
          [ 1.0139e+00, -9.3781e-01,  2.8405e-01,  ...,  1.1410e+00,
            6.3827e-01,  2.0544e-01],
          [ 1.9659e+00,  2.3627e-01, -2.6754e-01,  ...,  8.7184e-01,
            5.4366e-01, -3.0883e-01],
          ...,
          [-1.3356e+00,  2.2132e+00, -9.5105e-01,  ..., -6.7212e-01,
            1.5090e+00, -3.6787e-01],
          [ 1.4099e+00, -1.2401e+00, -2.6734e-01,  ...,  5.0570e-01,
           -1.1013e+00,  1.1160e+00],
          [-1.8825e+00, -1.3581e-01, -7.0716e-01,  ...,  4.9475e-01,
           -1.1056e+00, -7.3837e-01]]],


        [[[-2.3198e+00, -2.1405e+00, -2.4119e-01,  ...,  7.4754e-01,
            6.6074e-01, -1.0362e+00],
          [-3.0285e-02,  5.2560e-02,  1.3772e+00,  ...,  1.1672e+00,
            1.1978e+00,  1.0636e+00],
          [ 1.1152e+00, -8.6319e-01, -9.9258e-01,  ...,  1.5293e-01,
            9.4218e-01,  1.2395e-01],
          ...,
          [-1.4170e+00, -2.1705e+00, -1.7171e+00,  ...,  6.2061e-01,
            8.7051e-01,  8.1795e-01],
          [ 1.3316e+00, -3.6404e-01,  2.5944e-01,  ..., -8.0869e-01,
            1.1210e-01,  1.2300e-01],
          [ 1.7025e-01,  1.4867e+00,  3.6418e-01,  ..., -2.2959e-01,
           -1.8099e+00,  1.3036e+00]],

         [[ 1.5164e+00,  3.4397e-01,  6.0242e-01,  ...,  1.1897e+00,
            9.4258e-01,  4.9265e-01],
          [ 9.9439e-01,  8.7200e-01,  1.7907e-01,  ..., -1.3223e+00,
           -7.6883e-01,  2.0388e+00],
          [ 1.0535e+00, -6.3626e-01, -1.2635e+00,  ...,  2.3905e-01,
           -5.5902e-02,  6.8049e-01],
          ...,
          [-3.2534e-01,  4.1667e-01,  5.1351e-01,  ..., -5.1695e-01,
            3.1632e-01,  1.0861e+00],
          [ 6.3238e-01, -9.7291e-02, -6.0857e-01,  ..., -3.5399e-01,
            1.0682e-01,  7.7576e-01],
          [-5.4730e-01,  2.3373e-01, -3.8862e-01,  ...,  4.3547e-01,
           -1.6512e-01, -4.0283e-01]]]], device='cuda:0') torch.Size([4, 2, 128, 32])
initial_cell tensor([[[[ 0.0150,  0.4594,  2.6654,  ...,  0.4810,  0.3407, -1.4123],
          [ 0.3913,  0.0341, -0.0201,  ...,  1.8705, -1.7403,  0.7262],
          [-0.4339, -0.5390,  0.1464,  ...,  0.6438,  0.0188,  0.5100],
          ...,
          [-0.9607,  0.0228, -1.4863,  ..., -0.2531, -0.0882,  0.1886],
          [ 0.3217,  0.1733, -0.7102,  ...,  0.9343,  0.8673, -1.8153],
          [ 0.5549, -1.2307, -1.1972,  ..., -1.1644, -0.4411, -0.2665]],

         [[-0.2728, -0.0519,  0.2508,  ...,  1.9718,  1.0848,  0.2925],
          [-0.3581, -1.6256,  2.3283,  ...,  0.5748,  0.1812,  0.6652],
          [ 0.4361, -0.1284, -0.1939,  ...,  0.2777,  0.1403, -0.3121],
          ...,
          [-0.1584,  0.3597,  0.3432,  ...,  1.0914, -0.3198, -0.2264],
          [ 0.5131,  1.0580, -0.6777,  ...,  0.4248,  1.2009,  0.8598],
          [ 0.2305,  2.9721,  1.2948,  ..., -0.1000,  0.9925, -0.3290]]],


        [[[ 0.7932, -0.6843, -0.6361,  ...,  0.3065, -0.3560, -1.1099],
          [ 2.3489,  0.4634, -0.7187,  ...,  0.3897, -0.1563, -0.2873],
          [ 1.7547,  1.7664, -0.3690,  ..., -1.8878,  0.9641, -0.6317],
          ...,
          [-0.0281,  0.5280,  1.3582,  ...,  0.1726,  0.4167,  1.5240],
          [-0.4238, -0.1194,  1.0794,  ...,  0.0643,  0.6160, -0.5828],
          [ 1.0752, -0.2728,  0.1939,  ...,  0.1392, -0.1923,  0.3484]],

         [[ 0.2040, -0.2007,  0.1176,  ..., -0.6961,  0.3221, -1.5743],
          [-2.1866, -0.2659,  0.8369,  ...,  0.0354, -0.2485, -0.4402],
          [-1.4050,  0.7125,  0.6492,  ..., -0.1064,  1.0031,  0.1408],
          ...,
          [ 1.1450, -2.1640,  1.0918,  ..., -0.0685, -0.0760, -0.1509],
          [ 0.8194,  0.3568,  0.5542,  ...,  0.3828, -0.0055,  0.0838],
          [-1.6083,  1.2867,  0.2374,  ..., -0.9225,  0.3324,  0.4976]]],


        [[[ 0.9098, -0.7228,  0.9716,  ...,  1.2276, -0.7883, -1.7474],
          [-1.7801,  0.3435, -0.2031,  ...,  2.1295, -1.2521, -1.7319],
          [ 0.5232,  0.1921,  0.5066,  ..., -1.3998, -1.4471,  0.9755],
          ...,
          [ 0.7223, -0.5700, -0.9592,  ...,  1.3647, -0.8460,  0.2571],
          [ 0.3038,  0.2259, -0.5000,  ..., -0.2916, -1.5512,  1.4531],
          [ 0.1130, -0.4006, -0.3942,  ..., -1.2332, -0.1564,  0.1335]],

         [[-1.1949, -0.0615,  0.2417,  ..., -0.9584, -2.4803,  0.8701],
          [-0.5229,  0.6099, -0.2204,  ..., -1.7140,  0.8200, -0.9251],
          [-0.0131,  0.4406,  0.3972,  ..., -0.5283,  1.2391, -1.2494],
          ...,
          [-1.4981, -1.2096, -0.1051,  ..., -1.7202, -0.8319, -0.0825],
          [ 0.2085, -0.3614, -1.0176,  ...,  0.2853,  1.0516,  2.0603],
          [-1.7670, -2.3618,  0.6234,  ...,  0.4178,  0.8677,  0.4152]]],


        [[[ 0.4491, -1.3279, -0.2803,  ...,  0.3046, -1.2901, -1.6578],
          [ 1.0383, -1.3159, -0.6625,  ...,  0.2368, -0.0213, -1.2658],
          [ 1.0174, -0.0733,  1.4555,  ...,  0.3850,  0.4825, -2.8256],
          ...,
          [ 0.1532, -0.7037, -1.1621,  ...,  0.9639,  0.3412,  0.4020],
          [ 0.8189, -1.7880,  0.0968,  ..., -0.6513,  1.3893,  1.4006],
          [ 0.7909,  0.8627, -1.5058,  ..., -0.5798,  1.2259,  0.1524]],

         [[-0.3980,  1.9096,  0.7261,  ..., -0.6663,  0.2959, -0.4304],
          [ 1.0448, -2.4699,  0.7268,  ...,  0.6297,  0.7006,  1.1882],
          [ 1.8948,  0.8204, -0.0295,  ...,  0.5490, -1.6816, -0.7997],
          ...,
          [-0.4308, -0.4828,  0.1506,  ...,  0.8104,  0.6117, -0.7821],
          [ 1.9178,  2.2407, -1.0266,  ...,  0.9561,  1.5414, -1.0401],
          [ 1.1423, -1.2423, -0.3448,  ..., -0.8476, -0.0966,  0.2463]]]],
       device='cuda:0') torch.Size([4, 2, 128, 32])
tensor([[[-1.5449, -1.7058, -1.4381,  ...,  0.0618,  0.4999, -0.6748],
         [-0.8734, -0.0143,  0.8237,  ..., -0.2575, -0.7948, -0.0959],
         [-0.2071,  0.9887,  1.4749,  ..., -0.6811,  1.2714, -2.3343],
         ...,
         [ 0.2842, -0.5595, -1.1741,  ..., -1.8556,  1.3458, -0.2178],
         [ 1.2662, -0.1288, -0.6904,  ..., -0.9328, -0.2538, -1.3556],
         [-0.9450,  0.3536,  0.6115,  ..., -0.6251,  0.0404, -1.1409]],

        [[ 1.5422, -0.4242,  0.1972,  ...,  0.0993,  1.0581,  0.2309],
         [ 1.3147, -0.5767,  0.7883,  ..., -1.5430, -1.3824,  0.6796],
         [-0.1778, -0.8624,  2.8493,  ..., -0.0572,  0.3235, -1.2411],
         ...,
         [ 0.0129, -0.5373,  1.6348,  ..., -1.1771,  0.6430,  0.2597],
         [ 0.1613,  1.1859,  1.0213,  ..., -0.7484, -1.7173, -0.2239],
         [ 2.0662, -0.1166,  1.9346,  ...,  0.3218, -1.2144,  0.1298]]],
       device='cuda:0', grad_fn=<SelectBackward>)
tensor([[[-0.3611, -0.5918,  0.3321,  ..., -1.4612,  0.1424, -1.5593],
         [ 0.2076,  0.2294, -0.3396,  ..., -1.7918,  0.2901,  0.3395],
         [ 1.2005,  0.5176, -1.5084,  ..., -0.3475, -0.5025, -0.1182],
         ...,
         [-0.3922, -0.1902, -3.2515,  ..., -0.0568, -0.5281,  0.0183],
         [-1.1159,  0.0339, -1.0573,  ..., -0.1019, -2.1596,  0.8001],
         [ 0.3228,  0.3151,  0.6895,  ..., -1.7978, -1.8350, -1.5741]],

        [[-0.5412, -0.7926, -1.1720,  ..., -0.1470,  0.2342,  0.4237],
         [ 2.4676,  0.0190,  1.0368,  ..., -0.3577, -0.3564, -0.3150],
         [ 0.0631,  1.9574,  0.7656,  ...,  0.0258,  0.4108,  1.3748],
         ...,
         [ 0.8431, -0.4646, -0.0235,  ..., -0.5687, -0.3628, -0.1010],
         [-0.2929, -0.2569,  0.2891,  ...,  0.6197,  0.1050,  0.1504],
         [ 0.0300, -0.0501,  1.0555,  ...,  0.1564, -1.2655, -0.0624]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 1965.918, Val Loss : 7945.323
======> Trajectory Loss : 1583.305, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.815, BelowGroundPenalize Loss : 301.065
===> [Minibatch 17/129].........tensor([[[-1.5449, -1.7058, -1.4381,  ...,  0.0618,  0.4999, -0.6748],
         [-0.8734, -0.0143,  0.8237,  ..., -0.2575, -0.7948, -0.0959],
         [-0.2071,  0.9887,  1.4749,  ..., -0.6811,  1.2714, -2.3343],
         ...,
         [ 0.2842, -0.5595, -1.1741,  ..., -1.8556,  1.3458, -0.2178],
         [ 1.2662, -0.1288, -0.6904,  ..., -0.9328, -0.2538, -1.3556],
         [-0.9450,  0.3536,  0.6115,  ..., -0.6251,  0.0404, -1.1409]],

        [[ 1.5422, -0.4242,  0.1972,  ...,  0.0993,  1.0581,  0.2309],
         [ 1.3147, -0.5767,  0.7883,  ..., -1.5430, -1.3824,  0.6796],
         [-0.1778, -0.8624,  2.8493,  ..., -0.0572,  0.3235, -1.2411],
         ...,
         [ 0.0129, -0.5373,  1.6348,  ..., -1.1771,  0.6430,  0.2597],
         [ 0.1613,  1.1859,  1.0213,  ..., -0.7484, -1.7173, -0.2239],
         [ 2.0662, -0.1166,  1.9346,  ...,  0.3218, -1.2144,  0.1298]]],
       device='cuda:0', grad_fn=<SelectBackward>)
tensor([[[-0.3611, -0.5918,  0.3321,  ..., -1.4612,  0.1424, -1.5593],
         [ 0.2076,  0.2294, -0.3396,  ..., -1.7918,  0.2901,  0.3395],
         [ 1.2005,  0.5176, -1.5084,  ..., -0.3475, -0.5025, -0.1182],
         ...,
         [-0.3922, -0.1902, -3.2515,  ..., -0.0568, -0.5281,  0.0183],
         [-1.1159,  0.0339, -1.0573,  ..., -0.1019, -2.1596,  0.8001],
         [ 0.3228,  0.3151,  0.6895,  ..., -1.7978, -1.8350, -1.5741]],

        [[-0.5412, -0.7926, -1.1720,  ..., -0.1470,  0.2342,  0.4237],
         [ 2.4676,  0.0190,  1.0368,  ..., -0.3577, -0.3564, -0.3150],
         [ 0.0631,  1.9574,  0.7656,  ...,  0.0258,  0.4108,  1.3748],
         ...,
         [ 0.8431, -0.4646, -0.0235,  ..., -0.5687, -0.3628, -0.1010],
         [-0.2929, -0.2569,  0.2891,  ...,  0.6197,  0.1050,  0.1504],
         [ 0.0300, -0.0501,  1.0555,  ...,  0.1564, -1.2655, -0.0624]]],
       device='cuda:0', grad_fn=<SelectBackward>)
initial_hidden tensor([[[[-3.6145e-01, -5.9797e-01,  3.3601e-01,  ..., -1.4674e+00,
            1.4525e-01, -1.5646e+00],
          [ 2.0703e-01,  2.2316e-01, -3.3327e-01,  ..., -1.7967e+00,
            2.8357e-01,  3.3627e-01],
          [ 1.2009e+00,  5.1315e-01, -1.5064e+00,  ..., -3.5033e-01,
           -5.0466e-01, -1.2126e-01],
          ...,
          [-3.9102e-01, -1.9430e-01, -3.2474e+00,  ..., -6.0516e-02,
           -5.2635e-01,  1.4056e-02],
          [-1.1128e+00,  2.8570e-02, -1.0526e+00,  ..., -1.0688e-01,
           -2.1623e+00,  7.9456e-01],
          [ 3.2008e-01,  3.0992e-01,  6.9391e-01,  ..., -1.8021e+00,
           -1.8383e+00, -1.5768e+00]],

         [[-5.4071e-01, -7.9048e-01, -1.1692e+00,  ..., -1.4771e-01,
            2.3442e-01,  4.2077e-01],
          [ 2.4701e+00,  1.7127e-02,  1.0397e+00,  ..., -3.5625e-01,
           -3.5662e-01, -3.1553e-01],
          [ 6.6556e-02,  1.9554e+00,  7.6774e-01,  ...,  2.5495e-02,
            4.1271e-01,  1.3712e+00],
          ...,
          [ 8.4334e-01, -4.6739e-01, -2.1832e-02,  ..., -5.6627e-01,
           -3.6225e-01, -1.0324e-01],
          [-2.8989e-01, -2.5735e-01,  2.8888e-01,  ...,  6.2234e-01,
            1.0862e-01,  1.4708e-01],
          [ 3.0004e-02, -5.2690e-02,  1.0577e+00,  ...,  1.5809e-01,
           -1.2669e+00, -6.4248e-02]]],


        [[[ 6.0160e-01, -1.6245e+00,  7.5350e-01,  ..., -9.7074e-02,
           -2.5647e+00,  3.4782e-01],
          [-4.2876e-01,  4.4860e-01,  3.7961e-01,  ...,  6.7457e-01,
           -2.5526e+00,  2.7921e-01],
          [-1.4029e+00, -4.2321e-01,  1.8075e+00,  ..., -1.5837e+00,
           -2.0776e+00, -1.6745e-01],
          ...,
          [-1.1561e+00,  1.3171e+00, -6.4783e-01,  ...,  5.9690e-01,
           -6.0406e-01, -3.1991e-01],
          [ 1.6951e-01,  1.3470e+00,  5.0794e-01,  ...,  4.2620e-01,
           -5.6364e-02,  1.1223e+00],
          [ 2.1781e+00, -2.1802e-01, -4.9678e-01,  ...,  3.3291e-01,
           -3.7095e-01,  7.3156e-01]],

         [[ 5.2117e-01,  5.6314e-01,  1.4876e+00,  ..., -1.1946e-01,
           -5.6142e-01,  2.0736e+00],
          [-9.4476e-01,  8.0120e-01,  5.7499e-01,  ..., -2.6625e-01,
           -7.2976e-01, -6.1009e-01],
          [ 2.8620e-02,  1.1663e+00, -1.0906e+00,  ...,  6.3704e-01,
            1.2144e+00, -2.2219e-01],
          ...,
          [-1.2922e+00, -2.9500e-03, -7.2524e-01,  ..., -1.6879e+00,
            2.0009e+00, -1.3022e+00],
          [ 2.2577e+00, -2.4020e+00, -1.0393e+00,  ..., -1.1847e+00,
            1.0187e+00,  1.8273e-01],
          [-2.5948e-01, -7.6969e-01, -8.4626e-01,  ..., -6.7618e-01,
            4.4865e-02, -2.3041e+00]]],


        [[[ 2.7229e-01,  9.8021e-01,  6.0441e-01,  ...,  1.3020e+00,
            8.5210e-01,  4.4327e-02],
          [ 8.2212e-01, -3.4544e-01, -4.7315e-01,  ..., -1.8325e+00,
            1.3327e+00,  1.6138e+00],
          [ 1.4798e+00, -8.5416e-01,  7.6023e-01,  ..., -7.0631e-01,
            1.1747e+00,  6.1354e-01],
          ...,
          [ 7.1251e-01,  1.7496e+00,  9.3239e-01,  ..., -5.2355e-01,
           -1.2950e+00,  9.9242e-02],
          [-2.6056e-01, -5.7623e-01, -2.5436e-01,  ...,  3.7984e-01,
           -5.6809e-01,  3.6912e-01],
          [-1.3147e+00, -1.1188e+00,  1.7776e+00,  ...,  8.0250e-01,
            5.9476e-01, -1.7598e+00]],

         [[-7.3335e-01, -2.0220e+00,  6.0880e-01,  ..., -2.3331e+00,
            6.3761e-01, -2.5607e+00],
          [ 1.0126e+00, -9.3926e-01,  2.8375e-01,  ...,  1.1428e+00,
            6.4001e-01,  2.0442e-01],
          [ 1.9656e+00,  2.3640e-01, -2.6875e-01,  ...,  8.7215e-01,
            5.4502e-01, -3.1029e-01],
          ...,
          [-1.3363e+00,  2.2137e+00, -9.5243e-01,  ..., -6.7059e-01,
            1.5108e+00, -3.6935e-01],
          [ 1.4071e+00, -1.2397e+00, -2.6825e-01,  ...,  5.0811e-01,
           -1.0995e+00,  1.1135e+00],
          [-1.8840e+00, -1.3656e-01, -7.0846e-01,  ...,  4.9600e-01,
           -1.1041e+00, -7.3972e-01]]],


        [[[-2.3182e+00, -2.1389e+00, -2.4321e-01,  ...,  7.4936e-01,
            6.5968e-01, -1.0381e+00],
          [-3.1742e-02,  5.5454e-02,  1.3792e+00,  ...,  1.1694e+00,
            1.1953e+00,  1.0609e+00],
          [ 1.1145e+00, -8.6089e-01, -9.9352e-01,  ...,  1.5459e-01,
            9.4027e-01,  1.2128e-01],
          ...,
          [-1.4152e+00, -2.1686e+00, -1.7170e+00,  ...,  6.2296e-01,
            8.6818e-01,  8.1527e-01],
          [ 1.3329e+00, -3.6119e-01,  2.5693e-01,  ..., -8.0736e-01,
            1.1114e-01,  1.1991e-01],
          [ 1.7160e-01,  1.4888e+00,  3.6349e-01,  ..., -2.3201e-01,
           -1.8128e+00,  1.3024e+00]],

         [[ 1.5172e+00,  3.4682e-01,  6.0054e-01,  ...,  1.1918e+00,
            9.4507e-01,  4.9270e-01],
          [ 9.9541e-01,  8.7206e-01,  1.7943e-01,  ..., -1.3230e+00,
           -7.6908e-01,  2.0380e+00],
          [ 1.0555e+00, -6.3461e-01, -1.2644e+00,  ...,  2.4016e-01,
           -5.4831e-02,  6.8076e-01],
          ...,
          [-3.2420e-01,  4.1875e-01,  5.1336e-01,  ..., -5.1761e-01,
            3.1798e-01,  1.0851e+00],
          [ 6.3306e-01, -9.7004e-02, -6.1046e-01,  ..., -3.5464e-01,
            1.0828e-01,  7.7502e-01],
          [-5.4627e-01,  2.3497e-01, -3.8995e-01,  ...,  4.3618e-01,
           -1.6530e-01, -4.0289e-01]]]], device='cuda:0') torch.Size([4, 2, 128, 32])
initial_cell tensor([[[[ 1.3833e-02,  4.5339e-01,  2.6699e+00,  ...,  4.7890e-01,
            3.3549e-01, -1.4128e+00],
          [ 3.8934e-01,  3.1951e-02, -1.3610e-02,  ...,  1.8668e+00,
           -1.7451e+00,  7.2156e-01],
          [-4.3400e-01, -5.3981e-01,  1.5011e-01,  ...,  6.4212e-01,
            1.6337e-02,  5.0871e-01],
          ...,
          [-9.6240e-01,  2.1473e-02, -1.4825e+00,  ..., -2.5640e-01,
           -9.1788e-02,  1.8595e-01],
          [ 3.1856e-01,  1.6964e-01, -7.0622e-01,  ...,  9.3159e-01,
            8.6284e-01, -1.8149e+00],
          [ 5.5366e-01, -1.2339e+00, -1.1939e+00,  ..., -1.1648e+00,
           -4.4521e-01, -2.6737e-01]],

         [[-2.6892e-01, -5.5194e-02,  2.5056e-01,  ...,  1.9718e+00,
            1.0878e+00,  2.8948e-01],
          [-3.5730e-01, -1.6299e+00,  2.3288e+00,  ...,  5.7441e-01,
            1.8401e-01,  6.6219e-01],
          [ 4.3682e-01, -1.3041e-01, -1.9351e-01,  ...,  2.7723e-01,
            1.4254e-01, -3.1330e-01],
          ...,
          [-1.5630e-01,  3.5789e-01,  3.4308e-01,  ...,  1.0919e+00,
           -3.1606e-01, -2.2912e-01],
          [ 5.1547e-01,  1.0556e+00, -6.7970e-01,  ...,  4.2606e-01,
            1.2050e+00,  8.5694e-01],
          [ 2.3090e-01,  2.9706e+00,  1.2947e+00,  ..., -1.0042e-01,
            9.9636e-01, -3.3061e-01]]],


        [[[ 7.9386e-01, -6.8392e-01, -6.3270e-01,  ...,  3.0612e-01,
           -3.6053e-01, -1.1091e+00],
          [ 2.3495e+00,  4.6452e-01, -7.1590e-01,  ...,  3.9140e-01,
           -1.6071e-01, -2.8677e-01],
          [ 1.7558e+00,  1.7670e+00, -3.6861e-01,  ..., -1.8882e+00,
            9.6004e-01, -6.3226e-01],
          ...,
          [-2.7341e-02,  5.2860e-01,  1.3609e+00,  ...,  1.7358e-01,
            4.1255e-01,  1.5242e+00],
          [-4.2507e-01, -1.1743e-01,  1.0822e+00,  ...,  6.6389e-02,
            6.1165e-01, -5.8049e-01],
          [ 1.0746e+00, -2.7080e-01,  1.9646e-01,  ...,  1.4181e-01,
           -1.9603e-01,  3.4892e-01]],

         [[ 2.0304e-01, -2.0425e-01,  1.1653e-01,  ..., -6.9402e-01,
            3.2585e-01, -1.5776e+00],
          [-2.1875e+00, -2.6739e-01,  8.3728e-01,  ...,  3.5483e-02,
           -2.4610e-01, -4.4175e-01],
          [-1.4056e+00,  7.1189e-01,  6.4970e-01,  ..., -1.0649e-01,
            1.0051e+00,  1.4072e-01],
          ...,
          [ 1.1454e+00, -2.1634e+00,  1.0920e+00,  ..., -6.7780e-02,
           -7.3594e-02, -1.5166e-01],
          [ 8.1916e-01,  3.5571e-01,  5.5280e-01,  ...,  3.8587e-01,
           -2.5012e-03,  8.0898e-02],
          [-1.6091e+00,  1.2863e+00,  2.3702e-01,  ..., -9.2218e-01,
            3.3485e-01,  4.9707e-01]]],


        [[[ 9.1050e-01, -7.2405e-01,  9.7466e-01,  ...,  1.2310e+00,
           -7.9122e-01, -1.7462e+00],
          [-1.7794e+00,  3.4252e-01, -1.9769e-01,  ...,  2.1334e+00,
           -1.2547e+00, -1.7308e+00],
          [ 5.2426e-01,  1.9081e-01,  5.0838e-01,  ..., -1.3954e+00,
           -1.4497e+00,  9.7686e-01],
          ...,
          [ 7.2285e-01, -5.7065e-01, -9.5571e-01,  ...,  1.3681e+00,
           -8.4897e-01,  2.5676e-01],
          [ 3.0409e-01,  2.2546e-01, -4.9626e-01,  ..., -2.8740e-01,
           -1.5544e+00,  1.4551e+00],
          [ 1.1246e-01, -4.0194e-01, -3.9136e-01,  ..., -1.2293e+00,
           -1.5883e-01,  1.3457e-01]],

         [[-1.1978e+00, -6.4107e-02,  2.3946e-01,  ..., -9.5704e-01,
           -2.4795e+00,  8.6869e-01],
          [-5.2530e-01,  6.0960e-01, -2.2131e-01,  ..., -1.7135e+00,
            8.2251e-01, -9.2700e-01],
          [-1.3671e-02,  4.4026e-01,  3.9715e-01,  ..., -5.2834e-01,
            1.2411e+00, -1.2495e+00],
          ...,
          [-1.4980e+00, -1.2082e+00, -1.0623e-01,  ..., -1.7200e+00,
           -8.3039e-01, -8.3079e-02],
          [ 2.0712e-01, -3.6138e-01, -1.0195e+00,  ...,  2.8662e-01,
            1.0545e+00,  2.0595e+00],
          [-1.7689e+00, -2.3624e+00,  6.2235e-01,  ...,  4.1848e-01,
            8.7023e-01,  4.1528e-01]]],


        [[[ 4.4867e-01, -1.3290e+00, -2.7847e-01,  ...,  3.0879e-01,
           -1.2928e+00, -1.6567e+00],
          [ 1.0381e+00, -1.3170e+00, -6.6055e-01,  ...,  2.4046e-01,
           -2.5495e-02, -1.2644e+00],
          [ 1.0182e+00, -7.4599e-02,  1.4564e+00,  ...,  3.8810e-01,
            4.7893e-01, -2.8262e+00],
          ...,
          [ 1.5445e-01, -7.0442e-01, -1.1607e+00,  ...,  9.6697e-01,
            3.3784e-01,  4.0196e-01],
          [ 8.1847e-01, -1.7887e+00,  9.7983e-02,  ..., -6.4716e-01,
            1.3850e+00,  1.4024e+00],
          [ 7.9079e-01,  8.6123e-01, -1.5043e+00,  ..., -5.7648e-01,
            1.2220e+00,  1.5371e-01]],

         [[-3.9946e-01,  1.9113e+00,  7.2395e-01,  ..., -6.6497e-01,
            2.9815e-01, -4.3283e-01],
          [ 1.0435e+00, -2.4697e+00,  7.2672e-01,  ...,  6.3206e-01,
            7.0312e-01,  1.1886e+00],
          [ 1.8958e+00,  8.2037e-01, -2.9742e-02,  ...,  5.4933e-01,
           -1.6807e+00, -7.9922e-01],
          ...,
          [-4.3046e-01, -4.8053e-01,  1.4946e-01,  ...,  8.1271e-01,
            6.1332e-01, -7.8315e-01],
          [ 1.9174e+00,  2.2423e+00, -1.0293e+00,  ...,  9.5785e-01,
            1.5444e+00, -1.0426e+00],
          [ 1.1416e+00, -1.2426e+00, -3.4669e-01,  ..., -8.4737e-01,
           -9.4527e-02,  2.4640e-01]]]], device='cuda:0') torch.Size([4, 2, 128, 32])
tensor([[[-1.5517, -1.7074, -1.4321,  ...,  0.0610,  0.5004, -0.6794],
         [-0.8799, -0.0207,  0.8169,  ..., -0.2517, -0.8002, -0.1021],
         [-0.2082,  0.9816,  1.4838,  ..., -0.6735,  1.2639, -2.3424],
         ...,
         [ 0.2774, -0.5581, -1.1800,  ..., -1.8568,  1.3397, -0.2232],
         [ 1.2637, -0.1346, -0.6938,  ..., -0.9291, -0.2538, -1.3609],
         [-0.9497,  0.3449,  0.6096,  ..., -0.6170,  0.0486, -1.1496]],

        [[ 1.5480, -0.4235,  0.1889,  ...,  0.0918,  1.0504,  0.2363],
         [ 1.3149, -0.5828,  0.7854,  ..., -1.5421, -1.3906,  0.6834],
         [-0.1803, -0.8623,  2.8414,  ..., -0.0624,  0.3135, -1.2329],
         ...,
         [ 0.0175, -0.5342,  1.6284,  ..., -1.1784,  0.6328,  0.2641],
         [ 0.1717,  1.1913,  1.0301,  ..., -0.7434, -1.7276, -0.2246],
         [ 2.0742, -0.1081,  1.9315,  ...,  0.3207, -1.2187,  0.1375]]],
       device='cuda:0', grad_fn=<SelectBackward>)
tensor([[[-0.3614, -0.5980,  0.3360,  ..., -1.4674,  0.1453, -1.5646],
         [ 0.2070,  0.2232, -0.3333,  ..., -1.7967,  0.2836,  0.3363],
         [ 1.2009,  0.5131, -1.5064,  ..., -0.3503, -0.5047, -0.1213],
         ...,
         [-0.3910, -0.1943, -3.2474,  ..., -0.0605, -0.5264,  0.0141],
         [-1.1128,  0.0286, -1.0526,  ..., -0.1069, -2.1623,  0.7946],
         [ 0.3201,  0.3099,  0.6939,  ..., -1.8021, -1.8383, -1.5768]],

        [[-0.5407, -0.7905, -1.1692,  ..., -0.1477,  0.2344,  0.4208],
         [ 2.4701,  0.0171,  1.0397,  ..., -0.3563, -0.3566, -0.3155],
         [ 0.0666,  1.9554,  0.7677,  ...,  0.0255,  0.4127,  1.3712],
         ...,
         [ 0.8433, -0.4674, -0.0218,  ..., -0.5663, -0.3622, -0.1032],
         [-0.2899, -0.2573,  0.2889,  ...,  0.6223,  0.1086,  0.1471],
         [ 0.0300, -0.0527,  1.0577,  ...,  0.1581, -1.2669, -0.0642]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 1635.963, Val Loss : 7009.701
======> Trajectory Loss : 1332.636, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.773, BelowGroundPenalize Loss : 225.979
===> [Minibatch 18/129].........tensor([[[-1.5517, -1.7074, -1.4321,  ...,  0.0610,  0.5004, -0.6794],
         [-0.8799, -0.0207,  0.8169,  ..., -0.2517, -0.8002, -0.1021],
         [-0.2082,  0.9816,  1.4838,  ..., -0.6735,  1.2639, -2.3424],
         ...,
         [ 0.2774, -0.5581, -1.1800,  ..., -1.8568,  1.3397, -0.2232],
         [ 1.2637, -0.1346, -0.6938,  ..., -0.9291, -0.2538, -1.3609],
         [-0.9497,  0.3449,  0.6096,  ..., -0.6170,  0.0486, -1.1496]],

        [[ 1.5480, -0.4235,  0.1889,  ...,  0.0918,  1.0504,  0.2363],
         [ 1.3149, -0.5828,  0.7854,  ..., -1.5421, -1.3906,  0.6834],
         [-0.1803, -0.8623,  2.8414,  ..., -0.0624,  0.3135, -1.2329],
         ...,
         [ 0.0175, -0.5342,  1.6284,  ..., -1.1784,  0.6328,  0.2641],
         [ 0.1717,  1.1913,  1.0301,  ..., -0.7434, -1.7276, -0.2246],
         [ 2.0742, -0.1081,  1.9315,  ...,  0.3207, -1.2187,  0.1375]]],
       device='cuda:0', grad_fn=<SelectBackward>)
tensor([[[-0.3614, -0.5980,  0.3360,  ..., -1.4674,  0.1453, -1.5646],
         [ 0.2070,  0.2232, -0.3333,  ..., -1.7967,  0.2836,  0.3363],
         [ 1.2009,  0.5131, -1.5064,  ..., -0.3503, -0.5047, -0.1213],
         ...,
         [-0.3910, -0.1943, -3.2474,  ..., -0.0605, -0.5264,  0.0141],
         [-1.1128,  0.0286, -1.0526,  ..., -0.1069, -2.1623,  0.7946],
         [ 0.3201,  0.3099,  0.6939,  ..., -1.8021, -1.8383, -1.5768]],

        [[-0.5407, -0.7905, -1.1692,  ..., -0.1477,  0.2344,  0.4208],
         [ 2.4701,  0.0171,  1.0397,  ..., -0.3563, -0.3566, -0.3155],
         [ 0.0666,  1.9554,  0.7677,  ...,  0.0255,  0.4127,  1.3712],
         ...,
         [ 0.8433, -0.4674, -0.0218,  ..., -0.5663, -0.3622, -0.1032],
         [-0.2899, -0.2573,  0.2889,  ...,  0.6223,  0.1086,  0.1471],
         [ 0.0300, -0.0527,  1.0577,  ...,  0.1581, -1.2669, -0.0642]]],
       device='cuda:0', grad_fn=<SelectBackward>)
initial_hidden tensor([[[[-0.3620, -0.6044,  0.3402,  ..., -1.4740,  0.1478, -1.5704],
          [ 0.2057,  0.2160, -0.3264,  ..., -1.8020,  0.2763,  0.3320],
          [ 1.2013,  0.5086, -1.5044,  ..., -0.3532, -0.5069, -0.1243],
          ...,
          [-0.3907, -0.1986, -3.2431,  ..., -0.0645, -0.5251,  0.0094],
          [-1.1097,  0.0228, -1.0473,  ..., -0.1120, -2.1656,  0.7885],
          [ 0.3168,  0.3036,  0.6990,  ..., -1.8072, -1.8422, -1.5811]],

         [[-0.5398, -0.7883, -1.1664,  ..., -0.1484,  0.2346,  0.4180],
          [ 2.4731,  0.0149,  1.0430,  ..., -0.3549, -0.3567, -0.3164],
          [ 0.0699,  1.9535,  0.7698,  ...,  0.0252,  0.4145,  1.3679],
          ...,
          [ 0.8437, -0.4708, -0.0202,  ..., -0.5638, -0.3616, -0.1059],
          [-0.2866, -0.2585,  0.2881,  ...,  0.6250,  0.1130,  0.1434],
          [ 0.0300, -0.0567,  1.0603,  ...,  0.1597, -1.2684, -0.0669]]],


        [[[ 0.6040, -1.6204,  0.7501,  ..., -0.1003, -2.5689,  0.3451],
          [-0.4266,  0.4522,  0.3783,  ...,  0.6696, -2.5549,  0.2786],
          [-1.4008, -0.4208,  1.8055,  ..., -1.5872, -2.0788, -0.1674],
          ...,
          [-1.1532,  1.3206, -0.6483,  ...,  0.5939, -0.6072, -0.3196],
          [ 0.1727,  1.3503,  0.5058,  ...,  0.4225, -0.0598,  1.1203],
          [ 2.1777, -0.2142, -0.4969,  ...,  0.3287, -0.3740,  0.7308]],

         [[ 0.5203,  0.5637,  1.4855,  ..., -0.1170, -0.5578,  2.0723],
          [-0.9462,  0.8003,  0.5721,  ..., -0.2608, -0.7264, -0.6126],
          [ 0.0275,  1.1656, -1.0917,  ...,  0.6388,  1.2153, -0.2236],
          ...,
          [-1.2938, -0.0040, -0.7252,  ..., -1.6863,  2.0024, -1.3040],
          [ 2.2567, -2.4059, -1.0418,  ..., -1.1816,  1.0215,  0.1787],
          [-0.2614, -0.7740, -0.8471,  ..., -0.6739,  0.0466, -2.3064]]],


        [[[ 0.2714,  0.9820,  0.6068,  ...,  1.3011,  0.8556,  0.0408],
          [ 0.8250, -0.3424, -0.4672,  ..., -1.8327,  1.3316,  1.6097],
          [ 1.4798, -0.8531,  0.7596,  ..., -0.7055,  1.1751,  0.6116],
          ...,
          [ 0.7136,  1.7518,  0.9352,  ..., -0.5209, -1.2926,  0.0989],
          [-0.2586, -0.5767, -0.2517,  ...,  0.3829, -0.5697,  0.3661],
          [-1.3133, -1.1200,  1.7787,  ...,  0.8039,  0.5978, -1.7600]],

         [[-0.7364, -2.0241,  0.6061,  ..., -2.3308,  0.6400, -2.5640],
          [ 1.0114, -0.9409,  0.2834,  ...,  1.1447,  0.6419,  0.2032],
          [ 1.9653,  0.2365, -0.2699,  ...,  0.8724,  0.5463, -0.3117],
          ...,
          [-1.3375,  2.2141, -0.9539,  ..., -0.6688,  1.5127, -0.3710],
          [ 1.4043, -1.2394, -0.2691,  ...,  0.5107, -1.0977,  1.1110],
          [-1.8858, -0.1374, -0.7095,  ...,  0.4975, -1.1025, -0.7413]]],


        [[[-2.3167, -2.1375, -0.2451,  ...,  0.7510,  0.6587, -1.0400],
          [-0.0329,  0.0583,  1.3810,  ...,  1.1714,  1.1931,  1.0583],
          [ 1.1139, -0.8588, -0.9944,  ...,  0.1561,  0.9385,  0.1189],
          ...,
          [-1.4134, -2.1668, -1.7167,  ...,  0.6251,  0.8660,  0.8128],
          [ 1.3341, -0.3586,  0.2547,  ..., -0.8062,  0.1103,  0.1170],
          [ 0.1728,  1.4906,  0.3629,  ..., -0.2344, -1.8154,  1.3014]],

         [[ 1.5180,  0.3495,  0.5987,  ...,  1.1939,  0.9474,  0.4927],
          [ 0.9964,  0.8722,  0.1797,  ..., -1.3236, -0.7692,  2.0373],
          [ 1.0574, -0.6331, -1.2652,  ...,  0.2412, -0.0539,  0.6810],
          ...,
          [-0.3231,  0.4207,  0.5132,  ..., -0.5182,  0.3196,  1.0841],
          [ 0.6338, -0.0968, -0.6123,  ..., -0.3551,  0.1097,  0.7743],
          [-0.5454,  0.2363, -0.3914,  ...,  0.4369, -0.1653, -0.4028]]]],
       device='cuda:0') torch.Size([4, 2, 128, 32])
initial_cell tensor([[[[ 1.2722e-02,  4.4712e-01,  2.6745e+00,  ...,  4.7656e-01,
            3.3007e-01, -1.4139e+00],
          [ 3.8740e-01,  2.9206e-02, -6.7808e-03,  ...,  1.8630e+00,
           -1.7506e+00,  7.1621e-01],
          [-4.3412e-01, -5.4061e-01,  1.5370e-01,  ...,  6.4048e-01,
            1.3986e-02,  5.0740e-01],
          ...,
          [-9.6400e-01,  1.9787e-02, -1.4785e+00,  ..., -2.5964e-01,
           -9.5472e-02,  1.8215e-01],
          [ 3.1542e-01,  1.6607e-01, -7.0207e-01,  ...,  9.2797e-01,
            8.5864e-01, -1.8152e+00],
          [ 5.5240e-01, -1.2376e+00, -1.1904e+00,  ..., -1.1652e+00,
           -4.4997e-01, -2.6860e-01]],

         [[-2.6508e-01, -5.8437e-02,  2.5027e-01,  ...,  1.9718e+00,
            1.0908e+00,  2.8651e-01],
          [-3.5625e-01, -1.6351e+00,  2.3292e+00,  ...,  5.7403e-01,
            1.8736e-01,  6.5873e-01],
          [ 4.3753e-01, -1.3233e-01, -1.9322e-01,  ...,  2.7678e-01,
            1.4462e-01, -3.1450e-01],
          ...,
          [-1.5428e-01,  3.5542e-01,  3.4271e-01,  ...,  1.0925e+00,
           -3.1196e-01, -2.3203e-01],
          [ 5.1770e-01,  1.0530e+00, -6.8177e-01,  ...,  4.2718e-01,
            1.2095e+00,  8.5410e-01],
          [ 2.3132e-01,  2.9687e+00,  1.2944e+00,  ..., -1.0082e-01,
            1.0012e+00, -3.3257e-01]]],


        [[[ 7.9447e-01, -6.8353e-01, -6.2959e-01,  ...,  3.0591e-01,
           -3.6499e-01, -1.1084e+00],
          [ 2.3501e+00,  4.6567e-01, -7.1317e-01,  ...,  3.9337e-01,
           -1.6535e-01, -2.8629e-01],
          [ 1.7568e+00,  1.7675e+00, -3.6827e-01,  ..., -1.8885e+00,
            9.5621e-01, -6.3280e-01],
          ...,
          [-2.6661e-02,  5.2917e-01,  1.3634e+00,  ...,  1.7498e-01,
            4.0829e-01,  1.5243e+00],
          [-4.2619e-01, -1.1558e-01,  1.0850e+00,  ...,  6.8386e-02,
            6.0729e-01, -5.7841e-01],
          [ 1.0741e+00, -2.6891e-01,  1.9887e-01,  ...,  1.4464e-01,
           -1.9987e-01,  3.4942e-01]],

         [[ 2.0216e-01, -2.0790e-01,  1.1547e-01,  ..., -6.9196e-01,
            3.2967e-01, -1.5810e+00],
          [-2.1883e+00, -2.6950e-01,  8.3752e-01,  ...,  3.5767e-02,
           -2.4348e-01, -4.4376e-01],
          [-1.4062e+00,  7.1129e-01,  6.5016e-01,  ..., -1.0653e-01,
            1.0071e+00,  1.4063e-01],
          ...,
          [ 1.1457e+00, -2.1632e+00,  1.0921e+00,  ..., -6.6990e-02,
           -7.0881e-02, -1.5259e-01],
          [ 8.1891e-01,  3.5448e-01,  5.5138e-01,  ...,  3.8892e-01,
            5.9717e-04,  7.7923e-02],
          [-1.6100e+00,  1.2857e+00,  2.3648e-01,  ..., -9.2172e-01,
            3.3775e-01,  4.9622e-01]]],


        [[[ 9.1111e-01, -7.2520e-01,  9.7760e-01,  ...,  1.2343e+00,
           -7.9396e-01, -1.7451e+00],
          [-1.7788e+00,  3.4168e-01, -1.9192e-01,  ...,  2.1371e+00,
           -1.2572e+00, -1.7298e+00],
          [ 5.2524e-01,  1.8965e-01,  5.1004e-01,  ..., -1.3913e+00,
           -1.4521e+00,  9.7811e-01],
          ...,
          [ 7.2339e-01, -5.7126e-01, -9.5213e-01,  ...,  1.3712e+00,
           -8.5173e-01,  2.5647e-01],
          [ 3.0439e-01,  2.2507e-01, -4.9246e-01,  ..., -2.8319e-01,
           -1.5573e+00,  1.4568e+00],
          [ 1.1203e-01, -4.0314e-01, -3.8855e-01,  ..., -1.2249e+00,
           -1.6115e-01,  1.3553e-01]],

         [[-1.2008e+00, -6.6903e-02,  2.3733e-01,  ..., -9.5576e-01,
           -2.4788e+00,  8.6733e-01],
          [-5.2796e-01,  6.0893e-01, -2.2230e-01,  ..., -1.7128e+00,
            8.2533e-01, -9.2931e-01],
          [-1.4249e-02,  4.3992e-01,  3.9705e-01,  ..., -5.2837e-01,
            1.2429e+00, -1.2496e+00],
          ...,
          [-1.4983e+00, -1.2072e+00, -1.0737e-01,  ..., -1.7198e+00,
           -8.2893e-01, -8.3786e-02],
          [ 2.0567e-01, -3.6161e-01, -1.0214e+00,  ...,  2.8792e-01,
            1.0575e+00,  2.0587e+00],
          [-1.7714e+00, -2.3637e+00,  6.2127e-01,  ...,  4.1943e-01,
            8.7320e-01,  4.1525e-01]]],


        [[[ 4.4844e-01, -1.3301e+00, -2.7680e-01,  ...,  3.1284e-01,
           -1.2953e+00, -1.6558e+00],
          [ 1.0381e+00, -1.3179e+00, -6.5875e-01,  ...,  2.4409e-01,
           -2.9894e-02, -1.2631e+00],
          [ 1.0190e+00, -7.5803e-02,  1.4572e+00,  ...,  3.9094e-01,
            4.7565e-01, -2.8267e+00],
          ...,
          [ 1.5568e-01, -7.0509e-01, -1.1595e+00,  ...,  9.6978e-01,
            3.3455e-01,  4.0191e-01],
          [ 8.1823e-01, -1.7893e+00,  9.9105e-02,  ..., -6.4297e-01,
            1.3806e+00,  1.4040e+00],
          [ 7.9081e-01,  8.5988e-01, -1.5028e+00,  ..., -5.7305e-01,
            1.2178e+00,  1.5486e-01]],

         [[-4.0116e-01,  1.9128e+00,  7.2193e-01,  ..., -6.6371e-01,
            3.0037e-01, -4.3518e-01],
          [ 1.0422e+00, -2.4695e+00,  7.2658e-01,  ...,  6.3465e-01,
            7.0598e-01,  1.1890e+00],
          [ 1.8967e+00,  8.2029e-01, -2.9998e-02,  ...,  5.4964e-01,
           -1.6798e+00, -7.9883e-01],
          ...,
          [-4.3069e-01, -4.7844e-01,  1.4836e-01,  ...,  8.1488e-01,
            6.1544e-01, -7.8442e-01],
          [ 1.9170e+00,  2.2438e+00, -1.0321e+00,  ...,  9.5957e-01,
            1.5477e+00, -1.0452e+00],
          [ 1.1408e+00, -1.2428e+00, -3.4875e-01,  ..., -8.4703e-01,
           -9.2172e-02,  2.4631e-01]]]], device='cuda:0') torch.Size([4, 2, 128, 32])
tensor([[[-1.5580, -1.7089, -1.4267,  ...,  0.0604,  0.5007, -0.6837],
         [-0.8872, -0.0282,  0.8094,  ..., -0.2445, -0.8070, -0.1093],
         [-0.2093,  0.9753,  1.4918,  ..., -0.6668,  1.2571, -2.3498],
         ...,
         [ 0.2694, -0.5541, -1.1872,  ..., -1.8601,  1.3324, -0.2288],
         [ 1.2607, -0.1397, -0.6980,  ..., -0.9275, -0.2533, -1.3655],
         [-0.9540,  0.3369,  0.6078,  ..., -0.6096,  0.0560, -1.1577]],

        [[ 1.5530, -0.4211,  0.1800,  ...,  0.0843,  1.0421,  0.2430],
         [ 1.3157, -0.5884,  0.7818,  ..., -1.5403, -1.3980,  0.6889],
         [-0.1822, -0.8607,  2.8328,  ..., -0.0683,  0.3033, -1.2240],
         ...,
         [ 0.0234, -0.5296,  1.6210,  ..., -1.1788,  0.6226,  0.2704],
         [ 0.1824,  1.1980,  1.0394,  ..., -0.7374, -1.7382, -0.2233],
         [ 2.0823, -0.0990,  1.9272,  ...,  0.3199, -1.2232,  0.1458]]],
       device='cuda:0', grad_fn=<SelectBackward>)
tensor([[[-0.3620, -0.6044,  0.3402,  ..., -1.4740,  0.1478, -1.5704],
         [ 0.2057,  0.2160, -0.3264,  ..., -1.8020,  0.2763,  0.3320],
         [ 1.2013,  0.5086, -1.5044,  ..., -0.3532, -0.5069, -0.1243],
         ...,
         [-0.3907, -0.1986, -3.2431,  ..., -0.0645, -0.5251,  0.0094],
         [-1.1097,  0.0228, -1.0473,  ..., -0.1120, -2.1656,  0.7885],
         [ 0.3168,  0.3036,  0.6990,  ..., -1.8072, -1.8422, -1.5811]],

        [[-0.5398, -0.7883, -1.1664,  ..., -0.1484,  0.2346,  0.4180],
         [ 2.4731,  0.0149,  1.0430,  ..., -0.3549, -0.3567, -0.3164],
         [ 0.0699,  1.9535,  0.7698,  ...,  0.0252,  0.4145,  1.3679],
         ...,
         [ 0.8437, -0.4708, -0.0202,  ..., -0.5638, -0.3616, -0.1059],
         [-0.2866, -0.2585,  0.2881,  ...,  0.6250,  0.1130,  0.1434],
         [ 0.0300, -0.0567,  1.0603,  ...,  0.1597, -1.2684, -0.0669]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 1300.949, Val Loss : 6088.117
======> Trajectory Loss : 1030.440, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.788, BelowGroundPenalize Loss : 191.685
===> [Minibatch 19/129].........tensor([[[-1.5580, -1.7089, -1.4267,  ...,  0.0604,  0.5007, -0.6837],
         [-0.8872, -0.0282,  0.8094,  ..., -0.2445, -0.8070, -0.1093],
         [-0.2093,  0.9753,  1.4918,  ..., -0.6668,  1.2571, -2.3498],
         ...,
         [ 0.2694, -0.5541, -1.1872,  ..., -1.8601,  1.3324, -0.2288],
         [ 1.2607, -0.1397, -0.6980,  ..., -0.9275, -0.2533, -1.3655],
         [-0.9540,  0.3369,  0.6078,  ..., -0.6096,  0.0560, -1.1577]],

        [[ 1.5530, -0.4211,  0.1800,  ...,  0.0843,  1.0421,  0.2430],
         [ 1.3157, -0.5884,  0.7818,  ..., -1.5403, -1.3980,  0.6889],
         [-0.1822, -0.8607,  2.8328,  ..., -0.0683,  0.3033, -1.2240],
         ...,
         [ 0.0234, -0.5296,  1.6210,  ..., -1.1788,  0.6226,  0.2704],
         [ 0.1824,  1.1980,  1.0394,  ..., -0.7374, -1.7382, -0.2233],
         [ 2.0823, -0.0990,  1.9272,  ...,  0.3199, -1.2232,  0.1458]]],
       device='cuda:0', grad_fn=<SelectBackward>)
tensor([[[-0.3620, -0.6044,  0.3402,  ..., -1.4740,  0.1478, -1.5704],
         [ 0.2057,  0.2160, -0.3264,  ..., -1.8020,  0.2763,  0.3320],
         [ 1.2013,  0.5086, -1.5044,  ..., -0.3532, -0.5069, -0.1243],
         ...,
         [-0.3907, -0.1986, -3.2431,  ..., -0.0645, -0.5251,  0.0094],
         [-1.1097,  0.0228, -1.0473,  ..., -0.1120, -2.1656,  0.7885],
         [ 0.3168,  0.3036,  0.6990,  ..., -1.8072, -1.8422, -1.5811]],

        [[-0.5398, -0.7883, -1.1664,  ..., -0.1484,  0.2346,  0.4180],
         [ 2.4731,  0.0149,  1.0430,  ..., -0.3549, -0.3567, -0.3164],
         [ 0.0699,  1.9535,  0.7698,  ...,  0.0252,  0.4145,  1.3679],
         ...,
         [ 0.8437, -0.4708, -0.0202,  ..., -0.5638, -0.3616, -0.1059],
         [-0.2866, -0.2585,  0.2881,  ...,  0.6250,  0.1130,  0.1434],
         [ 0.0300, -0.0567,  1.0603,  ...,  0.1597, -1.2684, -0.0669]]],
       device='cuda:0', grad_fn=<SelectBackward>)
initial_hidden tensor([[[[-0.3651, -0.6116,  0.3463,  ..., -1.4814,  0.1487, -1.5770],
          [ 0.2033,  0.2080, -0.3188,  ..., -1.8083,  0.2682,  0.3263],
          [ 1.2010,  0.5025, -1.5012,  ..., -0.3572, -0.5102, -0.1286],
          ...,
          [-0.3907, -0.2028, -3.2390,  ..., -0.0683, -0.5243,  0.0049],
          [-1.1065,  0.0164, -1.0411,  ..., -0.1174, -2.1695,  0.7819],
          [ 0.3126,  0.2962,  0.7054,  ..., -1.8135, -1.8471, -1.5871]],

         [[-0.5375, -0.7856, -1.1632,  ..., -0.1492,  0.2348,  0.4150],
          [ 2.4765,  0.0122,  1.0462,  ..., -0.3537, -0.3564, -0.3175],
          [ 0.0741,  1.9508,  0.7720,  ...,  0.0248,  0.4170,  1.3639],
          ...,
          [ 0.8440, -0.4742, -0.0187,  ..., -0.5616, -0.3610, -0.1085],
          [-0.2831, -0.2604,  0.2865,  ...,  0.6276,  0.1180,  0.1394],
          [ 0.0301, -0.0618,  1.0632,  ...,  0.1610, -1.2697, -0.0702]]],


        [[[ 0.6058, -1.6160,  0.7465,  ..., -0.1040, -2.5741,  0.3423],
          [-0.4246,  0.4557,  0.3771,  ...,  0.6646, -2.5574,  0.2782],
          [-1.3988, -0.4185,  1.8036,  ..., -1.5908, -2.0801, -0.1672],
          ...,
          [-1.1506,  1.3237, -0.6487,  ...,  0.5911, -0.6102, -0.3193],
          [ 0.1758,  1.3534,  0.5038,  ...,  0.4189, -0.0634,  1.1186],
          [ 2.1775, -0.2101, -0.4965,  ...,  0.3241, -0.3785,  0.7305]],

         [[ 0.5191,  0.5633,  1.4828,  ..., -0.1141, -0.5533,  2.0705],
          [-0.9478,  0.7990,  0.5689,  ..., -0.2550, -0.7225, -0.6155],
          [ 0.0264,  1.1647, -1.0933,  ...,  0.6407,  1.2165, -0.2254],
          ...,
          [-1.2953, -0.0050, -0.7252,  ..., -1.6846,  2.0039, -1.3059],
          [ 2.2556, -2.4103, -1.0445,  ..., -1.1785,  1.0247,  0.1743],
          [-0.2636, -0.7790, -0.8481,  ..., -0.6714,  0.0487, -2.3093]]],


        [[[ 0.2709,  0.9839,  0.6092,  ...,  1.2999,  0.8593,  0.0369],
          [ 0.8272, -0.3394, -0.4609,  ..., -1.8322,  1.3306,  1.6046],
          [ 1.4799, -0.8521,  0.7590,  ..., -0.7046,  1.1757,  0.6093],
          ...,
          [ 0.7145,  1.7539,  0.9378,  ..., -0.5185, -1.2903,  0.0984],
          [-0.2568, -0.5771, -0.2493,  ...,  0.3861, -0.5709,  0.3626],
          [-1.3119, -1.1212,  1.7796,  ...,  0.8052,  0.6008, -1.7604]],

         [[-0.7398, -2.0269,  0.6027,  ..., -2.3281,  0.6429, -2.5680],
          [ 1.0102, -0.9428,  0.2831,  ...,  1.1466,  0.6439,  0.2018],
          [ 1.9649,  0.2363, -0.2710,  ...,  0.8727,  0.5478, -0.3132],
          ...,
          [-1.3386,  2.2144, -0.9552,  ..., -0.6671,  1.5145, -0.3726],
          [ 1.4015, -1.2391, -0.2698,  ...,  0.5135, -1.0959,  1.1086],
          [-1.8877, -0.1384, -0.7102,  ...,  0.4992, -1.1007, -0.7432]]],


        [[[-2.3152, -2.1363, -0.2469,  ...,  0.7527,  0.6579, -1.0419],
          [-0.0338,  0.0611,  1.3828,  ...,  1.1733,  1.1912,  1.0558],
          [ 1.1134, -0.8570, -0.9952,  ...,  0.1576,  0.9369,  0.1166],
          ...,
          [-1.4116, -2.1652, -1.7164,  ...,  0.6271,  0.8640,  0.8105],
          [ 1.3352, -0.3564,  0.2526,  ..., -0.8051,  0.1096,  0.1143],
          [ 0.1739,  1.4921,  0.3625,  ..., -0.2369, -1.8179,  1.3003]],

         [[ 1.5190,  0.3522,  0.5966,  ...,  1.1961,  0.9501,  0.4925],
          [ 0.9972,  0.8723,  0.1798,  ..., -1.3241, -0.7692,  2.0367],
          [ 1.0591, -0.6316, -1.2659,  ...,  0.2421, -0.0529,  0.6812],
          ...,
          [-0.3221,  0.4224,  0.5129,  ..., -0.5188,  0.3210,  1.0832],
          [ 0.6345, -0.0966, -0.6140,  ..., -0.3554,  0.1110,  0.7735],
          [-0.5445,  0.2376, -0.3929,  ...,  0.4375, -0.1653, -0.4027]]]],
       device='cuda:0') torch.Size([4, 2, 128, 32])
initial_cell tensor([[[[ 1.1107e-02,  4.3970e-01,  2.6806e+00,  ...,  4.7200e-01,
            3.2348e-01, -1.4180e+00],
          [ 3.8551e-01,  2.5673e-02,  4.8825e-04,  ...,  1.8586e+00,
           -1.7569e+00,  7.0957e-01],
          [-4.3433e-01, -5.4194e-01,  1.5796e-01,  ...,  6.3853e-01,
            1.1076e-02,  5.0486e-01],
          ...,
          [-9.6547e-01,  1.8081e-02, -1.4747e+00,  ..., -2.6266e-01,
           -9.9024e-02,  1.7837e-01],
          [ 3.1226e-01,  1.6253e-01, -6.9762e-01,  ...,  9.2313e-01,
            8.5460e-01, -1.8167e+00],
          [ 5.5100e-01, -1.2422e+00, -1.1863e+00,  ..., -1.1659e+00,
           -4.5532e-01, -2.7063e-01]],

         [[-2.6047e-01, -6.2215e-02,  2.4965e-01,  ...,  1.9716e+00,
            1.0944e+00,  2.8306e-01],
          [-3.5502e-01, -1.6408e+00,  2.3294e+00,  ...,  5.7366e-01,
            1.9113e-01,  6.5496e-01],
          [ 4.3822e-01, -1.3468e-01, -1.9319e-01,  ...,  2.7637e-01,
            1.4701e-01, -3.1601e-01],
          ...,
          [-1.5240e-01,  3.5288e-01,  3.4226e-01,  ...,  1.0929e+00,
           -3.0795e-01, -2.3484e-01],
          [ 5.1975e-01,  1.0502e+00, -6.8402e-01,  ...,  4.2818e-01,
            1.2144e+00,  8.5124e-01],
          [ 2.3175e-01,  2.9664e+00,  1.2938e+00,  ..., -1.0124e-01,
            1.0068e+00, -3.3488e-01]]],


        [[[ 7.9503e-01, -6.8314e-01, -6.2641e-01,  ...,  3.0656e-01,
           -3.7034e-01, -1.1078e+00],
          [ 2.3506e+00,  4.6680e-01, -7.1056e-01,  ...,  3.9568e-01,
           -1.7014e-01, -2.8589e-01],
          [ 1.7578e+00,  1.7679e+00, -3.6792e-01,  ..., -1.8884e+00,
            9.5199e-01, -6.3331e-01],
          ...,
          [-2.6039e-02,  5.2969e-01,  1.3658e+00,  ...,  1.7646e-01,
            4.0425e-01,  1.5244e+00],
          [-4.2714e-01, -1.1382e-01,  1.0876e+00,  ...,  7.0464e-02,
            6.0279e-01, -5.7654e-01],
          [ 1.0738e+00, -2.6711e-01,  2.0115e-01,  ...,  1.4788e-01,
           -2.0392e-01,  3.4986e-01]],

         [[ 2.0112e-01, -2.1271e-01,  1.1395e-01,  ..., -6.8942e-01,
            3.3447e-01, -1.5855e+00],
          [-2.1892e+00, -2.7207e-01,  8.3763e-01,  ...,  3.6166e-02,
           -2.4080e-01, -4.4612e-01],
          [-1.4068e+00,  7.1061e-01,  6.5048e-01,  ..., -1.0643e-01,
            1.0092e+00,  1.4028e-01],
          ...,
          [ 1.1459e+00, -2.1631e+00,  1.0922e+00,  ..., -6.6228e-02,
           -6.8242e-02, -1.5352e-01],
          [ 8.1865e-01,  3.5316e-01,  5.4994e-01,  ...,  3.9197e-01,
            3.7888e-03,  7.4853e-02],
          [-1.6109e+00,  1.2849e+00,  2.3577e-01,  ..., -9.2112e-01,
            3.4106e-01,  4.9501e-01]]],


        [[[ 9.1166e-01, -7.2624e-01,  9.8084e-01,  ...,  1.2379e+00,
           -7.9719e-01, -1.7441e+00],
          [-1.7781e+00,  3.4092e-01, -1.8577e-01,  ...,  2.1406e+00,
           -1.2597e+00, -1.7290e+00],
          [ 5.2613e-01,  1.8860e-01,  5.1180e-01,  ..., -1.3863e+00,
           -1.4544e+00,  9.7920e-01],
          ...,
          [ 7.2388e-01, -5.7182e-01, -9.4874e-01,  ...,  1.3741e+00,
           -8.5426e-01,  2.5620e-01],
          [ 3.0467e-01,  2.2473e-01, -4.8849e-01,  ..., -2.7887e-01,
           -1.5601e+00,  1.4584e+00],
          [ 1.1164e-01, -4.0423e-01, -3.8567e-01,  ..., -1.2197e+00,
           -1.6346e-01,  1.3639e-01]],

         [[-1.2046e+00, -7.0856e-02,  2.3497e-01,  ..., -9.5425e-01,
           -2.4781e+00,  8.6588e-01],
          [-5.3079e-01,  6.0798e-01, -2.2337e-01,  ..., -1.7120e+00,
            8.2833e-01, -9.3192e-01],
          [-1.5010e-02,  4.3953e-01,  3.9688e-01,  ..., -5.2832e-01,
            1.2449e+00, -1.2500e+00],
          ...,
          [-1.4987e+00, -1.2063e+00, -1.0845e-01,  ..., -1.7196e+00,
           -8.2758e-01, -8.4499e-02],
          [ 2.0420e-01, -3.6206e-01, -1.0233e+00,  ...,  2.8921e-01,
            1.0608e+00,  2.0580e+00],
          [-1.7745e+00, -2.3657e+00,  6.2017e-01,  ...,  4.2065e-01,
            8.7654e-01,  4.1509e-01]]],


        [[[ 4.4872e-01, -1.3310e+00, -2.7521e-01,  ...,  3.1775e-01,
           -1.2980e+00, -1.6550e+00],
          [ 1.0383e+00, -1.3187e+00, -6.5709e-01,  ...,  2.4765e-01,
           -3.4412e-02, -1.2620e+00],
          [ 1.0198e+00, -7.6897e-02,  1.4579e+00,  ...,  3.9375e-01,
            4.7226e-01, -2.8272e+00],
          ...,
          [ 1.5683e-01, -7.0570e-01, -1.1583e+00,  ...,  9.7236e-01,
            3.3150e-01,  4.0184e-01],
          [ 8.1813e-01, -1.7899e+00,  1.0014e-01,  ..., -6.3863e-01,
            1.3762e+00,  1.4054e+00],
          [ 7.9098e-01,  8.5866e-01, -1.5016e+00,  ..., -5.6943e-01,
            1.2131e+00,  1.5583e-01]],

         [[-4.0418e-01,  1.9142e+00,  7.1996e-01,  ..., -6.6222e-01,
            3.0329e-01, -4.3797e-01],
          [ 1.0409e+00, -2.4693e+00,  7.2636e-01,  ...,  6.3742e-01,
            7.0907e-01,  1.1892e+00],
          [ 1.8975e+00,  8.2023e-01, -3.0341e-02,  ...,  5.5003e-01,
           -1.6790e+00, -7.9868e-01],
          ...,
          [-4.3112e-01, -4.7655e-01,  1.4733e-01,  ...,  8.1689e-01,
            6.1758e-01, -7.8569e-01],
          [ 1.9166e+00,  2.2451e+00, -1.0349e+00,  ...,  9.6135e-01,
            1.5514e+00, -1.0478e+00],
          [ 1.1399e+00, -1.2430e+00, -3.5092e-01,  ..., -8.4660e-01,
           -8.9549e-02,  2.4607e-01]]]], device='cuda:0') torch.Size([4, 2, 128, 32])
tensor([[[-1.5636, -1.7103, -1.4218,  ...,  0.0598,  0.5009, -0.6876],
         [-0.8955, -0.0361,  0.8011,  ..., -0.2370, -0.8148, -0.1163],
         [-0.2111,  0.9712,  1.5006,  ..., -0.6595,  1.2492, -2.3572],
         ...,
         [ 0.2606, -0.5511, -1.1954,  ..., -1.8660,  1.3241, -0.2357],
         [ 1.2578, -0.1443, -0.7021,  ..., -0.9266, -0.2530, -1.3695],
         [-0.9578,  0.3297,  0.6061,  ..., -0.6030,  0.0626, -1.1650]],

        [[ 1.5577, -0.4176,  0.1705,  ...,  0.0767,  1.0334,  0.2506],
         [ 1.3171, -0.5939,  0.7778,  ..., -1.5382, -1.4045,  0.6960],
         [-0.1833, -0.8584,  2.8236,  ..., -0.0753,  0.2930, -1.2144],
         ...,
         [ 0.0304, -0.5239,  1.6129,  ..., -1.1785,  0.6127,  0.2780],
         [ 0.1933,  1.2054,  1.0493,  ..., -0.7307, -1.7488, -0.2203],
         [ 2.0906, -0.0895,  1.9221,  ...,  0.3190, -1.2273,  0.1547]]],
       device='cuda:0', grad_fn=<SelectBackward>)
tensor([[[-0.3651, -0.6116,  0.3463,  ..., -1.4814,  0.1487, -1.5770],
         [ 0.2033,  0.2080, -0.3188,  ..., -1.8083,  0.2682,  0.3263],
         [ 1.2010,  0.5025, -1.5012,  ..., -0.3572, -0.5102, -0.1286],
         ...,
         [-0.3907, -0.2028, -3.2390,  ..., -0.0683, -0.5243,  0.0049],
         [-1.1065,  0.0164, -1.0411,  ..., -0.1174, -2.1695,  0.7819],
         [ 0.3126,  0.2962,  0.7054,  ..., -1.8135, -1.8471, -1.5871]],

        [[-0.5375, -0.7856, -1.1632,  ..., -0.1492,  0.2348,  0.4150],
         [ 2.4765,  0.0122,  1.0462,  ..., -0.3537, -0.3564, -0.3175],
         [ 0.0741,  1.9508,  0.7720,  ...,  0.0248,  0.4170,  1.3639],
         ...,
         [ 0.8440, -0.4742, -0.0187,  ..., -0.5616, -0.3610, -0.1085],
         [-0.2831, -0.2604,  0.2865,  ...,  0.6276,  0.1180,  0.1394],
         [ 0.0301, -0.0618,  1.0632,  ...,  0.1610, -1.2697, -0.0702]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 1293.285, Val Loss : 5181.336
======> Trajectory Loss : 1045.079, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.744, BelowGroundPenalize Loss : 173.762
===> [Minibatch 20/129].........tensor([[[-1.5636, -1.7103, -1.4218,  ...,  0.0598,  0.5009, -0.6876],
         [-0.8955, -0.0361,  0.8011,  ..., -0.2370, -0.8148, -0.1163],
         [-0.2111,  0.9712,  1.5006,  ..., -0.6595,  1.2492, -2.3572],
         ...,
         [ 0.2606, -0.5511, -1.1954,  ..., -1.8660,  1.3241, -0.2357],
         [ 1.2578, -0.1443, -0.7021,  ..., -0.9266, -0.2530, -1.3695],
         [-0.9578,  0.3297,  0.6061,  ..., -0.6030,  0.0626, -1.1650]],

        [[ 1.5577, -0.4176,  0.1705,  ...,  0.0767,  1.0334,  0.2506],
         [ 1.3171, -0.5939,  0.7778,  ..., -1.5382, -1.4045,  0.6960],
         [-0.1833, -0.8584,  2.8236,  ..., -0.0753,  0.2930, -1.2144],
         ...,
         [ 0.0304, -0.5239,  1.6129,  ..., -1.1785,  0.6127,  0.2780],
         [ 0.1933,  1.2054,  1.0493,  ..., -0.7307, -1.7488, -0.2203],
         [ 2.0906, -0.0895,  1.9221,  ...,  0.3190, -1.2273,  0.1547]]],
       device='cuda:0', grad_fn=<SelectBackward>)
tensor([[[-0.3651, -0.6116,  0.3463,  ..., -1.4814,  0.1487, -1.5770],
         [ 0.2033,  0.2080, -0.3188,  ..., -1.8083,  0.2682,  0.3263],
         [ 1.2010,  0.5025, -1.5012,  ..., -0.3572, -0.5102, -0.1286],
         ...,
         [-0.3907, -0.2028, -3.2390,  ..., -0.0683, -0.5243,  0.0049],
         [-1.1065,  0.0164, -1.0411,  ..., -0.1174, -2.1695,  0.7819],
         [ 0.3126,  0.2962,  0.7054,  ..., -1.8135, -1.8471, -1.5871]],

        [[-0.5375, -0.7856, -1.1632,  ..., -0.1492,  0.2348,  0.4150],
         [ 2.4765,  0.0122,  1.0462,  ..., -0.3537, -0.3564, -0.3175],
         [ 0.0741,  1.9508,  0.7720,  ...,  0.0248,  0.4170,  1.3639],
         ...,
         [ 0.8440, -0.4742, -0.0187,  ..., -0.5616, -0.3610, -0.1085],
         [-0.2831, -0.2604,  0.2865,  ...,  0.6276,  0.1180,  0.1394],
         [ 0.0301, -0.0618,  1.0632,  ...,  0.1610, -1.2697, -0.0702]]],
       device='cuda:0', grad_fn=<SelectBackward>)
initial_hidden tensor([[[[-3.6854e-01, -6.1944e-01,  3.5311e-01,  ..., -1.4896e+00,
            1.4858e-01, -1.5842e+00],
          [ 1.9849e-01,  1.9979e-01, -3.1053e-01,  ..., -1.8156e+00,
            2.6050e-01,  3.1957e-01],
          [ 1.1984e+00,  4.9597e-01, -1.4955e+00,  ..., -3.6329e-01,
           -5.1588e-01, -1.3478e-01],
          ...,
          [-3.9285e-01, -2.0827e-01, -3.2333e+00,  ..., -7.3411e-02,
           -5.2586e-01, -1.0542e-03],
          [-1.1039e+00,  9.8999e-03, -1.0351e+00,  ..., -1.2274e-01,
           -2.1739e+00,  7.7534e-01],
          [ 3.0854e-01,  2.8879e-01,  7.1161e-01,  ..., -1.8195e+00,
           -1.8518e+00, -1.5931e+00]],

         [[-5.3449e-01, -7.8251e-01, -1.1599e+00,  ..., -1.5009e-01,
            2.3492e-01,  4.1202e-01],
          [ 2.4813e+00,  8.1269e-03,  1.0497e+00,  ..., -3.5261e-01,
           -3.5476e-01, -3.1944e-01],
          [ 7.9723e-02,  1.9461e+00,  7.7458e-01,  ...,  2.4033e-02,
            4.2117e-01,  1.3584e+00],
          ...,
          [ 8.4443e-01, -4.7897e-01, -1.7469e-02,  ..., -5.5917e-01,
           -3.6006e-01, -1.1194e-01],
          [-2.7968e-01, -2.6258e-01,  2.8459e-01,  ...,  6.3006e-01,
            1.2325e-01,  1.3525e-01],
          [ 3.0086e-02, -6.6867e-02,  1.0660e+00,  ...,  1.6225e-01,
           -1.2709e+00, -7.3552e-02]]],


        [[[ 6.0733e-01, -1.6118e+00,  7.4281e-01,  ..., -1.0758e-01,
           -2.5796e+00,  3.3963e-01],
          [-4.2257e-01,  4.5934e-01,  3.7570e-01,  ...,  6.5872e-01,
           -2.5608e+00,  2.7827e-01],
          [-1.3967e+00, -4.1569e-01,  1.8013e+00,  ..., -1.5952e+00,
           -2.0821e+00, -1.6617e-01],
          ...,
          [-1.1480e+00,  1.3270e+00, -6.4893e-01,  ...,  5.8833e-01,
           -6.1377e-01, -3.1899e-01],
          [ 1.7867e-01,  1.3564e+00,  5.0195e-01,  ...,  4.1548e-01,
           -6.6939e-02,  1.1171e+00],
          [ 2.1773e+00, -2.0624e-01, -4.9613e-01,  ...,  3.1974e-01,
           -3.8302e-01,  7.3029e-01]],

         [[ 5.1772e-01,  5.6241e-01,  1.4799e+00,  ..., -1.1111e-01,
           -5.4826e-01,  2.0685e+00],
          [-9.5018e-01,  7.9693e-01,  5.6495e-01,  ..., -2.4842e-01,
           -7.1776e-01, -6.1942e-01],
          [ 2.5103e-02,  1.1633e+00, -1.0959e+00,  ...,  6.4337e-01,
            1.2183e+00, -2.2837e-01],
          ...,
          [-1.2970e+00, -6.4112e-03, -7.2563e-01,  ..., -1.6821e+00,
            2.0063e+00, -1.3085e+00],
          [ 2.2546e+00, -2.4146e+00, -1.0471e+00,  ..., -1.1755e+00,
            1.0280e+00,  1.7001e-01],
          [-2.6562e-01, -7.8387e-01, -8.4903e-01,  ..., -6.6894e-01,
            5.0859e-02, -2.3121e+00]]],


        [[[ 2.7055e-01,  9.8555e-01,  6.1144e-01,  ...,  1.2988e+00,
            8.6292e-01,  3.2823e-02],
          [ 8.2801e-01, -3.3604e-01, -4.5366e-01,  ..., -1.8303e+00,
            1.3300e+00,  1.5982e+00],
          [ 1.4798e+00, -8.5095e-01,  7.5821e-01,  ..., -7.0305e-01,
            1.1770e+00,  6.0627e-01],
          ...,
          [ 7.1487e-01,  1.7556e+00,  9.4011e-01,  ..., -5.1588e-01,
           -1.2880e+00,  9.7723e-02],
          [-2.5517e-01, -5.7755e-01, -2.4705e-01,  ...,  3.8910e-01,
           -5.7179e-01,  3.5913e-01],
          [-1.3106e+00, -1.1224e+00,  1.7803e+00,  ...,  8.0638e-01,
            6.0351e-01, -1.7608e+00]],

         [[-7.4334e-01, -2.0300e+00,  5.9918e-01,  ..., -2.3253e+00,
            6.4586e-01, -2.5724e+00],
          [ 1.0088e+00, -9.4538e-01,  2.8281e-01,  ...,  1.1489e+00,
            6.4639e-01,  1.9990e-01],
          [ 1.9643e+00,  2.3549e-01, -2.7226e-01,  ...,  8.7302e-01,
            5.4974e-01, -3.1540e-01],
          ...,
          [-1.3403e+00,  2.2145e+00, -9.5682e-01,  ..., -6.6495e-01,
            1.5166e+00, -3.7452e-01],
          [ 1.3988e+00, -1.2388e+00, -2.7051e-01,  ...,  5.1616e-01,
           -1.0943e+00,  1.1062e+00],
          [-1.8894e+00, -1.3938e-01, -7.1088e-01,  ...,  5.0078e-01,
           -1.0991e+00, -7.4491e-01]]],


        [[[-2.3137e+00, -2.1352e+00, -2.4858e-01,  ...,  7.5430e-01,
            6.5727e-01, -1.0437e+00],
          [-3.4390e-02,  6.4408e-02,  1.3846e+00,  ...,  1.1751e+00,
            1.1896e+00,  1.0530e+00],
          [ 1.1131e+00, -8.5558e-01, -9.9603e-01,  ...,  1.5912e-01,
            9.3523e-01,  1.1437e-01],
          ...,
          [-1.4097e+00, -2.1638e+00, -1.7156e+00,  ...,  6.2888e-01,
            8.6206e-01,  8.0841e-01],
          [ 1.3361e+00, -3.5430e-01,  2.5071e-01,  ..., -8.0416e-01,
            1.0898e-01,  1.1183e-01],
          [ 1.7492e-01,  1.4933e+00,  3.6216e-01,  ..., -2.3914e-01,
           -1.8202e+00,  1.2994e+00]],

         [[ 1.5199e+00,  3.5474e-01,  5.9448e-01,  ...,  1.1982e+00,
            9.5287e-01,  4.9209e-01],
          [ 9.9801e-01,  8.7258e-01,  1.7979e-01,  ..., -1.3246e+00,
           -7.6896e-01,  2.0361e+00],
          [ 1.0609e+00, -6.3006e-01, -1.2667e+00,  ...,  2.4304e-01,
           -5.1858e-02,  6.8141e-01],
          ...,
          [-3.2106e-01,  4.2408e-01,  5.1260e-01,  ..., -5.1930e-01,
            3.2241e-01,  1.0822e+00],
          [ 6.3527e-01, -9.6389e-02, -6.1555e-01,  ..., -3.5568e-01,
            1.1222e-01,  7.7287e-01],
          [-5.4379e-01,  2.3888e-01, -3.9434e-01,  ...,  4.3816e-01,
           -1.6515e-01, -4.0256e-01]]]], device='cuda:0') torch.Size([4, 2, 128, 32])
initial_cell tensor([[[[ 0.0095,  0.4314,  2.6869,  ...,  0.4673,  0.3158, -1.4225],
          [ 0.3834,  0.0203,  0.0087,  ...,  1.8527, -1.7643,  0.7021],
          [-0.4353, -0.5445,  0.1642,  ...,  0.6335,  0.0069,  0.4997],
          ...,
          [-0.9671,  0.0155, -1.4699,  ..., -0.2673, -0.1031,  0.1729],
          [ 0.3093,  0.1587, -0.6934,  ...,  0.9185,  0.8507, -1.8182],
          [ 0.5497, -1.2467, -1.1825,  ..., -1.1666, -0.4604, -0.2726]],

         [[-0.2557, -0.0661,  0.2488,  ...,  1.9714,  1.0981,  0.2795],
          [-0.3533, -1.6477,  2.3292,  ...,  0.5733,  0.1962,  0.6501],
          [ 0.4388, -0.1383, -0.1938,  ...,  0.2760,  0.1504, -0.3185],
          ...,
          [-0.1505,  0.3493,  0.3413,  ...,  1.0935, -0.3030, -0.2382],
          [ 0.5216,  1.0474, -0.6863,  ...,  0.4291,  1.2193,  0.8485],
          [ 0.2321,  2.9643,  1.2933,  ..., -0.1016,  1.0123, -0.3371]]],


        [[[ 0.7955, -0.6828, -0.6234,  ...,  0.3079, -0.3760, -1.1073],
          [ 2.3511,  0.4680, -0.7078,  ...,  0.3993, -0.1758, -0.2856],
          [ 1.7587,  1.7684, -0.3674,  ..., -1.8872,  0.9462, -0.6338],
          ...,
          [-0.0255,  0.5302,  1.3680,  ...,  0.1791,  0.3995,  1.5245],
          [-0.4280, -0.1122,  1.0899,  ...,  0.0725,  0.5985, -0.5748],
          [ 1.0735, -0.2655,  0.2032,  ...,  0.1510, -0.2077,  0.3503]],

         [[ 0.2000, -0.2180,  0.1122,  ..., -0.6867,  0.3396, -1.5906],
          [-2.1901, -0.2759,  0.8375,  ...,  0.0369, -0.2377, -0.4496],
          [-1.4074,  0.7097,  0.6505,  ..., -0.1060,  1.0120,  0.1393],
          ...,
          [ 1.1461, -2.1638,  1.0921,  ..., -0.0653, -0.0650, -0.1548],
          [ 0.8184,  0.3519,  0.5486,  ...,  0.3949,  0.0068,  0.0719],
          [-1.6118,  1.2842,  0.2351,  ..., -0.9205,  0.3442,  0.4938]]],


        [[[ 0.9122, -0.7272,  0.9842,  ...,  1.2417, -0.8007, -1.7432],
          [-1.7776,  0.3402, -0.1785,  ...,  2.1440, -1.2623, -1.7285],
          [ 0.5269,  0.1876,  0.5142,  ..., -1.3796, -1.4570,  0.9801],
          ...,
          [ 0.7243, -0.5723, -0.9448,  ...,  1.3768, -0.8567,  0.2559],
          [ 0.3049,  0.2244, -0.4847,  ..., -0.2748, -1.5627,  1.4597],
          [ 0.1113, -0.4052, -0.3830,  ..., -1.2146, -0.1656,  0.1371]],

         [[-1.2088, -0.0753,  0.2326,  ..., -0.9527, -2.4775,  0.8644],
          [-0.5344,  0.6064, -0.2248,  ..., -1.7110,  0.8322, -0.9355],
          [-0.0163,  0.4390,  0.3965,  ..., -0.5280,  1.2478, -1.2513],
          ...,
          [-1.4999, -1.2059, -0.1097,  ..., -1.7194, -0.8262, -0.0855],
          [ 0.2028, -0.3626, -1.0251,  ...,  0.2904,  1.0640,  2.0574],
          [-1.7774, -2.3678,  0.6191,  ...,  0.4218,  0.8797,  0.4149]]],


        [[[ 0.4493, -1.3319, -0.2737,  ...,  0.3231, -1.3007, -1.6544],
          [ 1.0389, -1.3195, -0.6556,  ...,  0.2516, -0.0398, -1.2611],
          [ 1.0209, -0.0779,  1.4587,  ...,  0.3970,  0.4680, -2.8277],
          ...,
          [ 0.1581, -0.7063, -1.1573,  ...,  0.9749,  0.3283,  0.4017],
          [ 0.8181, -1.7904,  0.1011,  ..., -0.6344,  1.3719,  1.4066],
          [ 0.7912,  0.8576, -1.5004,  ..., -0.5660,  1.2088,  0.1567]],

         [[-0.4078,  1.9153,  0.7181,  ..., -0.6607,  0.3065, -0.4409],
          [ 1.0394, -2.4691,  0.7260,  ...,  0.6411,  0.7130,  1.1894],
          [ 1.8982,  0.8202, -0.0309,  ...,  0.5508, -1.6783, -0.7991],
          ...,
          [-0.4326, -0.4748,  0.1462,  ...,  0.8190,  0.6205, -0.7874],
          [ 1.9162,  2.2463, -1.0376,  ...,  0.9631,  1.5549, -1.0504],
          [ 1.1391, -1.2432, -0.3530,  ..., -0.8462, -0.0871,  0.2458]]]],
       device='cuda:0') torch.Size([4, 2, 128, 32])
tensor([[[-1.5687, -1.7117, -1.4174,  ...,  0.0593,  0.5008, -0.6911],
         [-0.9044, -0.0442,  0.7921,  ..., -0.2294, -0.8230, -0.1232],
         [-0.2127,  0.9675,  1.5086,  ..., -0.6529,  1.2419, -2.3640],
         ...,
         [ 0.2526, -0.5486, -1.2029,  ..., -1.8712,  1.3165, -0.2419],
         [ 1.2554, -0.1486, -0.7060,  ..., -0.9256, -0.2532, -1.3733],
         [-0.9610,  0.3227,  0.6048,  ..., -0.5964,  0.0689, -1.1722]],

        [[ 1.5621, -0.4134,  0.1606,  ...,  0.0685,  1.0243,  0.2591],
         [ 1.3201, -0.6001,  0.7743,  ..., -1.5359, -1.4098,  0.7041],
         [-0.1833, -0.8560,  2.8141,  ..., -0.0834,  0.2829, -1.2044],
         ...,
         [ 0.0383, -0.5176,  1.6043,  ..., -1.1781,  0.6029,  0.2865],
         [ 0.2044,  1.2129,  1.0596,  ..., -0.7235, -1.7593, -0.2160],
         [ 2.0991, -0.0798,  1.9164,  ...,  0.3176, -1.2310,  0.1640]]],
       device='cuda:0', grad_fn=<SelectBackward>)
tensor([[[-3.6854e-01, -6.1944e-01,  3.5311e-01,  ..., -1.4896e+00,
           1.4858e-01, -1.5842e+00],
         [ 1.9849e-01,  1.9979e-01, -3.1053e-01,  ..., -1.8156e+00,
           2.6050e-01,  3.1957e-01],
         [ 1.1984e+00,  4.9597e-01, -1.4955e+00,  ..., -3.6329e-01,
          -5.1588e-01, -1.3478e-01],
         ...,
         [-3.9285e-01, -2.0827e-01, -3.2333e+00,  ..., -7.3411e-02,
          -5.2586e-01, -1.0542e-03],
         [-1.1039e+00,  9.8999e-03, -1.0351e+00,  ..., -1.2274e-01,
          -2.1739e+00,  7.7534e-01],
         [ 3.0854e-01,  2.8879e-01,  7.1161e-01,  ..., -1.8195e+00,
          -1.8518e+00, -1.5931e+00]],

        [[-5.3449e-01, -7.8251e-01, -1.1599e+00,  ..., -1.5009e-01,
           2.3492e-01,  4.1202e-01],
         [ 2.4813e+00,  8.1269e-03,  1.0497e+00,  ..., -3.5261e-01,
          -3.5476e-01, -3.1944e-01],
         [ 7.9723e-02,  1.9461e+00,  7.7458e-01,  ...,  2.4033e-02,
           4.2117e-01,  1.3584e+00],
         ...,
         [ 8.4443e-01, -4.7897e-01, -1.7469e-02,  ..., -5.5917e-01,
          -3.6006e-01, -1.1194e-01],
         [-2.7968e-01, -2.6258e-01,  2.8459e-01,  ...,  6.3006e-01,
           1.2325e-01,  1.3525e-01],
         [ 3.0086e-02, -6.6867e-02,  1.0660e+00,  ...,  1.6225e-01,
          -1.2709e+00, -7.3552e-02]]], device='cuda:0',
       grad_fn=<SelectBackward>)
Train Loss : 1195.678, Val Loss : 4292.927
======> Trajectory Loss : 958.461, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.724, BelowGroundPenalize Loss : 164.839
===> [Minibatch 21/129].........tensor([[[-1.5687, -1.7117, -1.4174,  ...,  0.0593,  0.5008, -0.6911],
         [-0.9044, -0.0442,  0.7921,  ..., -0.2294, -0.8230, -0.1232],
         [-0.2127,  0.9675,  1.5086,  ..., -0.6529,  1.2419, -2.3640],
         ...,
         [ 0.2526, -0.5486, -1.2029,  ..., -1.8712,  1.3165, -0.2419],
         [ 1.2554, -0.1486, -0.7060,  ..., -0.9256, -0.2532, -1.3733],
         [-0.9610,  0.3227,  0.6048,  ..., -0.5964,  0.0689, -1.1722]],

        [[ 1.5621, -0.4134,  0.1606,  ...,  0.0685,  1.0243,  0.2591],
         [ 1.3201, -0.6001,  0.7743,  ..., -1.5359, -1.4098,  0.7041],
         [-0.1833, -0.8560,  2.8141,  ..., -0.0834,  0.2829, -1.2044],
         ...,
         [ 0.0383, -0.5176,  1.6043,  ..., -1.1781,  0.6029,  0.2865],
         [ 0.2044,  1.2129,  1.0596,  ..., -0.7235, -1.7593, -0.2160],
         [ 2.0991, -0.0798,  1.9164,  ...,  0.3176, -1.2310,  0.1640]]],
       device='cuda:0', grad_fn=<SelectBackward>)
tensor([[[-3.6854e-01, -6.1944e-01,  3.5311e-01,  ..., -1.4896e+00,
           1.4858e-01, -1.5842e+00],
         [ 1.9849e-01,  1.9979e-01, -3.1053e-01,  ..., -1.8156e+00,
           2.6050e-01,  3.1957e-01],
         [ 1.1984e+00,  4.9597e-01, -1.4955e+00,  ..., -3.6329e-01,
          -5.1588e-01, -1.3478e-01],
         ...,
         [-3.9285e-01, -2.0827e-01, -3.2333e+00,  ..., -7.3411e-02,
          -5.2586e-01, -1.0542e-03],
         [-1.1039e+00,  9.8999e-03, -1.0351e+00,  ..., -1.2274e-01,
          -2.1739e+00,  7.7534e-01],
         [ 3.0854e-01,  2.8879e-01,  7.1161e-01,  ..., -1.8195e+00,
          -1.8518e+00, -1.5931e+00]],

        [[-5.3449e-01, -7.8251e-01, -1.1599e+00,  ..., -1.5009e-01,
           2.3492e-01,  4.1202e-01],
         [ 2.4813e+00,  8.1269e-03,  1.0497e+00,  ..., -3.5261e-01,
          -3.5476e-01, -3.1944e-01],
         [ 7.9723e-02,  1.9461e+00,  7.7458e-01,  ...,  2.4033e-02,
           4.2117e-01,  1.3584e+00],
         ...,
         [ 8.4443e-01, -4.7897e-01, -1.7469e-02,  ..., -5.5917e-01,
          -3.6006e-01, -1.1194e-01],
         [-2.7968e-01, -2.6258e-01,  2.8459e-01,  ...,  6.3006e-01,
           1.2325e-01,  1.3525e-01],
         [ 3.0086e-02, -6.6867e-02,  1.0660e+00,  ...,  1.6225e-01,
          -1.2709e+00, -7.3552e-02]]], device='cuda:0',
       grad_fn=<SelectBackward>)
initial_hidden tensor([[[[-3.7202e-01, -6.2735e-01,  3.5998e-01,  ..., -1.4978e+00,
            1.4795e-01, -1.5916e+00],
          [ 1.9345e-01,  1.9125e-01, -3.0204e-01,  ..., -1.8232e+00,
            2.5237e-01,  3.1241e-01],
          [ 1.1949e+00,  4.8846e-01, -1.4888e+00,  ..., -3.7036e-01,
           -5.2258e-01, -1.4187e-01],
          ...,
          [-3.9577e-01, -2.1417e-01, -3.2273e+00,  ..., -7.8880e-02,
           -5.2848e-01, -7.4731e-03],
          [-1.1023e+00,  2.2755e-03, -1.0279e+00,  ..., -1.2938e-01,
           -2.1799e+00,  7.6771e-01],
          [ 3.0411e-01,  2.8100e-01,  7.1824e-01,  ..., -1.8259e+00,
           -1.8568e+00, -1.5997e+00]],

         [[-5.3138e-01, -7.7949e-01, -1.1567e+00,  ..., -1.5094e-01,
            2.3499e-01,  4.0926e-01],
          [ 2.4860e+00,  3.8930e-03,  1.0529e+00,  ..., -3.5156e-01,
           -3.5284e-01, -3.2153e-01],
          [ 8.6185e-02,  1.9404e+00,  7.7717e-01,  ...,  2.3026e-02,
            4.2635e-01,  1.3521e+00],
          ...,
          [ 8.4493e-01, -4.8424e-01, -1.6605e-02,  ..., -5.5682e-01,
           -3.5889e-01, -1.1575e-01],
          [-2.7592e-01, -2.6609e-01,  2.8139e-01,  ...,  6.3264e-01,
            1.2941e-01,  1.3029e-01],
          [ 3.0082e-02, -7.2512e-02,  1.0686e+00,  ...,  1.6331e-01,
           -1.2718e+00, -7.7184e-02]]],


        [[[ 6.0867e-01, -1.6077e+00,  7.3934e-01,  ..., -1.1097e-01,
           -2.5850e+00,  3.3721e-01],
          [-4.2066e-01,  4.6281e-01,  3.7442e-01,  ...,  6.5299e-01,
           -2.5642e+00,  2.7837e-01],
          [-1.3945e+00, -4.1279e-01,  1.7990e+00,  ..., -1.6000e+00,
           -2.0845e+00, -1.6477e-01],
          ...,
          [-1.1455e+00,  1.3302e+00, -6.4911e-01,  ...,  5.8570e-01,
           -6.1741e-01, -3.1874e-01],
          [ 1.8156e-01,  1.3592e+00,  5.0019e-01,  ...,  4.1202e-01,
           -7.1064e-02,  1.1157e+00],
          [ 2.1774e+00, -2.0246e-01, -4.9549e-01,  ...,  3.1536e-01,
           -3.8821e-01,  7.3029e-01]],

         [[ 5.1640e-01,  5.6133e-01,  1.4772e+00,  ..., -1.0819e-01,
           -5.4337e-01,  2.0666e+00],
          [-9.5259e-01,  7.9478e-01,  5.6117e-01,  ..., -2.4201e-01,
           -7.1307e-01, -6.2333e-01],
          [ 2.3708e-02,  1.1616e+00, -1.0990e+00,  ...,  6.4626e-01,
            1.2205e+00, -2.3172e-01],
          ...,
          [-1.2987e+00, -7.9239e-03, -7.2628e-01,  ..., -1.6793e+00,
            2.0090e+00, -1.3113e+00],
          [ 2.2534e+00, -2.4196e+00, -1.0501e+00,  ..., -1.1724e+00,
            1.0320e+00,  1.6512e-01],
          [-2.6765e-01, -7.8897e-01, -8.4994e-01,  ..., -6.6651e-01,
            5.3139e-02, -2.3150e+00]]],


        [[[ 2.7034e-01,  9.8704e-01,  6.1358e-01,  ...,  1.2977e+00,
            8.6625e-01,  2.8923e-02],
          [ 8.2844e-01, -3.3271e-01, -4.4665e-01,  ..., -1.8283e+00,
            1.3297e+00,  1.5917e+00],
          [ 1.4797e+00, -8.4983e-01,  7.5738e-01,  ..., -7.0124e-01,
            1.1784e+00,  6.0281e-01],
          ...,
          [ 7.1498e-01,  1.7571e+00,  9.4221e-01,  ..., -5.1339e-01,
           -1.2856e+00,  9.6870e-02],
          [-2.5345e-01, -5.7802e-01, -2.4499e-01,  ...,  3.9223e-01,
           -5.7223e-01,  3.5491e-01],
          [-1.3093e+00, -1.1236e+00,  1.7808e+00,  ...,  8.0752e-01,
            6.0606e-01, -1.7612e+00]],

         [[-7.4668e-01, -2.0329e+00,  5.9575e-01,  ..., -2.3226e+00,
            6.4869e-01, -2.5766e+00],
          [ 1.0075e+00, -9.4793e-01,  2.8249e-01,  ...,  1.1512e+00,
            6.4883e-01,  1.9799e-01],
          [ 1.9637e+00,  2.3445e-01, -2.7366e-01,  ...,  8.7325e-01,
            5.5187e-01, -3.1784e-01],
          ...,
          [-1.3423e+00,  2.2145e+00, -9.5843e-01,  ..., -6.6268e-01,
            1.5188e+00, -3.7656e-01],
          [ 1.3959e+00, -1.2383e+00, -2.7112e-01,  ...,  5.1908e-01,
           -1.0927e+00,  1.1038e+00],
          [-1.8912e+00, -1.4032e-01, -7.1138e-01,  ...,  5.0240e-01,
           -1.0974e+00, -7.4664e-01]]],


        [[[-2.3124e+00, -2.1342e+00, -2.5017e-01,  ...,  7.5577e-01,
            6.5668e-01, -1.0453e+00],
          [-3.4863e-02,  6.7619e-02,  1.3863e+00,  ...,  1.1768e+00,
            1.1882e+00,  1.0504e+00],
          [ 1.1128e+00, -8.5443e-01, -9.9684e-01,  ...,  1.6068e-01,
            9.3365e-01,  1.1225e-01],
          ...,
          [-1.4077e+00, -2.1625e+00, -1.7149e+00,  ...,  6.3056e-01,
            8.6025e-01,  8.0643e-01],
          [ 1.3369e+00, -3.5247e-01,  2.4900e-01,  ..., -8.0341e-01,
            1.0846e-01,  1.0943e-01],
          [ 1.7580e-01,  1.4945e+00,  3.6189e-01,  ..., -2.4129e-01,
           -1.8223e+00,  1.2985e+00]],

         [[ 1.5208e+00,  3.5711e-01,  5.9248e-01,  ...,  1.2001e+00,
            9.5548e-01,  4.9167e-01],
          [ 9.9872e-01,  8.7284e-01,  1.7973e-01,  ..., -1.3249e+00,
           -7.6867e-01,  2.0356e+00],
          [ 1.0626e+00, -6.2845e-01, -1.2676e+00,  ...,  2.4387e-01,
           -5.0781e-02,  6.8160e-01],
          ...,
          [-3.2006e-01,  4.2562e-01,  5.1224e-01,  ..., -5.1980e-01,
            3.2376e-01,  1.0812e+00],
          [ 6.3615e-01, -9.6228e-02, -6.1701e-01,  ..., -3.5580e-01,
            1.1337e-01,  7.7223e-01],
          [-5.4313e-01,  2.4008e-01, -3.9571e-01,  ...,  4.3874e-01,
           -1.6497e-01, -4.0238e-01]]]], device='cuda:0') torch.Size([4, 2, 128, 32])
initial_cell tensor([[[[ 8.0470e-03,  4.2304e-01,  2.6930e+00,  ...,  4.6271e-01,
            3.0797e-01, -1.4270e+00],
          [ 3.8136e-01,  1.4728e-02,  1.7143e-02,  ...,  1.8468e+00,
           -1.7717e+00,  6.9470e-01],
          [-4.3629e-01, -5.4813e-01,  1.7129e-01,  ...,  6.2832e-01,
            1.4396e-03,  4.9328e-01],
          ...,
          [-9.6873e-01,  1.2550e-02, -1.4649e+00,  ..., -2.7209e-01,
           -1.0743e-01,  1.6688e-01],
          [ 3.0643e-01,  1.5316e-01, -6.8838e-01,  ...,  9.1259e-01,
            8.4587e-01, -1.8207e+00],
          [ 5.4836e-01, -1.2514e+00, -1.1783e+00,  ..., -1.1674e+00,
           -4.6571e-01, -2.7514e-01]],

         [[-2.5111e-01, -6.9856e-02,  2.4802e-01,  ...,  1.9711e+00,
            1.1017e+00,  2.7607e-01],
          [-3.5158e-01, -1.6546e+00,  2.3288e+00,  ...,  5.7303e-01,
            2.0133e-01,  6.4526e-01],
          [ 4.3936e-01, -1.4253e-01, -1.9492e-01,  ...,  2.7569e-01,
            1.5439e-01, -3.2143e-01],
          ...,
          [-1.4864e-01,  3.4521e-01,  3.4007e-01,  ...,  1.0940e+00,
           -2.9783e-01, -2.4159e-01],
          [ 5.2327e-01,  1.0444e+00, -6.8895e-01,  ...,  4.2999e-01,
            1.2250e+00,  8.4566e-01],
          [ 2.3249e-01,  2.9622e+00,  1.2925e+00,  ..., -1.0198e-01,
            1.0181e+00, -3.3939e-01]]],


        [[[ 7.9601e-01, -6.8246e-01, -6.2051e-01,  ...,  3.0953e-01,
           -3.8154e-01, -1.1069e+00],
          [ 2.3515e+00,  4.6911e-01, -7.0519e-01,  ...,  4.0317e-01,
           -1.8142e-01, -2.8535e-01],
          [ 1.7595e+00,  1.7689e+00, -3.6687e-01,  ..., -1.8851e+00,
            9.3975e-01, -6.3434e-01],
          ...,
          [-2.4915e-02,  5.3064e-01,  1.3702e+00,  ...,  1.8252e-01,
            3.9461e-01,  1.5246e+00],
          [-4.2866e-01, -1.1072e-01,  1.0922e+00,  ...,  7.5351e-02,
            5.9373e-01, -5.7336e-01],
          [ 1.0732e+00, -2.6394e-01,  2.0521e-01,  ...,  1.5438e-01,
           -2.1151e-01,  3.5059e-01]],

         [[ 1.9897e-01, -2.2314e-01,  1.1042e-01,  ..., -6.8416e-01,
            3.4463e-01, -1.5956e+00],
          [-2.1910e+00, -2.7970e-01,  8.3726e-01,  ...,  3.7598e-02,
           -2.3473e-01, -4.5308e-01],
          [-1.4080e+00,  7.0863e-01,  6.5032e-01,  ..., -1.0533e-01,
            1.0151e+00,  1.3794e-01],
          ...,
          [ 1.1463e+00, -2.1647e+00,  1.0920e+00,  ..., -6.4454e-02,
           -6.1650e-02, -1.5611e-01],
          [ 8.1810e-01,  3.5040e-01,  5.4703e-01,  ...,  3.9792e-01,
            1.0084e-02,  6.8719e-02],
          [-1.6126e+00,  1.2835e+00,  2.3431e-01,  ..., -9.1993e-01,
            3.4741e-01,  4.9251e-01]]],


        [[[ 9.1262e-01, -7.2805e-01,  9.8733e-01,  ...,  1.2453e+00,
           -8.0422e-01, -1.7424e+00],
          [-1.7770e+00,  3.3962e-01, -1.7127e-01,  ...,  2.1471e+00,
           -1.2648e+00, -1.7280e+00],
          [ 5.2769e-01,  1.8678e-01,  5.1681e-01,  ..., -1.3720e+00,
           -1.4597e+00,  9.8088e-01],
          ...,
          [ 7.2473e-01, -5.7279e-01, -9.4074e-01,  ...,  1.3794e+00,
           -8.5907e-01,  2.5566e-01],
          [ 3.0516e-01,  2.2413e-01, -4.8047e-01,  ..., -2.7033e-01,
           -1.5651e+00,  1.4609e+00],
          [ 1.1097e-01, -4.0612e-01, -3.8034e-01,  ..., -1.2091e+00,
           -1.6781e-01,  1.3783e-01]],

         [[-1.2128e+00, -7.9595e-02,  2.3028e-01,  ..., -9.5119e-01,
           -2.4770e+00,  8.6308e-01],
          [-5.3804e-01,  6.0471e-01, -2.2629e-01,  ..., -1.7100e+00,
            8.3592e-01, -9.3912e-01],
          [-1.7917e-02,  4.3845e-01,  3.9606e-01,  ..., -5.2762e-01,
            1.2511e+00, -1.2531e+00],
          ...,
          [-1.5013e+00, -1.2057e+00, -1.1099e-01,  ..., -1.7191e+00,
           -8.2491e-01, -8.6562e-02],
          [ 2.0125e-01, -3.6343e-01, -1.0270e+00,  ...,  2.9177e-01,
            1.0676e+00,  2.0568e+00],
          [-1.7805e+00, -2.3700e+00,  6.1815e-01,  ...,  4.2306e-01,
            8.8295e-01,  4.1472e-01]]],


        [[[ 4.4988e-01, -1.3327e+00, -2.7238e-01,  ...,  3.2839e-01,
           -1.3033e+00, -1.6539e+00],
          [ 1.0395e+00, -1.3202e+00, -6.5418e-01,  ...,  2.5538e-01,
           -4.4999e-02, -1.2604e+00],
          [ 1.0219e+00, -7.8795e-02,  1.4593e+00,  ...,  4.0048e-01,
            4.6328e-01, -2.8282e+00],
          ...,
          [ 1.5938e-01, -7.0677e-01, -1.1563e+00,  ...,  9.7723e-01,
            3.2522e-01,  4.0151e-01],
          [ 8.1817e-01, -1.7908e+00,  1.0193e-01,  ..., -6.2944e-01,
            1.3670e+00,  1.4077e+00],
          [ 7.9138e-01,  8.5655e-01, -1.4993e+00,  ..., -5.6257e-01,
            1.2043e+00,  1.5739e-01]],

         [[-4.1157e-01,  1.9164e+00,  7.1637e-01,  ..., -6.5917e-01,
            3.0964e-01, -4.4378e-01],
          [ 1.0379e+00, -2.4690e+00,  7.2555e-01,  ...,  6.4468e-01,
            7.1696e-01,  1.1895e+00],
          [ 1.8987e+00,  8.2011e-01, -3.1678e-02,  ...,  5.5186e-01,
           -1.6777e+00, -7.9992e-01],
          ...,
          [-4.3466e-01, -4.7328e-01,  1.4518e-01,  ...,  8.2107e-01,
            6.2382e-01, -7.8936e-01],
          [ 1.9159e+00,  2.2474e+00, -1.0404e+00,  ...,  9.6524e-01,
            1.5590e+00, -1.0533e+00],
          [ 1.1384e+00, -1.2434e+00, -3.5497e-01,  ..., -8.4574e-01,
           -8.4578e-02,  2.4552e-01]]]], device='cuda:0') torch.Size([4, 2, 128, 32])
tensor([[[-1.5734, -1.7129, -1.4134,  ...,  0.0589,  0.5008, -0.6944],
         [-0.9126, -0.0518,  0.7838,  ..., -0.2224, -0.8308, -0.1295],
         [-0.2143,  0.9642,  1.5159,  ..., -0.6469,  1.2353, -2.3701],
         ...,
         [ 0.2453, -0.5464, -1.2098,  ..., -1.8759,  1.3095, -0.2475],
         [ 1.2531, -0.1526, -0.7099,  ..., -0.9251, -0.2538, -1.3767],
         [-0.9644,  0.3161,  0.6030,  ..., -0.5905,  0.0750, -1.1789]],

        [[ 1.5663, -0.4089,  0.1507,  ...,  0.0602,  1.0154,  0.2679],
         [ 1.3244, -0.6070,  0.7718,  ..., -1.5334, -1.4141,  0.7130],
         [-0.1823, -0.8540,  2.8046,  ..., -0.0922,  0.2731, -1.1941],
         ...,
         [ 0.0466, -0.5112,  1.5955,  ..., -1.1779,  0.5935,  0.2955],
         [ 0.2157,  1.2200,  1.0702,  ..., -0.7164, -1.7696, -0.2111],
         [ 2.1075, -0.0703,  1.9103,  ...,  0.3153, -1.2336,  0.1734]]],
       device='cuda:0', grad_fn=<SelectBackward>)
tensor([[[-3.7202e-01, -6.2735e-01,  3.5998e-01,  ..., -1.4978e+00,
           1.4795e-01, -1.5916e+00],
         [ 1.9345e-01,  1.9125e-01, -3.0204e-01,  ..., -1.8232e+00,
           2.5237e-01,  3.1241e-01],
         [ 1.1949e+00,  4.8846e-01, -1.4888e+00,  ..., -3.7036e-01,
          -5.2258e-01, -1.4187e-01],
         ...,
         [-3.9577e-01, -2.1417e-01, -3.2273e+00,  ..., -7.8880e-02,
          -5.2848e-01, -7.4731e-03],
         [-1.1023e+00,  2.2755e-03, -1.0279e+00,  ..., -1.2938e-01,
          -2.1799e+00,  7.6771e-01],
         [ 3.0411e-01,  2.8100e-01,  7.1824e-01,  ..., -1.8259e+00,
          -1.8568e+00, -1.5997e+00]],

        [[-5.3138e-01, -7.7949e-01, -1.1567e+00,  ..., -1.5094e-01,
           2.3499e-01,  4.0926e-01],
         [ 2.4860e+00,  3.8930e-03,  1.0529e+00,  ..., -3.5156e-01,
          -3.5284e-01, -3.2153e-01],
         [ 8.6185e-02,  1.9404e+00,  7.7717e-01,  ...,  2.3026e-02,
           4.2635e-01,  1.3521e+00],
         ...,
         [ 8.4493e-01, -4.8424e-01, -1.6605e-02,  ..., -5.5682e-01,
          -3.5889e-01, -1.1575e-01],
         [-2.7592e-01, -2.6609e-01,  2.8139e-01,  ...,  6.3264e-01,
           1.2941e-01,  1.3029e-01],
         [ 3.0082e-02, -7.2512e-02,  1.0686e+00,  ...,  1.6331e-01,
          -1.2718e+00, -7.7184e-02]]], device='cuda:0',
       grad_fn=<SelectBackward>)
Train Loss : 966.732, Val Loss : 3424.475
======> Trajectory Loss : 749.820, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.698, BelowGroundPenalize Loss : 147.135
===> [Minibatch 22/129].........tensor([[[-1.5734, -1.7129, -1.4134,  ...,  0.0589,  0.5008, -0.6944],
         [-0.9126, -0.0518,  0.7838,  ..., -0.2224, -0.8308, -0.1295],
         [-0.2143,  0.9642,  1.5159,  ..., -0.6469,  1.2353, -2.3701],
         ...,
         [ 0.2453, -0.5464, -1.2098,  ..., -1.8759,  1.3095, -0.2475],
         [ 1.2531, -0.1526, -0.7099,  ..., -0.9251, -0.2538, -1.3767],
         [-0.9644,  0.3161,  0.6030,  ..., -0.5905,  0.0750, -1.1789]],

        [[ 1.5663, -0.4089,  0.1507,  ...,  0.0602,  1.0154,  0.2679],
         [ 1.3244, -0.6070,  0.7718,  ..., -1.5334, -1.4141,  0.7130],
         [-0.1823, -0.8540,  2.8046,  ..., -0.0922,  0.2731, -1.1941],
         ...,
         [ 0.0466, -0.5112,  1.5955,  ..., -1.1779,  0.5935,  0.2955],
         [ 0.2157,  1.2200,  1.0702,  ..., -0.7164, -1.7696, -0.2111],
         [ 2.1075, -0.0703,  1.9103,  ...,  0.3153, -1.2336,  0.1734]]],
       device='cuda:0', grad_fn=<SelectBackward>)
tensor([[[-3.7202e-01, -6.2735e-01,  3.5998e-01,  ..., -1.4978e+00,
           1.4795e-01, -1.5916e+00],
         [ 1.9345e-01,  1.9125e-01, -3.0204e-01,  ..., -1.8232e+00,
           2.5237e-01,  3.1241e-01],
         [ 1.1949e+00,  4.8846e-01, -1.4888e+00,  ..., -3.7036e-01,
          -5.2258e-01, -1.4187e-01],
         ...,
         [-3.9577e-01, -2.1417e-01, -3.2273e+00,  ..., -7.8880e-02,
          -5.2848e-01, -7.4731e-03],
         [-1.1023e+00,  2.2755e-03, -1.0279e+00,  ..., -1.2938e-01,
          -2.1799e+00,  7.6771e-01],
         [ 3.0411e-01,  2.8100e-01,  7.1824e-01,  ..., -1.8259e+00,
          -1.8568e+00, -1.5997e+00]],

        [[-5.3138e-01, -7.7949e-01, -1.1567e+00,  ..., -1.5094e-01,
           2.3499e-01,  4.0926e-01],
         [ 2.4860e+00,  3.8930e-03,  1.0529e+00,  ..., -3.5156e-01,
          -3.5284e-01, -3.2153e-01],
         [ 8.6185e-02,  1.9404e+00,  7.7717e-01,  ...,  2.3026e-02,
           4.2635e-01,  1.3521e+00],
         ...,
         [ 8.4493e-01, -4.8424e-01, -1.6605e-02,  ..., -5.5682e-01,
          -3.5889e-01, -1.1575e-01],
         [-2.7592e-01, -2.6609e-01,  2.8139e-01,  ...,  6.3264e-01,
           1.2941e-01,  1.3029e-01],
         [ 3.0082e-02, -7.2512e-02,  1.0686e+00,  ...,  1.6331e-01,
          -1.2718e+00, -7.7184e-02]]], device='cuda:0',
       grad_fn=<SelectBackward>)
initial_hidden tensor([[[[-3.7550e-01, -6.3503e-01,  3.6667e-01,  ..., -1.5058e+00,
            1.4696e-01, -1.5988e+00],
          [ 1.8736e-01,  1.8210e-01, -2.9292e-01,  ..., -1.8317e+00,
            2.4353e-01,  3.0435e-01],
          [ 1.1911e+00,  4.8075e-01, -1.4819e+00,  ..., -3.7764e-01,
           -5.2945e-01, -1.4919e-01],
          ...,
          [-3.9888e-01, -2.1993e-01, -3.2213e+00,  ..., -8.4218e-02,
           -5.3136e-01, -1.3770e-02],
          [-1.1013e+00, -6.2122e-03, -1.0198e+00,  ..., -1.3698e-01,
           -2.1870e+00,  7.5924e-01],
          [ 2.9801e-01,  2.7260e-01,  7.2606e-01,  ..., -1.8336e+00,
           -1.8634e+00, -1.6072e+00]],

         [[-5.2840e-01, -7.7662e-01, -1.1538e+00,  ..., -1.5173e-01,
            2.3503e-01,  4.0675e-01],
          [ 2.4911e+00, -8.1505e-04,  1.0555e+00,  ..., -3.5059e-01,
           -3.5023e-01, -3.2390e-01],
          [ 9.2471e-02,  1.9347e+00,  7.7953e-01,  ...,  2.2019e-02,
            4.3152e-01,  1.3459e+00],
          ...,
          [ 8.4541e-01, -4.8934e-01, -1.5920e-02,  ..., -5.5464e-01,
           -3.5774e-01, -1.1940e-01],
          [-2.7200e-01, -2.7050e-01,  2.7727e-01,  ...,  6.3526e-01,
            1.3626e-01,  1.2477e-01],
          [ 2.9933e-02, -7.9246e-02,  1.0715e+00,  ...,  1.6413e-01,
           -1.2720e+00, -8.2194e-02]]],


        [[[ 6.0986e-01, -1.6040e+00,  7.3611e-01,  ..., -1.1409e-01,
           -2.5901e+00,  3.3501e-01],
          [-4.1881e-01,  4.6610e-01,  3.7309e-01,  ...,  6.4723e-01,
           -2.5679e+00,  2.7859e-01],
          [-1.3925e+00, -4.1003e-01,  1.7968e+00,  ..., -1.6047e+00,
           -2.0869e+00, -1.6332e-01],
          ...,
          [-1.1432e+00,  1.3331e+00, -6.4927e-01,  ...,  5.8327e-01,
           -6.2086e-01, -3.1852e-01],
          [ 1.8446e-01,  1.3619e+00,  4.9850e-01,  ...,  4.0861e-01,
           -7.5605e-02,  1.1147e+00],
          [ 2.1783e+00, -1.9812e-01, -4.9400e-01,  ...,  3.1024e-01,
           -3.9481e-01,  7.3088e-01]],

         [[ 5.1517e-01,  5.6023e-01,  1.4747e+00,  ..., -1.0546e-01,
           -5.3878e-01,  2.0648e+00],
          [-9.5515e-01,  7.9248e-01,  5.5747e-01,  ..., -2.3563e-01,
           -7.0834e-01, -6.2732e-01],
          [ 2.2372e-02,  1.1600e+00, -1.1020e+00,  ...,  6.4900e-01,
            1.2225e+00, -2.3493e-01],
          ...,
          [-1.3003e+00, -9.3755e-03, -7.2695e-01,  ..., -1.6767e+00,
            2.0116e+00, -1.3139e+00],
          [ 2.2522e+00, -2.4249e+00, -1.0532e+00,  ..., -1.1691e+00,
            1.0365e+00,  1.5991e-01],
          [-2.7014e-01, -7.9517e-01, -8.5092e-01,  ..., -6.6364e-01,
            5.6398e-02, -2.3189e+00]]],


        [[[ 2.7018e-01,  9.8837e-01,  6.1557e-01,  ...,  1.2968e+00,
            8.6927e-01,  2.5298e-02],
          [ 8.2826e-01, -3.2923e-01, -4.3961e-01,  ..., -1.8259e+00,
            1.3298e+00,  1.5846e+00],
          [ 1.4796e+00, -8.4877e-01,  7.5660e-01,  ..., -6.9945e-01,
            1.1798e+00,  5.9946e-01],
          ...,
          [ 7.1499e-01,  1.7584e+00,  9.4411e-01,  ..., -5.1107e-01,
           -1.2834e+00,  9.6034e-02],
          [-2.5177e-01, -5.7851e-01, -2.4311e-01,  ...,  3.9539e-01,
           -5.7226e-01,  3.5028e-01],
          [-1.3078e+00, -1.1251e+00,  1.7808e+00,  ...,  8.0871e-01,
            6.0856e-01, -1.7618e+00]],

         [[-7.4976e-01, -2.0356e+00,  5.9255e-01,  ..., -2.3201e+00,
            6.5132e-01, -2.5805e+00],
          [ 1.0063e+00, -9.5058e-01,  2.8216e-01,  ...,  1.1534e+00,
            6.5128e-01,  1.9602e-01],
          [ 1.9630e+00,  2.3343e-01, -2.7502e-01,  ...,  8.7346e-01,
            5.5388e-01, -3.2019e-01],
          ...,
          [-1.3441e+00,  2.2145e+00, -9.5993e-01,  ..., -6.6054e-01,
            1.5208e+00, -3.7849e-01],
          [ 1.3930e+00, -1.2378e+00, -2.7174e-01,  ...,  5.2206e-01,
           -1.0911e+00,  1.1014e+00],
          [-1.8933e+00, -1.4143e-01, -7.1161e-01,  ...,  5.0434e-01,
           -1.0955e+00, -7.4872e-01]]],


        [[[-2.3112e+00, -2.1333e+00, -2.5161e-01,  ...,  7.5710e-01,
            6.5616e-01, -1.0469e+00],
          [-3.5184e-02,  7.0994e-02,  1.3880e+00,  ...,  1.1783e+00,
            1.1869e+00,  1.0478e+00],
          [ 1.1126e+00, -8.5342e-01, -9.9758e-01,  ...,  1.6215e-01,
            9.3217e-01,  1.1031e-01],
          ...,
          [-1.4059e+00, -2.1613e+00, -1.7141e+00,  ...,  6.3209e-01,
            8.5859e-01,  8.0463e-01],
          [ 1.3375e+00, -3.5082e-01,  2.4743e-01,  ..., -8.0278e-01,
            1.0798e-01,  1.0715e-01],
          [ 1.7657e-01,  1.4958e+00,  3.6196e-01,  ..., -2.4353e-01,
           -1.8244e+00,  1.2973e+00]],

         [[ 1.5216e+00,  3.5926e-01,  5.9064e-01,  ...,  1.2019e+00,
            9.5789e-01,  4.9126e-01],
          [ 9.9935e-01,  8.7311e-01,  1.7965e-01,  ..., -1.3252e+00,
           -7.6834e-01,  2.0351e+00],
          [ 1.0642e+00, -6.2695e-01, -1.2683e+00,  ...,  2.4460e-01,
           -4.9772e-02,  6.8178e-01],
          ...,
          [-3.1913e-01,  4.2702e-01,  5.1189e-01,  ..., -5.2025e-01,
            3.2499e-01,  1.0803e+00],
          [ 6.3710e-01, -9.6076e-02, -6.1835e-01,  ..., -3.5582e-01,
            1.1443e-01,  7.7166e-01],
          [-5.4258e-01,  2.4137e-01, -3.9722e-01,  ...,  4.3932e-01,
           -1.6458e-01, -4.0209e-01]]]], device='cuda:0') torch.Size([4, 2, 128, 32])
initial_cell tensor([[[[ 0.0066,  0.4150,  2.6988,  ...,  0.4583,  0.3005, -1.4315],
          [ 0.3793,  0.0085,  0.0261,  ...,  1.8401, -1.7796,  0.6864],
          [-0.4375, -0.5516,  0.1785,  ...,  0.6228, -0.0037,  0.4870],
          ...,
          [-0.9703,  0.0097, -1.4600,  ..., -0.2769, -0.1115,  0.1610],
          [ 0.3035,  0.1466, -0.6827,  ...,  0.9055,  0.8406, -1.8243],
          [ 0.5468, -1.2574, -1.1726,  ..., -1.1683, -0.4725, -0.2791]],

         [[-0.2469, -0.0733,  0.2472,  ...,  1.9709,  1.1051,  0.2729],
          [-0.3499, -1.6618,  2.3283,  ...,  0.5728,  0.2067,  0.6403],
          [ 0.4398, -0.1467, -0.1961,  ...,  0.2754,  0.1582, -0.3243],
          ...,
          [-0.1469,  0.3413,  0.3388,  ...,  1.0945, -0.2929, -0.2448],
          [ 0.5247,  1.0412, -0.6919,  ...,  0.4309,  1.2311,  0.8427],
          [ 0.2327,  2.9599,  1.2911,  ..., -0.1023,  1.0250, -0.3423]]],


        [[[ 0.7964, -0.6822, -0.6179,  ...,  0.3113, -0.3868, -1.1065],
          [ 2.3519,  0.4702, -0.7026,  ...,  0.4075, -0.1872, -0.2851],
          [ 1.7602,  1.7694, -0.3663,  ..., -1.8828,  0.9333, -0.6348],
          ...,
          [-0.0244,  0.5311,  1.3721,  ...,  0.1859,  0.3899,  1.5247],
          [-0.4292, -0.1093,  1.0944,  ...,  0.0789,  0.5886, -0.5720],
          [ 1.0731, -0.2625,  0.2072,  ...,  0.1594, -0.2160,  0.3509]],

         [[ 0.1980, -0.2280,  0.1087,  ..., -0.6818,  0.3493, -1.6003],
          [-2.1919, -0.2837,  0.8370,  ...,  0.0384, -0.2318, -0.4567],
          [-1.4086,  0.7076,  0.6501,  ..., -0.1047,  1.0182,  0.1366],
          ...,
          [ 1.1464, -2.1657,  1.0919,  ..., -0.0636, -0.0585, -0.1574],
          [ 0.8178,  0.3488,  0.5454,  ...,  0.4010,  0.0134,  0.0654],
          [-1.6136,  1.2826,  0.2332,  ..., -0.9191,  0.3514,  0.4906]]],


        [[[ 0.9130, -0.7288,  0.9903,  ...,  1.2486, -0.8075, -1.7417],
          [-1.7766,  0.3391, -0.1637,  ...,  2.1500, -1.2672, -1.7277],
          [ 0.5284,  0.1860,  0.5194,  ..., -1.3644, -1.4623,  0.9816],
          ...,
          [ 0.7251, -0.5732, -0.9369,  ...,  1.3817, -0.8612,  0.2554],
          [ 0.3054,  0.2239, -0.4759,  ..., -0.2657, -1.5675,  1.4619],
          [ 0.1107, -0.4069, -0.3772,  ..., -1.2022, -0.1709,  0.1384]],

         [[-1.2166, -0.0836,  0.2282,  ..., -0.9498, -2.4765,  0.8618],
          [-0.5417,  0.6030, -0.2278,  ..., -1.7089,  0.8398, -0.9429],
          [-0.0195,  0.4379,  0.3956,  ..., -0.5272,  1.2543, -1.2550],
          ...,
          [-1.5027, -1.2057, -0.1122,  ..., -1.7188, -0.8237, -0.0876],
          [ 0.1997, -0.3645, -1.0290,  ...,  0.2932,  1.0715,  2.0562],
          [-1.7846, -2.3734,  0.6170,  ...,  0.4249,  0.8869,  0.4143]]],


        [[[ 0.4505, -1.3334, -0.2711,  ...,  0.3334, -1.3057, -1.6534],
          [ 1.0402, -1.3208, -0.6529,  ...,  0.2592, -0.0504, -1.2598],
          [ 1.0229, -0.0796,  1.4599,  ...,  0.4038,  0.4587, -2.8287],
          ...,
          [ 0.1606, -0.7072, -1.1554,  ...,  0.9794,  0.3223,  0.4013],
          [ 0.8184, -1.7912,  0.1027,  ..., -0.6240,  1.3619,  1.4086],
          [ 0.7918,  0.8556, -1.4984,  ..., -0.5583,  1.1987,  0.1578]],

         [[-0.4151,  1.9174,  0.7148,  ..., -0.6578,  0.3126, -0.4464],
          [ 1.0366, -2.4688,  0.7251,  ...,  0.6485,  0.7210,  1.1896],
          [ 1.8992,  0.8201, -0.0324,  ...,  0.5530, -1.6771, -0.8008],
          ...,
          [-0.4367, -0.4719,  0.1442,  ...,  0.8230,  0.6270, -0.7912],
          [ 1.9155,  2.2484, -1.0434,  ...,  0.9678,  1.5635, -1.0564],
          [ 1.1376, -1.2435, -0.3573,  ..., -0.8451, -0.0815,  0.2450]]]],
       device='cuda:0') torch.Size([4, 2, 128, 32])
tensor([[[-1.5777, -1.7137, -1.4101,  ...,  0.0584,  0.5012, -0.6973],
         [-0.9201, -0.0588,  0.7763,  ..., -0.2159, -0.8379, -0.1353],
         [-0.2157,  0.9611,  1.5225,  ..., -0.6414,  1.2293, -2.3757],
         ...,
         [ 0.2387, -0.5444, -1.2160,  ..., -1.8801,  1.3031, -0.2526],
         [ 1.2510, -0.1563, -0.7135,  ..., -0.9246, -0.2543, -1.3798],
         [-0.9676,  0.3102,  0.6012,  ..., -0.5851,  0.0805, -1.1849]],

        [[ 1.5704, -0.4045,  0.1410,  ...,  0.0520,  1.0069,  0.2769],
         [ 1.3297, -0.6143,  0.7701,  ..., -1.5308, -1.4174,  0.7225],
         [-0.1808, -0.8525,  2.7954,  ..., -0.1014,  0.2639, -1.1836],
         ...,
         [ 0.0551, -0.5047,  1.5867,  ..., -1.1777,  0.5847,  0.3048],
         [ 0.2268,  1.2266,  1.0808,  ..., -0.7093, -1.7792, -0.2060],
         [ 2.1159, -0.0611,  1.9043,  ...,  0.3128, -1.2356,  0.1830]]],
       device='cuda:0', grad_fn=<SelectBackward>)
tensor([[[-3.7550e-01, -6.3503e-01,  3.6667e-01,  ..., -1.5058e+00,
           1.4696e-01, -1.5988e+00],
         [ 1.8736e-01,  1.8210e-01, -2.9292e-01,  ..., -1.8317e+00,
           2.4353e-01,  3.0435e-01],
         [ 1.1911e+00,  4.8075e-01, -1.4819e+00,  ..., -3.7764e-01,
          -5.2945e-01, -1.4919e-01],
         ...,
         [-3.9888e-01, -2.1993e-01, -3.2213e+00,  ..., -8.4218e-02,
          -5.3136e-01, -1.3770e-02],
         [-1.1013e+00, -6.2122e-03, -1.0198e+00,  ..., -1.3698e-01,
          -2.1870e+00,  7.5924e-01],
         [ 2.9801e-01,  2.7260e-01,  7.2606e-01,  ..., -1.8336e+00,
          -1.8634e+00, -1.6072e+00]],

        [[-5.2840e-01, -7.7662e-01, -1.1538e+00,  ..., -1.5173e-01,
           2.3503e-01,  4.0675e-01],
         [ 2.4911e+00, -8.1505e-04,  1.0555e+00,  ..., -3.5059e-01,
          -3.5023e-01, -3.2390e-01],
         [ 9.2471e-02,  1.9347e+00,  7.7953e-01,  ...,  2.2019e-02,
           4.3152e-01,  1.3459e+00],
         ...,
         [ 8.4541e-01, -4.8934e-01, -1.5920e-02,  ..., -5.5464e-01,
          -3.5774e-01, -1.1940e-01],
         [-2.7200e-01, -2.7050e-01,  2.7727e-01,  ...,  6.3526e-01,
           1.3626e-01,  1.2477e-01],
         [ 2.9933e-02, -7.9246e-02,  1.0715e+00,  ...,  1.6413e-01,
          -1.2720e+00, -8.2194e-02]]], device='cuda:0',
       grad_fn=<SelectBackward>)
