==============================================Features==============================================
Prediction = depth, Environment = unity
Available features :  ['x-0', 'y-1', 'z-2', 'u-3', 'v-4', 'd-5', 'eot-6', 'og-7', 'rad-8', 'f_sin-9', 'f_cos-10', 'g-11']
Selected features :  [6]
1. input_col =  [3, 4, 6]
2. input_startpos_col =  [3, 4, 5, 6]
3. gt_col =  [5, 6]
4. gt_startpos_col =  [0, 1, 2, 6]
5. gt_xyz_col =  [0, 1, 2, 6]
====================================================================================================
[#]Training : Trajectory Estimation
Mixed:   0%|                                                                   | 0/3 [00:00<?, ?it/s]Mixed:  67%|███████████████████████████████████████▎                   | 2/3 [00:00<00:00, 13.26it/s]Mixed: 100%|███████████████████████████████████████████████████████████| 3/3 [00:00<00:00, 12.76it/s]
===============================Dataset shape===============================
Mixed : (16533,)
===========================================================================
Mixed:   0%|                                                                   | 0/1 [00:00<?, ?it/s]===============================Dataset shape===============================
Mixed: 100%|███████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 24.55it/s]
Mixed : (1841,)
===========================================================================
======================================================Summary Batch (batch_size = 128)=========================================================================
Input batch [0] : batch=torch.Size([128, 901, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 901, 3]), initial position=torch.Size([128, 1, 4])
gt batch [0] : batch=torch.Size([128, 901, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 902, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [1] : batch=torch.Size([128, 849, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 849, 3]), initial position=torch.Size([128, 1, 4])
gt batch [1] : batch=torch.Size([128, 849, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 850, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [2] : batch=torch.Size([128, 914, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 914, 3]), initial position=torch.Size([128, 1, 4])
gt batch [2] : batch=torch.Size([128, 914, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 915, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [3] : batch=torch.Size([128, 931, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 931, 3]), initial position=torch.Size([128, 1, 4])
gt batch [3] : batch=torch.Size([128, 931, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 932, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [4] : batch=torch.Size([128, 945, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 945, 3]), initial position=torch.Size([128, 1, 4])
gt batch [4] : batch=torch.Size([128, 945, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 946, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [5] : batch=torch.Size([128, 969, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 969, 3]), initial position=torch.Size([128, 1, 4])
gt batch [5] : batch=torch.Size([128, 969, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 970, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [6] : batch=torch.Size([128, 892, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 892, 3]), initial position=torch.Size([128, 1, 4])
gt batch [6] : batch=torch.Size([128, 892, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 893, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [7] : batch=torch.Size([128, 842, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 842, 3]), initial position=torch.Size([128, 1, 4])
gt batch [7] : batch=torch.Size([128, 842, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 843, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [8] : batch=torch.Size([128, 768, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 768, 3]), initial position=torch.Size([128, 1, 4])
gt batch [8] : batch=torch.Size([128, 768, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 769, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [9] : batch=torch.Size([128, 731, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 731, 3]), initial position=torch.Size([128, 1, 4])
gt batch [9] : batch=torch.Size([128, 731, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 732, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [10] : batch=torch.Size([128, 906, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 906, 3]), initial position=torch.Size([128, 1, 4])
gt batch [10] : batch=torch.Size([128, 906, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 907, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [11] : batch=torch.Size([128, 895, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 895, 3]), initial position=torch.Size([128, 1, 4])
gt batch [11] : batch=torch.Size([128, 895, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 896, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [12] : batch=torch.Size([128, 966, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 966, 3]), initial position=torch.Size([128, 1, 4])
gt batch [12] : batch=torch.Size([128, 966, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 967, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [13] : batch=torch.Size([128, 852, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 852, 3]), initial position=torch.Size([128, 1, 4])
gt batch [13] : batch=torch.Size([128, 852, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 853, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [14] : batch=torch.Size([128, 945, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 945, 3]), initial position=torch.Size([128, 1, 4])
gt batch [14] : batch=torch.Size([128, 945, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 946, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [15] : batch=torch.Size([128, 869, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 869, 3]), initial position=torch.Size([128, 1, 4])
gt batch [15] : batch=torch.Size([128, 869, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 870, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [16] : batch=torch.Size([128, 752, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 752, 3]), initial position=torch.Size([128, 1, 4])
gt batch [16] : batch=torch.Size([128, 752, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 753, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [17] : batch=torch.Size([128, 718, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 718, 3]), initial position=torch.Size([128, 1, 4])
gt batch [17] : batch=torch.Size([128, 718, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 719, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [18] : batch=torch.Size([128, 854, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 854, 3]), initial position=torch.Size([128, 1, 4])
gt batch [18] : batch=torch.Size([128, 854, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 855, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [19] : batch=torch.Size([128, 814, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 814, 3]), initial position=torch.Size([128, 1, 4])
gt batch [19] : batch=torch.Size([128, 814, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 815, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [20] : batch=torch.Size([128, 918, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 918, 3]), initial position=torch.Size([128, 1, 4])
gt batch [20] : batch=torch.Size([128, 918, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 919, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [21] : batch=torch.Size([128, 935, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 935, 3]), initial position=torch.Size([128, 1, 4])
gt batch [21] : batch=torch.Size([128, 935, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 936, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [22] : batch=torch.Size([128, 995, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 995, 3]), initial position=torch.Size([128, 1, 4])
gt batch [22] : batch=torch.Size([128, 995, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 996, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [23] : batch=torch.Size([128, 838, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 838, 3]), initial position=torch.Size([128, 1, 4])
gt batch [23] : batch=torch.Size([128, 838, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 839, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [24] : batch=torch.Size([128, 1000, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 1000, 3]), initial position=torch.Size([128, 1, 4])
gt batch [24] : batch=torch.Size([128, 1000, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 1001, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [25] : batch=torch.Size([128, 1040, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 1040, 3]), initial position=torch.Size([128, 1, 4])
gt batch [25] : batch=torch.Size([128, 1040, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 1041, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [26] : batch=torch.Size([128, 768, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 768, 3]), initial position=torch.Size([128, 1, 4])
gt batch [26] : batch=torch.Size([128, 768, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 769, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [27] : batch=torch.Size([128, 886, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 886, 3]), initial position=torch.Size([128, 1, 4])
gt batch [27] : batch=torch.Size([128, 886, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 887, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [28] : batch=torch.Size([128, 886, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 886, 3]), initial position=torch.Size([128, 1, 4])
gt batch [28] : batch=torch.Size([128, 886, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 887, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [29] : batch=torch.Size([128, 970, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 970, 3]), initial position=torch.Size([128, 1, 4])
gt batch [29] : batch=torch.Size([128, 970, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 971, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [30] : batch=torch.Size([128, 875, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 875, 3]), initial position=torch.Size([128, 1, 4])
gt batch [30] : batch=torch.Size([128, 875, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 876, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [31] : batch=torch.Size([128, 906, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 906, 3]), initial position=torch.Size([128, 1, 4])
gt batch [31] : batch=torch.Size([128, 906, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 907, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [32] : batch=torch.Size([128, 754, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 754, 3]), initial position=torch.Size([128, 1, 4])
gt batch [32] : batch=torch.Size([128, 754, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 755, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [33] : batch=torch.Size([128, 840, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 840, 3]), initial position=torch.Size([128, 1, 4])
gt batch [33] : batch=torch.Size([128, 840, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 841, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [34] : batch=torch.Size([128, 761, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 761, 3]), initial position=torch.Size([128, 1, 4])
gt batch [34] : batch=torch.Size([128, 761, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 762, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [35] : batch=torch.Size([128, 851, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 851, 3]), initial position=torch.Size([128, 1, 4])
gt batch [35] : batch=torch.Size([128, 851, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 852, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [36] : batch=torch.Size([128, 939, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 939, 3]), initial position=torch.Size([128, 1, 4])
gt batch [36] : batch=torch.Size([128, 939, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 940, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [37] : batch=torch.Size([128, 804, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 804, 3]), initial position=torch.Size([128, 1, 4])
gt batch [37] : batch=torch.Size([128, 804, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 805, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [38] : batch=torch.Size([128, 914, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 914, 3]), initial position=torch.Size([128, 1, 4])
gt batch [38] : batch=torch.Size([128, 914, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 915, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [39] : batch=torch.Size([128, 837, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 837, 3]), initial position=torch.Size([128, 1, 4])
gt batch [39] : batch=torch.Size([128, 837, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 838, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [40] : batch=torch.Size([128, 1000, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 1000, 3]), initial position=torch.Size([128, 1, 4])
gt batch [40] : batch=torch.Size([128, 1000, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 1001, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [41] : batch=torch.Size([128, 830, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 830, 3]), initial position=torch.Size([128, 1, 4])
gt batch [41] : batch=torch.Size([128, 830, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 831, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [42] : batch=torch.Size([128, 881, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 881, 3]), initial position=torch.Size([128, 1, 4])
gt batch [42] : batch=torch.Size([128, 881, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 882, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [43] : batch=torch.Size([128, 900, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 900, 3]), initial position=torch.Size([128, 1, 4])
gt batch [43] : batch=torch.Size([128, 900, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 901, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [44] : batch=torch.Size([128, 767, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 767, 3]), initial position=torch.Size([128, 1, 4])
gt batch [44] : batch=torch.Size([128, 767, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 768, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [45] : batch=torch.Size([128, 869, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 869, 3]), initial position=torch.Size([128, 1, 4])
gt batch [45] : batch=torch.Size([128, 869, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 870, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [46] : batch=torch.Size([128, 798, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 798, 3]), initial position=torch.Size([128, 1, 4])
gt batch [46] : batch=torch.Size([128, 798, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 799, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [47] : batch=torch.Size([128, 868, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 868, 3]), initial position=torch.Size([128, 1, 4])
gt batch [47] : batch=torch.Size([128, 868, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 869, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [48] : batch=torch.Size([128, 868, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 868, 3]), initial position=torch.Size([128, 1, 4])
gt batch [48] : batch=torch.Size([128, 868, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 869, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [49] : batch=torch.Size([128, 771, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 771, 3]), initial position=torch.Size([128, 1, 4])
gt batch [49] : batch=torch.Size([128, 771, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 772, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [50] : batch=torch.Size([128, 755, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 755, 3]), initial position=torch.Size([128, 1, 4])
gt batch [50] : batch=torch.Size([128, 755, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 756, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [51] : batch=torch.Size([128, 922, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 922, 3]), initial position=torch.Size([128, 1, 4])
gt batch [51] : batch=torch.Size([128, 922, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 923, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [52] : batch=torch.Size([128, 820, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 820, 3]), initial position=torch.Size([128, 1, 4])
gt batch [52] : batch=torch.Size([128, 820, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 821, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [53] : batch=torch.Size([128, 901, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 901, 3]), initial position=torch.Size([128, 1, 4])
gt batch [53] : batch=torch.Size([128, 901, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 902, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [54] : batch=torch.Size([128, 932, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 932, 3]), initial position=torch.Size([128, 1, 4])
gt batch [54] : batch=torch.Size([128, 932, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 933, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [55] : batch=torch.Size([128, 814, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 814, 3]), initial position=torch.Size([128, 1, 4])
gt batch [55] : batch=torch.Size([128, 814, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 815, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [56] : batch=torch.Size([128, 776, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 776, 3]), initial position=torch.Size([128, 1, 4])
gt batch [56] : batch=torch.Size([128, 776, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 777, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [57] : batch=torch.Size([128, 868, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 868, 3]), initial position=torch.Size([128, 1, 4])
gt batch [57] : batch=torch.Size([128, 868, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 869, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [58] : batch=torch.Size([128, 875, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 875, 3]), initial position=torch.Size([128, 1, 4])
gt batch [58] : batch=torch.Size([128, 875, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 876, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [59] : batch=torch.Size([128, 884, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 884, 3]), initial position=torch.Size([128, 1, 4])
gt batch [59] : batch=torch.Size([128, 884, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 885, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [60] : batch=torch.Size([128, 903, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 903, 3]), initial position=torch.Size([128, 1, 4])
gt batch [60] : batch=torch.Size([128, 903, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 904, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [61] : batch=torch.Size([128, 802, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 802, 3]), initial position=torch.Size([128, 1, 4])
gt batch [61] : batch=torch.Size([128, 802, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 803, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [62] : batch=torch.Size([128, 793, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 793, 3]), initial position=torch.Size([128, 1, 4])
gt batch [62] : batch=torch.Size([128, 793, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 794, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [63] : batch=torch.Size([128, 742, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 742, 3]), initial position=torch.Size([128, 1, 4])
gt batch [63] : batch=torch.Size([128, 742, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 743, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [64] : batch=torch.Size([128, 948, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 948, 3]), initial position=torch.Size([128, 1, 4])
gt batch [64] : batch=torch.Size([128, 948, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 949, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [65] : batch=torch.Size([128, 884, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 884, 3]), initial position=torch.Size([128, 1, 4])
gt batch [65] : batch=torch.Size([128, 884, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 885, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [66] : batch=torch.Size([128, 955, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 955, 3]), initial position=torch.Size([128, 1, 4])
gt batch [66] : batch=torch.Size([128, 955, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 956, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [67] : batch=torch.Size([128, 804, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 804, 3]), initial position=torch.Size([128, 1, 4])
gt batch [67] : batch=torch.Size([128, 804, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 805, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [68] : batch=torch.Size([128, 904, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 904, 3]), initial position=torch.Size([128, 1, 4])
gt batch [68] : batch=torch.Size([128, 904, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 905, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [69] : batch=torch.Size([128, 840, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 840, 3]), initial position=torch.Size([128, 1, 4])
gt batch [69] : batch=torch.Size([128, 840, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 841, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [70] : batch=torch.Size([128, 782, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 782, 3]), initial position=torch.Size([128, 1, 4])
gt batch [70] : batch=torch.Size([128, 782, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 783, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [71] : batch=torch.Size([128, 869, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 869, 3]), initial position=torch.Size([128, 1, 4])
gt batch [71] : batch=torch.Size([128, 869, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 870, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [72] : batch=torch.Size([128, 1023, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 1023, 3]), initial position=torch.Size([128, 1, 4])
gt batch [72] : batch=torch.Size([128, 1023, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 1024, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [73] : batch=torch.Size([128, 911, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 911, 3]), initial position=torch.Size([128, 1, 4])
gt batch [73] : batch=torch.Size([128, 911, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 912, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [74] : batch=torch.Size([128, 945, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 945, 3]), initial position=torch.Size([128, 1, 4])
gt batch [74] : batch=torch.Size([128, 945, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 946, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [75] : batch=torch.Size([128, 882, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 882, 3]), initial position=torch.Size([128, 1, 4])
gt batch [75] : batch=torch.Size([128, 882, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 883, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [76] : batch=torch.Size([128, 844, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 844, 3]), initial position=torch.Size([128, 1, 4])
gt batch [76] : batch=torch.Size([128, 844, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 845, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [77] : batch=torch.Size([128, 919, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 919, 3]), initial position=torch.Size([128, 1, 4])
gt batch [77] : batch=torch.Size([128, 919, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 920, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [78] : batch=torch.Size([128, 897, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 897, 3]), initial position=torch.Size([128, 1, 4])
gt batch [78] : batch=torch.Size([128, 897, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 898, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [79] : batch=torch.Size([128, 833, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 833, 3]), initial position=torch.Size([128, 1, 4])
gt batch [79] : batch=torch.Size([128, 833, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 834, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [80] : batch=torch.Size([128, 979, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 979, 3]), initial position=torch.Size([128, 1, 4])
gt batch [80] : batch=torch.Size([128, 979, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 980, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [81] : batch=torch.Size([128, 805, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 805, 3]), initial position=torch.Size([128, 1, 4])
gt batch [81] : batch=torch.Size([128, 805, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 806, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [82] : batch=torch.Size([128, 869, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 869, 3]), initial position=torch.Size([128, 1, 4])
gt batch [82] : batch=torch.Size([128, 869, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 870, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [83] : batch=torch.Size([128, 843, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 843, 3]), initial position=torch.Size([128, 1, 4])
gt batch [83] : batch=torch.Size([128, 843, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 844, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [84] : batch=torch.Size([128, 830, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 830, 3]), initial position=torch.Size([128, 1, 4])
gt batch [84] : batch=torch.Size([128, 830, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 831, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [85] : batch=torch.Size([128, 914, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 914, 3]), initial position=torch.Size([128, 1, 4])
gt batch [85] : batch=torch.Size([128, 914, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 915, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [86] : batch=torch.Size([128, 976, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 976, 3]), initial position=torch.Size([128, 1, 4])
gt batch [86] : batch=torch.Size([128, 976, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 977, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [87] : batch=torch.Size([128, 879, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 879, 3]), initial position=torch.Size([128, 1, 4])
gt batch [87] : batch=torch.Size([128, 879, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 880, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [88] : batch=torch.Size([128, 814, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 814, 3]), initial position=torch.Size([128, 1, 4])
gt batch [88] : batch=torch.Size([128, 814, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 815, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [89] : batch=torch.Size([128, 817, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 817, 3]), initial position=torch.Size([128, 1, 4])
gt batch [89] : batch=torch.Size([128, 817, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 818, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [90] : batch=torch.Size([128, 825, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 825, 3]), initial position=torch.Size([128, 1, 4])
gt batch [90] : batch=torch.Size([128, 825, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 826, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [91] : batch=torch.Size([128, 841, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 841, 3]), initial position=torch.Size([128, 1, 4])
gt batch [91] : batch=torch.Size([128, 841, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 842, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [92] : batch=torch.Size([128, 843, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 843, 3]), initial position=torch.Size([128, 1, 4])
gt batch [92] : batch=torch.Size([128, 843, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 844, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [93] : batch=torch.Size([128, 696, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 696, 3]), initial position=torch.Size([128, 1, 4])
gt batch [93] : batch=torch.Size([128, 696, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 697, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [94] : batch=torch.Size([128, 797, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 797, 3]), initial position=torch.Size([128, 1, 4])
gt batch [94] : batch=torch.Size([128, 797, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 798, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [95] : batch=torch.Size([128, 765, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 765, 3]), initial position=torch.Size([128, 1, 4])
gt batch [95] : batch=torch.Size([128, 765, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 766, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [96] : batch=torch.Size([128, 826, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 826, 3]), initial position=torch.Size([128, 1, 4])
gt batch [96] : batch=torch.Size([128, 826, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 827, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [97] : batch=torch.Size([128, 817, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 817, 3]), initial position=torch.Size([128, 1, 4])
gt batch [97] : batch=torch.Size([128, 817, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 818, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [98] : batch=torch.Size([128, 806, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 806, 3]), initial position=torch.Size([128, 1, 4])
gt batch [98] : batch=torch.Size([128, 806, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 807, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [99] : batch=torch.Size([128, 796, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 796, 3]), initial position=torch.Size([128, 1, 4])
gt batch [99] : batch=torch.Size([128, 796, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 797, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [100] : batch=torch.Size([128, 748, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 748, 3]), initial position=torch.Size([128, 1, 4])
gt batch [100] : batch=torch.Size([128, 748, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 749, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [101] : batch=torch.Size([128, 912, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 912, 3]), initial position=torch.Size([128, 1, 4])
gt batch [101] : batch=torch.Size([128, 912, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 913, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [102] : batch=torch.Size([128, 917, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 917, 3]), initial position=torch.Size([128, 1, 4])
gt batch [102] : batch=torch.Size([128, 917, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 918, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [103] : batch=torch.Size([128, 860, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 860, 3]), initial position=torch.Size([128, 1, 4])
gt batch [103] : batch=torch.Size([128, 860, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 861, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [104] : batch=torch.Size([128, 915, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 915, 3]), initial position=torch.Size([128, 1, 4])
gt batch [104] : batch=torch.Size([128, 915, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 916, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [105] : batch=torch.Size([128, 767, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 767, 3]), initial position=torch.Size([128, 1, 4])
gt batch [105] : batch=torch.Size([128, 767, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 768, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [106] : batch=torch.Size([128, 884, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 884, 3]), initial position=torch.Size([128, 1, 4])
gt batch [106] : batch=torch.Size([128, 884, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 885, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [107] : batch=torch.Size([128, 891, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 891, 3]), initial position=torch.Size([128, 1, 4])
gt batch [107] : batch=torch.Size([128, 891, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 892, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [108] : batch=torch.Size([128, 733, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 733, 3]), initial position=torch.Size([128, 1, 4])
gt batch [108] : batch=torch.Size([128, 733, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 734, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [109] : batch=torch.Size([128, 869, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 869, 3]), initial position=torch.Size([128, 1, 4])
gt batch [109] : batch=torch.Size([128, 869, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 870, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [110] : batch=torch.Size([128, 856, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 856, 3]), initial position=torch.Size([128, 1, 4])
gt batch [110] : batch=torch.Size([128, 856, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 857, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [111] : batch=torch.Size([128, 908, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 908, 3]), initial position=torch.Size([128, 1, 4])
gt batch [111] : batch=torch.Size([128, 908, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 909, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [112] : batch=torch.Size([128, 862, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 862, 3]), initial position=torch.Size([128, 1, 4])
gt batch [112] : batch=torch.Size([128, 862, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 863, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [113] : batch=torch.Size([128, 982, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 982, 3]), initial position=torch.Size([128, 1, 4])
gt batch [113] : batch=torch.Size([128, 982, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 983, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [114] : batch=torch.Size([128, 868, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 868, 3]), initial position=torch.Size([128, 1, 4])
gt batch [114] : batch=torch.Size([128, 868, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 869, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [115] : batch=torch.Size([128, 956, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 956, 3]), initial position=torch.Size([128, 1, 4])
gt batch [115] : batch=torch.Size([128, 956, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 957, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [116] : batch=torch.Size([128, 768, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 768, 3]), initial position=torch.Size([128, 1, 4])
gt batch [116] : batch=torch.Size([128, 768, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 769, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [117] : batch=torch.Size([128, 943, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 943, 3]), initial position=torch.Size([128, 1, 4])
gt batch [117] : batch=torch.Size([128, 943, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 944, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [118] : batch=torch.Size([128, 698, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 698, 3]), initial position=torch.Size([128, 1, 4])
gt batch [118] : batch=torch.Size([128, 698, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 699, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [119] : batch=torch.Size([128, 773, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 773, 3]), initial position=torch.Size([128, 1, 4])
gt batch [119] : batch=torch.Size([128, 773, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 774, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [120] : batch=torch.Size([128, 811, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 811, 3]), initial position=torch.Size([128, 1, 4])
gt batch [120] : batch=torch.Size([128, 811, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 812, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [121] : batch=torch.Size([128, 963, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 963, 3]), initial position=torch.Size([128, 1, 4])
gt batch [121] : batch=torch.Size([128, 963, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 964, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [122] : batch=torch.Size([128, 868, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 868, 3]), initial position=torch.Size([128, 1, 4])
gt batch [122] : batch=torch.Size([128, 868, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 869, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [123] : batch=torch.Size([128, 864, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 864, 3]), initial position=torch.Size([128, 1, 4])
gt batch [123] : batch=torch.Size([128, 864, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 865, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [124] : batch=torch.Size([128, 883, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 883, 3]), initial position=torch.Size([128, 1, 4])
gt batch [124] : batch=torch.Size([128, 883, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 884, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [125] : batch=torch.Size([128, 894, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 894, 3]), initial position=torch.Size([128, 1, 4])
gt batch [125] : batch=torch.Size([128, 894, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 895, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [126] : batch=torch.Size([128, 860, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 860, 3]), initial position=torch.Size([128, 1, 4])
gt batch [126] : batch=torch.Size([128, 860, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 861, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [127] : batch=torch.Size([128, 717, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 717, 3]), initial position=torch.Size([128, 1, 4])
gt batch [127] : batch=torch.Size([128, 717, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 718, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [128] : batch=torch.Size([128, 900, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 900, 3]), initial position=torch.Size([128, 1, 4])
gt batch [128] : batch=torch.Size([128, 900, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 901, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
{'flag': {'input_size': 2, 'output_size': 1, 'hidden_dim': 32, 'n_layers': 1, 'n_stack': 4, 'recurrent_stacked': [2, 32, 32, 32, 32], 'fc_size': [64, 32, 16, 8, 4, 1]}, 'depth': {'input_size': 3, 'output_size': 2, 'hidden_dim': 32, 'n_layers': 1, 'n_stack': 4, 'recurrent_stacked': [3, 32, 32, 32, 32], 'fc_size': [64, 32, 16, 8, 4, 2]}}
===>No model checkpoint
[#] Define the Learning rate, Optimizer, Decay rate and Scheduler...
[#]Model Architecture
####### Model - EOT #######
BiLSTMResidualTrainableInit(
  (recurrent_blocks): ModuleList(
    (0): LSTM(2, 32, batch_first=True, bidirectional=True)
    (1): LSTM(64, 32, batch_first=True, bidirectional=True)
    (2): LSTM(64, 32, batch_first=True, bidirectional=True)
    (3): LSTM(64, 32, batch_first=True, bidirectional=True)
  )
  (fc_blocks): Sequential(
    (0): Sequential(
      (0): Linear(in_features=64, out_features=32, bias=True)
      (1): LeakyReLU(negative_slope=0.01)
    )
    (1): Sequential(
      (0): Linear(in_features=32, out_features=16, bias=True)
      (1): LeakyReLU(negative_slope=0.01)
    )
    (2): Sequential(
      (0): Linear(in_features=16, out_features=8, bias=True)
      (1): LeakyReLU(negative_slope=0.01)
    )
    (3): Sequential(
      (0): Linear(in_features=8, out_features=4, bias=True)
      (1): LeakyReLU(negative_slope=0.01)
    )
    (4): Sequential(
      (0): Linear(in_features=4, out_features=1, bias=True)
      (1): Sigmoid()
    )
  )
)
####### Model - Depth #######
BiLSTMResidualTrainableInit(
  (recurrent_blocks): ModuleList(
    (0): LSTM(3, 32, batch_first=True, bidirectional=True)
    (1): LSTM(64, 32, batch_first=True, bidirectional=True)
    (2): LSTM(64, 32, batch_first=True, bidirectional=True)
    (3): LSTM(64, 32, batch_first=True, bidirectional=True)
  )
  (fc_blocks): Sequential(
    (0): Sequential(
      (0): Linear(in_features=64, out_features=32, bias=True)
      (1): LeakyReLU(negative_slope=0.01)
    )
    (1): Sequential(
      (0): Linear(in_features=32, out_features=16, bias=True)
      (1): LeakyReLU(negative_slope=0.01)
    )
    (2): Sequential(
      (0): Linear(in_features=16, out_features=8, bias=True)
      (1): LeakyReLU(negative_slope=0.01)
    )
    (3): Sequential(
      (0): Linear(in_features=8, out_features=4, bias=True)
      (1): LeakyReLU(negative_slope=0.01)
    )
    (4): Sequential(
      (0): Linear(in_features=4, out_features=2, bias=True)
    )
  )
)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[Epoch : 1/100000]<<<<<<<<<<<<<<<<<<<<<<<<<<<<
[#]Learning rate (Depth & EOT) :  0.01
===> [Minibatch 1/129].........IDX = 0 :  tensor([[[ 0.4823, -0.2728, -0.1906,  ...,  0.8295,  1.5887,  0.6003],
         [ 1.7378,  0.9787, -0.4005,  ..., -0.0565,  2.3668,  0.6495],
         [ 0.7036, -0.0817,  0.5402,  ..., -0.8453,  0.1928, -1.1722],
         ...,
         [-0.2379, -3.3980, -0.2913,  ..., -0.5635,  0.2163,  1.1677],
         [-0.2491,  0.0173, -0.5250,  ..., -0.2517,  0.0415, -0.4423],
         [-1.1271, -1.1247, -0.1415,  ..., -0.7366,  0.5011, -1.2683]],

        [[ 1.2056, -1.2145, -0.1054,  ..., -0.3960,  0.5859, -2.5365],
         [ 1.1142, -1.3268,  1.9417,  ...,  0.4460, -0.4011, -0.3984],
         [ 0.0491,  0.6501,  2.8132,  ..., -0.3533, -0.4136,  1.3920],
         ...,
         [-1.3536, -0.6209,  1.0019,  ...,  0.7587, -0.7124, -0.9907],
         [-1.0759, -1.6382, -0.0059,  ..., -1.8314, -0.1228,  0.3176],
         [ 0.2255,  0.1682,  0.1928,  ...,  0.2674,  0.4621,  0.2083]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 3.1762, -0.2702, -1.6700,  ..., -2.1904,  1.0411,  1.0119],
         [ 2.3948, -1.1265,  0.6017,  ...,  0.0302,  0.9125, -1.9431],
         [ 0.8503,  0.4610, -0.4747,  ..., -0.3621,  1.1035, -0.6395],
         ...,
         [ 0.8106,  0.3244,  1.4629,  ..., -1.7566, -2.1759,  0.8425],
         [ 0.9263,  1.2397,  0.5384,  ..., -0.6431,  0.3234,  0.9586],
         [-1.5886,  0.1455,  0.1410,  ...,  0.9001,  1.5322,  0.3790]],

        [[-0.0660,  0.1714, -1.6673,  ..., -0.2309, -1.1181, -0.9292],
         [-0.4700,  0.1555, -0.6468,  ...,  1.5299,  0.5295, -0.3216],
         [-0.6480,  0.8068, -0.3388,  ...,  0.2876,  0.0126, -0.1919],
         ...,
         [ 2.0819,  0.9684, -1.1912,  ...,  0.5431, -0.6448,  1.0066],
         [ 2.2663,  0.5313, -0.0230,  ..., -1.0077,  0.3946,  0.3418],
         [-0.0991, -0.5753,  0.8784,  ...,  1.5714, -0.0075, -0.4266]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 0.4823, -0.2728, -0.1906,  ...,  0.8295,  1.5887,  0.6003],
         [ 1.7378,  0.9787, -0.4005,  ..., -0.0565,  2.3668,  0.6495],
         [ 0.7036, -0.0817,  0.5402,  ..., -0.8453,  0.1928, -1.1722],
         ...,
         [-0.2379, -3.3980, -0.2913,  ..., -0.5635,  0.2163,  1.1677],
         [-0.2491,  0.0173, -0.5250,  ..., -0.2517,  0.0415, -0.4423],
         [-1.1271, -1.1247, -0.1415,  ..., -0.7366,  0.5011, -1.2683]],

        [[ 1.2056, -1.2145, -0.1054,  ..., -0.3960,  0.5859, -2.5365],
         [ 1.1142, -1.3268,  1.9417,  ...,  0.4460, -0.4011, -0.3984],
         [ 0.0491,  0.6501,  2.8132,  ..., -0.3533, -0.4136,  1.3920],
         ...,
         [-1.3536, -0.6209,  1.0019,  ...,  0.7587, -0.7124, -0.9907],
         [-1.0759, -1.6382, -0.0059,  ..., -1.8314, -0.1228,  0.3176],
         [ 0.2255,  0.1682,  0.1928,  ...,  0.2674,  0.4621,  0.2083]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 3.1762, -0.2702, -1.6700,  ..., -2.1904,  1.0411,  1.0119],
         [ 2.3948, -1.1265,  0.6017,  ...,  0.0302,  0.9125, -1.9431],
         [ 0.8503,  0.4610, -0.4747,  ..., -0.3621,  1.1035, -0.6395],
         ...,
         [ 0.8106,  0.3244,  1.4629,  ..., -1.7566, -2.1759,  0.8425],
         [ 0.9263,  1.2397,  0.5384,  ..., -0.6431,  0.3234,  0.9586],
         [-1.5886,  0.1455,  0.1410,  ...,  0.9001,  1.5322,  0.3790]],

        [[-0.0660,  0.1714, -1.6673,  ..., -0.2309, -1.1181, -0.9292],
         [-0.4700,  0.1555, -0.6468,  ...,  1.5299,  0.5295, -0.3216],
         [-0.6480,  0.8068, -0.3388,  ...,  0.2876,  0.0126, -0.1919],
         ...,
         [ 2.0819,  0.9684, -1.1912,  ...,  0.5431, -0.6448,  1.0066],
         [ 2.2663,  0.5313, -0.0230,  ..., -1.0077,  0.3946,  0.3418],
         [-0.0991, -0.5753,  0.8784,  ...,  1.5714, -0.0075, -0.4266]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 278.698, Val Loss : 203.229
======> Trajectory Loss : 139.761, Gravity Loss : 0.000, EndOfTrajectory Loss : 1.389, BelowGroundPenalize Loss : 0.000
Opening in existing browser session.
[1019/143058.484291:ERROR:nacl_helper_linux.cc(308)] NaCl helper process running without a sandbox!
Most likely you need to configure your SUID sandbox correctly
Opening in existing browser session.
[1019/143058.803453:ERROR:nacl_helper_linux.cc(308)] NaCl helper process running without a sandbox!
Most likely you need to configure your SUID sandbox correctly
Opening in existing browser session.
[1019/143059.093816:ERROR:nacl_helper_linux.cc(308)] NaCl helper process running without a sandbox!
Most likely you need to configure your SUID sandbox correctly
===> [Minibatch 2/129].........IDX = 0 :  tensor([[[ 0.4823, -0.2728, -0.1906,  ...,  0.8295,  1.5887,  0.6003],
         [ 1.7378,  0.9787, -0.4005,  ..., -0.0565,  2.3668,  0.6495],
         [ 0.7036, -0.0817,  0.5402,  ..., -0.8453,  0.1928, -1.1722],
         ...,
         [-0.2379, -3.3980, -0.2913,  ..., -0.5635,  0.2163,  1.1677],
         [-0.2491,  0.0173, -0.5250,  ..., -0.2517,  0.0415, -0.4423],
         [-1.1271, -1.1247, -0.1415,  ..., -0.7366,  0.5011, -1.2683]],

        [[ 1.2056, -1.2145, -0.1054,  ..., -0.3960,  0.5859, -2.5365],
         [ 1.1142, -1.3268,  1.9417,  ...,  0.4460, -0.4011, -0.3984],
         [ 0.0491,  0.6501,  2.8132,  ..., -0.3533, -0.4136,  1.3920],
         ...,
         [-1.3536, -0.6209,  1.0019,  ...,  0.7587, -0.7124, -0.9907],
         [-1.0759, -1.6382, -0.0059,  ..., -1.8314, -0.1228,  0.3176],
         [ 0.2255,  0.1682,  0.1928,  ...,  0.2674,  0.4621,  0.2083]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 3.1762, -0.2702, -1.6700,  ..., -2.1904,  1.0411,  1.0119],
         [ 2.3948, -1.1265,  0.6017,  ...,  0.0302,  0.9125, -1.9431],
         [ 0.8503,  0.4610, -0.4747,  ..., -0.3621,  1.1035, -0.6395],
         ...,
         [ 0.8106,  0.3244,  1.4629,  ..., -1.7566, -2.1759,  0.8425],
         [ 0.9263,  1.2397,  0.5384,  ..., -0.6431,  0.3234,  0.9586],
         [-1.5886,  0.1455,  0.1410,  ...,  0.9001,  1.5322,  0.3790]],

        [[-0.0660,  0.1714, -1.6673,  ..., -0.2309, -1.1181, -0.9292],
         [-0.4700,  0.1555, -0.6468,  ...,  1.5299,  0.5295, -0.3216],
         [-0.6480,  0.8068, -0.3388,  ...,  0.2876,  0.0126, -0.1919],
         ...,
         [ 2.0819,  0.9684, -1.1912,  ...,  0.5431, -0.6448,  1.0066],
         [ 2.2663,  0.5313, -0.0230,  ..., -1.0077,  0.3946,  0.3418],
         [-0.0991, -0.5753,  0.8784,  ...,  1.5714, -0.0075, -0.4266]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 0.4823, -0.2728, -0.1906,  ...,  0.8295,  1.5887,  0.6003],
         [ 1.7378,  0.9787, -0.4005,  ..., -0.0565,  2.3668,  0.6495],
         [ 0.7036, -0.0817,  0.5402,  ..., -0.8453,  0.1928, -1.1722],
         ...,
         [-0.2379, -3.3980, -0.2913,  ..., -0.5635,  0.2163,  1.1677],
         [-0.2491,  0.0173, -0.5250,  ..., -0.2517,  0.0415, -0.4423],
         [-1.1271, -1.1247, -0.1415,  ..., -0.7366,  0.5011, -1.2683]],

        [[ 1.2056, -1.2145, -0.1054,  ..., -0.3960,  0.5859, -2.5365],
         [ 1.1142, -1.3268,  1.9417,  ...,  0.4460, -0.4011, -0.3984],
         [ 0.0491,  0.6501,  2.8132,  ..., -0.3533, -0.4136,  1.3920],
         ...,
         [-1.3536, -0.6209,  1.0019,  ...,  0.7587, -0.7124, -0.9907],
         [-1.0759, -1.6382, -0.0059,  ..., -1.8314, -0.1228,  0.3176],
         [ 0.2255,  0.1682,  0.1928,  ...,  0.2674,  0.4621,  0.2083]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 3.1762, -0.2702, -1.6700,  ..., -2.1904,  1.0411,  1.0119],
         [ 2.3948, -1.1265,  0.6017,  ...,  0.0302,  0.9125, -1.9431],
         [ 0.8503,  0.4610, -0.4747,  ..., -0.3621,  1.1035, -0.6395],
         ...,
         [ 0.8106,  0.3244,  1.4629,  ..., -1.7566, -2.1759,  0.8425],
         [ 0.9263,  1.2397,  0.5384,  ..., -0.6431,  0.3234,  0.9586],
         [-1.5886,  0.1455,  0.1410,  ...,  0.9001,  1.5322,  0.3790]],

        [[-0.0660,  0.1714, -1.6673,  ..., -0.2309, -1.1181, -0.9292],
         [-0.4700,  0.1555, -0.6468,  ...,  1.5299,  0.5295, -0.3216],
         [-0.6480,  0.8068, -0.3388,  ...,  0.2876,  0.0126, -0.1919],
         ...,
         [ 2.0819,  0.9684, -1.1912,  ...,  0.5431, -0.6448,  1.0066],
         [ 2.2663,  0.5313, -0.0230,  ..., -1.0077,  0.3946,  0.3418],
         [-0.0991, -0.5753,  0.8784,  ...,  1.5714, -0.0075, -0.4266]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 153.521, Val Loss : 365.009
======> Trajectory Loss : 15.118, Gravity Loss : 0.000, EndOfTrajectory Loss : 1.382, BelowGroundPenalize Loss : 0.198
===> [Minibatch 3/129].........IDX = 0 :  tensor([[[ 0.4823, -0.2728, -0.1906,  ...,  0.8295,  1.5887,  0.6003],
         [ 1.7378,  0.9787, -0.4005,  ..., -0.0565,  2.3668,  0.6495],
         [ 0.7036, -0.0817,  0.5402,  ..., -0.8453,  0.1928, -1.1722],
         ...,
         [-0.2379, -3.3980, -0.2913,  ..., -0.5635,  0.2163,  1.1677],
         [-0.2491,  0.0173, -0.5250,  ..., -0.2517,  0.0415, -0.4423],
         [-1.1271, -1.1247, -0.1415,  ..., -0.7366,  0.5011, -1.2683]],

        [[ 1.2056, -1.2145, -0.1054,  ..., -0.3960,  0.5859, -2.5365],
         [ 1.1142, -1.3268,  1.9417,  ...,  0.4460, -0.4011, -0.3984],
         [ 0.0491,  0.6501,  2.8132,  ..., -0.3533, -0.4136,  1.3920],
         ...,
         [-1.3536, -0.6209,  1.0019,  ...,  0.7587, -0.7124, -0.9907],
         [-1.0759, -1.6382, -0.0059,  ..., -1.8314, -0.1228,  0.3176],
         [ 0.2255,  0.1682,  0.1928,  ...,  0.2674,  0.4621,  0.2083]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 3.1762, -0.2702, -1.6700,  ..., -2.1904,  1.0411,  1.0119],
         [ 2.3948, -1.1265,  0.6017,  ...,  0.0302,  0.9125, -1.9431],
         [ 0.8503,  0.4610, -0.4747,  ..., -0.3621,  1.1035, -0.6395],
         ...,
         [ 0.8106,  0.3244,  1.4629,  ..., -1.7566, -2.1759,  0.8425],
         [ 0.9263,  1.2397,  0.5384,  ..., -0.6431,  0.3234,  0.9586],
         [-1.5886,  0.1455,  0.1410,  ...,  0.9001,  1.5322,  0.3790]],

        [[-0.0660,  0.1714, -1.6673,  ..., -0.2309, -1.1181, -0.9292],
         [-0.4700,  0.1555, -0.6468,  ...,  1.5299,  0.5295, -0.3216],
         [-0.6480,  0.8068, -0.3388,  ...,  0.2876,  0.0126, -0.1919],
         ...,
         [ 2.0819,  0.9684, -1.1912,  ...,  0.5431, -0.6448,  1.0066],
         [ 2.2663,  0.5313, -0.0230,  ..., -1.0077,  0.3946,  0.3418],
         [-0.0991, -0.5753,  0.8784,  ...,  1.5714, -0.0075, -0.4266]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 0.4823, -0.2728, -0.1906,  ...,  0.8295,  1.5887,  0.6003],
         [ 1.7378,  0.9787, -0.4005,  ..., -0.0565,  2.3668,  0.6495],
         [ 0.7036, -0.0817,  0.5402,  ..., -0.8453,  0.1928, -1.1722],
         ...,
         [-0.2379, -3.3980, -0.2913,  ..., -0.5635,  0.2163,  1.1677],
         [-0.2491,  0.0173, -0.5250,  ..., -0.2517,  0.0415, -0.4423],
         [-1.1271, -1.1247, -0.1415,  ..., -0.7366,  0.5011, -1.2683]],

        [[ 1.2056, -1.2145, -0.1054,  ..., -0.3960,  0.5859, -2.5365],
         [ 1.1142, -1.3268,  1.9417,  ...,  0.4460, -0.4011, -0.3984],
         [ 0.0491,  0.6501,  2.8132,  ..., -0.3533, -0.4136,  1.3920],
         ...,
         [-1.3536, -0.6209,  1.0019,  ...,  0.7587, -0.7124, -0.9907],
         [-1.0759, -1.6382, -0.0059,  ..., -1.8314, -0.1228,  0.3176],
         [ 0.2255,  0.1682,  0.1928,  ...,  0.2674,  0.4621,  0.2083]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 3.1762, -0.2702, -1.6700,  ..., -2.1904,  1.0411,  1.0119],
         [ 2.3948, -1.1265,  0.6017,  ...,  0.0302,  0.9125, -1.9431],
         [ 0.8503,  0.4610, -0.4747,  ..., -0.3621,  1.1035, -0.6395],
         ...,
         [ 0.8106,  0.3244,  1.4629,  ..., -1.7566, -2.1759,  0.8425],
         [ 0.9263,  1.2397,  0.5384,  ..., -0.6431,  0.3234,  0.9586],
         [-1.5886,  0.1455,  0.1410,  ...,  0.9001,  1.5322,  0.3790]],

        [[-0.0660,  0.1714, -1.6673,  ..., -0.2309, -1.1181, -0.9292],
         [-0.4700,  0.1555, -0.6468,  ...,  1.5299,  0.5295, -0.3216],
         [-0.6480,  0.8068, -0.3388,  ...,  0.2876,  0.0126, -0.1919],
         ...,
         [ 2.0819,  0.9684, -1.1912,  ...,  0.5431, -0.6448,  1.0066],
         [ 2.2663,  0.5313, -0.0230,  ..., -1.0077,  0.3946,  0.3418],
         [-0.0991, -0.5753,  0.8784,  ...,  1.5714, -0.0075, -0.4266]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 215.318, Val Loss : 260.843
======> Trajectory Loss : 67.954, Gravity Loss : 0.000, EndOfTrajectory Loss : 1.379, BelowGroundPenalize Loss : 9.453
===> [Minibatch 4/129].........IDX = 0 :  tensor([[[ 0.4823, -0.2728, -0.1906,  ...,  0.8295,  1.5887,  0.6003],
         [ 1.7378,  0.9787, -0.4005,  ..., -0.0565,  2.3668,  0.6495],
         [ 0.7036, -0.0817,  0.5402,  ..., -0.8453,  0.1928, -1.1722],
         ...,
         [-0.2379, -3.3980, -0.2913,  ..., -0.5635,  0.2163,  1.1677],
         [-0.2491,  0.0173, -0.5250,  ..., -0.2517,  0.0415, -0.4423],
         [-1.1271, -1.1247, -0.1415,  ..., -0.7366,  0.5011, -1.2683]],

        [[ 1.2056, -1.2145, -0.1054,  ..., -0.3960,  0.5859, -2.5365],
         [ 1.1142, -1.3268,  1.9417,  ...,  0.4460, -0.4011, -0.3984],
         [ 0.0491,  0.6501,  2.8132,  ..., -0.3533, -0.4136,  1.3920],
         ...,
         [-1.3536, -0.6209,  1.0019,  ...,  0.7587, -0.7124, -0.9907],
         [-1.0759, -1.6382, -0.0059,  ..., -1.8314, -0.1228,  0.3176],
         [ 0.2255,  0.1682,  0.1928,  ...,  0.2674,  0.4621,  0.2083]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 3.1762, -0.2702, -1.6700,  ..., -2.1904,  1.0411,  1.0119],
         [ 2.3948, -1.1265,  0.6017,  ...,  0.0302,  0.9125, -1.9431],
         [ 0.8503,  0.4610, -0.4747,  ..., -0.3621,  1.1035, -0.6395],
         ...,
         [ 0.8106,  0.3244,  1.4629,  ..., -1.7566, -2.1759,  0.8425],
         [ 0.9263,  1.2397,  0.5384,  ..., -0.6431,  0.3234,  0.9586],
         [-1.5886,  0.1455,  0.1410,  ...,  0.9001,  1.5322,  0.3790]],

        [[-0.0660,  0.1714, -1.6673,  ..., -0.2309, -1.1181, -0.9292],
         [-0.4700,  0.1555, -0.6468,  ...,  1.5299,  0.5295, -0.3216],
         [-0.6480,  0.8068, -0.3388,  ...,  0.2876,  0.0126, -0.1919],
         ...,
         [ 2.0819,  0.9684, -1.1912,  ...,  0.5431, -0.6448,  1.0066],
         [ 2.2663,  0.5313, -0.0230,  ..., -1.0077,  0.3946,  0.3418],
         [-0.0991, -0.5753,  0.8784,  ...,  1.5714, -0.0075, -0.4266]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 0.4823, -0.2728, -0.1906,  ...,  0.8295,  1.5887,  0.6003],
         [ 1.7378,  0.9787, -0.4005,  ..., -0.0565,  2.3668,  0.6495],
         [ 0.7036, -0.0817,  0.5402,  ..., -0.8453,  0.1928, -1.1722],
         ...,
         [-0.2379, -3.3980, -0.2913,  ..., -0.5635,  0.2163,  1.1677],
         [-0.2491,  0.0173, -0.5250,  ..., -0.2517,  0.0415, -0.4423],
         [-1.1271, -1.1247, -0.1415,  ..., -0.7366,  0.5011, -1.2683]],

        [[ 1.2056, -1.2145, -0.1054,  ..., -0.3960,  0.5859, -2.5365],
         [ 1.1142, -1.3268,  1.9417,  ...,  0.4460, -0.4011, -0.3984],
         [ 0.0491,  0.6501,  2.8132,  ..., -0.3533, -0.4136,  1.3920],
         ...,
         [-1.3536, -0.6209,  1.0019,  ...,  0.7587, -0.7124, -0.9907],
         [-1.0759, -1.6382, -0.0059,  ..., -1.8314, -0.1228,  0.3176],
         [ 0.2255,  0.1682,  0.1928,  ...,  0.2674,  0.4621,  0.2083]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 3.1762, -0.2702, -1.6700,  ..., -2.1904,  1.0411,  1.0119],
         [ 2.3948, -1.1265,  0.6017,  ...,  0.0302,  0.9125, -1.9431],
         [ 0.8503,  0.4610, -0.4747,  ..., -0.3621,  1.1035, -0.6395],
         ...,
         [ 0.8106,  0.3244,  1.4629,  ..., -1.7566, -2.1759,  0.8425],
         [ 0.9263,  1.2397,  0.5384,  ..., -0.6431,  0.3234,  0.9586],
         [-1.5886,  0.1455,  0.1410,  ...,  0.9001,  1.5322,  0.3790]],

        [[-0.0660,  0.1714, -1.6673,  ..., -0.2309, -1.1181, -0.9292],
         [-0.4700,  0.1555, -0.6468,  ...,  1.5299,  0.5295, -0.3216],
         [-0.6480,  0.8068, -0.3388,  ...,  0.2876,  0.0126, -0.1919],
         ...,
         [ 2.0819,  0.9684, -1.1912,  ...,  0.5431, -0.6448,  1.0066],
         [ 2.2663,  0.5313, -0.0230,  ..., -1.0077,  0.3946,  0.3418],
         [-0.0991, -0.5753,  0.8784,  ...,  1.5714, -0.0075, -0.4266]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 168.326, Val Loss : 185.591
======> Trajectory Loss : 27.438, Gravity Loss : 0.000, EndOfTrajectory Loss : 1.371, BelowGroundPenalize Loss : 3.787
===> [Minibatch 5/129].........IDX = 0 :  tensor([[[ 0.4823, -0.2728, -0.1906,  ...,  0.8295,  1.5887,  0.6003],
         [ 1.7378,  0.9787, -0.4005,  ..., -0.0565,  2.3668,  0.6495],
         [ 0.7036, -0.0817,  0.5402,  ..., -0.8453,  0.1928, -1.1722],
         ...,
         [-0.2379, -3.3980, -0.2913,  ..., -0.5635,  0.2163,  1.1677],
         [-0.2491,  0.0173, -0.5250,  ..., -0.2517,  0.0415, -0.4423],
         [-1.1271, -1.1247, -0.1415,  ..., -0.7366,  0.5011, -1.2683]],

        [[ 1.2056, -1.2145, -0.1054,  ..., -0.3960,  0.5859, -2.5365],
         [ 1.1142, -1.3268,  1.9417,  ...,  0.4460, -0.4011, -0.3984],
         [ 0.0491,  0.6501,  2.8132,  ..., -0.3533, -0.4136,  1.3920],
         ...,
         [-1.3536, -0.6209,  1.0019,  ...,  0.7587, -0.7124, -0.9907],
         [-1.0759, -1.6382, -0.0059,  ..., -1.8314, -0.1228,  0.3176],
         [ 0.2255,  0.1682,  0.1928,  ...,  0.2674,  0.4621,  0.2083]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 3.1762, -0.2702, -1.6700,  ..., -2.1904,  1.0411,  1.0119],
         [ 2.3948, -1.1265,  0.6017,  ...,  0.0302,  0.9125, -1.9431],
         [ 0.8503,  0.4610, -0.4747,  ..., -0.3621,  1.1035, -0.6395],
         ...,
         [ 0.8106,  0.3244,  1.4629,  ..., -1.7566, -2.1759,  0.8425],
         [ 0.9263,  1.2397,  0.5384,  ..., -0.6431,  0.3234,  0.9586],
         [-1.5886,  0.1455,  0.1410,  ...,  0.9001,  1.5322,  0.3790]],

        [[-0.0660,  0.1714, -1.6673,  ..., -0.2309, -1.1181, -0.9292],
         [-0.4700,  0.1555, -0.6468,  ...,  1.5299,  0.5295, -0.3216],
         [-0.6480,  0.8068, -0.3388,  ...,  0.2876,  0.0126, -0.1919],
         ...,
         [ 2.0819,  0.9684, -1.1912,  ...,  0.5431, -0.6448,  1.0066],
         [ 2.2663,  0.5313, -0.0230,  ..., -1.0077,  0.3946,  0.3418],
         [-0.0991, -0.5753,  0.8784,  ...,  1.5714, -0.0075, -0.4266]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 0.4823, -0.2728, -0.1906,  ...,  0.8295,  1.5887,  0.6003],
         [ 1.7378,  0.9787, -0.4005,  ..., -0.0565,  2.3668,  0.6495],
         [ 0.7036, -0.0817,  0.5402,  ..., -0.8453,  0.1928, -1.1722],
         ...,
         [-0.2379, -3.3980, -0.2913,  ..., -0.5635,  0.2163,  1.1677],
         [-0.2491,  0.0173, -0.5250,  ..., -0.2517,  0.0415, -0.4423],
         [-1.1271, -1.1247, -0.1415,  ..., -0.7366,  0.5011, -1.2683]],

        [[ 1.2056, -1.2145, -0.1054,  ..., -0.3960,  0.5859, -2.5365],
         [ 1.1142, -1.3268,  1.9417,  ...,  0.4460, -0.4011, -0.3984],
         [ 0.0491,  0.6501,  2.8132,  ..., -0.3533, -0.4136,  1.3920],
         ...,
         [-1.3536, -0.6209,  1.0019,  ...,  0.7587, -0.7124, -0.9907],
         [-1.0759, -1.6382, -0.0059,  ..., -1.8314, -0.1228,  0.3176],
         [ 0.2255,  0.1682,  0.1928,  ...,  0.2674,  0.4621,  0.2083]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 3.1762, -0.2702, -1.6700,  ..., -2.1904,  1.0411,  1.0119],
         [ 2.3948, -1.1265,  0.6017,  ...,  0.0302,  0.9125, -1.9431],
         [ 0.8503,  0.4610, -0.4747,  ..., -0.3621,  1.1035, -0.6395],
         ...,
         [ 0.8106,  0.3244,  1.4629,  ..., -1.7566, -2.1759,  0.8425],
         [ 0.9263,  1.2397,  0.5384,  ..., -0.6431,  0.3234,  0.9586],
         [-1.5886,  0.1455,  0.1410,  ...,  0.9001,  1.5322,  0.3790]],

        [[-0.0660,  0.1714, -1.6673,  ..., -0.2309, -1.1181, -0.9292],
         [-0.4700,  0.1555, -0.6468,  ...,  1.5299,  0.5295, -0.3216],
         [-0.6480,  0.8068, -0.3388,  ...,  0.2876,  0.0126, -0.1919],
         ...,
         [ 2.0819,  0.9684, -1.1912,  ...,  0.5431, -0.6448,  1.0066],
         [ 2.2663,  0.5313, -0.0230,  ..., -1.0077,  0.3946,  0.3418],
         [-0.0991, -0.5753,  0.8784,  ...,  1.5714, -0.0075, -0.4266]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 159.839, Val Loss : 161.445
======> Trajectory Loss : 21.412, Gravity Loss : 0.000, EndOfTrajectory Loss : 1.363, BelowGroundPenalize Loss : 2.160
===> [Minibatch 6/129].........IDX = 0 :  tensor([[[ 0.4823, -0.2728, -0.1906,  ...,  0.8295,  1.5887,  0.6003],
         [ 1.7378,  0.9787, -0.4005,  ..., -0.0565,  2.3668,  0.6495],
         [ 0.7036, -0.0817,  0.5402,  ..., -0.8453,  0.1928, -1.1722],
         ...,
         [-0.2379, -3.3980, -0.2913,  ..., -0.5635,  0.2163,  1.1677],
         [-0.2491,  0.0173, -0.5250,  ..., -0.2517,  0.0415, -0.4423],
         [-1.1271, -1.1247, -0.1415,  ..., -0.7366,  0.5011, -1.2683]],

        [[ 1.2056, -1.2145, -0.1054,  ..., -0.3960,  0.5859, -2.5365],
         [ 1.1142, -1.3268,  1.9417,  ...,  0.4460, -0.4011, -0.3984],
         [ 0.0491,  0.6501,  2.8132,  ..., -0.3533, -0.4136,  1.3920],
         ...,
         [-1.3536, -0.6209,  1.0019,  ...,  0.7587, -0.7124, -0.9907],
         [-1.0759, -1.6382, -0.0059,  ..., -1.8314, -0.1228,  0.3176],
         [ 0.2255,  0.1682,  0.1928,  ...,  0.2674,  0.4621,  0.2083]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 3.1762, -0.2702, -1.6700,  ..., -2.1904,  1.0411,  1.0119],
         [ 2.3948, -1.1265,  0.6017,  ...,  0.0302,  0.9125, -1.9431],
         [ 0.8503,  0.4610, -0.4747,  ..., -0.3621,  1.1035, -0.6395],
         ...,
         [ 0.8106,  0.3244,  1.4629,  ..., -1.7566, -2.1759,  0.8425],
         [ 0.9263,  1.2397,  0.5384,  ..., -0.6431,  0.3234,  0.9586],
         [-1.5886,  0.1455,  0.1410,  ...,  0.9001,  1.5322,  0.3790]],

        [[-0.0660,  0.1714, -1.6673,  ..., -0.2309, -1.1181, -0.9292],
         [-0.4700,  0.1555, -0.6468,  ...,  1.5299,  0.5295, -0.3216],
         [-0.6480,  0.8068, -0.3388,  ...,  0.2876,  0.0126, -0.1919],
         ...,
         [ 2.0819,  0.9684, -1.1912,  ...,  0.5431, -0.6448,  1.0066],
         [ 2.2663,  0.5313, -0.0230,  ..., -1.0077,  0.3946,  0.3418],
         [-0.0991, -0.5753,  0.8784,  ...,  1.5714, -0.0075, -0.4266]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 0.4823, -0.2728, -0.1906,  ...,  0.8295,  1.5887,  0.6003],
         [ 1.7378,  0.9787, -0.4005,  ..., -0.0565,  2.3668,  0.6495],
         [ 0.7036, -0.0817,  0.5402,  ..., -0.8453,  0.1928, -1.1722],
         ...,
         [-0.2379, -3.3980, -0.2913,  ..., -0.5635,  0.2163,  1.1677],
         [-0.2491,  0.0173, -0.5250,  ..., -0.2517,  0.0415, -0.4423],
         [-1.1271, -1.1247, -0.1415,  ..., -0.7366,  0.5011, -1.2683]],

        [[ 1.2056, -1.2145, -0.1054,  ..., -0.3960,  0.5859, -2.5365],
         [ 1.1142, -1.3268,  1.9417,  ...,  0.4460, -0.4011, -0.3984],
         [ 0.0491,  0.6501,  2.8132,  ..., -0.3533, -0.4136,  1.3920],
         ...,
         [-1.3536, -0.6209,  1.0019,  ...,  0.7587, -0.7124, -0.9907],
         [-1.0759, -1.6382, -0.0059,  ..., -1.8314, -0.1228,  0.3176],
         [ 0.2255,  0.1682,  0.1928,  ...,  0.2674,  0.4621,  0.2083]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 3.1762, -0.2702, -1.6700,  ..., -2.1904,  1.0411,  1.0119],
         [ 2.3948, -1.1265,  0.6017,  ...,  0.0302,  0.9125, -1.9431],
         [ 0.8503,  0.4610, -0.4747,  ..., -0.3621,  1.1035, -0.6395],
         ...,
         [ 0.8106,  0.3244,  1.4629,  ..., -1.7566, -2.1759,  0.8425],
         [ 0.9263,  1.2397,  0.5384,  ..., -0.6431,  0.3234,  0.9586],
         [-1.5886,  0.1455,  0.1410,  ...,  0.9001,  1.5322,  0.3790]],

        [[-0.0660,  0.1714, -1.6673,  ..., -0.2309, -1.1181, -0.9292],
         [-0.4700,  0.1555, -0.6468,  ...,  1.5299,  0.5295, -0.3216],
         [-0.6480,  0.8068, -0.3388,  ...,  0.2876,  0.0126, -0.1919],
         ...,
         [ 2.0819,  0.9684, -1.1912,  ...,  0.5431, -0.6448,  1.0066],
         [ 2.2663,  0.5313, -0.0230,  ..., -1.0077,  0.3946,  0.3418],
         [-0.0991, -0.5753,  0.8784,  ...,  1.5714, -0.0075, -0.4266]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 148.783, Val Loss : 182.514
======> Trajectory Loss : 13.111, Gravity Loss : 0.000, EndOfTrajectory Loss : 1.346, BelowGroundPenalize Loss : 1.104
===> [Minibatch 7/129].........IDX = 0 :  tensor([[[ 0.4823, -0.2728, -0.1906,  ...,  0.8295,  1.5887,  0.6003],
         [ 1.7378,  0.9787, -0.4005,  ..., -0.0565,  2.3668,  0.6495],
         [ 0.7036, -0.0817,  0.5402,  ..., -0.8453,  0.1928, -1.1722],
         ...,
         [-0.2379, -3.3980, -0.2913,  ..., -0.5635,  0.2163,  1.1677],
         [-0.2491,  0.0173, -0.5250,  ..., -0.2517,  0.0415, -0.4423],
         [-1.1271, -1.1247, -0.1415,  ..., -0.7366,  0.5011, -1.2683]],

        [[ 1.2056, -1.2145, -0.1054,  ..., -0.3960,  0.5859, -2.5365],
         [ 1.1142, -1.3268,  1.9417,  ...,  0.4460, -0.4011, -0.3984],
         [ 0.0491,  0.6501,  2.8132,  ..., -0.3533, -0.4136,  1.3920],
         ...,
         [-1.3536, -0.6209,  1.0019,  ...,  0.7587, -0.7124, -0.9907],
         [-1.0759, -1.6382, -0.0059,  ..., -1.8314, -0.1228,  0.3176],
         [ 0.2255,  0.1682,  0.1928,  ...,  0.2674,  0.4621,  0.2083]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 3.1762, -0.2702, -1.6700,  ..., -2.1904,  1.0411,  1.0119],
         [ 2.3948, -1.1265,  0.6017,  ...,  0.0302,  0.9125, -1.9431],
         [ 0.8503,  0.4610, -0.4747,  ..., -0.3621,  1.1035, -0.6395],
         ...,
         [ 0.8106,  0.3244,  1.4629,  ..., -1.7566, -2.1759,  0.8425],
         [ 0.9263,  1.2397,  0.5384,  ..., -0.6431,  0.3234,  0.9586],
         [-1.5886,  0.1455,  0.1410,  ...,  0.9001,  1.5322,  0.3790]],

        [[-0.0660,  0.1714, -1.6673,  ..., -0.2309, -1.1181, -0.9292],
         [-0.4700,  0.1555, -0.6468,  ...,  1.5299,  0.5295, -0.3216],
         [-0.6480,  0.8068, -0.3388,  ...,  0.2876,  0.0126, -0.1919],
         ...,
         [ 2.0819,  0.9684, -1.1912,  ...,  0.5431, -0.6448,  1.0066],
         [ 2.2663,  0.5313, -0.0230,  ..., -1.0077,  0.3946,  0.3418],
         [-0.0991, -0.5753,  0.8784,  ...,  1.5714, -0.0075, -0.4266]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 0.4823, -0.2728, -0.1906,  ...,  0.8295,  1.5887,  0.6003],
         [ 1.7378,  0.9787, -0.4005,  ..., -0.0565,  2.3668,  0.6495],
         [ 0.7036, -0.0817,  0.5402,  ..., -0.8453,  0.1928, -1.1722],
         ...,
         [-0.2379, -3.3980, -0.2913,  ..., -0.5635,  0.2163,  1.1677],
         [-0.2491,  0.0173, -0.5250,  ..., -0.2517,  0.0415, -0.4423],
         [-1.1271, -1.1247, -0.1415,  ..., -0.7366,  0.5011, -1.2683]],

        [[ 1.2056, -1.2145, -0.1054,  ..., -0.3960,  0.5859, -2.5365],
         [ 1.1142, -1.3268,  1.9417,  ...,  0.4460, -0.4011, -0.3984],
         [ 0.0491,  0.6501,  2.8132,  ..., -0.3533, -0.4136,  1.3920],
         ...,
         [-1.3536, -0.6209,  1.0019,  ...,  0.7587, -0.7124, -0.9907],
         [-1.0759, -1.6382, -0.0059,  ..., -1.8314, -0.1228,  0.3176],
         [ 0.2255,  0.1682,  0.1928,  ...,  0.2674,  0.4621,  0.2083]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 3.1762, -0.2702, -1.6700,  ..., -2.1904,  1.0411,  1.0119],
         [ 2.3948, -1.1265,  0.6017,  ...,  0.0302,  0.9125, -1.9431],
         [ 0.8503,  0.4610, -0.4747,  ..., -0.3621,  1.1035, -0.6395],
         ...,
         [ 0.8106,  0.3244,  1.4629,  ..., -1.7566, -2.1759,  0.8425],
         [ 0.9263,  1.2397,  0.5384,  ..., -0.6431,  0.3234,  0.9586],
         [-1.5886,  0.1455,  0.1410,  ...,  0.9001,  1.5322,  0.3790]],

        [[-0.0660,  0.1714, -1.6673,  ..., -0.2309, -1.1181, -0.9292],
         [-0.4700,  0.1555, -0.6468,  ...,  1.5299,  0.5295, -0.3216],
         [-0.6480,  0.8068, -0.3388,  ...,  0.2876,  0.0126, -0.1919],
         ...,
         [ 2.0819,  0.9684, -1.1912,  ...,  0.5431, -0.6448,  1.0066],
         [ 2.2663,  0.5313, -0.0230,  ..., -1.0077,  0.3946,  0.3418],
         [-0.0991, -0.5753,  0.8784,  ...,  1.5714, -0.0075, -0.4266]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 147.101, Val Loss : 197.142
======> Trajectory Loss : 14.999, Gravity Loss : 0.000, EndOfTrajectory Loss : 1.317, BelowGroundPenalize Loss : 0.423
===> [Minibatch 8/129].........IDX = 0 :  tensor([[[ 0.4823, -0.2728, -0.1906,  ...,  0.8295,  1.5887,  0.6003],
         [ 1.7378,  0.9787, -0.4005,  ..., -0.0565,  2.3668,  0.6495],
         [ 0.7036, -0.0817,  0.5402,  ..., -0.8453,  0.1928, -1.1722],
         ...,
         [-0.2379, -3.3980, -0.2913,  ..., -0.5635,  0.2163,  1.1677],
         [-0.2491,  0.0173, -0.5250,  ..., -0.2517,  0.0415, -0.4423],
         [-1.1271, -1.1247, -0.1415,  ..., -0.7366,  0.5011, -1.2683]],

        [[ 1.2056, -1.2145, -0.1054,  ..., -0.3960,  0.5859, -2.5365],
         [ 1.1142, -1.3268,  1.9417,  ...,  0.4460, -0.4011, -0.3984],
         [ 0.0491,  0.6501,  2.8132,  ..., -0.3533, -0.4136,  1.3920],
         ...,
         [-1.3536, -0.6209,  1.0019,  ...,  0.7587, -0.7124, -0.9907],
         [-1.0759, -1.6382, -0.0059,  ..., -1.8314, -0.1228,  0.3176],
         [ 0.2255,  0.1682,  0.1928,  ...,  0.2674,  0.4621,  0.2083]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 3.1762, -0.2702, -1.6700,  ..., -2.1904,  1.0411,  1.0119],
         [ 2.3948, -1.1265,  0.6017,  ...,  0.0302,  0.9125, -1.9431],
         [ 0.8503,  0.4610, -0.4747,  ..., -0.3621,  1.1035, -0.6395],
         ...,
         [ 0.8106,  0.3244,  1.4629,  ..., -1.7566, -2.1759,  0.8425],
         [ 0.9263,  1.2397,  0.5384,  ..., -0.6431,  0.3234,  0.9586],
         [-1.5886,  0.1455,  0.1410,  ...,  0.9001,  1.5322,  0.3790]],

        [[-0.0660,  0.1714, -1.6673,  ..., -0.2309, -1.1181, -0.9292],
         [-0.4700,  0.1555, -0.6468,  ...,  1.5299,  0.5295, -0.3216],
         [-0.6480,  0.8068, -0.3388,  ...,  0.2876,  0.0126, -0.1919],
         ...,
         [ 2.0819,  0.9684, -1.1912,  ...,  0.5431, -0.6448,  1.0066],
         [ 2.2663,  0.5313, -0.0230,  ..., -1.0077,  0.3946,  0.3418],
         [-0.0991, -0.5753,  0.8784,  ...,  1.5714, -0.0075, -0.4266]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 0.4823, -0.2728, -0.1906,  ...,  0.8295,  1.5887,  0.6003],
         [ 1.7378,  0.9787, -0.4005,  ..., -0.0565,  2.3668,  0.6495],
         [ 0.7036, -0.0817,  0.5402,  ..., -0.8453,  0.1928, -1.1722],
         ...,
         [-0.2379, -3.3980, -0.2913,  ..., -0.5635,  0.2163,  1.1677],
         [-0.2491,  0.0173, -0.5250,  ..., -0.2517,  0.0415, -0.4423],
         [-1.1271, -1.1247, -0.1415,  ..., -0.7366,  0.5011, -1.2683]],

        [[ 1.2056, -1.2145, -0.1054,  ..., -0.3960,  0.5859, -2.5365],
         [ 1.1142, -1.3268,  1.9417,  ...,  0.4460, -0.4011, -0.3984],
         [ 0.0491,  0.6501,  2.8132,  ..., -0.3533, -0.4136,  1.3920],
         ...,
         [-1.3536, -0.6209,  1.0019,  ...,  0.7587, -0.7124, -0.9907],
         [-1.0759, -1.6382, -0.0059,  ..., -1.8314, -0.1228,  0.3176],
         [ 0.2255,  0.1682,  0.1928,  ...,  0.2674,  0.4621,  0.2083]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 3.1762, -0.2702, -1.6700,  ..., -2.1904,  1.0411,  1.0119],
         [ 2.3948, -1.1265,  0.6017,  ...,  0.0302,  0.9125, -1.9431],
         [ 0.8503,  0.4610, -0.4747,  ..., -0.3621,  1.1035, -0.6395],
         ...,
         [ 0.8106,  0.3244,  1.4629,  ..., -1.7566, -2.1759,  0.8425],
         [ 0.9263,  1.2397,  0.5384,  ..., -0.6431,  0.3234,  0.9586],
         [-1.5886,  0.1455,  0.1410,  ...,  0.9001,  1.5322,  0.3790]],

        [[-0.0660,  0.1714, -1.6673,  ..., -0.2309, -1.1181, -0.9292],
         [-0.4700,  0.1555, -0.6468,  ...,  1.5299,  0.5295, -0.3216],
         [-0.6480,  0.8068, -0.3388,  ...,  0.2876,  0.0126, -0.1919],
         ...,
         [ 2.0819,  0.9684, -1.1912,  ...,  0.5431, -0.6448,  1.0066],
         [ 2.2663,  0.5313, -0.0230,  ..., -1.0077,  0.3946,  0.3418],
         [-0.0991, -0.5753,  0.8784,  ...,  1.5714, -0.0075, -0.4266]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 147.627, Val Loss : 184.211
======> Trajectory Loss : 18.217, Gravity Loss : 0.000, EndOfTrajectory Loss : 1.292, BelowGroundPenalize Loss : 0.223
===> [Minibatch 9/129].........IDX = 0 :  tensor([[[ 0.4823, -0.2728, -0.1906,  ...,  0.8295,  1.5887,  0.6003],
         [ 1.7378,  0.9787, -0.4005,  ..., -0.0565,  2.3668,  0.6495],
         [ 0.7036, -0.0817,  0.5402,  ..., -0.8453,  0.1928, -1.1722],
         ...,
         [-0.2379, -3.3980, -0.2913,  ..., -0.5635,  0.2163,  1.1677],
         [-0.2491,  0.0173, -0.5250,  ..., -0.2517,  0.0415, -0.4423],
         [-1.1271, -1.1247, -0.1415,  ..., -0.7366,  0.5011, -1.2683]],

        [[ 1.2056, -1.2145, -0.1054,  ..., -0.3960,  0.5859, -2.5365],
         [ 1.1142, -1.3268,  1.9417,  ...,  0.4460, -0.4011, -0.3984],
         [ 0.0491,  0.6501,  2.8132,  ..., -0.3533, -0.4136,  1.3920],
         ...,
         [-1.3536, -0.6209,  1.0019,  ...,  0.7587, -0.7124, -0.9907],
         [-1.0759, -1.6382, -0.0059,  ..., -1.8314, -0.1228,  0.3176],
         [ 0.2255,  0.1682,  0.1928,  ...,  0.2674,  0.4621,  0.2083]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 3.1762, -0.2702, -1.6700,  ..., -2.1904,  1.0411,  1.0119],
         [ 2.3948, -1.1265,  0.6017,  ...,  0.0302,  0.9125, -1.9431],
         [ 0.8503,  0.4610, -0.4747,  ..., -0.3621,  1.1035, -0.6395],
         ...,
         [ 0.8106,  0.3244,  1.4629,  ..., -1.7566, -2.1759,  0.8425],
         [ 0.9263,  1.2397,  0.5384,  ..., -0.6431,  0.3234,  0.9586],
         [-1.5886,  0.1455,  0.1410,  ...,  0.9001,  1.5322,  0.3790]],

        [[-0.0660,  0.1714, -1.6673,  ..., -0.2309, -1.1181, -0.9292],
         [-0.4700,  0.1555, -0.6468,  ...,  1.5299,  0.5295, -0.3216],
         [-0.6480,  0.8068, -0.3388,  ...,  0.2876,  0.0126, -0.1919],
         ...,
         [ 2.0819,  0.9684, -1.1912,  ...,  0.5431, -0.6448,  1.0066],
         [ 2.2663,  0.5313, -0.0230,  ..., -1.0077,  0.3946,  0.3418],
         [-0.0991, -0.5753,  0.8784,  ...,  1.5714, -0.0075, -0.4266]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 0.4823, -0.2728, -0.1906,  ...,  0.8295,  1.5887,  0.6003],
         [ 1.7378,  0.9787, -0.4005,  ..., -0.0565,  2.3668,  0.6495],
         [ 0.7036, -0.0817,  0.5402,  ..., -0.8453,  0.1928, -1.1722],
         ...,
         [-0.2379, -3.3980, -0.2913,  ..., -0.5635,  0.2163,  1.1677],
         [-0.2491,  0.0173, -0.5250,  ..., -0.2517,  0.0415, -0.4423],
         [-1.1271, -1.1247, -0.1415,  ..., -0.7366,  0.5011, -1.2683]],

        [[ 1.2056, -1.2145, -0.1054,  ..., -0.3960,  0.5859, -2.5365],
         [ 1.1142, -1.3268,  1.9417,  ...,  0.4460, -0.4011, -0.3984],
         [ 0.0491,  0.6501,  2.8132,  ..., -0.3533, -0.4136,  1.3920],
         ...,
         [-1.3536, -0.6209,  1.0019,  ...,  0.7587, -0.7124, -0.9907],
         [-1.0759, -1.6382, -0.0059,  ..., -1.8314, -0.1228,  0.3176],
         [ 0.2255,  0.1682,  0.1928,  ...,  0.2674,  0.4621,  0.2083]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 3.1762, -0.2702, -1.6700,  ..., -2.1904,  1.0411,  1.0119],
         [ 2.3948, -1.1265,  0.6017,  ...,  0.0302,  0.9125, -1.9431],
         [ 0.8503,  0.4610, -0.4747,  ..., -0.3621,  1.1035, -0.6395],
         ...,
         [ 0.8106,  0.3244,  1.4629,  ..., -1.7566, -2.1759,  0.8425],
         [ 0.9263,  1.2397,  0.5384,  ..., -0.6431,  0.3234,  0.9586],
         [-1.5886,  0.1455,  0.1410,  ...,  0.9001,  1.5322,  0.3790]],

        [[-0.0660,  0.1714, -1.6673,  ..., -0.2309, -1.1181, -0.9292],
         [-0.4700,  0.1555, -0.6468,  ...,  1.5299,  0.5295, -0.3216],
         [-0.6480,  0.8068, -0.3388,  ...,  0.2876,  0.0126, -0.1919],
         ...,
         [ 2.0819,  0.9684, -1.1912,  ...,  0.5431, -0.6448,  1.0066],
         [ 2.2663,  0.5313, -0.0230,  ..., -1.0077,  0.3946,  0.3418],
         [-0.0991, -0.5753,  0.8784,  ...,  1.5714, -0.0075, -0.4266]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 138.159, Val Loss : 163.449
======> Trajectory Loss : 14.474, Gravity Loss : 0.000, EndOfTrajectory Loss : 1.233, BelowGroundPenalize Loss : 0.387
===> [Minibatch 10/129].........IDX = 0 :  tensor([[[ 0.4823, -0.2728, -0.1906,  ...,  0.8295,  1.5887,  0.6003],
         [ 1.7378,  0.9787, -0.4005,  ..., -0.0565,  2.3668,  0.6495],
         [ 0.7036, -0.0817,  0.5402,  ..., -0.8453,  0.1928, -1.1722],
         ...,
         [-0.2379, -3.3980, -0.2913,  ..., -0.5635,  0.2163,  1.1677],
         [-0.2491,  0.0173, -0.5250,  ..., -0.2517,  0.0415, -0.4423],
         [-1.1271, -1.1247, -0.1415,  ..., -0.7366,  0.5011, -1.2683]],

        [[ 1.2056, -1.2145, -0.1054,  ..., -0.3960,  0.5859, -2.5365],
         [ 1.1142, -1.3268,  1.9417,  ...,  0.4460, -0.4011, -0.3984],
         [ 0.0491,  0.6501,  2.8132,  ..., -0.3533, -0.4136,  1.3920],
         ...,
         [-1.3536, -0.6209,  1.0019,  ...,  0.7587, -0.7124, -0.9907],
         [-1.0759, -1.6382, -0.0059,  ..., -1.8314, -0.1228,  0.3176],
         [ 0.2255,  0.1682,  0.1928,  ...,  0.2674,  0.4621,  0.2083]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 3.1762, -0.2702, -1.6700,  ..., -2.1904,  1.0411,  1.0119],
         [ 2.3948, -1.1265,  0.6017,  ...,  0.0302,  0.9125, -1.9431],
         [ 0.8503,  0.4610, -0.4747,  ..., -0.3621,  1.1035, -0.6395],
         ...,
         [ 0.8106,  0.3244,  1.4629,  ..., -1.7566, -2.1759,  0.8425],
         [ 0.9263,  1.2397,  0.5384,  ..., -0.6431,  0.3234,  0.9586],
         [-1.5886,  0.1455,  0.1410,  ...,  0.9001,  1.5322,  0.3790]],

        [[-0.0660,  0.1714, -1.6673,  ..., -0.2309, -1.1181, -0.9292],
         [-0.4700,  0.1555, -0.6468,  ...,  1.5299,  0.5295, -0.3216],
         [-0.6480,  0.8068, -0.3388,  ...,  0.2876,  0.0126, -0.1919],
         ...,
         [ 2.0819,  0.9684, -1.1912,  ...,  0.5431, -0.6448,  1.0066],
         [ 2.2663,  0.5313, -0.0230,  ..., -1.0077,  0.3946,  0.3418],
         [-0.0991, -0.5753,  0.8784,  ...,  1.5714, -0.0075, -0.4266]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 0.4823, -0.2728, -0.1906,  ...,  0.8295,  1.5887,  0.6003],
         [ 1.7378,  0.9787, -0.4005,  ..., -0.0565,  2.3668,  0.6495],
         [ 0.7036, -0.0817,  0.5402,  ..., -0.8453,  0.1928, -1.1722],
         ...,
         [-0.2379, -3.3980, -0.2913,  ..., -0.5635,  0.2163,  1.1677],
         [-0.2491,  0.0173, -0.5250,  ..., -0.2517,  0.0415, -0.4423],
         [-1.1271, -1.1247, -0.1415,  ..., -0.7366,  0.5011, -1.2683]],

        [[ 1.2056, -1.2145, -0.1054,  ..., -0.3960,  0.5859, -2.5365],
         [ 1.1142, -1.3268,  1.9417,  ...,  0.4460, -0.4011, -0.3984],
         [ 0.0491,  0.6501,  2.8132,  ..., -0.3533, -0.4136,  1.3920],
         ...,
         [-1.3536, -0.6209,  1.0019,  ...,  0.7587, -0.7124, -0.9907],
         [-1.0759, -1.6382, -0.0059,  ..., -1.8314, -0.1228,  0.3176],
         [ 0.2255,  0.1682,  0.1928,  ...,  0.2674,  0.4621,  0.2083]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 3.1762, -0.2702, -1.6700,  ..., -2.1904,  1.0411,  1.0119],
         [ 2.3948, -1.1265,  0.6017,  ...,  0.0302,  0.9125, -1.9431],
         [ 0.8503,  0.4610, -0.4747,  ..., -0.3621,  1.1035, -0.6395],
         ...,
         [ 0.8106,  0.3244,  1.4629,  ..., -1.7566, -2.1759,  0.8425],
         [ 0.9263,  1.2397,  0.5384,  ..., -0.6431,  0.3234,  0.9586],
         [-1.5886,  0.1455,  0.1410,  ...,  0.9001,  1.5322,  0.3790]],

        [[-0.0660,  0.1714, -1.6673,  ..., -0.2309, -1.1181, -0.9292],
         [-0.4700,  0.1555, -0.6468,  ...,  1.5299,  0.5295, -0.3216],
         [-0.6480,  0.8068, -0.3388,  ...,  0.2876,  0.0126, -0.1919],
         ...,
         [ 2.0819,  0.9684, -1.1912,  ...,  0.5431, -0.6448,  1.0066],
         [ 2.2663,  0.5313, -0.0230,  ..., -1.0077,  0.3946,  0.3418],
         [-0.0991, -0.5753,  0.8784,  ...,  1.5714, -0.0075, -0.4266]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 132.327, Val Loss : 140.438
======> Trajectory Loss : 13.035, Gravity Loss : 0.000, EndOfTrajectory Loss : 1.190, BelowGroundPenalize Loss : 0.324
===> [Minibatch 11/129].........IDX = 0 :  tensor([[[ 0.4823, -0.2728, -0.1906,  ...,  0.8295,  1.5887,  0.6003],
         [ 1.7378,  0.9787, -0.4005,  ..., -0.0565,  2.3668,  0.6495],
         [ 0.7036, -0.0817,  0.5402,  ..., -0.8453,  0.1928, -1.1722],
         ...,
         [-0.2379, -3.3980, -0.2913,  ..., -0.5635,  0.2163,  1.1677],
         [-0.2491,  0.0173, -0.5250,  ..., -0.2517,  0.0415, -0.4423],
         [-1.1271, -1.1247, -0.1415,  ..., -0.7366,  0.5011, -1.2683]],

        [[ 1.2056, -1.2145, -0.1054,  ..., -0.3960,  0.5859, -2.5365],
         [ 1.1142, -1.3268,  1.9417,  ...,  0.4460, -0.4011, -0.3984],
         [ 0.0491,  0.6501,  2.8132,  ..., -0.3533, -0.4136,  1.3920],
         ...,
         [-1.3536, -0.6209,  1.0019,  ...,  0.7587, -0.7124, -0.9907],
         [-1.0759, -1.6382, -0.0059,  ..., -1.8314, -0.1228,  0.3176],
         [ 0.2255,  0.1682,  0.1928,  ...,  0.2674,  0.4621,  0.2083]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 3.1762, -0.2702, -1.6700,  ..., -2.1904,  1.0411,  1.0119],
         [ 2.3948, -1.1265,  0.6017,  ...,  0.0302,  0.9125, -1.9431],
         [ 0.8503,  0.4610, -0.4747,  ..., -0.3621,  1.1035, -0.6395],
         ...,
         [ 0.8106,  0.3244,  1.4629,  ..., -1.7566, -2.1759,  0.8425],
         [ 0.9263,  1.2397,  0.5384,  ..., -0.6431,  0.3234,  0.9586],
         [-1.5886,  0.1455,  0.1410,  ...,  0.9001,  1.5322,  0.3790]],

        [[-0.0660,  0.1714, -1.6673,  ..., -0.2309, -1.1181, -0.9292],
         [-0.4700,  0.1555, -0.6468,  ...,  1.5299,  0.5295, -0.3216],
         [-0.6480,  0.8068, -0.3388,  ...,  0.2876,  0.0126, -0.1919],
         ...,
         [ 2.0819,  0.9684, -1.1912,  ...,  0.5431, -0.6448,  1.0066],
         [ 2.2663,  0.5313, -0.0230,  ..., -1.0077,  0.3946,  0.3418],
         [-0.0991, -0.5753,  0.8784,  ...,  1.5714, -0.0075, -0.4266]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 0.4823, -0.2728, -0.1906,  ...,  0.8295,  1.5887,  0.6003],
         [ 1.7378,  0.9787, -0.4005,  ..., -0.0565,  2.3668,  0.6495],
         [ 0.7036, -0.0817,  0.5402,  ..., -0.8453,  0.1928, -1.1722],
         ...,
         [-0.2379, -3.3980, -0.2913,  ..., -0.5635,  0.2163,  1.1677],
         [-0.2491,  0.0173, -0.5250,  ..., -0.2517,  0.0415, -0.4423],
         [-1.1271, -1.1247, -0.1415,  ..., -0.7366,  0.5011, -1.2683]],

        [[ 1.2056, -1.2145, -0.1054,  ..., -0.3960,  0.5859, -2.5365],
         [ 1.1142, -1.3268,  1.9417,  ...,  0.4460, -0.4011, -0.3984],
         [ 0.0491,  0.6501,  2.8132,  ..., -0.3533, -0.4136,  1.3920],
         ...,
         [-1.3536, -0.6209,  1.0019,  ...,  0.7587, -0.7124, -0.9907],
         [-1.0759, -1.6382, -0.0059,  ..., -1.8314, -0.1228,  0.3176],
         [ 0.2255,  0.1682,  0.1928,  ...,  0.2674,  0.4621,  0.2083]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 3.1762, -0.2702, -1.6700,  ..., -2.1904,  1.0411,  1.0119],
         [ 2.3948, -1.1265,  0.6017,  ...,  0.0302,  0.9125, -1.9431],
         [ 0.8503,  0.4610, -0.4747,  ..., -0.3621,  1.1035, -0.6395],
         ...,
         [ 0.8106,  0.3244,  1.4629,  ..., -1.7566, -2.1759,  0.8425],
         [ 0.9263,  1.2397,  0.5384,  ..., -0.6431,  0.3234,  0.9586],
         [-1.5886,  0.1455,  0.1410,  ...,  0.9001,  1.5322,  0.3790]],

        [[-0.0660,  0.1714, -1.6673,  ..., -0.2309, -1.1181, -0.9292],
         [-0.4700,  0.1555, -0.6468,  ...,  1.5299,  0.5295, -0.3216],
         [-0.6480,  0.8068, -0.3388,  ...,  0.2876,  0.0126, -0.1919],
         ...,
         [ 2.0819,  0.9684, -1.1912,  ...,  0.5431, -0.6448,  1.0066],
         [ 2.2663,  0.5313, -0.0230,  ..., -1.0077,  0.3946,  0.3418],
         [-0.0991, -0.5753,  0.8784,  ...,  1.5714, -0.0075, -0.4266]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 120.905, Val Loss : 131.949
======> Trajectory Loss : 9.849, Gravity Loss : 0.000, EndOfTrajectory Loss : 1.103, BelowGroundPenalize Loss : 0.783
===> [Minibatch 12/129].........IDX = 0 :  tensor([[[ 0.4823, -0.2728, -0.1906,  ...,  0.8295,  1.5887,  0.6003],
         [ 1.7378,  0.9787, -0.4005,  ..., -0.0565,  2.3668,  0.6495],
         [ 0.7036, -0.0817,  0.5402,  ..., -0.8453,  0.1928, -1.1722],
         ...,
         [-0.2379, -3.3980, -0.2913,  ..., -0.5635,  0.2163,  1.1677],
         [-0.2491,  0.0173, -0.5250,  ..., -0.2517,  0.0415, -0.4423],
         [-1.1271, -1.1247, -0.1415,  ..., -0.7366,  0.5011, -1.2683]],

        [[ 1.2056, -1.2145, -0.1054,  ..., -0.3960,  0.5859, -2.5365],
         [ 1.1142, -1.3268,  1.9417,  ...,  0.4460, -0.4011, -0.3984],
         [ 0.0491,  0.6501,  2.8132,  ..., -0.3533, -0.4136,  1.3920],
         ...,
         [-1.3536, -0.6209,  1.0019,  ...,  0.7587, -0.7124, -0.9907],
         [-1.0759, -1.6382, -0.0059,  ..., -1.8314, -0.1228,  0.3176],
         [ 0.2255,  0.1682,  0.1928,  ...,  0.2674,  0.4621,  0.2083]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 3.1762, -0.2702, -1.6700,  ..., -2.1904,  1.0411,  1.0119],
         [ 2.3948, -1.1265,  0.6017,  ...,  0.0302,  0.9125, -1.9431],
         [ 0.8503,  0.4610, -0.4747,  ..., -0.3621,  1.1035, -0.6395],
         ...,
         [ 0.8106,  0.3244,  1.4629,  ..., -1.7566, -2.1759,  0.8425],
         [ 0.9263,  1.2397,  0.5384,  ..., -0.6431,  0.3234,  0.9586],
         [-1.5886,  0.1455,  0.1410,  ...,  0.9001,  1.5322,  0.3790]],

        [[-0.0660,  0.1714, -1.6673,  ..., -0.2309, -1.1181, -0.9292],
         [-0.4700,  0.1555, -0.6468,  ...,  1.5299,  0.5295, -0.3216],
         [-0.6480,  0.8068, -0.3388,  ...,  0.2876,  0.0126, -0.1919],
         ...,
         [ 2.0819,  0.9684, -1.1912,  ...,  0.5431, -0.6448,  1.0066],
         [ 2.2663,  0.5313, -0.0230,  ..., -1.0077,  0.3946,  0.3418],
         [-0.0991, -0.5753,  0.8784,  ...,  1.5714, -0.0075, -0.4266]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 0.4823, -0.2728, -0.1906,  ...,  0.8295,  1.5887,  0.6003],
         [ 1.7378,  0.9787, -0.4005,  ..., -0.0565,  2.3668,  0.6495],
         [ 0.7036, -0.0817,  0.5402,  ..., -0.8453,  0.1928, -1.1722],
         ...,
         [-0.2379, -3.3980, -0.2913,  ..., -0.5635,  0.2163,  1.1677],
         [-0.2491,  0.0173, -0.5250,  ..., -0.2517,  0.0415, -0.4423],
         [-1.1271, -1.1247, -0.1415,  ..., -0.7366,  0.5011, -1.2683]],

        [[ 1.2056, -1.2145, -0.1054,  ..., -0.3960,  0.5859, -2.5365],
         [ 1.1142, -1.3268,  1.9417,  ...,  0.4460, -0.4011, -0.3984],
         [ 0.0491,  0.6501,  2.8132,  ..., -0.3533, -0.4136,  1.3920],
         ...,
         [-1.3536, -0.6209,  1.0019,  ...,  0.7587, -0.7124, -0.9907],
         [-1.0759, -1.6382, -0.0059,  ..., -1.8314, -0.1228,  0.3176],
         [ 0.2255,  0.1682,  0.1928,  ...,  0.2674,  0.4621,  0.2083]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 3.1762, -0.2702, -1.6700,  ..., -2.1904,  1.0411,  1.0119],
         [ 2.3948, -1.1265,  0.6017,  ...,  0.0302,  0.9125, -1.9431],
         [ 0.8503,  0.4610, -0.4747,  ..., -0.3621,  1.1035, -0.6395],
         ...,
         [ 0.8106,  0.3244,  1.4629,  ..., -1.7566, -2.1759,  0.8425],
         [ 0.9263,  1.2397,  0.5384,  ..., -0.6431,  0.3234,  0.9586],
         [-1.5886,  0.1455,  0.1410,  ...,  0.9001,  1.5322,  0.3790]],

        [[-0.0660,  0.1714, -1.6673,  ..., -0.2309, -1.1181, -0.9292],
         [-0.4700,  0.1555, -0.6468,  ...,  1.5299,  0.5295, -0.3216],
         [-0.6480,  0.8068, -0.3388,  ...,  0.2876,  0.0126, -0.1919],
         ...,
         [ 2.0819,  0.9684, -1.1912,  ...,  0.5431, -0.6448,  1.0066],
         [ 2.2663,  0.5313, -0.0230,  ..., -1.0077,  0.3946,  0.3418],
         [-0.0991, -0.5753,  0.8784,  ...,  1.5714, -0.0075, -0.4266]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 115.573, Val Loss : 126.769
======> Trajectory Loss : 10.451, Gravity Loss : 0.000, EndOfTrajectory Loss : 1.043, BelowGroundPenalize Loss : 0.786
===> [Minibatch 13/129].........IDX = 0 :  tensor([[[ 0.4823, -0.2728, -0.1906,  ...,  0.8295,  1.5887,  0.6003],
         [ 1.7378,  0.9787, -0.4005,  ..., -0.0565,  2.3668,  0.6495],
         [ 0.7036, -0.0817,  0.5402,  ..., -0.8453,  0.1928, -1.1722],
         ...,
         [-0.2379, -3.3980, -0.2913,  ..., -0.5635,  0.2163,  1.1677],
         [-0.2491,  0.0173, -0.5250,  ..., -0.2517,  0.0415, -0.4423],
         [-1.1271, -1.1247, -0.1415,  ..., -0.7366,  0.5011, -1.2683]],

        [[ 1.2056, -1.2145, -0.1054,  ..., -0.3960,  0.5859, -2.5365],
         [ 1.1142, -1.3268,  1.9417,  ...,  0.4460, -0.4011, -0.3984],
         [ 0.0491,  0.6501,  2.8132,  ..., -0.3533, -0.4136,  1.3920],
         ...,
         [-1.3536, -0.6209,  1.0019,  ...,  0.7587, -0.7124, -0.9907],
         [-1.0759, -1.6382, -0.0059,  ..., -1.8314, -0.1228,  0.3176],
         [ 0.2255,  0.1682,  0.1928,  ...,  0.2674,  0.4621,  0.2083]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 3.1762, -0.2702, -1.6700,  ..., -2.1904,  1.0411,  1.0119],
         [ 2.3948, -1.1265,  0.6017,  ...,  0.0302,  0.9125, -1.9431],
         [ 0.8503,  0.4610, -0.4747,  ..., -0.3621,  1.1035, -0.6395],
         ...,
         [ 0.8106,  0.3244,  1.4629,  ..., -1.7566, -2.1759,  0.8425],
         [ 0.9263,  1.2397,  0.5384,  ..., -0.6431,  0.3234,  0.9586],
         [-1.5886,  0.1455,  0.1410,  ...,  0.9001,  1.5322,  0.3790]],

        [[-0.0660,  0.1714, -1.6673,  ..., -0.2309, -1.1181, -0.9292],
         [-0.4700,  0.1555, -0.6468,  ...,  1.5299,  0.5295, -0.3216],
         [-0.6480,  0.8068, -0.3388,  ...,  0.2876,  0.0126, -0.1919],
         ...,
         [ 2.0819,  0.9684, -1.1912,  ...,  0.5431, -0.6448,  1.0066],
         [ 2.2663,  0.5313, -0.0230,  ..., -1.0077,  0.3946,  0.3418],
         [-0.0991, -0.5753,  0.8784,  ...,  1.5714, -0.0075, -0.4266]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 0.4823, -0.2728, -0.1906,  ...,  0.8295,  1.5887,  0.6003],
         [ 1.7378,  0.9787, -0.4005,  ..., -0.0565,  2.3668,  0.6495],
         [ 0.7036, -0.0817,  0.5402,  ..., -0.8453,  0.1928, -1.1722],
         ...,
         [-0.2379, -3.3980, -0.2913,  ..., -0.5635,  0.2163,  1.1677],
         [-0.2491,  0.0173, -0.5250,  ..., -0.2517,  0.0415, -0.4423],
         [-1.1271, -1.1247, -0.1415,  ..., -0.7366,  0.5011, -1.2683]],

        [[ 1.2056, -1.2145, -0.1054,  ..., -0.3960,  0.5859, -2.5365],
         [ 1.1142, -1.3268,  1.9417,  ...,  0.4460, -0.4011, -0.3984],
         [ 0.0491,  0.6501,  2.8132,  ..., -0.3533, -0.4136,  1.3920],
         ...,
         [-1.3536, -0.6209,  1.0019,  ...,  0.7587, -0.7124, -0.9907],
         [-1.0759, -1.6382, -0.0059,  ..., -1.8314, -0.1228,  0.3176],
         [ 0.2255,  0.1682,  0.1928,  ...,  0.2674,  0.4621,  0.2083]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 3.1762, -0.2702, -1.6700,  ..., -2.1904,  1.0411,  1.0119],
         [ 2.3948, -1.1265,  0.6017,  ...,  0.0302,  0.9125, -1.9431],
         [ 0.8503,  0.4610, -0.4747,  ..., -0.3621,  1.1035, -0.6395],
         ...,
         [ 0.8106,  0.3244,  1.4629,  ..., -1.7566, -2.1759,  0.8425],
         [ 0.9263,  1.2397,  0.5384,  ..., -0.6431,  0.3234,  0.9586],
         [-1.5886,  0.1455,  0.1410,  ...,  0.9001,  1.5322,  0.3790]],

        [[-0.0660,  0.1714, -1.6673,  ..., -0.2309, -1.1181, -0.9292],
         [-0.4700,  0.1555, -0.6468,  ...,  1.5299,  0.5295, -0.3216],
         [-0.6480,  0.8068, -0.3388,  ...,  0.2876,  0.0126, -0.1919],
         ...,
         [ 2.0819,  0.9684, -1.1912,  ...,  0.5431, -0.6448,  1.0066],
         [ 2.2663,  0.5313, -0.0230,  ..., -1.0077,  0.3946,  0.3418],
         [-0.0991, -0.5753,  0.8784,  ...,  1.5714, -0.0075, -0.4266]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 110.084, Val Loss : 128.435
======> Trajectory Loss : 12.172, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.970, BelowGroundPenalize Loss : 0.919
===> [Minibatch 14/129].........IDX = 0 :  tensor([[[ 0.4823, -0.2728, -0.1906,  ...,  0.8295,  1.5887,  0.6003],
         [ 1.7378,  0.9787, -0.4005,  ..., -0.0565,  2.3668,  0.6495],
         [ 0.7036, -0.0817,  0.5402,  ..., -0.8453,  0.1928, -1.1722],
         ...,
         [-0.2379, -3.3980, -0.2913,  ..., -0.5635,  0.2163,  1.1677],
         [-0.2491,  0.0173, -0.5250,  ..., -0.2517,  0.0415, -0.4423],
         [-1.1271, -1.1247, -0.1415,  ..., -0.7366,  0.5011, -1.2683]],

        [[ 1.2056, -1.2145, -0.1054,  ..., -0.3960,  0.5859, -2.5365],
         [ 1.1142, -1.3268,  1.9417,  ...,  0.4460, -0.4011, -0.3984],
         [ 0.0491,  0.6501,  2.8132,  ..., -0.3533, -0.4136,  1.3920],
         ...,
         [-1.3536, -0.6209,  1.0019,  ...,  0.7587, -0.7124, -0.9907],
         [-1.0759, -1.6382, -0.0059,  ..., -1.8314, -0.1228,  0.3176],
         [ 0.2255,  0.1682,  0.1928,  ...,  0.2674,  0.4621,  0.2083]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 3.1762, -0.2702, -1.6700,  ..., -2.1904,  1.0411,  1.0119],
         [ 2.3948, -1.1265,  0.6017,  ...,  0.0302,  0.9125, -1.9431],
         [ 0.8503,  0.4610, -0.4747,  ..., -0.3621,  1.1035, -0.6395],
         ...,
         [ 0.8106,  0.3244,  1.4629,  ..., -1.7566, -2.1759,  0.8425],
         [ 0.9263,  1.2397,  0.5384,  ..., -0.6431,  0.3234,  0.9586],
         [-1.5886,  0.1455,  0.1410,  ...,  0.9001,  1.5322,  0.3790]],

        [[-0.0660,  0.1714, -1.6673,  ..., -0.2309, -1.1181, -0.9292],
         [-0.4700,  0.1555, -0.6468,  ...,  1.5299,  0.5295, -0.3216],
         [-0.6480,  0.8068, -0.3388,  ...,  0.2876,  0.0126, -0.1919],
         ...,
         [ 2.0819,  0.9684, -1.1912,  ...,  0.5431, -0.6448,  1.0066],
         [ 2.2663,  0.5313, -0.0230,  ..., -1.0077,  0.3946,  0.3418],
         [-0.0991, -0.5753,  0.8784,  ...,  1.5714, -0.0075, -0.4266]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 0.4823, -0.2728, -0.1906,  ...,  0.8295,  1.5887,  0.6003],
         [ 1.7378,  0.9787, -0.4005,  ..., -0.0565,  2.3668,  0.6495],
         [ 0.7036, -0.0817,  0.5402,  ..., -0.8453,  0.1928, -1.1722],
         ...,
         [-0.2379, -3.3980, -0.2913,  ..., -0.5635,  0.2163,  1.1677],
         [-0.2491,  0.0173, -0.5250,  ..., -0.2517,  0.0415, -0.4423],
         [-1.1271, -1.1247, -0.1415,  ..., -0.7366,  0.5011, -1.2683]],

        [[ 1.2056, -1.2145, -0.1054,  ..., -0.3960,  0.5859, -2.5365],
         [ 1.1142, -1.3268,  1.9417,  ...,  0.4460, -0.4011, -0.3984],
         [ 0.0491,  0.6501,  2.8132,  ..., -0.3533, -0.4136,  1.3920],
         ...,
         [-1.3536, -0.6209,  1.0019,  ...,  0.7587, -0.7124, -0.9907],
         [-1.0759, -1.6382, -0.0059,  ..., -1.8314, -0.1228,  0.3176],
         [ 0.2255,  0.1682,  0.1928,  ...,  0.2674,  0.4621,  0.2083]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 3.1762, -0.2702, -1.6700,  ..., -2.1904,  1.0411,  1.0119],
         [ 2.3948, -1.1265,  0.6017,  ...,  0.0302,  0.9125, -1.9431],
         [ 0.8503,  0.4610, -0.4747,  ..., -0.3621,  1.1035, -0.6395],
         ...,
         [ 0.8106,  0.3244,  1.4629,  ..., -1.7566, -2.1759,  0.8425],
         [ 0.9263,  1.2397,  0.5384,  ..., -0.6431,  0.3234,  0.9586],
         [-1.5886,  0.1455,  0.1410,  ...,  0.9001,  1.5322,  0.3790]],

        [[-0.0660,  0.1714, -1.6673,  ..., -0.2309, -1.1181, -0.9292],
         [-0.4700,  0.1555, -0.6468,  ...,  1.5299,  0.5295, -0.3216],
         [-0.6480,  0.8068, -0.3388,  ...,  0.2876,  0.0126, -0.1919],
         ...,
         [ 2.0819,  0.9684, -1.1912,  ...,  0.5431, -0.6448,  1.0066],
         [ 2.2663,  0.5313, -0.0230,  ..., -1.0077,  0.3946,  0.3418],
         [-0.0991, -0.5753,  0.8784,  ...,  1.5714, -0.0075, -0.4266]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 104.689, Val Loss : 125.363
======> Trajectory Loss : 11.975, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.923, BelowGroundPenalize Loss : 0.433
===> [Minibatch 15/129].........IDX = 0 :  tensor([[[ 0.4823, -0.2728, -0.1906,  ...,  0.8295,  1.5887,  0.6003],
         [ 1.7378,  0.9787, -0.4005,  ..., -0.0565,  2.3668,  0.6495],
         [ 0.7036, -0.0817,  0.5402,  ..., -0.8453,  0.1928, -1.1722],
         ...,
         [-0.2379, -3.3980, -0.2913,  ..., -0.5635,  0.2163,  1.1677],
         [-0.2491,  0.0173, -0.5250,  ..., -0.2517,  0.0415, -0.4423],
         [-1.1271, -1.1247, -0.1415,  ..., -0.7366,  0.5011, -1.2683]],

        [[ 1.2056, -1.2145, -0.1054,  ..., -0.3960,  0.5859, -2.5365],
         [ 1.1142, -1.3268,  1.9417,  ...,  0.4460, -0.4011, -0.3984],
         [ 0.0491,  0.6501,  2.8132,  ..., -0.3533, -0.4136,  1.3920],
         ...,
         [-1.3536, -0.6209,  1.0019,  ...,  0.7587, -0.7124, -0.9907],
         [-1.0759, -1.6382, -0.0059,  ..., -1.8314, -0.1228,  0.3176],
         [ 0.2255,  0.1682,  0.1928,  ...,  0.2674,  0.4621,  0.2083]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 3.1762, -0.2702, -1.6700,  ..., -2.1904,  1.0411,  1.0119],
         [ 2.3948, -1.1265,  0.6017,  ...,  0.0302,  0.9125, -1.9431],
         [ 0.8503,  0.4610, -0.4747,  ..., -0.3621,  1.1035, -0.6395],
         ...,
         [ 0.8106,  0.3244,  1.4629,  ..., -1.7566, -2.1759,  0.8425],
         [ 0.9263,  1.2397,  0.5384,  ..., -0.6431,  0.3234,  0.9586],
         [-1.5886,  0.1455,  0.1410,  ...,  0.9001,  1.5322,  0.3790]],

        [[-0.0660,  0.1714, -1.6673,  ..., -0.2309, -1.1181, -0.9292],
         [-0.4700,  0.1555, -0.6468,  ...,  1.5299,  0.5295, -0.3216],
         [-0.6480,  0.8068, -0.3388,  ...,  0.2876,  0.0126, -0.1919],
         ...,
         [ 2.0819,  0.9684, -1.1912,  ...,  0.5431, -0.6448,  1.0066],
         [ 2.2663,  0.5313, -0.0230,  ..., -1.0077,  0.3946,  0.3418],
         [-0.0991, -0.5753,  0.8784,  ...,  1.5714, -0.0075, -0.4266]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 0.4823, -0.2728, -0.1906,  ...,  0.8295,  1.5887,  0.6003],
         [ 1.7378,  0.9787, -0.4005,  ..., -0.0565,  2.3668,  0.6495],
         [ 0.7036, -0.0817,  0.5402,  ..., -0.8453,  0.1928, -1.1722],
         ...,
         [-0.2379, -3.3980, -0.2913,  ..., -0.5635,  0.2163,  1.1677],
         [-0.2491,  0.0173, -0.5250,  ..., -0.2517,  0.0415, -0.4423],
         [-1.1271, -1.1247, -0.1415,  ..., -0.7366,  0.5011, -1.2683]],

        [[ 1.2056, -1.2145, -0.1054,  ..., -0.3960,  0.5859, -2.5365],
         [ 1.1142, -1.3268,  1.9417,  ...,  0.4460, -0.4011, -0.3984],
         [ 0.0491,  0.6501,  2.8132,  ..., -0.3533, -0.4136,  1.3920],
         ...,
         [-1.3536, -0.6209,  1.0019,  ...,  0.7587, -0.7124, -0.9907],
         [-1.0759, -1.6382, -0.0059,  ..., -1.8314, -0.1228,  0.3176],
         [ 0.2255,  0.1682,  0.1928,  ...,  0.2674,  0.4621,  0.2083]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 3.1762, -0.2702, -1.6700,  ..., -2.1904,  1.0411,  1.0119],
         [ 2.3948, -1.1265,  0.6017,  ...,  0.0302,  0.9125, -1.9431],
         [ 0.8503,  0.4610, -0.4747,  ..., -0.3621,  1.1035, -0.6395],
         ...,
         [ 0.8106,  0.3244,  1.4629,  ..., -1.7566, -2.1759,  0.8425],
         [ 0.9263,  1.2397,  0.5384,  ..., -0.6431,  0.3234,  0.9586],
         [-1.5886,  0.1455,  0.1410,  ...,  0.9001,  1.5322,  0.3790]],

        [[-0.0660,  0.1714, -1.6673,  ..., -0.2309, -1.1181, -0.9292],
         [-0.4700,  0.1555, -0.6468,  ...,  1.5299,  0.5295, -0.3216],
         [-0.6480,  0.8068, -0.3388,  ...,  0.2876,  0.0126, -0.1919],
         ...,
         [ 2.0819,  0.9684, -1.1912,  ...,  0.5431, -0.6448,  1.0066],
         [ 2.2663,  0.5313, -0.0230,  ..., -1.0077,  0.3946,  0.3418],
         [-0.0991, -0.5753,  0.8784,  ...,  1.5714, -0.0075, -0.4266]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 102.133, Val Loss : 115.901
======> Trajectory Loss : 15.005, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.863, BelowGroundPenalize Loss : 0.794
===> [Minibatch 16/129].........IDX = 0 :  tensor([[[ 0.4823, -0.2728, -0.1906,  ...,  0.8295,  1.5887,  0.6003],
         [ 1.7378,  0.9787, -0.4005,  ..., -0.0565,  2.3668,  0.6495],
         [ 0.7036, -0.0817,  0.5402,  ..., -0.8453,  0.1928, -1.1722],
         ...,
         [-0.2379, -3.3980, -0.2913,  ..., -0.5635,  0.2163,  1.1677],
         [-0.2491,  0.0173, -0.5250,  ..., -0.2517,  0.0415, -0.4423],
         [-1.1271, -1.1247, -0.1415,  ..., -0.7366,  0.5011, -1.2683]],

        [[ 1.2056, -1.2145, -0.1054,  ..., -0.3960,  0.5859, -2.5365],
         [ 1.1142, -1.3268,  1.9417,  ...,  0.4460, -0.4011, -0.3984],
         [ 0.0491,  0.6501,  2.8132,  ..., -0.3533, -0.4136,  1.3920],
         ...,
         [-1.3536, -0.6209,  1.0019,  ...,  0.7587, -0.7124, -0.9907],
         [-1.0759, -1.6382, -0.0059,  ..., -1.8314, -0.1228,  0.3176],
         [ 0.2255,  0.1682,  0.1928,  ...,  0.2674,  0.4621,  0.2083]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 3.1762, -0.2702, -1.6700,  ..., -2.1904,  1.0411,  1.0119],
         [ 2.3948, -1.1265,  0.6017,  ...,  0.0302,  0.9125, -1.9431],
         [ 0.8503,  0.4610, -0.4747,  ..., -0.3621,  1.1035, -0.6395],
         ...,
         [ 0.8106,  0.3244,  1.4629,  ..., -1.7566, -2.1759,  0.8425],
         [ 0.9263,  1.2397,  0.5384,  ..., -0.6431,  0.3234,  0.9586],
         [-1.5886,  0.1455,  0.1410,  ...,  0.9001,  1.5322,  0.3790]],

        [[-0.0660,  0.1714, -1.6673,  ..., -0.2309, -1.1181, -0.9292],
         [-0.4700,  0.1555, -0.6468,  ...,  1.5299,  0.5295, -0.3216],
         [-0.6480,  0.8068, -0.3388,  ...,  0.2876,  0.0126, -0.1919],
         ...,
         [ 2.0819,  0.9684, -1.1912,  ...,  0.5431, -0.6448,  1.0066],
         [ 2.2663,  0.5313, -0.0230,  ..., -1.0077,  0.3946,  0.3418],
         [-0.0991, -0.5753,  0.8784,  ...,  1.5714, -0.0075, -0.4266]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 0.4823, -0.2728, -0.1906,  ...,  0.8295,  1.5887,  0.6003],
         [ 1.7378,  0.9787, -0.4005,  ..., -0.0565,  2.3668,  0.6495],
         [ 0.7036, -0.0817,  0.5402,  ..., -0.8453,  0.1928, -1.1722],
         ...,
         [-0.2379, -3.3980, -0.2913,  ..., -0.5635,  0.2163,  1.1677],
         [-0.2491,  0.0173, -0.5250,  ..., -0.2517,  0.0415, -0.4423],
         [-1.1271, -1.1247, -0.1415,  ..., -0.7366,  0.5011, -1.2683]],

        [[ 1.2056, -1.2145, -0.1054,  ..., -0.3960,  0.5859, -2.5365],
         [ 1.1142, -1.3268,  1.9417,  ...,  0.4460, -0.4011, -0.3984],
         [ 0.0491,  0.6501,  2.8132,  ..., -0.3533, -0.4136,  1.3920],
         ...,
         [-1.3536, -0.6209,  1.0019,  ...,  0.7587, -0.7124, -0.9907],
         [-1.0759, -1.6382, -0.0059,  ..., -1.8314, -0.1228,  0.3176],
         [ 0.2255,  0.1682,  0.1928,  ...,  0.2674,  0.4621,  0.2083]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 3.1762, -0.2702, -1.6700,  ..., -2.1904,  1.0411,  1.0119],
         [ 2.3948, -1.1265,  0.6017,  ...,  0.0302,  0.9125, -1.9431],
         [ 0.8503,  0.4610, -0.4747,  ..., -0.3621,  1.1035, -0.6395],
         ...,
         [ 0.8106,  0.3244,  1.4629,  ..., -1.7566, -2.1759,  0.8425],
         [ 0.9263,  1.2397,  0.5384,  ..., -0.6431,  0.3234,  0.9586],
         [-1.5886,  0.1455,  0.1410,  ...,  0.9001,  1.5322,  0.3790]],

        [[-0.0660,  0.1714, -1.6673,  ..., -0.2309, -1.1181, -0.9292],
         [-0.4700,  0.1555, -0.6468,  ...,  1.5299,  0.5295, -0.3216],
         [-0.6480,  0.8068, -0.3388,  ...,  0.2876,  0.0126, -0.1919],
         ...,
         [ 2.0819,  0.9684, -1.1912,  ...,  0.5431, -0.6448,  1.0066],
         [ 2.2663,  0.5313, -0.0230,  ..., -1.0077,  0.3946,  0.3418],
         [-0.0991, -0.5753,  0.8784,  ...,  1.5714, -0.0075, -0.4266]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 96.289, Val Loss : 114.609
======> Trajectory Loss : 11.063, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.847, BelowGroundPenalize Loss : 0.492
===> [Minibatch 17/129].........IDX = 0 :  tensor([[[ 0.4823, -0.2728, -0.1906,  ...,  0.8295,  1.5887,  0.6003],
         [ 1.7378,  0.9787, -0.4005,  ..., -0.0565,  2.3668,  0.6495],
         [ 0.7036, -0.0817,  0.5402,  ..., -0.8453,  0.1928, -1.1722],
         ...,
         [-0.2379, -3.3980, -0.2913,  ..., -0.5635,  0.2163,  1.1677],
         [-0.2491,  0.0173, -0.5250,  ..., -0.2517,  0.0415, -0.4423],
         [-1.1271, -1.1247, -0.1415,  ..., -0.7366,  0.5011, -1.2683]],

        [[ 1.2056, -1.2145, -0.1054,  ..., -0.3960,  0.5859, -2.5365],
         [ 1.1142, -1.3268,  1.9417,  ...,  0.4460, -0.4011, -0.3984],
         [ 0.0491,  0.6501,  2.8132,  ..., -0.3533, -0.4136,  1.3920],
         ...,
         [-1.3536, -0.6209,  1.0019,  ...,  0.7587, -0.7124, -0.9907],
         [-1.0759, -1.6382, -0.0059,  ..., -1.8314, -0.1228,  0.3176],
         [ 0.2255,  0.1682,  0.1928,  ...,  0.2674,  0.4621,  0.2083]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 3.1762, -0.2702, -1.6700,  ..., -2.1904,  1.0411,  1.0119],
         [ 2.3948, -1.1265,  0.6017,  ...,  0.0302,  0.9125, -1.9431],
         [ 0.8503,  0.4610, -0.4747,  ..., -0.3621,  1.1035, -0.6395],
         ...,
         [ 0.8106,  0.3244,  1.4629,  ..., -1.7566, -2.1759,  0.8425],
         [ 0.9263,  1.2397,  0.5384,  ..., -0.6431,  0.3234,  0.9586],
         [-1.5886,  0.1455,  0.1410,  ...,  0.9001,  1.5322,  0.3790]],

        [[-0.0660,  0.1714, -1.6673,  ..., -0.2309, -1.1181, -0.9292],
         [-0.4700,  0.1555, -0.6468,  ...,  1.5299,  0.5295, -0.3216],
         [-0.6480,  0.8068, -0.3388,  ...,  0.2876,  0.0126, -0.1919],
         ...,
         [ 2.0819,  0.9684, -1.1912,  ...,  0.5431, -0.6448,  1.0066],
         [ 2.2663,  0.5313, -0.0230,  ..., -1.0077,  0.3946,  0.3418],
         [-0.0991, -0.5753,  0.8784,  ...,  1.5714, -0.0075, -0.4266]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 0.4823, -0.2728, -0.1906,  ...,  0.8295,  1.5887,  0.6003],
         [ 1.7378,  0.9787, -0.4005,  ..., -0.0565,  2.3668,  0.6495],
         [ 0.7036, -0.0817,  0.5402,  ..., -0.8453,  0.1928, -1.1722],
         ...,
         [-0.2379, -3.3980, -0.2913,  ..., -0.5635,  0.2163,  1.1677],
         [-0.2491,  0.0173, -0.5250,  ..., -0.2517,  0.0415, -0.4423],
         [-1.1271, -1.1247, -0.1415,  ..., -0.7366,  0.5011, -1.2683]],

        [[ 1.2056, -1.2145, -0.1054,  ..., -0.3960,  0.5859, -2.5365],
         [ 1.1142, -1.3268,  1.9417,  ...,  0.4460, -0.4011, -0.3984],
         [ 0.0491,  0.6501,  2.8132,  ..., -0.3533, -0.4136,  1.3920],
         ...,
         [-1.3536, -0.6209,  1.0019,  ...,  0.7587, -0.7124, -0.9907],
         [-1.0759, -1.6382, -0.0059,  ..., -1.8314, -0.1228,  0.3176],
         [ 0.2255,  0.1682,  0.1928,  ...,  0.2674,  0.4621,  0.2083]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 3.1762, -0.2702, -1.6700,  ..., -2.1904,  1.0411,  1.0119],
         [ 2.3948, -1.1265,  0.6017,  ...,  0.0302,  0.9125, -1.9431],
         [ 0.8503,  0.4610, -0.4747,  ..., -0.3621,  1.1035, -0.6395],
         ...,
         [ 0.8106,  0.3244,  1.4629,  ..., -1.7566, -2.1759,  0.8425],
         [ 0.9263,  1.2397,  0.5384,  ..., -0.6431,  0.3234,  0.9586],
         [-1.5886,  0.1455,  0.1410,  ...,  0.9001,  1.5322,  0.3790]],

        [[-0.0660,  0.1714, -1.6673,  ..., -0.2309, -1.1181, -0.9292],
         [-0.4700,  0.1555, -0.6468,  ...,  1.5299,  0.5295, -0.3216],
         [-0.6480,  0.8068, -0.3388,  ...,  0.2876,  0.0126, -0.1919],
         ...,
         [ 2.0819,  0.9684, -1.1912,  ...,  0.5431, -0.6448,  1.0066],
         [ 2.2663,  0.5313, -0.0230,  ..., -1.0077,  0.3946,  0.3418],
         [-0.0991, -0.5753,  0.8784,  ...,  1.5714, -0.0075, -0.4266]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 93.571, Val Loss : 104.682
======> Trajectory Loss : 11.543, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.811, BelowGroundPenalize Loss : 0.929
===> [Minibatch 18/129].........IDX = 0 :  tensor([[[ 0.4823, -0.2728, -0.1906,  ...,  0.8295,  1.5887,  0.6003],
         [ 1.7378,  0.9787, -0.4005,  ..., -0.0565,  2.3668,  0.6495],
         [ 0.7036, -0.0817,  0.5402,  ..., -0.8453,  0.1928, -1.1722],
         ...,
         [-0.2379, -3.3980, -0.2913,  ..., -0.5635,  0.2163,  1.1677],
         [-0.2491,  0.0173, -0.5250,  ..., -0.2517,  0.0415, -0.4423],
         [-1.1271, -1.1247, -0.1415,  ..., -0.7366,  0.5011, -1.2683]],

        [[ 1.2056, -1.2145, -0.1054,  ..., -0.3960,  0.5859, -2.5365],
         [ 1.1142, -1.3268,  1.9417,  ...,  0.4460, -0.4011, -0.3984],
         [ 0.0491,  0.6501,  2.8132,  ..., -0.3533, -0.4136,  1.3920],
         ...,
         [-1.3536, -0.6209,  1.0019,  ...,  0.7587, -0.7124, -0.9907],
         [-1.0759, -1.6382, -0.0059,  ..., -1.8314, -0.1228,  0.3176],
         [ 0.2255,  0.1682,  0.1928,  ...,  0.2674,  0.4621,  0.2083]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 3.1762, -0.2702, -1.6700,  ..., -2.1904,  1.0411,  1.0119],
         [ 2.3948, -1.1265,  0.6017,  ...,  0.0302,  0.9125, -1.9431],
         [ 0.8503,  0.4610, -0.4747,  ..., -0.3621,  1.1035, -0.6395],
         ...,
         [ 0.8106,  0.3244,  1.4629,  ..., -1.7566, -2.1759,  0.8425],
         [ 0.9263,  1.2397,  0.5384,  ..., -0.6431,  0.3234,  0.9586],
         [-1.5886,  0.1455,  0.1410,  ...,  0.9001,  1.5322,  0.3790]],

        [[-0.0660,  0.1714, -1.6673,  ..., -0.2309, -1.1181, -0.9292],
         [-0.4700,  0.1555, -0.6468,  ...,  1.5299,  0.5295, -0.3216],
         [-0.6480,  0.8068, -0.3388,  ...,  0.2876,  0.0126, -0.1919],
         ...,
         [ 2.0819,  0.9684, -1.1912,  ...,  0.5431, -0.6448,  1.0066],
         [ 2.2663,  0.5313, -0.0230,  ..., -1.0077,  0.3946,  0.3418],
         [-0.0991, -0.5753,  0.8784,  ...,  1.5714, -0.0075, -0.4266]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 0.4823, -0.2728, -0.1906,  ...,  0.8295,  1.5887,  0.6003],
         [ 1.7378,  0.9787, -0.4005,  ..., -0.0565,  2.3668,  0.6495],
         [ 0.7036, -0.0817,  0.5402,  ..., -0.8453,  0.1928, -1.1722],
         ...,
         [-0.2379, -3.3980, -0.2913,  ..., -0.5635,  0.2163,  1.1677],
         [-0.2491,  0.0173, -0.5250,  ..., -0.2517,  0.0415, -0.4423],
         [-1.1271, -1.1247, -0.1415,  ..., -0.7366,  0.5011, -1.2683]],

        [[ 1.2056, -1.2145, -0.1054,  ..., -0.3960,  0.5859, -2.5365],
         [ 1.1142, -1.3268,  1.9417,  ...,  0.4460, -0.4011, -0.3984],
         [ 0.0491,  0.6501,  2.8132,  ..., -0.3533, -0.4136,  1.3920],
         ...,
         [-1.3536, -0.6209,  1.0019,  ...,  0.7587, -0.7124, -0.9907],
         [-1.0759, -1.6382, -0.0059,  ..., -1.8314, -0.1228,  0.3176],
         [ 0.2255,  0.1682,  0.1928,  ...,  0.2674,  0.4621,  0.2083]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 3.1762, -0.2702, -1.6700,  ..., -2.1904,  1.0411,  1.0119],
         [ 2.3948, -1.1265,  0.6017,  ...,  0.0302,  0.9125, -1.9431],
         [ 0.8503,  0.4610, -0.4747,  ..., -0.3621,  1.1035, -0.6395],
         ...,
         [ 0.8106,  0.3244,  1.4629,  ..., -1.7566, -2.1759,  0.8425],
         [ 0.9263,  1.2397,  0.5384,  ..., -0.6431,  0.3234,  0.9586],
         [-1.5886,  0.1455,  0.1410,  ...,  0.9001,  1.5322,  0.3790]],

        [[-0.0660,  0.1714, -1.6673,  ..., -0.2309, -1.1181, -0.9292],
         [-0.4700,  0.1555, -0.6468,  ...,  1.5299,  0.5295, -0.3216],
         [-0.6480,  0.8068, -0.3388,  ...,  0.2876,  0.0126, -0.1919],
         ...,
         [ 2.0819,  0.9684, -1.1912,  ...,  0.5431, -0.6448,  1.0066],
         [ 2.2663,  0.5313, -0.0230,  ..., -1.0077,  0.3946,  0.3418],
         [-0.0991, -0.5753,  0.8784,  ...,  1.5714, -0.0075, -0.4266]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 84.533, Val Loss : 102.059
======> Trajectory Loss : 10.749, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.729, BelowGroundPenalize Loss : 0.926
===> [Minibatch 19/129].........IDX = 0 :  tensor([[[ 0.4823, -0.2728, -0.1906,  ...,  0.8295,  1.5887,  0.6003],
         [ 1.7378,  0.9787, -0.4005,  ..., -0.0565,  2.3668,  0.6495],
         [ 0.7036, -0.0817,  0.5402,  ..., -0.8453,  0.1928, -1.1722],
         ...,
         [-0.2379, -3.3980, -0.2913,  ..., -0.5635,  0.2163,  1.1677],
         [-0.2491,  0.0173, -0.5250,  ..., -0.2517,  0.0415, -0.4423],
         [-1.1271, -1.1247, -0.1415,  ..., -0.7366,  0.5011, -1.2683]],

        [[ 1.2056, -1.2145, -0.1054,  ..., -0.3960,  0.5859, -2.5365],
         [ 1.1142, -1.3268,  1.9417,  ...,  0.4460, -0.4011, -0.3984],
         [ 0.0491,  0.6501,  2.8132,  ..., -0.3533, -0.4136,  1.3920],
         ...,
         [-1.3536, -0.6209,  1.0019,  ...,  0.7587, -0.7124, -0.9907],
         [-1.0759, -1.6382, -0.0059,  ..., -1.8314, -0.1228,  0.3176],
         [ 0.2255,  0.1682,  0.1928,  ...,  0.2674,  0.4621,  0.2083]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 3.1762, -0.2702, -1.6700,  ..., -2.1904,  1.0411,  1.0119],
         [ 2.3948, -1.1265,  0.6017,  ...,  0.0302,  0.9125, -1.9431],
         [ 0.8503,  0.4610, -0.4747,  ..., -0.3621,  1.1035, -0.6395],
         ...,
         [ 0.8106,  0.3244,  1.4629,  ..., -1.7566, -2.1759,  0.8425],
         [ 0.9263,  1.2397,  0.5384,  ..., -0.6431,  0.3234,  0.9586],
         [-1.5886,  0.1455,  0.1410,  ...,  0.9001,  1.5322,  0.3790]],

        [[-0.0660,  0.1714, -1.6673,  ..., -0.2309, -1.1181, -0.9292],
         [-0.4700,  0.1555, -0.6468,  ...,  1.5299,  0.5295, -0.3216],
         [-0.6480,  0.8068, -0.3388,  ...,  0.2876,  0.0126, -0.1919],
         ...,
         [ 2.0819,  0.9684, -1.1912,  ...,  0.5431, -0.6448,  1.0066],
         [ 2.2663,  0.5313, -0.0230,  ..., -1.0077,  0.3946,  0.3418],
         [-0.0991, -0.5753,  0.8784,  ...,  1.5714, -0.0075, -0.4266]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 0.4823, -0.2728, -0.1906,  ...,  0.8295,  1.5887,  0.6003],
         [ 1.7378,  0.9787, -0.4005,  ..., -0.0565,  2.3668,  0.6495],
         [ 0.7036, -0.0817,  0.5402,  ..., -0.8453,  0.1928, -1.1722],
         ...,
         [-0.2379, -3.3980, -0.2913,  ..., -0.5635,  0.2163,  1.1677],
         [-0.2491,  0.0173, -0.5250,  ..., -0.2517,  0.0415, -0.4423],
         [-1.1271, -1.1247, -0.1415,  ..., -0.7366,  0.5011, -1.2683]],

        [[ 1.2056, -1.2145, -0.1054,  ..., -0.3960,  0.5859, -2.5365],
         [ 1.1142, -1.3268,  1.9417,  ...,  0.4460, -0.4011, -0.3984],
         [ 0.0491,  0.6501,  2.8132,  ..., -0.3533, -0.4136,  1.3920],
         ...,
         [-1.3536, -0.6209,  1.0019,  ...,  0.7587, -0.7124, -0.9907],
         [-1.0759, -1.6382, -0.0059,  ..., -1.8314, -0.1228,  0.3176],
         [ 0.2255,  0.1682,  0.1928,  ...,  0.2674,  0.4621,  0.2083]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 3.1762, -0.2702, -1.6700,  ..., -2.1904,  1.0411,  1.0119],
         [ 2.3948, -1.1265,  0.6017,  ...,  0.0302,  0.9125, -1.9431],
         [ 0.8503,  0.4610, -0.4747,  ..., -0.3621,  1.1035, -0.6395],
         ...,
         [ 0.8106,  0.3244,  1.4629,  ..., -1.7566, -2.1759,  0.8425],
         [ 0.9263,  1.2397,  0.5384,  ..., -0.6431,  0.3234,  0.9586],
         [-1.5886,  0.1455,  0.1410,  ...,  0.9001,  1.5322,  0.3790]],

        [[-0.0660,  0.1714, -1.6673,  ..., -0.2309, -1.1181, -0.9292],
         [-0.4700,  0.1555, -0.6468,  ...,  1.5299,  0.5295, -0.3216],
         [-0.6480,  0.8068, -0.3388,  ...,  0.2876,  0.0126, -0.1919],
         ...,
         [ 2.0819,  0.9684, -1.1912,  ...,  0.5431, -0.6448,  1.0066],
         [ 2.2663,  0.5313, -0.0230,  ..., -1.0077,  0.3946,  0.3418],
         [-0.0991, -0.5753,  0.8784,  ...,  1.5714, -0.0075, -0.4266]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 82.728, Val Loss : 100.578
======> Trajectory Loss : 10.875, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.711, BelowGroundPenalize Loss : 0.777
===> [Minibatch 20/129].........IDX = 0 :  tensor([[[ 0.4823, -0.2728, -0.1906,  ...,  0.8295,  1.5887,  0.6003],
         [ 1.7378,  0.9787, -0.4005,  ..., -0.0565,  2.3668,  0.6495],
         [ 0.7036, -0.0817,  0.5402,  ..., -0.8453,  0.1928, -1.1722],
         ...,
         [-0.2379, -3.3980, -0.2913,  ..., -0.5635,  0.2163,  1.1677],
         [-0.2491,  0.0173, -0.5250,  ..., -0.2517,  0.0415, -0.4423],
         [-1.1271, -1.1247, -0.1415,  ..., -0.7366,  0.5011, -1.2683]],

        [[ 1.2056, -1.2145, -0.1054,  ..., -0.3960,  0.5859, -2.5365],
         [ 1.1142, -1.3268,  1.9417,  ...,  0.4460, -0.4011, -0.3984],
         [ 0.0491,  0.6501,  2.8132,  ..., -0.3533, -0.4136,  1.3920],
         ...,
         [-1.3536, -0.6209,  1.0019,  ...,  0.7587, -0.7124, -0.9907],
         [-1.0759, -1.6382, -0.0059,  ..., -1.8314, -0.1228,  0.3176],
         [ 0.2255,  0.1682,  0.1928,  ...,  0.2674,  0.4621,  0.2083]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 3.1762, -0.2702, -1.6700,  ..., -2.1904,  1.0411,  1.0119],
         [ 2.3948, -1.1265,  0.6017,  ...,  0.0302,  0.9125, -1.9431],
         [ 0.8503,  0.4610, -0.4747,  ..., -0.3621,  1.1035, -0.6395],
         ...,
         [ 0.8106,  0.3244,  1.4629,  ..., -1.7566, -2.1759,  0.8425],
         [ 0.9263,  1.2397,  0.5384,  ..., -0.6431,  0.3234,  0.9586],
         [-1.5886,  0.1455,  0.1410,  ...,  0.9001,  1.5322,  0.3790]],

        [[-0.0660,  0.1714, -1.6673,  ..., -0.2309, -1.1181, -0.9292],
         [-0.4700,  0.1555, -0.6468,  ...,  1.5299,  0.5295, -0.3216],
         [-0.6480,  0.8068, -0.3388,  ...,  0.2876,  0.0126, -0.1919],
         ...,
         [ 2.0819,  0.9684, -1.1912,  ...,  0.5431, -0.6448,  1.0066],
         [ 2.2663,  0.5313, -0.0230,  ..., -1.0077,  0.3946,  0.3418],
         [-0.0991, -0.5753,  0.8784,  ...,  1.5714, -0.0075, -0.4266]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 0.4823, -0.2728, -0.1906,  ...,  0.8295,  1.5887,  0.6003],
         [ 1.7378,  0.9787, -0.4005,  ..., -0.0565,  2.3668,  0.6495],
         [ 0.7036, -0.0817,  0.5402,  ..., -0.8453,  0.1928, -1.1722],
         ...,
         [-0.2379, -3.3980, -0.2913,  ..., -0.5635,  0.2163,  1.1677],
         [-0.2491,  0.0173, -0.5250,  ..., -0.2517,  0.0415, -0.4423],
         [-1.1271, -1.1247, -0.1415,  ..., -0.7366,  0.5011, -1.2683]],

        [[ 1.2056, -1.2145, -0.1054,  ..., -0.3960,  0.5859, -2.5365],
         [ 1.1142, -1.3268,  1.9417,  ...,  0.4460, -0.4011, -0.3984],
         [ 0.0491,  0.6501,  2.8132,  ..., -0.3533, -0.4136,  1.3920],
         ...,
         [-1.3536, -0.6209,  1.0019,  ...,  0.7587, -0.7124, -0.9907],
         [-1.0759, -1.6382, -0.0059,  ..., -1.8314, -0.1228,  0.3176],
         [ 0.2255,  0.1682,  0.1928,  ...,  0.2674,  0.4621,  0.2083]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 3.1762, -0.2702, -1.6700,  ..., -2.1904,  1.0411,  1.0119],
         [ 2.3948, -1.1265,  0.6017,  ...,  0.0302,  0.9125, -1.9431],
         [ 0.8503,  0.4610, -0.4747,  ..., -0.3621,  1.1035, -0.6395],
         ...,
         [ 0.8106,  0.3244,  1.4629,  ..., -1.7566, -2.1759,  0.8425],
         [ 0.9263,  1.2397,  0.5384,  ..., -0.6431,  0.3234,  0.9586],
         [-1.5886,  0.1455,  0.1410,  ...,  0.9001,  1.5322,  0.3790]],

        [[-0.0660,  0.1714, -1.6673,  ..., -0.2309, -1.1181, -0.9292],
         [-0.4700,  0.1555, -0.6468,  ...,  1.5299,  0.5295, -0.3216],
         [-0.6480,  0.8068, -0.3388,  ...,  0.2876,  0.0126, -0.1919],
         ...,
         [ 2.0819,  0.9684, -1.1912,  ...,  0.5431, -0.6448,  1.0066],
         [ 2.2663,  0.5313, -0.0230,  ..., -1.0077,  0.3946,  0.3418],
         [-0.0991, -0.5753,  0.8784,  ...,  1.5714, -0.0075, -0.4266]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 82.351, Val Loss : 109.017
======> Trajectory Loss : 14.344, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.669, BelowGroundPenalize Loss : 1.077
===> [Minibatch 21/129].........IDX = 0 :  tensor([[[ 0.4823, -0.2728, -0.1906,  ...,  0.8295,  1.5887,  0.6003],
         [ 1.7378,  0.9787, -0.4005,  ..., -0.0565,  2.3668,  0.6495],
         [ 0.7036, -0.0817,  0.5402,  ..., -0.8453,  0.1928, -1.1722],
         ...,
         [-0.2379, -3.3980, -0.2913,  ..., -0.5635,  0.2163,  1.1677],
         [-0.2491,  0.0173, -0.5250,  ..., -0.2517,  0.0415, -0.4423],
         [-1.1271, -1.1247, -0.1415,  ..., -0.7366,  0.5011, -1.2683]],

        [[ 1.2056, -1.2145, -0.1054,  ..., -0.3960,  0.5859, -2.5365],
         [ 1.1142, -1.3268,  1.9417,  ...,  0.4460, -0.4011, -0.3984],
         [ 0.0491,  0.6501,  2.8132,  ..., -0.3533, -0.4136,  1.3920],
         ...,
         [-1.3536, -0.6209,  1.0019,  ...,  0.7587, -0.7124, -0.9907],
         [-1.0759, -1.6382, -0.0059,  ..., -1.8314, -0.1228,  0.3176],
         [ 0.2255,  0.1682,  0.1928,  ...,  0.2674,  0.4621,  0.2083]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 3.1762, -0.2702, -1.6700,  ..., -2.1904,  1.0411,  1.0119],
         [ 2.3948, -1.1265,  0.6017,  ...,  0.0302,  0.9125, -1.9431],
         [ 0.8503,  0.4610, -0.4747,  ..., -0.3621,  1.1035, -0.6395],
         ...,
         [ 0.8106,  0.3244,  1.4629,  ..., -1.7566, -2.1759,  0.8425],
         [ 0.9263,  1.2397,  0.5384,  ..., -0.6431,  0.3234,  0.9586],
         [-1.5886,  0.1455,  0.1410,  ...,  0.9001,  1.5322,  0.3790]],

        [[-0.0660,  0.1714, -1.6673,  ..., -0.2309, -1.1181, -0.9292],
         [-0.4700,  0.1555, -0.6468,  ...,  1.5299,  0.5295, -0.3216],
         [-0.6480,  0.8068, -0.3388,  ...,  0.2876,  0.0126, -0.1919],
         ...,
         [ 2.0819,  0.9684, -1.1912,  ...,  0.5431, -0.6448,  1.0066],
         [ 2.2663,  0.5313, -0.0230,  ..., -1.0077,  0.3946,  0.3418],
         [-0.0991, -0.5753,  0.8784,  ...,  1.5714, -0.0075, -0.4266]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 0.4823, -0.2728, -0.1906,  ...,  0.8295,  1.5887,  0.6003],
         [ 1.7378,  0.9787, -0.4005,  ..., -0.0565,  2.3668,  0.6495],
         [ 0.7036, -0.0817,  0.5402,  ..., -0.8453,  0.1928, -1.1722],
         ...,
         [-0.2379, -3.3980, -0.2913,  ..., -0.5635,  0.2163,  1.1677],
         [-0.2491,  0.0173, -0.5250,  ..., -0.2517,  0.0415, -0.4423],
         [-1.1271, -1.1247, -0.1415,  ..., -0.7366,  0.5011, -1.2683]],

        [[ 1.2056, -1.2145, -0.1054,  ..., -0.3960,  0.5859, -2.5365],
         [ 1.1142, -1.3268,  1.9417,  ...,  0.4460, -0.4011, -0.3984],
         [ 0.0491,  0.6501,  2.8132,  ..., -0.3533, -0.4136,  1.3920],
         ...,
         [-1.3536, -0.6209,  1.0019,  ...,  0.7587, -0.7124, -0.9907],
         [-1.0759, -1.6382, -0.0059,  ..., -1.8314, -0.1228,  0.3176],
         [ 0.2255,  0.1682,  0.1928,  ...,  0.2674,  0.4621,  0.2083]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 3.1762, -0.2702, -1.6700,  ..., -2.1904,  1.0411,  1.0119],
         [ 2.3948, -1.1265,  0.6017,  ...,  0.0302,  0.9125, -1.9431],
         [ 0.8503,  0.4610, -0.4747,  ..., -0.3621,  1.1035, -0.6395],
         ...,
         [ 0.8106,  0.3244,  1.4629,  ..., -1.7566, -2.1759,  0.8425],
         [ 0.9263,  1.2397,  0.5384,  ..., -0.6431,  0.3234,  0.9586],
         [-1.5886,  0.1455,  0.1410,  ...,  0.9001,  1.5322,  0.3790]],

        [[-0.0660,  0.1714, -1.6673,  ..., -0.2309, -1.1181, -0.9292],
         [-0.4700,  0.1555, -0.6468,  ...,  1.5299,  0.5295, -0.3216],
         [-0.6480,  0.8068, -0.3388,  ...,  0.2876,  0.0126, -0.1919],
         ...,
         [ 2.0819,  0.9684, -1.1912,  ...,  0.5431, -0.6448,  1.0066],
         [ 2.2663,  0.5313, -0.0230,  ..., -1.0077,  0.3946,  0.3418],
         [-0.0991, -0.5753,  0.8784,  ...,  1.5714, -0.0075, -0.4266]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 82.110, Val Loss : 138.525
======> Trajectory Loss : 13.471, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.679, BelowGroundPenalize Loss : 0.780
===> [Minibatch 22/129].........IDX = 0 :  tensor([[[ 0.4823, -0.2728, -0.1906,  ...,  0.8295,  1.5887,  0.6003],
         [ 1.7378,  0.9787, -0.4005,  ..., -0.0565,  2.3668,  0.6495],
         [ 0.7036, -0.0817,  0.5402,  ..., -0.8453,  0.1928, -1.1722],
         ...,
         [-0.2379, -3.3980, -0.2913,  ..., -0.5635,  0.2163,  1.1677],
         [-0.2491,  0.0173, -0.5250,  ..., -0.2517,  0.0415, -0.4423],
         [-1.1271, -1.1247, -0.1415,  ..., -0.7366,  0.5011, -1.2683]],

        [[ 1.2056, -1.2145, -0.1054,  ..., -0.3960,  0.5859, -2.5365],
         [ 1.1142, -1.3268,  1.9417,  ...,  0.4460, -0.4011, -0.3984],
         [ 0.0491,  0.6501,  2.8132,  ..., -0.3533, -0.4136,  1.3920],
         ...,
         [-1.3536, -0.6209,  1.0019,  ...,  0.7587, -0.7124, -0.9907],
         [-1.0759, -1.6382, -0.0059,  ..., -1.8314, -0.1228,  0.3176],
         [ 0.2255,  0.1682,  0.1928,  ...,  0.2674,  0.4621,  0.2083]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 3.1762, -0.2702, -1.6700,  ..., -2.1904,  1.0411,  1.0119],
         [ 2.3948, -1.1265,  0.6017,  ...,  0.0302,  0.9125, -1.9431],
         [ 0.8503,  0.4610, -0.4747,  ..., -0.3621,  1.1035, -0.6395],
         ...,
         [ 0.8106,  0.3244,  1.4629,  ..., -1.7566, -2.1759,  0.8425],
         [ 0.9263,  1.2397,  0.5384,  ..., -0.6431,  0.3234,  0.9586],
         [-1.5886,  0.1455,  0.1410,  ...,  0.9001,  1.5322,  0.3790]],

        [[-0.0660,  0.1714, -1.6673,  ..., -0.2309, -1.1181, -0.9292],
         [-0.4700,  0.1555, -0.6468,  ...,  1.5299,  0.5295, -0.3216],
         [-0.6480,  0.8068, -0.3388,  ...,  0.2876,  0.0126, -0.1919],
         ...,
         [ 2.0819,  0.9684, -1.1912,  ...,  0.5431, -0.6448,  1.0066],
         [ 2.2663,  0.5313, -0.0230,  ..., -1.0077,  0.3946,  0.3418],
         [-0.0991, -0.5753,  0.8784,  ...,  1.5714, -0.0075, -0.4266]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 0.4823, -0.2728, -0.1906,  ...,  0.8295,  1.5887,  0.6003],
         [ 1.7378,  0.9787, -0.4005,  ..., -0.0565,  2.3668,  0.6495],
         [ 0.7036, -0.0817,  0.5402,  ..., -0.8453,  0.1928, -1.1722],
         ...,
         [-0.2379, -3.3980, -0.2913,  ..., -0.5635,  0.2163,  1.1677],
         [-0.2491,  0.0173, -0.5250,  ..., -0.2517,  0.0415, -0.4423],
         [-1.1271, -1.1247, -0.1415,  ..., -0.7366,  0.5011, -1.2683]],

        [[ 1.2056, -1.2145, -0.1054,  ..., -0.3960,  0.5859, -2.5365],
         [ 1.1142, -1.3268,  1.9417,  ...,  0.4460, -0.4011, -0.3984],
         [ 0.0491,  0.6501,  2.8132,  ..., -0.3533, -0.4136,  1.3920],
         ...,
         [-1.3536, -0.6209,  1.0019,  ...,  0.7587, -0.7124, -0.9907],
         [-1.0759, -1.6382, -0.0059,  ..., -1.8314, -0.1228,  0.3176],
         [ 0.2255,  0.1682,  0.1928,  ...,  0.2674,  0.4621,  0.2083]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 3.1762, -0.2702, -1.6700,  ..., -2.1904,  1.0411,  1.0119],
         [ 2.3948, -1.1265,  0.6017,  ...,  0.0302,  0.9125, -1.9431],
         [ 0.8503,  0.4610, -0.4747,  ..., -0.3621,  1.1035, -0.6395],
         ...,
         [ 0.8106,  0.3244,  1.4629,  ..., -1.7566, -2.1759,  0.8425],
         [ 0.9263,  1.2397,  0.5384,  ..., -0.6431,  0.3234,  0.9586],
         [-1.5886,  0.1455,  0.1410,  ...,  0.9001,  1.5322,  0.3790]],

        [[-0.0660,  0.1714, -1.6673,  ..., -0.2309, -1.1181, -0.9292],
         [-0.4700,  0.1555, -0.6468,  ...,  1.5299,  0.5295, -0.3216],
         [-0.6480,  0.8068, -0.3388,  ...,  0.2876,  0.0126, -0.1919],
         ...,
         [ 2.0819,  0.9684, -1.1912,  ...,  0.5431, -0.6448,  1.0066],
         [ 2.2663,  0.5313, -0.0230,  ..., -1.0077,  0.3946,  0.3418],
         [-0.0991, -0.5753,  0.8784,  ...,  1.5714, -0.0075, -0.4266]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 90.026, Val Loss : 156.354
======> Trajectory Loss : 20.862, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.690, BelowGroundPenalize Loss : 0.186
===> [Minibatch 23/129].........IDX = 0 :  tensor([[[ 0.4823, -0.2728, -0.1906,  ...,  0.8295,  1.5887,  0.6003],
         [ 1.7378,  0.9787, -0.4005,  ..., -0.0565,  2.3668,  0.6495],
         [ 0.7036, -0.0817,  0.5402,  ..., -0.8453,  0.1928, -1.1722],
         ...,
         [-0.2379, -3.3980, -0.2913,  ..., -0.5635,  0.2163,  1.1677],
         [-0.2491,  0.0173, -0.5250,  ..., -0.2517,  0.0415, -0.4423],
         [-1.1271, -1.1247, -0.1415,  ..., -0.7366,  0.5011, -1.2683]],

        [[ 1.2056, -1.2145, -0.1054,  ..., -0.3960,  0.5859, -2.5365],
         [ 1.1142, -1.3268,  1.9417,  ...,  0.4460, -0.4011, -0.3984],
         [ 0.0491,  0.6501,  2.8132,  ..., -0.3533, -0.4136,  1.3920],
         ...,
         [-1.3536, -0.6209,  1.0019,  ...,  0.7587, -0.7124, -0.9907],
         [-1.0759, -1.6382, -0.0059,  ..., -1.8314, -0.1228,  0.3176],
         [ 0.2255,  0.1682,  0.1928,  ...,  0.2674,  0.4621,  0.2083]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 3.1762, -0.2702, -1.6700,  ..., -2.1904,  1.0411,  1.0119],
         [ 2.3948, -1.1265,  0.6017,  ...,  0.0302,  0.9125, -1.9431],
         [ 0.8503,  0.4610, -0.4747,  ..., -0.3621,  1.1035, -0.6395],
         ...,
         [ 0.8106,  0.3244,  1.4629,  ..., -1.7566, -2.1759,  0.8425],
         [ 0.9263,  1.2397,  0.5384,  ..., -0.6431,  0.3234,  0.9586],
         [-1.5886,  0.1455,  0.1410,  ...,  0.9001,  1.5322,  0.3790]],

        [[-0.0660,  0.1714, -1.6673,  ..., -0.2309, -1.1181, -0.9292],
         [-0.4700,  0.1555, -0.6468,  ...,  1.5299,  0.5295, -0.3216],
         [-0.6480,  0.8068, -0.3388,  ...,  0.2876,  0.0126, -0.1919],
         ...,
         [ 2.0819,  0.9684, -1.1912,  ...,  0.5431, -0.6448,  1.0066],
         [ 2.2663,  0.5313, -0.0230,  ..., -1.0077,  0.3946,  0.3418],
         [-0.0991, -0.5753,  0.8784,  ...,  1.5714, -0.0075, -0.4266]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 0.4823, -0.2728, -0.1906,  ...,  0.8295,  1.5887,  0.6003],
         [ 1.7378,  0.9787, -0.4005,  ..., -0.0565,  2.3668,  0.6495],
         [ 0.7036, -0.0817,  0.5402,  ..., -0.8453,  0.1928, -1.1722],
         ...,
         [-0.2379, -3.3980, -0.2913,  ..., -0.5635,  0.2163,  1.1677],
         [-0.2491,  0.0173, -0.5250,  ..., -0.2517,  0.0415, -0.4423],
         [-1.1271, -1.1247, -0.1415,  ..., -0.7366,  0.5011, -1.2683]],

        [[ 1.2056, -1.2145, -0.1054,  ..., -0.3960,  0.5859, -2.5365],
         [ 1.1142, -1.3268,  1.9417,  ...,  0.4460, -0.4011, -0.3984],
         [ 0.0491,  0.6501,  2.8132,  ..., -0.3533, -0.4136,  1.3920],
         ...,
         [-1.3536, -0.6209,  1.0019,  ...,  0.7587, -0.7124, -0.9907],
         [-1.0759, -1.6382, -0.0059,  ..., -1.8314, -0.1228,  0.3176],
         [ 0.2255,  0.1682,  0.1928,  ...,  0.2674,  0.4621,  0.2083]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 3.1762, -0.2702, -1.6700,  ..., -2.1904,  1.0411,  1.0119],
         [ 2.3948, -1.1265,  0.6017,  ...,  0.0302,  0.9125, -1.9431],
         [ 0.8503,  0.4610, -0.4747,  ..., -0.3621,  1.1035, -0.6395],
         ...,
         [ 0.8106,  0.3244,  1.4629,  ..., -1.7566, -2.1759,  0.8425],
         [ 0.9263,  1.2397,  0.5384,  ..., -0.6431,  0.3234,  0.9586],
         [-1.5886,  0.1455,  0.1410,  ...,  0.9001,  1.5322,  0.3790]],

        [[-0.0660,  0.1714, -1.6673,  ..., -0.2309, -1.1181, -0.9292],
         [-0.4700,  0.1555, -0.6468,  ...,  1.5299,  0.5295, -0.3216],
         [-0.6480,  0.8068, -0.3388,  ...,  0.2876,  0.0126, -0.1919],
         ...,
         [ 2.0819,  0.9684, -1.1912,  ...,  0.5431, -0.6448,  1.0066],
         [ 2.2663,  0.5313, -0.0230,  ..., -1.0077,  0.3946,  0.3418],
         [-0.0991, -0.5753,  0.8784,  ...,  1.5714, -0.0075, -0.4266]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 85.566, Val Loss : 153.121
======> Trajectory Loss : 20.420, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.651, BelowGroundPenalize Loss : 0.088
===> [Minibatch 24/129].........IDX = 0 :  tensor([[[ 0.4823, -0.2728, -0.1906,  ...,  0.8295,  1.5887,  0.6003],
         [ 1.7378,  0.9787, -0.4005,  ..., -0.0565,  2.3668,  0.6495],
         [ 0.7036, -0.0817,  0.5402,  ..., -0.8453,  0.1928, -1.1722],
         ...,
         [-0.2379, -3.3980, -0.2913,  ..., -0.5635,  0.2163,  1.1677],
         [-0.2491,  0.0173, -0.5250,  ..., -0.2517,  0.0415, -0.4423],
         [-1.1271, -1.1247, -0.1415,  ..., -0.7366,  0.5011, -1.2683]],

        [[ 1.2056, -1.2145, -0.1054,  ..., -0.3960,  0.5859, -2.5365],
         [ 1.1142, -1.3268,  1.9417,  ...,  0.4460, -0.4011, -0.3984],
         [ 0.0491,  0.6501,  2.8132,  ..., -0.3533, -0.4136,  1.3920],
         ...,
         [-1.3536, -0.6209,  1.0019,  ...,  0.7587, -0.7124, -0.9907],
         [-1.0759, -1.6382, -0.0059,  ..., -1.8314, -0.1228,  0.3176],
         [ 0.2255,  0.1682,  0.1928,  ...,  0.2674,  0.4621,  0.2083]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 3.1762, -0.2702, -1.6700,  ..., -2.1904,  1.0411,  1.0119],
         [ 2.3948, -1.1265,  0.6017,  ...,  0.0302,  0.9125, -1.9431],
         [ 0.8503,  0.4610, -0.4747,  ..., -0.3621,  1.1035, -0.6395],
         ...,
         [ 0.8106,  0.3244,  1.4629,  ..., -1.7566, -2.1759,  0.8425],
         [ 0.9263,  1.2397,  0.5384,  ..., -0.6431,  0.3234,  0.9586],
         [-1.5886,  0.1455,  0.1410,  ...,  0.9001,  1.5322,  0.3790]],

        [[-0.0660,  0.1714, -1.6673,  ..., -0.2309, -1.1181, -0.9292],
         [-0.4700,  0.1555, -0.6468,  ...,  1.5299,  0.5295, -0.3216],
         [-0.6480,  0.8068, -0.3388,  ...,  0.2876,  0.0126, -0.1919],
         ...,
         [ 2.0819,  0.9684, -1.1912,  ...,  0.5431, -0.6448,  1.0066],
         [ 2.2663,  0.5313, -0.0230,  ..., -1.0077,  0.3946,  0.3418],
         [-0.0991, -0.5753,  0.8784,  ...,  1.5714, -0.0075, -0.4266]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 0.4823, -0.2728, -0.1906,  ...,  0.8295,  1.5887,  0.6003],
         [ 1.7378,  0.9787, -0.4005,  ..., -0.0565,  2.3668,  0.6495],
         [ 0.7036, -0.0817,  0.5402,  ..., -0.8453,  0.1928, -1.1722],
         ...,
         [-0.2379, -3.3980, -0.2913,  ..., -0.5635,  0.2163,  1.1677],
         [-0.2491,  0.0173, -0.5250,  ..., -0.2517,  0.0415, -0.4423],
         [-1.1271, -1.1247, -0.1415,  ..., -0.7366,  0.5011, -1.2683]],

        [[ 1.2056, -1.2145, -0.1054,  ..., -0.3960,  0.5859, -2.5365],
         [ 1.1142, -1.3268,  1.9417,  ...,  0.4460, -0.4011, -0.3984],
         [ 0.0491,  0.6501,  2.8132,  ..., -0.3533, -0.4136,  1.3920],
         ...,
         [-1.3536, -0.6209,  1.0019,  ...,  0.7587, -0.7124, -0.9907],
         [-1.0759, -1.6382, -0.0059,  ..., -1.8314, -0.1228,  0.3176],
         [ 0.2255,  0.1682,  0.1928,  ...,  0.2674,  0.4621,  0.2083]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 3.1762, -0.2702, -1.6700,  ..., -2.1904,  1.0411,  1.0119],
         [ 2.3948, -1.1265,  0.6017,  ...,  0.0302,  0.9125, -1.9431],
         [ 0.8503,  0.4610, -0.4747,  ..., -0.3621,  1.1035, -0.6395],
         ...,
         [ 0.8106,  0.3244,  1.4629,  ..., -1.7566, -2.1759,  0.8425],
         [ 0.9263,  1.2397,  0.5384,  ..., -0.6431,  0.3234,  0.9586],
         [-1.5886,  0.1455,  0.1410,  ...,  0.9001,  1.5322,  0.3790]],

        [[-0.0660,  0.1714, -1.6673,  ..., -0.2309, -1.1181, -0.9292],
         [-0.4700,  0.1555, -0.6468,  ...,  1.5299,  0.5295, -0.3216],
         [-0.6480,  0.8068, -0.3388,  ...,  0.2876,  0.0126, -0.1919],
         ...,
         [ 2.0819,  0.9684, -1.1912,  ...,  0.5431, -0.6448,  1.0066],
         [ 2.2663,  0.5313, -0.0230,  ..., -1.0077,  0.3946,  0.3418],
         [-0.0991, -0.5753,  0.8784,  ...,  1.5714, -0.0075, -0.4266]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 84.961, Val Loss : 134.502
======> Trajectory Loss : 20.381, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.645, BelowGroundPenalize Loss : 0.079
===> [Minibatch 25/129].........IDX = 0 :  tensor([[[ 0.4823, -0.2728, -0.1906,  ...,  0.8295,  1.5887,  0.6003],
         [ 1.7378,  0.9787, -0.4005,  ..., -0.0565,  2.3668,  0.6495],
         [ 0.7036, -0.0817,  0.5402,  ..., -0.8453,  0.1928, -1.1722],
         ...,
         [-0.2379, -3.3980, -0.2913,  ..., -0.5635,  0.2163,  1.1677],
         [-0.2491,  0.0173, -0.5250,  ..., -0.2517,  0.0415, -0.4423],
         [-1.1271, -1.1247, -0.1415,  ..., -0.7366,  0.5011, -1.2683]],

        [[ 1.2056, -1.2145, -0.1054,  ..., -0.3960,  0.5859, -2.5365],
         [ 1.1142, -1.3268,  1.9417,  ...,  0.4460, -0.4011, -0.3984],
         [ 0.0491,  0.6501,  2.8132,  ..., -0.3533, -0.4136,  1.3920],
         ...,
         [-1.3536, -0.6209,  1.0019,  ...,  0.7587, -0.7124, -0.9907],
         [-1.0759, -1.6382, -0.0059,  ..., -1.8314, -0.1228,  0.3176],
         [ 0.2255,  0.1682,  0.1928,  ...,  0.2674,  0.4621,  0.2083]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 3.1762, -0.2702, -1.6700,  ..., -2.1904,  1.0411,  1.0119],
         [ 2.3948, -1.1265,  0.6017,  ...,  0.0302,  0.9125, -1.9431],
         [ 0.8503,  0.4610, -0.4747,  ..., -0.3621,  1.1035, -0.6395],
         ...,
         [ 0.8106,  0.3244,  1.4629,  ..., -1.7566, -2.1759,  0.8425],
         [ 0.9263,  1.2397,  0.5384,  ..., -0.6431,  0.3234,  0.9586],
         [-1.5886,  0.1455,  0.1410,  ...,  0.9001,  1.5322,  0.3790]],

        [[-0.0660,  0.1714, -1.6673,  ..., -0.2309, -1.1181, -0.9292],
         [-0.4700,  0.1555, -0.6468,  ...,  1.5299,  0.5295, -0.3216],
         [-0.6480,  0.8068, -0.3388,  ...,  0.2876,  0.0126, -0.1919],
         ...,
         [ 2.0819,  0.9684, -1.1912,  ...,  0.5431, -0.6448,  1.0066],
         [ 2.2663,  0.5313, -0.0230,  ..., -1.0077,  0.3946,  0.3418],
         [-0.0991, -0.5753,  0.8784,  ...,  1.5714, -0.0075, -0.4266]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 0.4823, -0.2728, -0.1906,  ...,  0.8295,  1.5887,  0.6003],
         [ 1.7378,  0.9787, -0.4005,  ..., -0.0565,  2.3668,  0.6495],
         [ 0.7036, -0.0817,  0.5402,  ..., -0.8453,  0.1928, -1.1722],
         ...,
         [-0.2379, -3.3980, -0.2913,  ..., -0.5635,  0.2163,  1.1677],
         [-0.2491,  0.0173, -0.5250,  ..., -0.2517,  0.0415, -0.4423],
         [-1.1271, -1.1247, -0.1415,  ..., -0.7366,  0.5011, -1.2683]],

        [[ 1.2056, -1.2145, -0.1054,  ..., -0.3960,  0.5859, -2.5365],
         [ 1.1142, -1.3268,  1.9417,  ...,  0.4460, -0.4011, -0.3984],
         [ 0.0491,  0.6501,  2.8132,  ..., -0.3533, -0.4136,  1.3920],
         ...,
         [-1.3536, -0.6209,  1.0019,  ...,  0.7587, -0.7124, -0.9907],
         [-1.0759, -1.6382, -0.0059,  ..., -1.8314, -0.1228,  0.3176],
         [ 0.2255,  0.1682,  0.1928,  ...,  0.2674,  0.4621,  0.2083]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 3.1762, -0.2702, -1.6700,  ..., -2.1904,  1.0411,  1.0119],
         [ 2.3948, -1.1265,  0.6017,  ...,  0.0302,  0.9125, -1.9431],
         [ 0.8503,  0.4610, -0.4747,  ..., -0.3621,  1.1035, -0.6395],
         ...,
         [ 0.8106,  0.3244,  1.4629,  ..., -1.7566, -2.1759,  0.8425],
         [ 0.9263,  1.2397,  0.5384,  ..., -0.6431,  0.3234,  0.9586],
         [-1.5886,  0.1455,  0.1410,  ...,  0.9001,  1.5322,  0.3790]],

        [[-0.0660,  0.1714, -1.6673,  ..., -0.2309, -1.1181, -0.9292],
         [-0.4700,  0.1555, -0.6468,  ...,  1.5299,  0.5295, -0.3216],
         [-0.6480,  0.8068, -0.3388,  ...,  0.2876,  0.0126, -0.1919],
         ...,
         [ 2.0819,  0.9684, -1.1912,  ...,  0.5431, -0.6448,  1.0066],
         [ 2.2663,  0.5313, -0.0230,  ..., -1.0077,  0.3946,  0.3418],
         [-0.0991, -0.5753,  0.8784,  ...,  1.5714, -0.0075, -0.4266]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 77.515, Val Loss : 108.354
======> Trajectory Loss : 15.738, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.616, BelowGroundPenalize Loss : 0.178
===> [Minibatch 26/129].........IDX = 0 :  tensor([[[ 0.4823, -0.2728, -0.1906,  ...,  0.8295,  1.5887,  0.6003],
         [ 1.7378,  0.9787, -0.4005,  ..., -0.0565,  2.3668,  0.6495],
         [ 0.7036, -0.0817,  0.5402,  ..., -0.8453,  0.1928, -1.1722],
         ...,
         [-0.2379, -3.3980, -0.2913,  ..., -0.5635,  0.2163,  1.1677],
         [-0.2491,  0.0173, -0.5250,  ..., -0.2517,  0.0415, -0.4423],
         [-1.1271, -1.1247, -0.1415,  ..., -0.7366,  0.5011, -1.2683]],

        [[ 1.2056, -1.2145, -0.1054,  ..., -0.3960,  0.5859, -2.5365],
         [ 1.1142, -1.3268,  1.9417,  ...,  0.4460, -0.4011, -0.3984],
         [ 0.0491,  0.6501,  2.8132,  ..., -0.3533, -0.4136,  1.3920],
         ...,
         [-1.3536, -0.6209,  1.0019,  ...,  0.7587, -0.7124, -0.9907],
         [-1.0759, -1.6382, -0.0059,  ..., -1.8314, -0.1228,  0.3176],
         [ 0.2255,  0.1682,  0.1928,  ...,  0.2674,  0.4621,  0.2083]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 3.1762, -0.2702, -1.6700,  ..., -2.1904,  1.0411,  1.0119],
         [ 2.3948, -1.1265,  0.6017,  ...,  0.0302,  0.9125, -1.9431],
         [ 0.8503,  0.4610, -0.4747,  ..., -0.3621,  1.1035, -0.6395],
         ...,
         [ 0.8106,  0.3244,  1.4629,  ..., -1.7566, -2.1759,  0.8425],
         [ 0.9263,  1.2397,  0.5384,  ..., -0.6431,  0.3234,  0.9586],
         [-1.5886,  0.1455,  0.1410,  ...,  0.9001,  1.5322,  0.3790]],

        [[-0.0660,  0.1714, -1.6673,  ..., -0.2309, -1.1181, -0.9292],
         [-0.4700,  0.1555, -0.6468,  ...,  1.5299,  0.5295, -0.3216],
         [-0.6480,  0.8068, -0.3388,  ...,  0.2876,  0.0126, -0.1919],
         ...,
         [ 2.0819,  0.9684, -1.1912,  ...,  0.5431, -0.6448,  1.0066],
         [ 2.2663,  0.5313, -0.0230,  ..., -1.0077,  0.3946,  0.3418],
         [-0.0991, -0.5753,  0.8784,  ...,  1.5714, -0.0075, -0.4266]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 0.4823, -0.2728, -0.1906,  ...,  0.8295,  1.5887,  0.6003],
         [ 1.7378,  0.9787, -0.4005,  ..., -0.0565,  2.3668,  0.6495],
         [ 0.7036, -0.0817,  0.5402,  ..., -0.8453,  0.1928, -1.1722],
         ...,
         [-0.2379, -3.3980, -0.2913,  ..., -0.5635,  0.2163,  1.1677],
         [-0.2491,  0.0173, -0.5250,  ..., -0.2517,  0.0415, -0.4423],
         [-1.1271, -1.1247, -0.1415,  ..., -0.7366,  0.5011, -1.2683]],

        [[ 1.2056, -1.2145, -0.1054,  ..., -0.3960,  0.5859, -2.5365],
         [ 1.1142, -1.3268,  1.9417,  ...,  0.4460, -0.4011, -0.3984],
         [ 0.0491,  0.6501,  2.8132,  ..., -0.3533, -0.4136,  1.3920],
         ...,
         [-1.3536, -0.6209,  1.0019,  ...,  0.7587, -0.7124, -0.9907],
         [-1.0759, -1.6382, -0.0059,  ..., -1.8314, -0.1228,  0.3176],
         [ 0.2255,  0.1682,  0.1928,  ...,  0.2674,  0.4621,  0.2083]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 3.1762, -0.2702, -1.6700,  ..., -2.1904,  1.0411,  1.0119],
         [ 2.3948, -1.1265,  0.6017,  ...,  0.0302,  0.9125, -1.9431],
         [ 0.8503,  0.4610, -0.4747,  ..., -0.3621,  1.1035, -0.6395],
         ...,
         [ 0.8106,  0.3244,  1.4629,  ..., -1.7566, -2.1759,  0.8425],
         [ 0.9263,  1.2397,  0.5384,  ..., -0.6431,  0.3234,  0.9586],
         [-1.5886,  0.1455,  0.1410,  ...,  0.9001,  1.5322,  0.3790]],

        [[-0.0660,  0.1714, -1.6673,  ..., -0.2309, -1.1181, -0.9292],
         [-0.4700,  0.1555, -0.6468,  ...,  1.5299,  0.5295, -0.3216],
         [-0.6480,  0.8068, -0.3388,  ...,  0.2876,  0.0126, -0.1919],
         ...,
         [ 2.0819,  0.9684, -1.1912,  ...,  0.5431, -0.6448,  1.0066],
         [ 2.2663,  0.5313, -0.0230,  ..., -1.0077,  0.3946,  0.3418],
         [-0.0991, -0.5753,  0.8784,  ...,  1.5714, -0.0075, -0.4266]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 71.819, Val Loss : 84.773
======> Trajectory Loss : 12.301, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.594, BelowGroundPenalize Loss : 0.115
===> [Minibatch 27/129].........IDX = 0 :  tensor([[[ 0.4823, -0.2728, -0.1906,  ...,  0.8295,  1.5887,  0.6003],
         [ 1.7378,  0.9787, -0.4005,  ..., -0.0565,  2.3668,  0.6495],
         [ 0.7036, -0.0817,  0.5402,  ..., -0.8453,  0.1928, -1.1722],
         ...,
         [-0.2379, -3.3980, -0.2913,  ..., -0.5635,  0.2163,  1.1677],
         [-0.2491,  0.0173, -0.5250,  ..., -0.2517,  0.0415, -0.4423],
         [-1.1271, -1.1247, -0.1415,  ..., -0.7366,  0.5011, -1.2683]],

        [[ 1.2056, -1.2145, -0.1054,  ..., -0.3960,  0.5859, -2.5365],
         [ 1.1142, -1.3268,  1.9417,  ...,  0.4460, -0.4011, -0.3984],
         [ 0.0491,  0.6501,  2.8132,  ..., -0.3533, -0.4136,  1.3920],
         ...,
         [-1.3536, -0.6209,  1.0019,  ...,  0.7587, -0.7124, -0.9907],
         [-1.0759, -1.6382, -0.0059,  ..., -1.8314, -0.1228,  0.3176],
         [ 0.2255,  0.1682,  0.1928,  ...,  0.2674,  0.4621,  0.2083]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 3.1762, -0.2702, -1.6700,  ..., -2.1904,  1.0411,  1.0119],
         [ 2.3948, -1.1265,  0.6017,  ...,  0.0302,  0.9125, -1.9431],
         [ 0.8503,  0.4610, -0.4747,  ..., -0.3621,  1.1035, -0.6395],
         ...,
         [ 0.8106,  0.3244,  1.4629,  ..., -1.7566, -2.1759,  0.8425],
         [ 0.9263,  1.2397,  0.5384,  ..., -0.6431,  0.3234,  0.9586],
         [-1.5886,  0.1455,  0.1410,  ...,  0.9001,  1.5322,  0.3790]],

        [[-0.0660,  0.1714, -1.6673,  ..., -0.2309, -1.1181, -0.9292],
         [-0.4700,  0.1555, -0.6468,  ...,  1.5299,  0.5295, -0.3216],
         [-0.6480,  0.8068, -0.3388,  ...,  0.2876,  0.0126, -0.1919],
         ...,
         [ 2.0819,  0.9684, -1.1912,  ...,  0.5431, -0.6448,  1.0066],
         [ 2.2663,  0.5313, -0.0230,  ..., -1.0077,  0.3946,  0.3418],
         [-0.0991, -0.5753,  0.8784,  ...,  1.5714, -0.0075, -0.4266]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 0.4823, -0.2728, -0.1906,  ...,  0.8295,  1.5887,  0.6003],
         [ 1.7378,  0.9787, -0.4005,  ..., -0.0565,  2.3668,  0.6495],
         [ 0.7036, -0.0817,  0.5402,  ..., -0.8453,  0.1928, -1.1722],
         ...,
         [-0.2379, -3.3980, -0.2913,  ..., -0.5635,  0.2163,  1.1677],
         [-0.2491,  0.0173, -0.5250,  ..., -0.2517,  0.0415, -0.4423],
         [-1.1271, -1.1247, -0.1415,  ..., -0.7366,  0.5011, -1.2683]],

        [[ 1.2056, -1.2145, -0.1054,  ..., -0.3960,  0.5859, -2.5365],
         [ 1.1142, -1.3268,  1.9417,  ...,  0.4460, -0.4011, -0.3984],
         [ 0.0491,  0.6501,  2.8132,  ..., -0.3533, -0.4136,  1.3920],
         ...,
         [-1.3536, -0.6209,  1.0019,  ...,  0.7587, -0.7124, -0.9907],
         [-1.0759, -1.6382, -0.0059,  ..., -1.8314, -0.1228,  0.3176],
         [ 0.2255,  0.1682,  0.1928,  ...,  0.2674,  0.4621,  0.2083]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 3.1762, -0.2702, -1.6700,  ..., -2.1904,  1.0411,  1.0119],
         [ 2.3948, -1.1265,  0.6017,  ...,  0.0302,  0.9125, -1.9431],
         [ 0.8503,  0.4610, -0.4747,  ..., -0.3621,  1.1035, -0.6395],
         ...,
         [ 0.8106,  0.3244,  1.4629,  ..., -1.7566, -2.1759,  0.8425],
         [ 0.9263,  1.2397,  0.5384,  ..., -0.6431,  0.3234,  0.9586],
         [-1.5886,  0.1455,  0.1410,  ...,  0.9001,  1.5322,  0.3790]],

        [[-0.0660,  0.1714, -1.6673,  ..., -0.2309, -1.1181, -0.9292],
         [-0.4700,  0.1555, -0.6468,  ...,  1.5299,  0.5295, -0.3216],
         [-0.6480,  0.8068, -0.3388,  ...,  0.2876,  0.0126, -0.1919],
         ...,
         [ 2.0819,  0.9684, -1.1912,  ...,  0.5431, -0.6448,  1.0066],
         [ 2.2663,  0.5313, -0.0230,  ..., -1.0077,  0.3946,  0.3418],
         [-0.0991, -0.5753,  0.8784,  ...,  1.5714, -0.0075, -0.4266]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 70.853, Val Loss : 80.636
======> Trajectory Loss : 11.783, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.582, BelowGroundPenalize Loss : 0.830
===> [Minibatch 28/129].........IDX = 0 :  tensor([[[ 0.4823, -0.2728, -0.1906,  ...,  0.8295,  1.5887,  0.6003],
         [ 1.7378,  0.9787, -0.4005,  ..., -0.0565,  2.3668,  0.6495],
         [ 0.7036, -0.0817,  0.5402,  ..., -0.8453,  0.1928, -1.1722],
         ...,
         [-0.2379, -3.3980, -0.2913,  ..., -0.5635,  0.2163,  1.1677],
         [-0.2491,  0.0173, -0.5250,  ..., -0.2517,  0.0415, -0.4423],
         [-1.1271, -1.1247, -0.1415,  ..., -0.7366,  0.5011, -1.2683]],

        [[ 1.2056, -1.2145, -0.1054,  ..., -0.3960,  0.5859, -2.5365],
         [ 1.1142, -1.3268,  1.9417,  ...,  0.4460, -0.4011, -0.3984],
         [ 0.0491,  0.6501,  2.8132,  ..., -0.3533, -0.4136,  1.3920],
         ...,
         [-1.3536, -0.6209,  1.0019,  ...,  0.7587, -0.7124, -0.9907],
         [-1.0759, -1.6382, -0.0059,  ..., -1.8314, -0.1228,  0.3176],
         [ 0.2255,  0.1682,  0.1928,  ...,  0.2674,  0.4621,  0.2083]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 3.1762, -0.2702, -1.6700,  ..., -2.1904,  1.0411,  1.0119],
         [ 2.3948, -1.1265,  0.6017,  ...,  0.0302,  0.9125, -1.9431],
         [ 0.8503,  0.4610, -0.4747,  ..., -0.3621,  1.1035, -0.6395],
         ...,
         [ 0.8106,  0.3244,  1.4629,  ..., -1.7566, -2.1759,  0.8425],
         [ 0.9263,  1.2397,  0.5384,  ..., -0.6431,  0.3234,  0.9586],
         [-1.5886,  0.1455,  0.1410,  ...,  0.9001,  1.5322,  0.3790]],

        [[-0.0660,  0.1714, -1.6673,  ..., -0.2309, -1.1181, -0.9292],
         [-0.4700,  0.1555, -0.6468,  ...,  1.5299,  0.5295, -0.3216],
         [-0.6480,  0.8068, -0.3388,  ...,  0.2876,  0.0126, -0.1919],
         ...,
         [ 2.0819,  0.9684, -1.1912,  ...,  0.5431, -0.6448,  1.0066],
         [ 2.2663,  0.5313, -0.0230,  ..., -1.0077,  0.3946,  0.3418],
         [-0.0991, -0.5753,  0.8784,  ...,  1.5714, -0.0075, -0.4266]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 0.4823, -0.2728, -0.1906,  ...,  0.8295,  1.5887,  0.6003],
         [ 1.7378,  0.9787, -0.4005,  ..., -0.0565,  2.3668,  0.6495],
         [ 0.7036, -0.0817,  0.5402,  ..., -0.8453,  0.1928, -1.1722],
         ...,
         [-0.2379, -3.3980, -0.2913,  ..., -0.5635,  0.2163,  1.1677],
         [-0.2491,  0.0173, -0.5250,  ..., -0.2517,  0.0415, -0.4423],
         [-1.1271, -1.1247, -0.1415,  ..., -0.7366,  0.5011, -1.2683]],

        [[ 1.2056, -1.2145, -0.1054,  ..., -0.3960,  0.5859, -2.5365],
         [ 1.1142, -1.3268,  1.9417,  ...,  0.4460, -0.4011, -0.3984],
         [ 0.0491,  0.6501,  2.8132,  ..., -0.3533, -0.4136,  1.3920],
         ...,
         [-1.3536, -0.6209,  1.0019,  ...,  0.7587, -0.7124, -0.9907],
         [-1.0759, -1.6382, -0.0059,  ..., -1.8314, -0.1228,  0.3176],
         [ 0.2255,  0.1682,  0.1928,  ...,  0.2674,  0.4621,  0.2083]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 3.1762, -0.2702, -1.6700,  ..., -2.1904,  1.0411,  1.0119],
         [ 2.3948, -1.1265,  0.6017,  ...,  0.0302,  0.9125, -1.9431],
         [ 0.8503,  0.4610, -0.4747,  ..., -0.3621,  1.1035, -0.6395],
         ...,
         [ 0.8106,  0.3244,  1.4629,  ..., -1.7566, -2.1759,  0.8425],
         [ 0.9263,  1.2397,  0.5384,  ..., -0.6431,  0.3234,  0.9586],
         [-1.5886,  0.1455,  0.1410,  ...,  0.9001,  1.5322,  0.3790]],

        [[-0.0660,  0.1714, -1.6673,  ..., -0.2309, -1.1181, -0.9292],
         [-0.4700,  0.1555, -0.6468,  ...,  1.5299,  0.5295, -0.3216],
         [-0.6480,  0.8068, -0.3388,  ...,  0.2876,  0.0126, -0.1919],
         ...,
         [ 2.0819,  0.9684, -1.1912,  ...,  0.5431, -0.6448,  1.0066],
         [ 2.2663,  0.5313, -0.0230,  ..., -1.0077,  0.3946,  0.3418],
         [-0.0991, -0.5753,  0.8784,  ...,  1.5714, -0.0075, -0.4266]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 68.938, Val Loss : 85.455
======> Trajectory Loss : 9.833, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.583, BelowGroundPenalize Loss : 0.757
===> [Minibatch 29/129].........IDX = 0 :  tensor([[[ 0.4823, -0.2728, -0.1906,  ...,  0.8295,  1.5887,  0.6003],
         [ 1.7378,  0.9787, -0.4005,  ..., -0.0565,  2.3668,  0.6495],
         [ 0.7036, -0.0817,  0.5402,  ..., -0.8453,  0.1928, -1.1722],
         ...,
         [-0.2379, -3.3980, -0.2913,  ..., -0.5635,  0.2163,  1.1677],
         [-0.2491,  0.0173, -0.5250,  ..., -0.2517,  0.0415, -0.4423],
         [-1.1271, -1.1247, -0.1415,  ..., -0.7366,  0.5011, -1.2683]],

        [[ 1.2056, -1.2145, -0.1054,  ..., -0.3960,  0.5859, -2.5365],
         [ 1.1142, -1.3268,  1.9417,  ...,  0.4460, -0.4011, -0.3984],
         [ 0.0491,  0.6501,  2.8132,  ..., -0.3533, -0.4136,  1.3920],
         ...,
         [-1.3536, -0.6209,  1.0019,  ...,  0.7587, -0.7124, -0.9907],
         [-1.0759, -1.6382, -0.0059,  ..., -1.8314, -0.1228,  0.3176],
         [ 0.2255,  0.1682,  0.1928,  ...,  0.2674,  0.4621,  0.2083]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 3.1762, -0.2702, -1.6700,  ..., -2.1904,  1.0411,  1.0119],
         [ 2.3948, -1.1265,  0.6017,  ...,  0.0302,  0.9125, -1.9431],
         [ 0.8503,  0.4610, -0.4747,  ..., -0.3621,  1.1035, -0.6395],
         ...,
         [ 0.8106,  0.3244,  1.4629,  ..., -1.7566, -2.1759,  0.8425],
         [ 0.9263,  1.2397,  0.5384,  ..., -0.6431,  0.3234,  0.9586],
         [-1.5886,  0.1455,  0.1410,  ...,  0.9001,  1.5322,  0.3790]],

        [[-0.0660,  0.1714, -1.6673,  ..., -0.2309, -1.1181, -0.9292],
         [-0.4700,  0.1555, -0.6468,  ...,  1.5299,  0.5295, -0.3216],
         [-0.6480,  0.8068, -0.3388,  ...,  0.2876,  0.0126, -0.1919],
         ...,
         [ 2.0819,  0.9684, -1.1912,  ...,  0.5431, -0.6448,  1.0066],
         [ 2.2663,  0.5313, -0.0230,  ..., -1.0077,  0.3946,  0.3418],
         [-0.0991, -0.5753,  0.8784,  ...,  1.5714, -0.0075, -0.4266]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 0.4823, -0.2728, -0.1906,  ...,  0.8295,  1.5887,  0.6003],
         [ 1.7378,  0.9787, -0.4005,  ..., -0.0565,  2.3668,  0.6495],
         [ 0.7036, -0.0817,  0.5402,  ..., -0.8453,  0.1928, -1.1722],
         ...,
         [-0.2379, -3.3980, -0.2913,  ..., -0.5635,  0.2163,  1.1677],
         [-0.2491,  0.0173, -0.5250,  ..., -0.2517,  0.0415, -0.4423],
         [-1.1271, -1.1247, -0.1415,  ..., -0.7366,  0.5011, -1.2683]],

        [[ 1.2056, -1.2145, -0.1054,  ..., -0.3960,  0.5859, -2.5365],
         [ 1.1142, -1.3268,  1.9417,  ...,  0.4460, -0.4011, -0.3984],
         [ 0.0491,  0.6501,  2.8132,  ..., -0.3533, -0.4136,  1.3920],
         ...,
         [-1.3536, -0.6209,  1.0019,  ...,  0.7587, -0.7124, -0.9907],
         [-1.0759, -1.6382, -0.0059,  ..., -1.8314, -0.1228,  0.3176],
         [ 0.2255,  0.1682,  0.1928,  ...,  0.2674,  0.4621,  0.2083]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 3.1762, -0.2702, -1.6700,  ..., -2.1904,  1.0411,  1.0119],
         [ 2.3948, -1.1265,  0.6017,  ...,  0.0302,  0.9125, -1.9431],
         [ 0.8503,  0.4610, -0.4747,  ..., -0.3621,  1.1035, -0.6395],
         ...,
         [ 0.8106,  0.3244,  1.4629,  ..., -1.7566, -2.1759,  0.8425],
         [ 0.9263,  1.2397,  0.5384,  ..., -0.6431,  0.3234,  0.9586],
         [-1.5886,  0.1455,  0.1410,  ...,  0.9001,  1.5322,  0.3790]],

        [[-0.0660,  0.1714, -1.6673,  ..., -0.2309, -1.1181, -0.9292],
         [-0.4700,  0.1555, -0.6468,  ...,  1.5299,  0.5295, -0.3216],
         [-0.6480,  0.8068, -0.3388,  ...,  0.2876,  0.0126, -0.1919],
         ...,
         [ 2.0819,  0.9684, -1.1912,  ...,  0.5431, -0.6448,  1.0066],
         [ 2.2663,  0.5313, -0.0230,  ..., -1.0077,  0.3946,  0.3418],
         [-0.0991, -0.5753,  0.8784,  ...,  1.5714, -0.0075, -0.4266]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 70.415, Val Loss : 75.499
======> Trajectory Loss : 11.297, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.584, BelowGroundPenalize Loss : 0.757
===> [Minibatch 30/129].........IDX = 0 :  tensor([[[ 0.4823, -0.2728, -0.1906,  ...,  0.8295,  1.5887,  0.6003],
         [ 1.7378,  0.9787, -0.4005,  ..., -0.0565,  2.3668,  0.6495],
         [ 0.7036, -0.0817,  0.5402,  ..., -0.8453,  0.1928, -1.1722],
         ...,
         [-0.2379, -3.3980, -0.2913,  ..., -0.5635,  0.2163,  1.1677],
         [-0.2491,  0.0173, -0.5250,  ..., -0.2517,  0.0415, -0.4423],
         [-1.1271, -1.1247, -0.1415,  ..., -0.7366,  0.5011, -1.2683]],

        [[ 1.2056, -1.2145, -0.1054,  ..., -0.3960,  0.5859, -2.5365],
         [ 1.1142, -1.3268,  1.9417,  ...,  0.4460, -0.4011, -0.3984],
         [ 0.0491,  0.6501,  2.8132,  ..., -0.3533, -0.4136,  1.3920],
         ...,
         [-1.3536, -0.6209,  1.0019,  ...,  0.7587, -0.7124, -0.9907],
         [-1.0759, -1.6382, -0.0059,  ..., -1.8314, -0.1228,  0.3176],
         [ 0.2255,  0.1682,  0.1928,  ...,  0.2674,  0.4621,  0.2083]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 3.1762, -0.2702, -1.6700,  ..., -2.1904,  1.0411,  1.0119],
         [ 2.3948, -1.1265,  0.6017,  ...,  0.0302,  0.9125, -1.9431],
         [ 0.8503,  0.4610, -0.4747,  ..., -0.3621,  1.1035, -0.6395],
         ...,
         [ 0.8106,  0.3244,  1.4629,  ..., -1.7566, -2.1759,  0.8425],
         [ 0.9263,  1.2397,  0.5384,  ..., -0.6431,  0.3234,  0.9586],
         [-1.5886,  0.1455,  0.1410,  ...,  0.9001,  1.5322,  0.3790]],

        [[-0.0660,  0.1714, -1.6673,  ..., -0.2309, -1.1181, -0.9292],
         [-0.4700,  0.1555, -0.6468,  ...,  1.5299,  0.5295, -0.3216],
         [-0.6480,  0.8068, -0.3388,  ...,  0.2876,  0.0126, -0.1919],
         ...,
         [ 2.0819,  0.9684, -1.1912,  ...,  0.5431, -0.6448,  1.0066],
         [ 2.2663,  0.5313, -0.0230,  ..., -1.0077,  0.3946,  0.3418],
         [-0.0991, -0.5753,  0.8784,  ...,  1.5714, -0.0075, -0.4266]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 0.4823, -0.2728, -0.1906,  ...,  0.8295,  1.5887,  0.6003],
         [ 1.7378,  0.9787, -0.4005,  ..., -0.0565,  2.3668,  0.6495],
         [ 0.7036, -0.0817,  0.5402,  ..., -0.8453,  0.1928, -1.1722],
         ...,
         [-0.2379, -3.3980, -0.2913,  ..., -0.5635,  0.2163,  1.1677],
         [-0.2491,  0.0173, -0.5250,  ..., -0.2517,  0.0415, -0.4423],
         [-1.1271, -1.1247, -0.1415,  ..., -0.7366,  0.5011, -1.2683]],

        [[ 1.2056, -1.2145, -0.1054,  ..., -0.3960,  0.5859, -2.5365],
         [ 1.1142, -1.3268,  1.9417,  ...,  0.4460, -0.4011, -0.3984],
         [ 0.0491,  0.6501,  2.8132,  ..., -0.3533, -0.4136,  1.3920],
         ...,
         [-1.3536, -0.6209,  1.0019,  ...,  0.7587, -0.7124, -0.9907],
         [-1.0759, -1.6382, -0.0059,  ..., -1.8314, -0.1228,  0.3176],
         [ 0.2255,  0.1682,  0.1928,  ...,  0.2674,  0.4621,  0.2083]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 3.1762, -0.2702, -1.6700,  ..., -2.1904,  1.0411,  1.0119],
         [ 2.3948, -1.1265,  0.6017,  ...,  0.0302,  0.9125, -1.9431],
         [ 0.8503,  0.4610, -0.4747,  ..., -0.3621,  1.1035, -0.6395],
         ...,
         [ 0.8106,  0.3244,  1.4629,  ..., -1.7566, -2.1759,  0.8425],
         [ 0.9263,  1.2397,  0.5384,  ..., -0.6431,  0.3234,  0.9586],
         [-1.5886,  0.1455,  0.1410,  ...,  0.9001,  1.5322,  0.3790]],

        [[-0.0660,  0.1714, -1.6673,  ..., -0.2309, -1.1181, -0.9292],
         [-0.4700,  0.1555, -0.6468,  ...,  1.5299,  0.5295, -0.3216],
         [-0.6480,  0.8068, -0.3388,  ...,  0.2876,  0.0126, -0.1919],
         ...,
         [ 2.0819,  0.9684, -1.1912,  ...,  0.5431, -0.6448,  1.0066],
         [ 2.2663,  0.5313, -0.0230,  ..., -1.0077,  0.3946,  0.3418],
         [-0.0991, -0.5753,  0.8784,  ...,  1.5714, -0.0075, -0.4266]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 66.967, Val Loss : 92.933
======> Trajectory Loss : 11.113, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.550, BelowGroundPenalize Loss : 0.811
===> [Minibatch 31/129].........IDX = 0 :  tensor([[[ 0.4823, -0.2728, -0.1906,  ...,  0.8295,  1.5887,  0.6003],
         [ 1.7378,  0.9787, -0.4005,  ..., -0.0565,  2.3668,  0.6495],
         [ 0.7036, -0.0817,  0.5402,  ..., -0.8453,  0.1928, -1.1722],
         ...,
         [-0.2379, -3.3980, -0.2913,  ..., -0.5635,  0.2163,  1.1677],
         [-0.2491,  0.0173, -0.5250,  ..., -0.2517,  0.0415, -0.4423],
         [-1.1271, -1.1247, -0.1415,  ..., -0.7366,  0.5011, -1.2683]],

        [[ 1.2056, -1.2145, -0.1054,  ..., -0.3960,  0.5859, -2.5365],
         [ 1.1142, -1.3268,  1.9417,  ...,  0.4460, -0.4011, -0.3984],
         [ 0.0491,  0.6501,  2.8132,  ..., -0.3533, -0.4136,  1.3920],
         ...,
         [-1.3536, -0.6209,  1.0019,  ...,  0.7587, -0.7124, -0.9907],
         [-1.0759, -1.6382, -0.0059,  ..., -1.8314, -0.1228,  0.3176],
         [ 0.2255,  0.1682,  0.1928,  ...,  0.2674,  0.4621,  0.2083]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 3.1762, -0.2702, -1.6700,  ..., -2.1904,  1.0411,  1.0119],
         [ 2.3948, -1.1265,  0.6017,  ...,  0.0302,  0.9125, -1.9431],
         [ 0.8503,  0.4610, -0.4747,  ..., -0.3621,  1.1035, -0.6395],
         ...,
         [ 0.8106,  0.3244,  1.4629,  ..., -1.7566, -2.1759,  0.8425],
         [ 0.9263,  1.2397,  0.5384,  ..., -0.6431,  0.3234,  0.9586],
         [-1.5886,  0.1455,  0.1410,  ...,  0.9001,  1.5322,  0.3790]],

        [[-0.0660,  0.1714, -1.6673,  ..., -0.2309, -1.1181, -0.9292],
         [-0.4700,  0.1555, -0.6468,  ...,  1.5299,  0.5295, -0.3216],
         [-0.6480,  0.8068, -0.3388,  ...,  0.2876,  0.0126, -0.1919],
         ...,
         [ 2.0819,  0.9684, -1.1912,  ...,  0.5431, -0.6448,  1.0066],
         [ 2.2663,  0.5313, -0.0230,  ..., -1.0077,  0.3946,  0.3418],
         [-0.0991, -0.5753,  0.8784,  ...,  1.5714, -0.0075, -0.4266]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 0.4823, -0.2728, -0.1906,  ...,  0.8295,  1.5887,  0.6003],
         [ 1.7378,  0.9787, -0.4005,  ..., -0.0565,  2.3668,  0.6495],
         [ 0.7036, -0.0817,  0.5402,  ..., -0.8453,  0.1928, -1.1722],
         ...,
         [-0.2379, -3.3980, -0.2913,  ..., -0.5635,  0.2163,  1.1677],
         [-0.2491,  0.0173, -0.5250,  ..., -0.2517,  0.0415, -0.4423],
         [-1.1271, -1.1247, -0.1415,  ..., -0.7366,  0.5011, -1.2683]],

        [[ 1.2056, -1.2145, -0.1054,  ..., -0.3960,  0.5859, -2.5365],
         [ 1.1142, -1.3268,  1.9417,  ...,  0.4460, -0.4011, -0.3984],
         [ 0.0491,  0.6501,  2.8132,  ..., -0.3533, -0.4136,  1.3920],
         ...,
         [-1.3536, -0.6209,  1.0019,  ...,  0.7587, -0.7124, -0.9907],
         [-1.0759, -1.6382, -0.0059,  ..., -1.8314, -0.1228,  0.3176],
         [ 0.2255,  0.1682,  0.1928,  ...,  0.2674,  0.4621,  0.2083]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 3.1762, -0.2702, -1.6700,  ..., -2.1904,  1.0411,  1.0119],
         [ 2.3948, -1.1265,  0.6017,  ...,  0.0302,  0.9125, -1.9431],
         [ 0.8503,  0.4610, -0.4747,  ..., -0.3621,  1.1035, -0.6395],
         ...,
         [ 0.8106,  0.3244,  1.4629,  ..., -1.7566, -2.1759,  0.8425],
         [ 0.9263,  1.2397,  0.5384,  ..., -0.6431,  0.3234,  0.9586],
         [-1.5886,  0.1455,  0.1410,  ...,  0.9001,  1.5322,  0.3790]],

        [[-0.0660,  0.1714, -1.6673,  ..., -0.2309, -1.1181, -0.9292],
         [-0.4700,  0.1555, -0.6468,  ...,  1.5299,  0.5295, -0.3216],
         [-0.6480,  0.8068, -0.3388,  ...,  0.2876,  0.0126, -0.1919],
         ...,
         [ 2.0819,  0.9684, -1.1912,  ...,  0.5431, -0.6448,  1.0066],
         [ 2.2663,  0.5313, -0.0230,  ..., -1.0077,  0.3946,  0.3418],
         [-0.0991, -0.5753,  0.8784,  ...,  1.5714, -0.0075, -0.4266]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 68.520, Val Loss : 90.752
======> Trajectory Loss : 9.489, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.589, BelowGroundPenalize Loss : 0.177
===> [Minibatch 32/129].........IDX = 0 :  tensor([[[ 0.4823, -0.2728, -0.1906,  ...,  0.8295,  1.5887,  0.6003],
         [ 1.7378,  0.9787, -0.4005,  ..., -0.0565,  2.3668,  0.6495],
         [ 0.7036, -0.0817,  0.5402,  ..., -0.8453,  0.1928, -1.1722],
         ...,
         [-0.2379, -3.3980, -0.2913,  ..., -0.5635,  0.2163,  1.1677],
         [-0.2491,  0.0173, -0.5250,  ..., -0.2517,  0.0415, -0.4423],
         [-1.1271, -1.1247, -0.1415,  ..., -0.7366,  0.5011, -1.2683]],

        [[ 1.2056, -1.2145, -0.1054,  ..., -0.3960,  0.5859, -2.5365],
         [ 1.1142, -1.3268,  1.9417,  ...,  0.4460, -0.4011, -0.3984],
         [ 0.0491,  0.6501,  2.8132,  ..., -0.3533, -0.4136,  1.3920],
         ...,
         [-1.3536, -0.6209,  1.0019,  ...,  0.7587, -0.7124, -0.9907],
         [-1.0759, -1.6382, -0.0059,  ..., -1.8314, -0.1228,  0.3176],
         [ 0.2255,  0.1682,  0.1928,  ...,  0.2674,  0.4621,  0.2083]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 3.1762, -0.2702, -1.6700,  ..., -2.1904,  1.0411,  1.0119],
         [ 2.3948, -1.1265,  0.6017,  ...,  0.0302,  0.9125, -1.9431],
         [ 0.8503,  0.4610, -0.4747,  ..., -0.3621,  1.1035, -0.6395],
         ...,
         [ 0.8106,  0.3244,  1.4629,  ..., -1.7566, -2.1759,  0.8425],
         [ 0.9263,  1.2397,  0.5384,  ..., -0.6431,  0.3234,  0.9586],
         [-1.5886,  0.1455,  0.1410,  ...,  0.9001,  1.5322,  0.3790]],

        [[-0.0660,  0.1714, -1.6673,  ..., -0.2309, -1.1181, -0.9292],
         [-0.4700,  0.1555, -0.6468,  ...,  1.5299,  0.5295, -0.3216],
         [-0.6480,  0.8068, -0.3388,  ...,  0.2876,  0.0126, -0.1919],
         ...,
         [ 2.0819,  0.9684, -1.1912,  ...,  0.5431, -0.6448,  1.0066],
         [ 2.2663,  0.5313, -0.0230,  ..., -1.0077,  0.3946,  0.3418],
         [-0.0991, -0.5753,  0.8784,  ...,  1.5714, -0.0075, -0.4266]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 0.4823, -0.2728, -0.1906,  ...,  0.8295,  1.5887,  0.6003],
         [ 1.7378,  0.9787, -0.4005,  ..., -0.0565,  2.3668,  0.6495],
         [ 0.7036, -0.0817,  0.5402,  ..., -0.8453,  0.1928, -1.1722],
         ...,
         [-0.2379, -3.3980, -0.2913,  ..., -0.5635,  0.2163,  1.1677],
         [-0.2491,  0.0173, -0.5250,  ..., -0.2517,  0.0415, -0.4423],
         [-1.1271, -1.1247, -0.1415,  ..., -0.7366,  0.5011, -1.2683]],

        [[ 1.2056, -1.2145, -0.1054,  ..., -0.3960,  0.5859, -2.5365],
         [ 1.1142, -1.3268,  1.9417,  ...,  0.4460, -0.4011, -0.3984],
         [ 0.0491,  0.6501,  2.8132,  ..., -0.3533, -0.4136,  1.3920],
         ...,
         [-1.3536, -0.6209,  1.0019,  ...,  0.7587, -0.7124, -0.9907],
         [-1.0759, -1.6382, -0.0059,  ..., -1.8314, -0.1228,  0.3176],
         [ 0.2255,  0.1682,  0.1928,  ...,  0.2674,  0.4621,  0.2083]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 3.1762, -0.2702, -1.6700,  ..., -2.1904,  1.0411,  1.0119],
         [ 2.3948, -1.1265,  0.6017,  ...,  0.0302,  0.9125, -1.9431],
         [ 0.8503,  0.4610, -0.4747,  ..., -0.3621,  1.1035, -0.6395],
         ...,
         [ 0.8106,  0.3244,  1.4629,  ..., -1.7566, -2.1759,  0.8425],
         [ 0.9263,  1.2397,  0.5384,  ..., -0.6431,  0.3234,  0.9586],
         [-1.5886,  0.1455,  0.1410,  ...,  0.9001,  1.5322,  0.3790]],

        [[-0.0660,  0.1714, -1.6673,  ..., -0.2309, -1.1181, -0.9292],
         [-0.4700,  0.1555, -0.6468,  ...,  1.5299,  0.5295, -0.3216],
         [-0.6480,  0.8068, -0.3388,  ...,  0.2876,  0.0126, -0.1919],
         ...,
         [ 2.0819,  0.9684, -1.1912,  ...,  0.5431, -0.6448,  1.0066],
         [ 2.2663,  0.5313, -0.0230,  ..., -1.0077,  0.3946,  0.3418],
         [-0.0991, -0.5753,  0.8784,  ...,  1.5714, -0.0075, -0.4266]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 63.458, Val Loss : 79.449
======> Trajectory Loss : 9.397, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.540, BelowGroundPenalize Loss : 0.093
===> [Minibatch 33/129].........IDX = 0 :  tensor([[[ 0.4823, -0.2728, -0.1906,  ...,  0.8295,  1.5887,  0.6003],
         [ 1.7378,  0.9787, -0.4005,  ..., -0.0565,  2.3668,  0.6495],
         [ 0.7036, -0.0817,  0.5402,  ..., -0.8453,  0.1928, -1.1722],
         ...,
         [-0.2379, -3.3980, -0.2913,  ..., -0.5635,  0.2163,  1.1677],
         [-0.2491,  0.0173, -0.5250,  ..., -0.2517,  0.0415, -0.4423],
         [-1.1271, -1.1247, -0.1415,  ..., -0.7366,  0.5011, -1.2683]],

        [[ 1.2056, -1.2145, -0.1054,  ..., -0.3960,  0.5859, -2.5365],
         [ 1.1142, -1.3268,  1.9417,  ...,  0.4460, -0.4011, -0.3984],
         [ 0.0491,  0.6501,  2.8132,  ..., -0.3533, -0.4136,  1.3920],
         ...,
         [-1.3536, -0.6209,  1.0019,  ...,  0.7587, -0.7124, -0.9907],
         [-1.0759, -1.6382, -0.0059,  ..., -1.8314, -0.1228,  0.3176],
         [ 0.2255,  0.1682,  0.1928,  ...,  0.2674,  0.4621,  0.2083]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 3.1762, -0.2702, -1.6700,  ..., -2.1904,  1.0411,  1.0119],
         [ 2.3948, -1.1265,  0.6017,  ...,  0.0302,  0.9125, -1.9431],
         [ 0.8503,  0.4610, -0.4747,  ..., -0.3621,  1.1035, -0.6395],
         ...,
         [ 0.8106,  0.3244,  1.4629,  ..., -1.7566, -2.1759,  0.8425],
         [ 0.9263,  1.2397,  0.5384,  ..., -0.6431,  0.3234,  0.9586],
         [-1.5886,  0.1455,  0.1410,  ...,  0.9001,  1.5322,  0.3790]],

        [[-0.0660,  0.1714, -1.6673,  ..., -0.2309, -1.1181, -0.9292],
         [-0.4700,  0.1555, -0.6468,  ...,  1.5299,  0.5295, -0.3216],
         [-0.6480,  0.8068, -0.3388,  ...,  0.2876,  0.0126, -0.1919],
         ...,
         [ 2.0819,  0.9684, -1.1912,  ...,  0.5431, -0.6448,  1.0066],
         [ 2.2663,  0.5313, -0.0230,  ..., -1.0077,  0.3946,  0.3418],
         [-0.0991, -0.5753,  0.8784,  ...,  1.5714, -0.0075, -0.4266]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 0.4823, -0.2728, -0.1906,  ...,  0.8295,  1.5887,  0.6003],
         [ 1.7378,  0.9787, -0.4005,  ..., -0.0565,  2.3668,  0.6495],
         [ 0.7036, -0.0817,  0.5402,  ..., -0.8453,  0.1928, -1.1722],
         ...,
         [-0.2379, -3.3980, -0.2913,  ..., -0.5635,  0.2163,  1.1677],
         [-0.2491,  0.0173, -0.5250,  ..., -0.2517,  0.0415, -0.4423],
         [-1.1271, -1.1247, -0.1415,  ..., -0.7366,  0.5011, -1.2683]],

        [[ 1.2056, -1.2145, -0.1054,  ..., -0.3960,  0.5859, -2.5365],
         [ 1.1142, -1.3268,  1.9417,  ...,  0.4460, -0.4011, -0.3984],
         [ 0.0491,  0.6501,  2.8132,  ..., -0.3533, -0.4136,  1.3920],
         ...,
         [-1.3536, -0.6209,  1.0019,  ...,  0.7587, -0.7124, -0.9907],
         [-1.0759, -1.6382, -0.0059,  ..., -1.8314, -0.1228,  0.3176],
         [ 0.2255,  0.1682,  0.1928,  ...,  0.2674,  0.4621,  0.2083]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 3.1762, -0.2702, -1.6700,  ..., -2.1904,  1.0411,  1.0119],
         [ 2.3948, -1.1265,  0.6017,  ...,  0.0302,  0.9125, -1.9431],
         [ 0.8503,  0.4610, -0.4747,  ..., -0.3621,  1.1035, -0.6395],
         ...,
         [ 0.8106,  0.3244,  1.4629,  ..., -1.7566, -2.1759,  0.8425],
         [ 0.9263,  1.2397,  0.5384,  ..., -0.6431,  0.3234,  0.9586],
         [-1.5886,  0.1455,  0.1410,  ...,  0.9001,  1.5322,  0.3790]],

        [[-0.0660,  0.1714, -1.6673,  ..., -0.2309, -1.1181, -0.9292],
         [-0.4700,  0.1555, -0.6468,  ...,  1.5299,  0.5295, -0.3216],
         [-0.6480,  0.8068, -0.3388,  ...,  0.2876,  0.0126, -0.1919],
         ...,
         [ 2.0819,  0.9684, -1.1912,  ...,  0.5431, -0.6448,  1.0066],
         [ 2.2663,  0.5313, -0.0230,  ..., -1.0077,  0.3946,  0.3418],
         [-0.0991, -0.5753,  0.8784,  ...,  1.5714, -0.0075, -0.4266]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 60.998, Val Loss : 67.696
======> Trajectory Loss : 9.119, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.519, BelowGroundPenalize Loss : 0.025
===> [Minibatch 34/129].........IDX = 0 :  tensor([[[ 0.4823, -0.2728, -0.1906,  ...,  0.8295,  1.5887,  0.6003],
         [ 1.7378,  0.9787, -0.4005,  ..., -0.0565,  2.3668,  0.6495],
         [ 0.7036, -0.0817,  0.5402,  ..., -0.8453,  0.1928, -1.1722],
         ...,
         [-0.2379, -3.3980, -0.2913,  ..., -0.5635,  0.2163,  1.1677],
         [-0.2491,  0.0173, -0.5250,  ..., -0.2517,  0.0415, -0.4423],
         [-1.1271, -1.1247, -0.1415,  ..., -0.7366,  0.5011, -1.2683]],

        [[ 1.2056, -1.2145, -0.1054,  ..., -0.3960,  0.5859, -2.5365],
         [ 1.1142, -1.3268,  1.9417,  ...,  0.4460, -0.4011, -0.3984],
         [ 0.0491,  0.6501,  2.8132,  ..., -0.3533, -0.4136,  1.3920],
         ...,
         [-1.3536, -0.6209,  1.0019,  ...,  0.7587, -0.7124, -0.9907],
         [-1.0759, -1.6382, -0.0059,  ..., -1.8314, -0.1228,  0.3176],
         [ 0.2255,  0.1682,  0.1928,  ...,  0.2674,  0.4621,  0.2083]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 3.1762, -0.2702, -1.6700,  ..., -2.1904,  1.0411,  1.0119],
         [ 2.3948, -1.1265,  0.6017,  ...,  0.0302,  0.9125, -1.9431],
         [ 0.8503,  0.4610, -0.4747,  ..., -0.3621,  1.1035, -0.6395],
         ...,
         [ 0.8106,  0.3244,  1.4629,  ..., -1.7566, -2.1759,  0.8425],
         [ 0.9263,  1.2397,  0.5384,  ..., -0.6431,  0.3234,  0.9586],
         [-1.5886,  0.1455,  0.1410,  ...,  0.9001,  1.5322,  0.3790]],

        [[-0.0660,  0.1714, -1.6673,  ..., -0.2309, -1.1181, -0.9292],
         [-0.4700,  0.1555, -0.6468,  ...,  1.5299,  0.5295, -0.3216],
         [-0.6480,  0.8068, -0.3388,  ...,  0.2876,  0.0126, -0.1919],
         ...,
         [ 2.0819,  0.9684, -1.1912,  ...,  0.5431, -0.6448,  1.0066],
         [ 2.2663,  0.5313, -0.0230,  ..., -1.0077,  0.3946,  0.3418],
         [-0.0991, -0.5753,  0.8784,  ...,  1.5714, -0.0075, -0.4266]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 0.4823, -0.2728, -0.1906,  ...,  0.8295,  1.5887,  0.6003],
         [ 1.7378,  0.9787, -0.4005,  ..., -0.0565,  2.3668,  0.6495],
         [ 0.7036, -0.0817,  0.5402,  ..., -0.8453,  0.1928, -1.1722],
         ...,
         [-0.2379, -3.3980, -0.2913,  ..., -0.5635,  0.2163,  1.1677],
         [-0.2491,  0.0173, -0.5250,  ..., -0.2517,  0.0415, -0.4423],
         [-1.1271, -1.1247, -0.1415,  ..., -0.7366,  0.5011, -1.2683]],

        [[ 1.2056, -1.2145, -0.1054,  ..., -0.3960,  0.5859, -2.5365],
         [ 1.1142, -1.3268,  1.9417,  ...,  0.4460, -0.4011, -0.3984],
         [ 0.0491,  0.6501,  2.8132,  ..., -0.3533, -0.4136,  1.3920],
         ...,
         [-1.3536, -0.6209,  1.0019,  ...,  0.7587, -0.7124, -0.9907],
         [-1.0759, -1.6382, -0.0059,  ..., -1.8314, -0.1228,  0.3176],
         [ 0.2255,  0.1682,  0.1928,  ...,  0.2674,  0.4621,  0.2083]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 3.1762, -0.2702, -1.6700,  ..., -2.1904,  1.0411,  1.0119],
         [ 2.3948, -1.1265,  0.6017,  ...,  0.0302,  0.9125, -1.9431],
         [ 0.8503,  0.4610, -0.4747,  ..., -0.3621,  1.1035, -0.6395],
         ...,
         [ 0.8106,  0.3244,  1.4629,  ..., -1.7566, -2.1759,  0.8425],
         [ 0.9263,  1.2397,  0.5384,  ..., -0.6431,  0.3234,  0.9586],
         [-1.5886,  0.1455,  0.1410,  ...,  0.9001,  1.5322,  0.3790]],

        [[-0.0660,  0.1714, -1.6673,  ..., -0.2309, -1.1181, -0.9292],
         [-0.4700,  0.1555, -0.6468,  ...,  1.5299,  0.5295, -0.3216],
         [-0.6480,  0.8068, -0.3388,  ...,  0.2876,  0.0126, -0.1919],
         ...,
         [ 2.0819,  0.9684, -1.1912,  ...,  0.5431, -0.6448,  1.0066],
         [ 2.2663,  0.5313, -0.0230,  ..., -1.0077,  0.3946,  0.3418],
         [-0.0991, -0.5753,  0.8784,  ...,  1.5714, -0.0075, -0.4266]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 63.611, Val Loss : 66.678
======> Trajectory Loss : 10.020, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.533, BelowGroundPenalize Loss : 0.244
===> [Minibatch 35/129].........IDX = 0 :  tensor([[[ 0.4823, -0.2728, -0.1906,  ...,  0.8295,  1.5887,  0.6003],
         [ 1.7378,  0.9787, -0.4005,  ..., -0.0565,  2.3668,  0.6495],
         [ 0.7036, -0.0817,  0.5402,  ..., -0.8453,  0.1928, -1.1722],
         ...,
         [-0.2379, -3.3980, -0.2913,  ..., -0.5635,  0.2163,  1.1677],
         [-0.2491,  0.0173, -0.5250,  ..., -0.2517,  0.0415, -0.4423],
         [-1.1271, -1.1247, -0.1415,  ..., -0.7366,  0.5011, -1.2683]],

        [[ 1.2056, -1.2145, -0.1054,  ..., -0.3960,  0.5859, -2.5365],
         [ 1.1142, -1.3268,  1.9417,  ...,  0.4460, -0.4011, -0.3984],
         [ 0.0491,  0.6501,  2.8132,  ..., -0.3533, -0.4136,  1.3920],
         ...,
         [-1.3536, -0.6209,  1.0019,  ...,  0.7587, -0.7124, -0.9907],
         [-1.0759, -1.6382, -0.0059,  ..., -1.8314, -0.1228,  0.3176],
         [ 0.2255,  0.1682,  0.1928,  ...,  0.2674,  0.4621,  0.2083]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 3.1762, -0.2702, -1.6700,  ..., -2.1904,  1.0411,  1.0119],
         [ 2.3948, -1.1265,  0.6017,  ...,  0.0302,  0.9125, -1.9431],
         [ 0.8503,  0.4610, -0.4747,  ..., -0.3621,  1.1035, -0.6395],
         ...,
         [ 0.8106,  0.3244,  1.4629,  ..., -1.7566, -2.1759,  0.8425],
         [ 0.9263,  1.2397,  0.5384,  ..., -0.6431,  0.3234,  0.9586],
         [-1.5886,  0.1455,  0.1410,  ...,  0.9001,  1.5322,  0.3790]],

        [[-0.0660,  0.1714, -1.6673,  ..., -0.2309, -1.1181, -0.9292],
         [-0.4700,  0.1555, -0.6468,  ...,  1.5299,  0.5295, -0.3216],
         [-0.6480,  0.8068, -0.3388,  ...,  0.2876,  0.0126, -0.1919],
         ...,
         [ 2.0819,  0.9684, -1.1912,  ...,  0.5431, -0.6448,  1.0066],
         [ 2.2663,  0.5313, -0.0230,  ..., -1.0077,  0.3946,  0.3418],
         [-0.0991, -0.5753,  0.8784,  ...,  1.5714, -0.0075, -0.4266]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 0.4823, -0.2728, -0.1906,  ...,  0.8295,  1.5887,  0.6003],
         [ 1.7378,  0.9787, -0.4005,  ..., -0.0565,  2.3668,  0.6495],
         [ 0.7036, -0.0817,  0.5402,  ..., -0.8453,  0.1928, -1.1722],
         ...,
         [-0.2379, -3.3980, -0.2913,  ..., -0.5635,  0.2163,  1.1677],
         [-0.2491,  0.0173, -0.5250,  ..., -0.2517,  0.0415, -0.4423],
         [-1.1271, -1.1247, -0.1415,  ..., -0.7366,  0.5011, -1.2683]],

        [[ 1.2056, -1.2145, -0.1054,  ..., -0.3960,  0.5859, -2.5365],
         [ 1.1142, -1.3268,  1.9417,  ...,  0.4460, -0.4011, -0.3984],
         [ 0.0491,  0.6501,  2.8132,  ..., -0.3533, -0.4136,  1.3920],
         ...,
         [-1.3536, -0.6209,  1.0019,  ...,  0.7587, -0.7124, -0.9907],
         [-1.0759, -1.6382, -0.0059,  ..., -1.8314, -0.1228,  0.3176],
         [ 0.2255,  0.1682,  0.1928,  ...,  0.2674,  0.4621,  0.2083]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 3.1762, -0.2702, -1.6700,  ..., -2.1904,  1.0411,  1.0119],
         [ 2.3948, -1.1265,  0.6017,  ...,  0.0302,  0.9125, -1.9431],
         [ 0.8503,  0.4610, -0.4747,  ..., -0.3621,  1.1035, -0.6395],
         ...,
         [ 0.8106,  0.3244,  1.4629,  ..., -1.7566, -2.1759,  0.8425],
         [ 0.9263,  1.2397,  0.5384,  ..., -0.6431,  0.3234,  0.9586],
         [-1.5886,  0.1455,  0.1410,  ...,  0.9001,  1.5322,  0.3790]],

        [[-0.0660,  0.1714, -1.6673,  ..., -0.2309, -1.1181, -0.9292],
         [-0.4700,  0.1555, -0.6468,  ...,  1.5299,  0.5295, -0.3216],
         [-0.6480,  0.8068, -0.3388,  ...,  0.2876,  0.0126, -0.1919],
         ...,
         [ 2.0819,  0.9684, -1.1912,  ...,  0.5431, -0.6448,  1.0066],
         [ 2.2663,  0.5313, -0.0230,  ..., -1.0077,  0.3946,  0.3418],
         [-0.0991, -0.5753,  0.8784,  ...,  1.5714, -0.0075, -0.4266]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 58.971, Val Loss : 61.426
======> Trajectory Loss : 8.378, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.503, BelowGroundPenalize Loss : 0.249
===> [Minibatch 36/129].........IDX = 0 :  tensor([[[ 0.4823, -0.2728, -0.1906,  ...,  0.8295,  1.5887,  0.6003],
         [ 1.7378,  0.9787, -0.4005,  ..., -0.0565,  2.3668,  0.6495],
         [ 0.7036, -0.0817,  0.5402,  ..., -0.8453,  0.1928, -1.1722],
         ...,
         [-0.2379, -3.3980, -0.2913,  ..., -0.5635,  0.2163,  1.1677],
         [-0.2491,  0.0173, -0.5250,  ..., -0.2517,  0.0415, -0.4423],
         [-1.1271, -1.1247, -0.1415,  ..., -0.7366,  0.5011, -1.2683]],

        [[ 1.2056, -1.2145, -0.1054,  ..., -0.3960,  0.5859, -2.5365],
         [ 1.1142, -1.3268,  1.9417,  ...,  0.4460, -0.4011, -0.3984],
         [ 0.0491,  0.6501,  2.8132,  ..., -0.3533, -0.4136,  1.3920],
         ...,
         [-1.3536, -0.6209,  1.0019,  ...,  0.7587, -0.7124, -0.9907],
         [-1.0759, -1.6382, -0.0059,  ..., -1.8314, -0.1228,  0.3176],
         [ 0.2255,  0.1682,  0.1928,  ...,  0.2674,  0.4621,  0.2083]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 3.1762, -0.2702, -1.6700,  ..., -2.1904,  1.0411,  1.0119],
         [ 2.3948, -1.1265,  0.6017,  ...,  0.0302,  0.9125, -1.9431],
         [ 0.8503,  0.4610, -0.4747,  ..., -0.3621,  1.1035, -0.6395],
         ...,
         [ 0.8106,  0.3244,  1.4629,  ..., -1.7566, -2.1759,  0.8425],
         [ 0.9263,  1.2397,  0.5384,  ..., -0.6431,  0.3234,  0.9586],
         [-1.5886,  0.1455,  0.1410,  ...,  0.9001,  1.5322,  0.3790]],

        [[-0.0660,  0.1714, -1.6673,  ..., -0.2309, -1.1181, -0.9292],
         [-0.4700,  0.1555, -0.6468,  ...,  1.5299,  0.5295, -0.3216],
         [-0.6480,  0.8068, -0.3388,  ...,  0.2876,  0.0126, -0.1919],
         ...,
         [ 2.0819,  0.9684, -1.1912,  ...,  0.5431, -0.6448,  1.0066],
         [ 2.2663,  0.5313, -0.0230,  ..., -1.0077,  0.3946,  0.3418],
         [-0.0991, -0.5753,  0.8784,  ...,  1.5714, -0.0075, -0.4266]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 0.4823, -0.2728, -0.1906,  ...,  0.8295,  1.5887,  0.6003],
         [ 1.7378,  0.9787, -0.4005,  ..., -0.0565,  2.3668,  0.6495],
         [ 0.7036, -0.0817,  0.5402,  ..., -0.8453,  0.1928, -1.1722],
         ...,
         [-0.2379, -3.3980, -0.2913,  ..., -0.5635,  0.2163,  1.1677],
         [-0.2491,  0.0173, -0.5250,  ..., -0.2517,  0.0415, -0.4423],
         [-1.1271, -1.1247, -0.1415,  ..., -0.7366,  0.5011, -1.2683]],

        [[ 1.2056, -1.2145, -0.1054,  ..., -0.3960,  0.5859, -2.5365],
         [ 1.1142, -1.3268,  1.9417,  ...,  0.4460, -0.4011, -0.3984],
         [ 0.0491,  0.6501,  2.8132,  ..., -0.3533, -0.4136,  1.3920],
         ...,
         [-1.3536, -0.6209,  1.0019,  ...,  0.7587, -0.7124, -0.9907],
         [-1.0759, -1.6382, -0.0059,  ..., -1.8314, -0.1228,  0.3176],
         [ 0.2255,  0.1682,  0.1928,  ...,  0.2674,  0.4621,  0.2083]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 3.1762, -0.2702, -1.6700,  ..., -2.1904,  1.0411,  1.0119],
         [ 2.3948, -1.1265,  0.6017,  ...,  0.0302,  0.9125, -1.9431],
         [ 0.8503,  0.4610, -0.4747,  ..., -0.3621,  1.1035, -0.6395],
         ...,
         [ 0.8106,  0.3244,  1.4629,  ..., -1.7566, -2.1759,  0.8425],
         [ 0.9263,  1.2397,  0.5384,  ..., -0.6431,  0.3234,  0.9586],
         [-1.5886,  0.1455,  0.1410,  ...,  0.9001,  1.5322,  0.3790]],

        [[-0.0660,  0.1714, -1.6673,  ..., -0.2309, -1.1181, -0.9292],
         [-0.4700,  0.1555, -0.6468,  ...,  1.5299,  0.5295, -0.3216],
         [-0.6480,  0.8068, -0.3388,  ...,  0.2876,  0.0126, -0.1919],
         ...,
         [ 2.0819,  0.9684, -1.1912,  ...,  0.5431, -0.6448,  1.0066],
         [ 2.2663,  0.5313, -0.0230,  ..., -1.0077,  0.3946,  0.3418],
         [-0.0991, -0.5753,  0.8784,  ...,  1.5714, -0.0075, -0.4266]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 56.048, Val Loss : 57.125
======> Trajectory Loss : 7.110, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.488, BelowGroundPenalize Loss : 0.134
===> [Minibatch 37/129].........IDX = 0 :  tensor([[[ 0.4823, -0.2728, -0.1906,  ...,  0.8295,  1.5887,  0.6003],
         [ 1.7378,  0.9787, -0.4005,  ..., -0.0565,  2.3668,  0.6495],
         [ 0.7036, -0.0817,  0.5402,  ..., -0.8453,  0.1928, -1.1722],
         ...,
         [-0.2379, -3.3980, -0.2913,  ..., -0.5635,  0.2163,  1.1677],
         [-0.2491,  0.0173, -0.5250,  ..., -0.2517,  0.0415, -0.4423],
         [-1.1271, -1.1247, -0.1415,  ..., -0.7366,  0.5011, -1.2683]],

        [[ 1.2056, -1.2145, -0.1054,  ..., -0.3960,  0.5859, -2.5365],
         [ 1.1142, -1.3268,  1.9417,  ...,  0.4460, -0.4011, -0.3984],
         [ 0.0491,  0.6501,  2.8132,  ..., -0.3533, -0.4136,  1.3920],
         ...,
         [-1.3536, -0.6209,  1.0019,  ...,  0.7587, -0.7124, -0.9907],
         [-1.0759, -1.6382, -0.0059,  ..., -1.8314, -0.1228,  0.3176],
         [ 0.2255,  0.1682,  0.1928,  ...,  0.2674,  0.4621,  0.2083]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 3.1762, -0.2702, -1.6700,  ..., -2.1904,  1.0411,  1.0119],
         [ 2.3948, -1.1265,  0.6017,  ...,  0.0302,  0.9125, -1.9431],
         [ 0.8503,  0.4610, -0.4747,  ..., -0.3621,  1.1035, -0.6395],
         ...,
         [ 0.8106,  0.3244,  1.4629,  ..., -1.7566, -2.1759,  0.8425],
         [ 0.9263,  1.2397,  0.5384,  ..., -0.6431,  0.3234,  0.9586],
         [-1.5886,  0.1455,  0.1410,  ...,  0.9001,  1.5322,  0.3790]],

        [[-0.0660,  0.1714, -1.6673,  ..., -0.2309, -1.1181, -0.9292],
         [-0.4700,  0.1555, -0.6468,  ...,  1.5299,  0.5295, -0.3216],
         [-0.6480,  0.8068, -0.3388,  ...,  0.2876,  0.0126, -0.1919],
         ...,
         [ 2.0819,  0.9684, -1.1912,  ...,  0.5431, -0.6448,  1.0066],
         [ 2.2663,  0.5313, -0.0230,  ..., -1.0077,  0.3946,  0.3418],
         [-0.0991, -0.5753,  0.8784,  ...,  1.5714, -0.0075, -0.4266]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 0.4823, -0.2728, -0.1906,  ...,  0.8295,  1.5887,  0.6003],
         [ 1.7378,  0.9787, -0.4005,  ..., -0.0565,  2.3668,  0.6495],
         [ 0.7036, -0.0817,  0.5402,  ..., -0.8453,  0.1928, -1.1722],
         ...,
         [-0.2379, -3.3980, -0.2913,  ..., -0.5635,  0.2163,  1.1677],
         [-0.2491,  0.0173, -0.5250,  ..., -0.2517,  0.0415, -0.4423],
         [-1.1271, -1.1247, -0.1415,  ..., -0.7366,  0.5011, -1.2683]],

        [[ 1.2056, -1.2145, -0.1054,  ..., -0.3960,  0.5859, -2.5365],
         [ 1.1142, -1.3268,  1.9417,  ...,  0.4460, -0.4011, -0.3984],
         [ 0.0491,  0.6501,  2.8132,  ..., -0.3533, -0.4136,  1.3920],
         ...,
         [-1.3536, -0.6209,  1.0019,  ...,  0.7587, -0.7124, -0.9907],
         [-1.0759, -1.6382, -0.0059,  ..., -1.8314, -0.1228,  0.3176],
         [ 0.2255,  0.1682,  0.1928,  ...,  0.2674,  0.4621,  0.2083]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 3.1762, -0.2702, -1.6700,  ..., -2.1904,  1.0411,  1.0119],
         [ 2.3948, -1.1265,  0.6017,  ...,  0.0302,  0.9125, -1.9431],
         [ 0.8503,  0.4610, -0.4747,  ..., -0.3621,  1.1035, -0.6395],
         ...,
         [ 0.8106,  0.3244,  1.4629,  ..., -1.7566, -2.1759,  0.8425],
         [ 0.9263,  1.2397,  0.5384,  ..., -0.6431,  0.3234,  0.9586],
         [-1.5886,  0.1455,  0.1410,  ...,  0.9001,  1.5322,  0.3790]],

        [[-0.0660,  0.1714, -1.6673,  ..., -0.2309, -1.1181, -0.9292],
         [-0.4700,  0.1555, -0.6468,  ...,  1.5299,  0.5295, -0.3216],
         [-0.6480,  0.8068, -0.3388,  ...,  0.2876,  0.0126, -0.1919],
         ...,
         [ 2.0819,  0.9684, -1.1912,  ...,  0.5431, -0.6448,  1.0066],
         [ 2.2663,  0.5313, -0.0230,  ..., -1.0077,  0.3946,  0.3418],
         [-0.0991, -0.5753,  0.8784,  ...,  1.5714, -0.0075, -0.4266]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 53.324, Val Loss : 55.421
======> Trajectory Loss : 6.451, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.467, BelowGroundPenalize Loss : 0.217
===> [Minibatch 38/129].........IDX = 0 :  tensor([[[ 0.4823, -0.2728, -0.1906,  ...,  0.8295,  1.5887,  0.6003],
         [ 1.7378,  0.9787, -0.4005,  ..., -0.0565,  2.3668,  0.6495],
         [ 0.7036, -0.0817,  0.5402,  ..., -0.8453,  0.1928, -1.1722],
         ...,
         [-0.2379, -3.3980, -0.2913,  ..., -0.5635,  0.2163,  1.1677],
         [-0.2491,  0.0173, -0.5250,  ..., -0.2517,  0.0415, -0.4423],
         [-1.1271, -1.1247, -0.1415,  ..., -0.7366,  0.5011, -1.2683]],

        [[ 1.2056, -1.2145, -0.1054,  ..., -0.3960,  0.5859, -2.5365],
         [ 1.1142, -1.3268,  1.9417,  ...,  0.4460, -0.4011, -0.3984],
         [ 0.0491,  0.6501,  2.8132,  ..., -0.3533, -0.4136,  1.3920],
         ...,
         [-1.3536, -0.6209,  1.0019,  ...,  0.7587, -0.7124, -0.9907],
         [-1.0759, -1.6382, -0.0059,  ..., -1.8314, -0.1228,  0.3176],
         [ 0.2255,  0.1682,  0.1928,  ...,  0.2674,  0.4621,  0.2083]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 3.1762, -0.2702, -1.6700,  ..., -2.1904,  1.0411,  1.0119],
         [ 2.3948, -1.1265,  0.6017,  ...,  0.0302,  0.9125, -1.9431],
         [ 0.8503,  0.4610, -0.4747,  ..., -0.3621,  1.1035, -0.6395],
         ...,
         [ 0.8106,  0.3244,  1.4629,  ..., -1.7566, -2.1759,  0.8425],
         [ 0.9263,  1.2397,  0.5384,  ..., -0.6431,  0.3234,  0.9586],
         [-1.5886,  0.1455,  0.1410,  ...,  0.9001,  1.5322,  0.3790]],

        [[-0.0660,  0.1714, -1.6673,  ..., -0.2309, -1.1181, -0.9292],
         [-0.4700,  0.1555, -0.6468,  ...,  1.5299,  0.5295, -0.3216],
         [-0.6480,  0.8068, -0.3388,  ...,  0.2876,  0.0126, -0.1919],
         ...,
         [ 2.0819,  0.9684, -1.1912,  ...,  0.5431, -0.6448,  1.0066],
         [ 2.2663,  0.5313, -0.0230,  ..., -1.0077,  0.3946,  0.3418],
         [-0.0991, -0.5753,  0.8784,  ...,  1.5714, -0.0075, -0.4266]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 0.4823, -0.2728, -0.1906,  ...,  0.8295,  1.5887,  0.6003],
         [ 1.7378,  0.9787, -0.4005,  ..., -0.0565,  2.3668,  0.6495],
         [ 0.7036, -0.0817,  0.5402,  ..., -0.8453,  0.1928, -1.1722],
         ...,
         [-0.2379, -3.3980, -0.2913,  ..., -0.5635,  0.2163,  1.1677],
         [-0.2491,  0.0173, -0.5250,  ..., -0.2517,  0.0415, -0.4423],
         [-1.1271, -1.1247, -0.1415,  ..., -0.7366,  0.5011, -1.2683]],

        [[ 1.2056, -1.2145, -0.1054,  ..., -0.3960,  0.5859, -2.5365],
         [ 1.1142, -1.3268,  1.9417,  ...,  0.4460, -0.4011, -0.3984],
         [ 0.0491,  0.6501,  2.8132,  ..., -0.3533, -0.4136,  1.3920],
         ...,
         [-1.3536, -0.6209,  1.0019,  ...,  0.7587, -0.7124, -0.9907],
         [-1.0759, -1.6382, -0.0059,  ..., -1.8314, -0.1228,  0.3176],
         [ 0.2255,  0.1682,  0.1928,  ...,  0.2674,  0.4621,  0.2083]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 3.1762, -0.2702, -1.6700,  ..., -2.1904,  1.0411,  1.0119],
         [ 2.3948, -1.1265,  0.6017,  ...,  0.0302,  0.9125, -1.9431],
         [ 0.8503,  0.4610, -0.4747,  ..., -0.3621,  1.1035, -0.6395],
         ...,
         [ 0.8106,  0.3244,  1.4629,  ..., -1.7566, -2.1759,  0.8425],
         [ 0.9263,  1.2397,  0.5384,  ..., -0.6431,  0.3234,  0.9586],
         [-1.5886,  0.1455,  0.1410,  ...,  0.9001,  1.5322,  0.3790]],

        [[-0.0660,  0.1714, -1.6673,  ..., -0.2309, -1.1181, -0.9292],
         [-0.4700,  0.1555, -0.6468,  ...,  1.5299,  0.5295, -0.3216],
         [-0.6480,  0.8068, -0.3388,  ...,  0.2876,  0.0126, -0.1919],
         ...,
         [ 2.0819,  0.9684, -1.1912,  ...,  0.5431, -0.6448,  1.0066],
         [ 2.2663,  0.5313, -0.0230,  ..., -1.0077,  0.3946,  0.3418],
         [-0.0991, -0.5753,  0.8784,  ...,  1.5714, -0.0075, -0.4266]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 53.892, Val Loss : 50.976
======> Trajectory Loss : 6.401, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.473, BelowGroundPenalize Loss : 0.195
===> [Minibatch 39/129].........IDX = 0 :  tensor([[[ 0.4823, -0.2728, -0.1906,  ...,  0.8295,  1.5887,  0.6003],
         [ 1.7378,  0.9787, -0.4005,  ..., -0.0565,  2.3668,  0.6495],
         [ 0.7036, -0.0817,  0.5402,  ..., -0.8453,  0.1928, -1.1722],
         ...,
         [-0.2379, -3.3980, -0.2913,  ..., -0.5635,  0.2163,  1.1677],
         [-0.2491,  0.0173, -0.5250,  ..., -0.2517,  0.0415, -0.4423],
         [-1.1271, -1.1247, -0.1415,  ..., -0.7366,  0.5011, -1.2683]],

        [[ 1.2056, -1.2145, -0.1054,  ..., -0.3960,  0.5859, -2.5365],
         [ 1.1142, -1.3268,  1.9417,  ...,  0.4460, -0.4011, -0.3984],
         [ 0.0491,  0.6501,  2.8132,  ..., -0.3533, -0.4136,  1.3920],
         ...,
         [-1.3536, -0.6209,  1.0019,  ...,  0.7587, -0.7124, -0.9907],
         [-1.0759, -1.6382, -0.0059,  ..., -1.8314, -0.1228,  0.3176],
         [ 0.2255,  0.1682,  0.1928,  ...,  0.2674,  0.4621,  0.2083]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 3.1762, -0.2702, -1.6700,  ..., -2.1904,  1.0411,  1.0119],
         [ 2.3948, -1.1265,  0.6017,  ...,  0.0302,  0.9125, -1.9431],
         [ 0.8503,  0.4610, -0.4747,  ..., -0.3621,  1.1035, -0.6395],
         ...,
         [ 0.8106,  0.3244,  1.4629,  ..., -1.7566, -2.1759,  0.8425],
         [ 0.9263,  1.2397,  0.5384,  ..., -0.6431,  0.3234,  0.9586],
         [-1.5886,  0.1455,  0.1410,  ...,  0.9001,  1.5322,  0.3790]],

        [[-0.0660,  0.1714, -1.6673,  ..., -0.2309, -1.1181, -0.9292],
         [-0.4700,  0.1555, -0.6468,  ...,  1.5299,  0.5295, -0.3216],
         [-0.6480,  0.8068, -0.3388,  ...,  0.2876,  0.0126, -0.1919],
         ...,
         [ 2.0819,  0.9684, -1.1912,  ...,  0.5431, -0.6448,  1.0066],
         [ 2.2663,  0.5313, -0.0230,  ..., -1.0077,  0.3946,  0.3418],
         [-0.0991, -0.5753,  0.8784,  ...,  1.5714, -0.0075, -0.4266]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 0.4823, -0.2728, -0.1906,  ...,  0.8295,  1.5887,  0.6003],
         [ 1.7378,  0.9787, -0.4005,  ..., -0.0565,  2.3668,  0.6495],
         [ 0.7036, -0.0817,  0.5402,  ..., -0.8453,  0.1928, -1.1722],
         ...,
         [-0.2379, -3.3980, -0.2913,  ..., -0.5635,  0.2163,  1.1677],
         [-0.2491,  0.0173, -0.5250,  ..., -0.2517,  0.0415, -0.4423],
         [-1.1271, -1.1247, -0.1415,  ..., -0.7366,  0.5011, -1.2683]],

        [[ 1.2056, -1.2145, -0.1054,  ..., -0.3960,  0.5859, -2.5365],
         [ 1.1142, -1.3268,  1.9417,  ...,  0.4460, -0.4011, -0.3984],
         [ 0.0491,  0.6501,  2.8132,  ..., -0.3533, -0.4136,  1.3920],
         ...,
         [-1.3536, -0.6209,  1.0019,  ...,  0.7587, -0.7124, -0.9907],
         [-1.0759, -1.6382, -0.0059,  ..., -1.8314, -0.1228,  0.3176],
         [ 0.2255,  0.1682,  0.1928,  ...,  0.2674,  0.4621,  0.2083]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 3.1762, -0.2702, -1.6700,  ..., -2.1904,  1.0411,  1.0119],
         [ 2.3948, -1.1265,  0.6017,  ...,  0.0302,  0.9125, -1.9431],
         [ 0.8503,  0.4610, -0.4747,  ..., -0.3621,  1.1035, -0.6395],
         ...,
         [ 0.8106,  0.3244,  1.4629,  ..., -1.7566, -2.1759,  0.8425],
         [ 0.9263,  1.2397,  0.5384,  ..., -0.6431,  0.3234,  0.9586],
         [-1.5886,  0.1455,  0.1410,  ...,  0.9001,  1.5322,  0.3790]],

        [[-0.0660,  0.1714, -1.6673,  ..., -0.2309, -1.1181, -0.9292],
         [-0.4700,  0.1555, -0.6468,  ...,  1.5299,  0.5295, -0.3216],
         [-0.6480,  0.8068, -0.3388,  ...,  0.2876,  0.0126, -0.1919],
         ...,
         [ 2.0819,  0.9684, -1.1912,  ...,  0.5431, -0.6448,  1.0066],
         [ 2.2663,  0.5313, -0.0230,  ..., -1.0077,  0.3946,  0.3418],
         [-0.0991, -0.5753,  0.8784,  ...,  1.5714, -0.0075, -0.4266]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 49.923, Val Loss : 56.338
======> Trajectory Loss : 5.309, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.445, BelowGroundPenalize Loss : 0.117
===> [Minibatch 40/129].........IDX = 0 :  tensor([[[ 0.4823, -0.2728, -0.1906,  ...,  0.8295,  1.5887,  0.6003],
         [ 1.7378,  0.9787, -0.4005,  ..., -0.0565,  2.3668,  0.6495],
         [ 0.7036, -0.0817,  0.5402,  ..., -0.8453,  0.1928, -1.1722],
         ...,
         [-0.2379, -3.3980, -0.2913,  ..., -0.5635,  0.2163,  1.1677],
         [-0.2491,  0.0173, -0.5250,  ..., -0.2517,  0.0415, -0.4423],
         [-1.1271, -1.1247, -0.1415,  ..., -0.7366,  0.5011, -1.2683]],

        [[ 1.2056, -1.2145, -0.1054,  ..., -0.3960,  0.5859, -2.5365],
         [ 1.1142, -1.3268,  1.9417,  ...,  0.4460, -0.4011, -0.3984],
         [ 0.0491,  0.6501,  2.8132,  ..., -0.3533, -0.4136,  1.3920],
         ...,
         [-1.3536, -0.6209,  1.0019,  ...,  0.7587, -0.7124, -0.9907],
         [-1.0759, -1.6382, -0.0059,  ..., -1.8314, -0.1228,  0.3176],
         [ 0.2255,  0.1682,  0.1928,  ...,  0.2674,  0.4621,  0.2083]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 3.1762, -0.2702, -1.6700,  ..., -2.1904,  1.0411,  1.0119],
         [ 2.3948, -1.1265,  0.6017,  ...,  0.0302,  0.9125, -1.9431],
         [ 0.8503,  0.4610, -0.4747,  ..., -0.3621,  1.1035, -0.6395],
         ...,
         [ 0.8106,  0.3244,  1.4629,  ..., -1.7566, -2.1759,  0.8425],
         [ 0.9263,  1.2397,  0.5384,  ..., -0.6431,  0.3234,  0.9586],
         [-1.5886,  0.1455,  0.1410,  ...,  0.9001,  1.5322,  0.3790]],

        [[-0.0660,  0.1714, -1.6673,  ..., -0.2309, -1.1181, -0.9292],
         [-0.4700,  0.1555, -0.6468,  ...,  1.5299,  0.5295, -0.3216],
         [-0.6480,  0.8068, -0.3388,  ...,  0.2876,  0.0126, -0.1919],
         ...,
         [ 2.0819,  0.9684, -1.1912,  ...,  0.5431, -0.6448,  1.0066],
         [ 2.2663,  0.5313, -0.0230,  ..., -1.0077,  0.3946,  0.3418],
         [-0.0991, -0.5753,  0.8784,  ...,  1.5714, -0.0075, -0.4266]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 0.4823, -0.2728, -0.1906,  ...,  0.8295,  1.5887,  0.6003],
         [ 1.7378,  0.9787, -0.4005,  ..., -0.0565,  2.3668,  0.6495],
         [ 0.7036, -0.0817,  0.5402,  ..., -0.8453,  0.1928, -1.1722],
         ...,
         [-0.2379, -3.3980, -0.2913,  ..., -0.5635,  0.2163,  1.1677],
         [-0.2491,  0.0173, -0.5250,  ..., -0.2517,  0.0415, -0.4423],
         [-1.1271, -1.1247, -0.1415,  ..., -0.7366,  0.5011, -1.2683]],

        [[ 1.2056, -1.2145, -0.1054,  ..., -0.3960,  0.5859, -2.5365],
         [ 1.1142, -1.3268,  1.9417,  ...,  0.4460, -0.4011, -0.3984],
         [ 0.0491,  0.6501,  2.8132,  ..., -0.3533, -0.4136,  1.3920],
         ...,
         [-1.3536, -0.6209,  1.0019,  ...,  0.7587, -0.7124, -0.9907],
         [-1.0759, -1.6382, -0.0059,  ..., -1.8314, -0.1228,  0.3176],
         [ 0.2255,  0.1682,  0.1928,  ...,  0.2674,  0.4621,  0.2083]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 3.1762, -0.2702, -1.6700,  ..., -2.1904,  1.0411,  1.0119],
         [ 2.3948, -1.1265,  0.6017,  ...,  0.0302,  0.9125, -1.9431],
         [ 0.8503,  0.4610, -0.4747,  ..., -0.3621,  1.1035, -0.6395],
         ...,
         [ 0.8106,  0.3244,  1.4629,  ..., -1.7566, -2.1759,  0.8425],
         [ 0.9263,  1.2397,  0.5384,  ..., -0.6431,  0.3234,  0.9586],
         [-1.5886,  0.1455,  0.1410,  ...,  0.9001,  1.5322,  0.3790]],

        [[-0.0660,  0.1714, -1.6673,  ..., -0.2309, -1.1181, -0.9292],
         [-0.4700,  0.1555, -0.6468,  ...,  1.5299,  0.5295, -0.3216],
         [-0.6480,  0.8068, -0.3388,  ...,  0.2876,  0.0126, -0.1919],
         ...,
         [ 2.0819,  0.9684, -1.1912,  ...,  0.5431, -0.6448,  1.0066],
         [ 2.2663,  0.5313, -0.0230,  ..., -1.0077,  0.3946,  0.3418],
         [-0.0991, -0.5753,  0.8784,  ...,  1.5714, -0.0075, -0.4266]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 43.996, Val Loss : 62.351
======> Trajectory Loss : 4.516, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.395, BelowGroundPenalize Loss : 0.013
===> [Minibatch 41/129].........IDX = 0 :  tensor([[[ 0.4823, -0.2728, -0.1906,  ...,  0.8295,  1.5887,  0.6003],
         [ 1.7378,  0.9787, -0.4005,  ..., -0.0565,  2.3668,  0.6495],
         [ 0.7036, -0.0817,  0.5402,  ..., -0.8453,  0.1928, -1.1722],
         ...,
         [-0.2379, -3.3980, -0.2913,  ..., -0.5635,  0.2163,  1.1677],
         [-0.2491,  0.0173, -0.5250,  ..., -0.2517,  0.0415, -0.4423],
         [-1.1271, -1.1247, -0.1415,  ..., -0.7366,  0.5011, -1.2683]],

        [[ 1.2056, -1.2145, -0.1054,  ..., -0.3960,  0.5859, -2.5365],
         [ 1.1142, -1.3268,  1.9417,  ...,  0.4460, -0.4011, -0.3984],
         [ 0.0491,  0.6501,  2.8132,  ..., -0.3533, -0.4136,  1.3920],
         ...,
         [-1.3536, -0.6209,  1.0019,  ...,  0.7587, -0.7124, -0.9907],
         [-1.0759, -1.6382, -0.0059,  ..., -1.8314, -0.1228,  0.3176],
         [ 0.2255,  0.1682,  0.1928,  ...,  0.2674,  0.4621,  0.2083]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 3.1762, -0.2702, -1.6700,  ..., -2.1904,  1.0411,  1.0119],
         [ 2.3948, -1.1265,  0.6017,  ...,  0.0302,  0.9125, -1.9431],
         [ 0.8503,  0.4610, -0.4747,  ..., -0.3621,  1.1035, -0.6395],
         ...,
         [ 0.8106,  0.3244,  1.4629,  ..., -1.7566, -2.1759,  0.8425],
         [ 0.9263,  1.2397,  0.5384,  ..., -0.6431,  0.3234,  0.9586],
         [-1.5886,  0.1455,  0.1410,  ...,  0.9001,  1.5322,  0.3790]],

        [[-0.0660,  0.1714, -1.6673,  ..., -0.2309, -1.1181, -0.9292],
         [-0.4700,  0.1555, -0.6468,  ...,  1.5299,  0.5295, -0.3216],
         [-0.6480,  0.8068, -0.3388,  ...,  0.2876,  0.0126, -0.1919],
         ...,
         [ 2.0819,  0.9684, -1.1912,  ...,  0.5431, -0.6448,  1.0066],
         [ 2.2663,  0.5313, -0.0230,  ..., -1.0077,  0.3946,  0.3418],
         [-0.0991, -0.5753,  0.8784,  ...,  1.5714, -0.0075, -0.4266]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 0.4823, -0.2728, -0.1906,  ...,  0.8295,  1.5887,  0.6003],
         [ 1.7378,  0.9787, -0.4005,  ..., -0.0565,  2.3668,  0.6495],
         [ 0.7036, -0.0817,  0.5402,  ..., -0.8453,  0.1928, -1.1722],
         ...,
         [-0.2379, -3.3980, -0.2913,  ..., -0.5635,  0.2163,  1.1677],
         [-0.2491,  0.0173, -0.5250,  ..., -0.2517,  0.0415, -0.4423],
         [-1.1271, -1.1247, -0.1415,  ..., -0.7366,  0.5011, -1.2683]],

        [[ 1.2056, -1.2145, -0.1054,  ..., -0.3960,  0.5859, -2.5365],
         [ 1.1142, -1.3268,  1.9417,  ...,  0.4460, -0.4011, -0.3984],
         [ 0.0491,  0.6501,  2.8132,  ..., -0.3533, -0.4136,  1.3920],
         ...,
         [-1.3536, -0.6209,  1.0019,  ...,  0.7587, -0.7124, -0.9907],
         [-1.0759, -1.6382, -0.0059,  ..., -1.8314, -0.1228,  0.3176],
         [ 0.2255,  0.1682,  0.1928,  ...,  0.2674,  0.4621,  0.2083]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 3.1762, -0.2702, -1.6700,  ..., -2.1904,  1.0411,  1.0119],
         [ 2.3948, -1.1265,  0.6017,  ...,  0.0302,  0.9125, -1.9431],
         [ 0.8503,  0.4610, -0.4747,  ..., -0.3621,  1.1035, -0.6395],
         ...,
         [ 0.8106,  0.3244,  1.4629,  ..., -1.7566, -2.1759,  0.8425],
         [ 0.9263,  1.2397,  0.5384,  ..., -0.6431,  0.3234,  0.9586],
         [-1.5886,  0.1455,  0.1410,  ...,  0.9001,  1.5322,  0.3790]],

        [[-0.0660,  0.1714, -1.6673,  ..., -0.2309, -1.1181, -0.9292],
         [-0.4700,  0.1555, -0.6468,  ...,  1.5299,  0.5295, -0.3216],
         [-0.6480,  0.8068, -0.3388,  ...,  0.2876,  0.0126, -0.1919],
         ...,
         [ 2.0819,  0.9684, -1.1912,  ...,  0.5431, -0.6448,  1.0066],
         [ 2.2663,  0.5313, -0.0230,  ..., -1.0077,  0.3946,  0.3418],
         [-0.0991, -0.5753,  0.8784,  ...,  1.5714, -0.0075, -0.4266]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 43.503, Val Loss : 58.887
======> Trajectory Loss : 5.091, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.384, BelowGroundPenalize Loss : 0.002
===> [Minibatch 42/129].........IDX = 0 :  tensor([[[ 0.4823, -0.2728, -0.1906,  ...,  0.8295,  1.5887,  0.6003],
         [ 1.7378,  0.9787, -0.4005,  ..., -0.0565,  2.3668,  0.6495],
         [ 0.7036, -0.0817,  0.5402,  ..., -0.8453,  0.1928, -1.1722],
         ...,
         [-0.2379, -3.3980, -0.2913,  ..., -0.5635,  0.2163,  1.1677],
         [-0.2491,  0.0173, -0.5250,  ..., -0.2517,  0.0415, -0.4423],
         [-1.1271, -1.1247, -0.1415,  ..., -0.7366,  0.5011, -1.2683]],

        [[ 1.2056, -1.2145, -0.1054,  ..., -0.3960,  0.5859, -2.5365],
         [ 1.1142, -1.3268,  1.9417,  ...,  0.4460, -0.4011, -0.3984],
         [ 0.0491,  0.6501,  2.8132,  ..., -0.3533, -0.4136,  1.3920],
         ...,
         [-1.3536, -0.6209,  1.0019,  ...,  0.7587, -0.7124, -0.9907],
         [-1.0759, -1.6382, -0.0059,  ..., -1.8314, -0.1228,  0.3176],
         [ 0.2255,  0.1682,  0.1928,  ...,  0.2674,  0.4621,  0.2083]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 3.1762, -0.2702, -1.6700,  ..., -2.1904,  1.0411,  1.0119],
         [ 2.3948, -1.1265,  0.6017,  ...,  0.0302,  0.9125, -1.9431],
         [ 0.8503,  0.4610, -0.4747,  ..., -0.3621,  1.1035, -0.6395],
         ...,
         [ 0.8106,  0.3244,  1.4629,  ..., -1.7566, -2.1759,  0.8425],
         [ 0.9263,  1.2397,  0.5384,  ..., -0.6431,  0.3234,  0.9586],
         [-1.5886,  0.1455,  0.1410,  ...,  0.9001,  1.5322,  0.3790]],

        [[-0.0660,  0.1714, -1.6673,  ..., -0.2309, -1.1181, -0.9292],
         [-0.4700,  0.1555, -0.6468,  ...,  1.5299,  0.5295, -0.3216],
         [-0.6480,  0.8068, -0.3388,  ...,  0.2876,  0.0126, -0.1919],
         ...,
         [ 2.0819,  0.9684, -1.1912,  ...,  0.5431, -0.6448,  1.0066],
         [ 2.2663,  0.5313, -0.0230,  ..., -1.0077,  0.3946,  0.3418],
         [-0.0991, -0.5753,  0.8784,  ...,  1.5714, -0.0075, -0.4266]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 0.4823, -0.2728, -0.1906,  ...,  0.8295,  1.5887,  0.6003],
         [ 1.7378,  0.9787, -0.4005,  ..., -0.0565,  2.3668,  0.6495],
         [ 0.7036, -0.0817,  0.5402,  ..., -0.8453,  0.1928, -1.1722],
         ...,
         [-0.2379, -3.3980, -0.2913,  ..., -0.5635,  0.2163,  1.1677],
         [-0.2491,  0.0173, -0.5250,  ..., -0.2517,  0.0415, -0.4423],
         [-1.1271, -1.1247, -0.1415,  ..., -0.7366,  0.5011, -1.2683]],

        [[ 1.2056, -1.2145, -0.1054,  ..., -0.3960,  0.5859, -2.5365],
         [ 1.1142, -1.3268,  1.9417,  ...,  0.4460, -0.4011, -0.3984],
         [ 0.0491,  0.6501,  2.8132,  ..., -0.3533, -0.4136,  1.3920],
         ...,
         [-1.3536, -0.6209,  1.0019,  ...,  0.7587, -0.7124, -0.9907],
         [-1.0759, -1.6382, -0.0059,  ..., -1.8314, -0.1228,  0.3176],
         [ 0.2255,  0.1682,  0.1928,  ...,  0.2674,  0.4621,  0.2083]]],
       device='cuda:0', grad_fn=<SelectBackward>)
IDX = 0 :  tensor([[[ 3.1762, -0.2702, -1.6700,  ..., -2.1904,  1.0411,  1.0119],
         [ 2.3948, -1.1265,  0.6017,  ...,  0.0302,  0.9125, -1.9431],
         [ 0.8503,  0.4610, -0.4747,  ..., -0.3621,  1.1035, -0.6395],
         ...,
         [ 0.8106,  0.3244,  1.4629,  ..., -1.7566, -2.1759,  0.8425],
         [ 0.9263,  1.2397,  0.5384,  ..., -0.6431,  0.3234,  0.9586],
         [-1.5886,  0.1455,  0.1410,  ...,  0.9001,  1.5322,  0.3790]],

        [[-0.0660,  0.1714, -1.6673,  ..., -0.2309, -1.1181, -0.9292],
         [-0.4700,  0.1555, -0.6468,  ...,  1.5299,  0.5295, -0.3216],
         [-0.6480,  0.8068, -0.3388,  ...,  0.2876,  0.0126, -0.1919],
         ...,
         [ 2.0819,  0.9684, -1.1912,  ...,  0.5431, -0.6448,  1.0066],
         [ 2.2663,  0.5313, -0.0230,  ..., -1.0077,  0.3946,  0.3418],
         [-0.0991, -0.5753,  0.8784,  ...,  1.5714, -0.0075, -0.4266]]],
       device='cuda:0', grad_fn=<SelectBackward>)
Train Loss : 39.266, Val Loss : 45.483
======> Trajectory Loss : 4.077, Gravity Loss : 0.000, EndOfTrajectory Loss : 0.352, BelowGroundPenalize Loss : 0.011
===> [Minibatch 43/129].........IDX = 0 :  tensor([[[ 0.4823, -0.2728, -0.1906,  ...,  0.8295,  1.5887,  0.6003],
         [ 1.7378,  0.9787, -0.4005,  ..., -0.0565,  2.3668,  0.6495],
         [ 0.7036, -0.0817,  0.5402,  ..., -0.8453,  0.1928, -1.1722],
         ...,
         [-0.2379, -3.3980, -0.2913,  ..., -0.5635,  0.2163,  1.1677],
         [-0.2491,  0.0173, -0.5250,  ..., -0.2517,  0.0415, -0.4423],
         [-1.1271, -1.1247, -0.1415,  ..., -0.7366,  0.5011, -1.2683]],

        [[ 1.2056, -1.2145, -0.1054,  ..., -0.3960,  0.5859, -2.5365],
         [ 1.1142, -1.3268,  1.9417,  ...,  0.4460, -0.4011, -0.3984],
         [ 0.0491,  0.6501,  2.8132,  ..., -0.3533, -0.4136,  1.3920],
         ...,
         [-1.3536, -0.6209,  1.0019,  ...,  0.7587, -0.7124, -0.9907],
         [-1.0759, -1.6382, -0.0059,  ..., -1.8314, -0.1228,  0.3176],
         [ 0.2255,  0.1682,  0.1928,  ...,  0.2674,  0.4621,  0.2083]]],
       device='cuda:0', grad_fn=<SelectBackward>)
