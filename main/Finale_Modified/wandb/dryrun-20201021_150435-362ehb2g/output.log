==============================================Features==============================================
Prediction = depth, Environment = unity
Available features :  ['x-0', 'y-1', 'z-2', 'u-3', 'v-4', 'd-5', 'eot-6', 'og-7', 'rad-8', 'f_sin-9', 'f_cos-10', 'g-11']
Selected features :  [6]
1. input_col =  [3, 4, 6]
2. input_startpos_col =  [3, 4, 5, 6]
3. gt_col =  [5, 6]
4. gt_startpos_col =  [0, 1, 2, 6]
5. gt_xyz_col =  [0, 1, 2, 6]
====================================================================================================
[#]Training : Trajectory Estimation
Mixed:   0%|                                                                   | 0/1 [00:00<?, ?it/s]===============================Dataset shape===============================
Mixed: 100%|███████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 48.66it/s]
Mixed : (724,)
===========================================================================
Mixed:   0%|                                                                   | 0/1 [00:00<?, ?it/s]===============================Dataset shape===============================
Mixed : (1841,)
===========================================================================
Mixed: 100%|███████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 24.58it/s]
======================================================Summary Batch (batch_size = 128)=========================================================================
Input batch [0] : batch=torch.Size([128, 1997, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 1997, 3]), initial position=torch.Size([128, 1, 4])
gt batch [0] : batch=torch.Size([128, 1997, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 1998, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [1] : batch=torch.Size([128, 1814, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 1814, 3]), initial position=torch.Size([128, 1, 4])
gt batch [1] : batch=torch.Size([128, 1814, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 1815, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [2] : batch=torch.Size([128, 1621, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 1621, 3]), initial position=torch.Size([128, 1, 4])
gt batch [2] : batch=torch.Size([128, 1621, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 1622, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [3] : batch=torch.Size([128, 1644, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 1644, 3]), initial position=torch.Size([128, 1, 4])
gt batch [3] : batch=torch.Size([128, 1644, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 1645, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [4] : batch=torch.Size([128, 1820, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 1820, 3]), initial position=torch.Size([128, 1, 4])
gt batch [4] : batch=torch.Size([128, 1820, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 1821, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
{'flag': {'input_size': 2, 'output_size': 1, 'hidden_dim': 32, 'n_layers': 1, 'n_stack': 4, 'recurrent_stacked': [2, 32, 32, 32, 32], 'fc_size': [64, 32, 16, 8, 4, 1]}, 'depth': {'input_size': 3, 'output_size': 2, 'hidden_dim': 32, 'n_layers': 1, 'n_stack': 4, 'recurrent_stacked': [3, 32, 32, 32, 32], 'fc_size': [64, 32, 16, 8, 4, 2]}}
===>No model checkpoint
[#] Define the Learning rate, Optimizer, Decay rate and Scheduler...
[#]Model Architecture
####### Model - EOT #######
BiLSTMResidualTrainableInit(
  (recurrent_blocks): ModuleList(
    (0): LSTM(2, 32, batch_first=True, bidirectional=True)
    (1): LSTM(64, 32, batch_first=True, bidirectional=True)
    (2): LSTM(64, 32, batch_first=True, bidirectional=True)
    (3): LSTM(64, 32, batch_first=True, bidirectional=True)
  )
  (fc_blocks): Sequential(
    (0): Sequential(
      (0): Linear(in_features=64, out_features=32, bias=True)
      (1): LeakyReLU(negative_slope=0.01)
    )
    (1): Sequential(
      (0): Linear(in_features=32, out_features=16, bias=True)
      (1): LeakyReLU(negative_slope=0.01)
    )
    (2): Sequential(
      (0): Linear(in_features=16, out_features=8, bias=True)
      (1): LeakyReLU(negative_slope=0.01)
    )
    (3): Sequential(
      (0): Linear(in_features=8, out_features=4, bias=True)
      (1): LeakyReLU(negative_slope=0.01)
    )
    (4): Sequential(
      (0): Linear(in_features=4, out_features=1, bias=True)
      (1): Sigmoid()
    )
  )
)
####### Model - Depth #######
BiLSTMResidualTrainableInit(
  (recurrent_blocks): ModuleList(
    (0): LSTM(3, 32, batch_first=True, bidirectional=True)
    (1): LSTM(64, 32, batch_first=True, bidirectional=True)
    (2): LSTM(64, 32, batch_first=True, bidirectional=True)
    (3): LSTM(64, 32, batch_first=True, bidirectional=True)
  )
  (fc_blocks): Sequential(
    (0): Sequential(
      (0): Linear(in_features=64, out_features=32, bias=True)
      (1): LeakyReLU(negative_slope=0.01)
    )
    (1): Sequential(
      (0): Linear(in_features=32, out_features=16, bias=True)
      (1): LeakyReLU(negative_slope=0.01)
    )
    (2): Sequential(
      (0): Linear(in_features=16, out_features=8, bias=True)
      (1): LeakyReLU(negative_slope=0.01)
    )
    (3): Sequential(
      (0): Linear(in_features=8, out_features=4, bias=True)
      (1): LeakyReLU(negative_slope=0.01)
    )
    (4): Sequential(
      (0): Linear(in_features=4, out_features=2, bias=True)
    )
  )
)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[Epoch : 1/100000]<<<<<<<<<<<<<<<<<<<<<<<<<<<<
[#]Learning rate (Depth & EOT) :  0.01
===> [Minibatch 1/5].........0 tensor([427], device='cuda:0')
1 tensor([1247], device='cuda:0')
2 tensor([426], device='cuda:0')
3 tensor([664], device='cuda:0')
4 tensor([729], device='cuda:0')
5 tensor([388], device='cuda:0')
6 tensor([476], device='cuda:0')
7 tensor([306], device='cuda:0')
8 tensor([493], device='cuda:0')
9 tensor([555], device='cuda:0')
10 tensor([605], device='cuda:0')
11 tensor([281], device='cuda:0')
12 tensor([1301], device='cuda:0')
13 tensor([525], device='cuda:0')
14 tensor([250], device='cuda:0')
15 tensor([709], device='cuda:0')
16 tensor([1548], device='cuda:0')
17 tensor([401], device='cuda:0')
18 tensor([529], device='cuda:0')
19 tensor([740], device='cuda:0')
20 tensor([150], device='cuda:0')
21 tensor([786], device='cuda:0')
22 tensor([1514], device='cuda:0')
23 tensor([1815], device='cuda:0')
24 tensor([709], device='cuda:0')
25 tensor([399], device='cuda:0')
26 tensor([183], device='cuda:0')
27 tensor([990], device='cuda:0')
28 tensor([506], device='cuda:0')
29 tensor([1741], device='cuda:0')
30 tensor([713], device='cuda:0')
31 tensor([172], device='cuda:0')
32 tensor([611], device='cuda:0')
33 tensor([1099], device='cuda:0')
34 tensor([853], device='cuda:0')
35 tensor([1089], device='cuda:0')
36 tensor([166], device='cuda:0')
37 tensor([474], device='cuda:0')
38 tensor([1030], device='cuda:0')
39 tensor([793], device='cuda:0')
40 tensor([1349], device='cuda:0')
41 tensor([1544], device='cuda:0')
42 tensor([261], device='cuda:0')
43 tensor([185], device='cuda:0')
44 tensor([303], device='cuda:0')
45 tensor([720], device='cuda:0')
46 tensor([747], device='cuda:0')
47 tensor([685], device='cuda:0')
48 tensor([148], device='cuda:0')
49 tensor([906], device='cuda:0')
50 tensor([306], device='cuda:0')
51 tensor([515], device='cuda:0')
52 tensor([749], device='cuda:0')
53 tensor([1239], device='cuda:0')
54 tensor([477], device='cuda:0')
55 tensor([1498], device='cuda:0')
56 tensor([665], device='cuda:0')
57 tensor([519], device='cuda:0')
58 tensor([1099], device='cuda:0')
59 tensor([492], device='cuda:0')
60 tensor([1123], device='cuda:0')
61 tensor([1050], device='cuda:0')
62 tensor([1182], device='cuda:0')
63 tensor([912], device='cuda:0')
64 tensor([834], device='cuda:0')
65 tensor([1181], device='cuda:0')
66 tensor([1219], device='cuda:0')
67 tensor([188], device='cuda:0')
68 tensor([1345], device='cuda:0')
69 tensor([686], device='cuda:0')
70 tensor([1210], device='cuda:0')
71 tensor([697], device='cuda:0')
72 tensor([712], device='cuda:0')
73 tensor([1279], device='cuda:0')
74 tensor([778], device='cuda:0')
75 tensor([847], device='cuda:0')
76 tensor([394], device='cuda:0')
77 tensor([93], device='cuda:0')
78 tensor([550], device='cuda:0')
79 tensor([1166], device='cuda:0')
80 tensor([222], device='cuda:0')
81 tensor([433], device='cuda:0')
82 tensor([1192], device='cuda:0')
83 tensor([235], device='cuda:0')
84 tensor([976], device='cuda:0')
85 tensor([868], device='cuda:0')
86 tensor([762], device='cuda:0')
87 tensor([1128], device='cuda:0')
88 tensor([885], device='cuda:0')
89 tensor([406], device='cuda:0')
90 tensor([720], device='cuda:0')
91 tensor([441], device='cuda:0')
92 tensor([631], device='cuda:0')
93 tensor([1318], device='cuda:0')
94 tensor([660], device='cuda:0')
95 tensor([237], device='cuda:0')
96 tensor([251], device='cuda:0')
97 tensor([781], device='cuda:0')
98 tensor([1062], device='cuda:0')
99 tensor([378], device='cuda:0')
100 tensor([121], device='cuda:0')
101 tensor([1148], device='cuda:0')
102 tensor([742], device='cuda:0')
103 tensor([335], device='cuda:0')
104 tensor([952], device='cuda:0')
105 tensor([1185], device='cuda:0')
106 tensor([465], device='cuda:0')
107 tensor([367], device='cuda:0')
108 tensor([362], device='cuda:0')
109 tensor([115], device='cuda:0')
110 tensor([1052], device='cuda:0')
111 tensor([1013], device='cuda:0')
112 tensor([237], device='cuda:0')
113 tensor([310], device='cuda:0')
114 tensor([150], device='cuda:0')
115 tensor([277], device='cuda:0')
116 tensor([1700], device='cuda:0')
117 tensor([294], device='cuda:0')
118 tensor([1032], device='cuda:0')
119 tensor([245], device='cuda:0')
120 tensor([435], device='cuda:0')
121 tensor([937], device='cuda:0')
122 tensor([929], device='cuda:0')
123 tensor([479], device='cuda:0')
124 tensor([1123], device='cuda:0')
125 tensor([986], device='cuda:0')
126 tensor([237], device='cuda:0')
127 tensor([1185], device='cuda:0')
0 tensor([968], device='cuda:0')
1 tensor([1047], device='cuda:0')
2 tensor([845], device='cuda:0')
3 tensor([83], device='cuda:0')
4 tensor([426], device='cuda:0')
5 tensor([573], device='cuda:0')
6 tensor([659], device='cuda:0')
7 tensor([1119], device='cuda:0')
8 tensor([997], device='cuda:0')
9 tensor([153], device='cuda:0')
10 tensor([383], device='cuda:0')
11 tensor([676], device='cuda:0')
12 tensor([711], device='cuda:0')
13 tensor([1504], device='cuda:0')
14 tensor([259], device='cuda:0')
15 tensor([95], device='cuda:0')
16 tensor([522], device='cuda:0')
17 tensor([360], device='cuda:0')
18 tensor([141], device='cuda:0')
19 tensor([483], device='cuda:0')
20 tensor([410], device='cuda:0')
21 tensor([811], device='cuda:0')
22 tensor([130], device='cuda:0')
23 tensor([148], device='cuda:0')
24 tensor([1106], device='cuda:0')
25 tensor([551], device='cuda:0')
26 tensor([1525], device='cuda:0')
27 tensor([911], device='cuda:0')
28 tensor([729], device='cuda:0')
29 tensor([502], device='cuda:0')
30 tensor([107], device='cuda:0')
31 tensor([592], device='cuda:0')
32 tensor([146], device='cuda:0')
33 tensor([1238], device='cuda:0')
34 tensor([981], device='cuda:0')
35 tensor([857], device='cuda:0')
36 tensor([111], device='cuda:0')
37 tensor([1380], device='cuda:0')
38 tensor([1547], device='cuda:0')
39 tensor([464], device='cuda:0')
40 tensor([676], device='cuda:0')
41 tensor([300], device='cuda:0')
42 tensor([435], device='cuda:0')
43 tensor([519], device='cuda:0')
44 tensor([129], device='cuda:0')
45 tensor([479], device='cuda:0')
46 tensor([1249], device='cuda:0')
47 tensor([795], device='cuda:0')
48 tensor([72], device='cuda:0')
49 tensor([391], device='cuda:0')
50 tensor([409], device='cuda:0')
51 tensor([819], device='cuda:0')
52 tensor([855], device='cuda:0')
53 tensor([402], device='cuda:0')
54 tensor([261], device='cuda:0')
55 tensor([579], device='cuda:0')
56 tensor([1023], device='cuda:0')
57 tensor([1020], device='cuda:0')
58 tensor([572], device='cuda:0')
59 tensor([1291], device='cuda:0')
60 tensor([300], device='cuda:0')
61 tensor([444], device='cuda:0')
62 tensor([403], device='cuda:0')
63 tensor([808], device='cuda:0')
64 tensor([1226], device='cuda:0')
65 tensor([875], device='cuda:0')
66 tensor([675], device='cuda:0')
67 tensor([185], device='cuda:0')
68 tensor([1028], device='cuda:0')
69 tensor([245], device='cuda:0')
70 tensor([569], device='cuda:0')
71 tensor([868], device='cuda:0')
72 tensor([1079], device='cuda:0')
73 tensor([118], device='cuda:0')
74 tensor([1550], device='cuda:0')
75 tensor([375], device='cuda:0')
76 tensor([1028], device='cuda:0')
77 tensor([1619], device='cuda:0')
78 tensor([1086], device='cuda:0')
79 tensor([643], device='cuda:0')
80 tensor([738], device='cuda:0')
81 tensor([441], device='cuda:0')
82 tensor([462], device='cuda:0')
83 tensor([1165], device='cuda:0')
84 tensor([154], device='cuda:0')
85 tensor([335], device='cuda:0')
86 tensor([350], device='cuda:0')
87 tensor([231], device='cuda:0')
88 tensor([688], device='cuda:0')
89 tensor([830], device='cuda:0')
90 tensor([921], device='cuda:0')
91 tensor([72], device='cuda:0')
92 tensor([1258], device='cuda:0')
93 tensor([1062], device='cuda:0')
94 tensor([116], device='cuda:0')
95 tensor([352], device='cuda:0')
96 tensor([587], device='cuda:0')
97 tensor([1220], device='cuda:0')
98 tensor([956], device='cuda:0')
99 tensor([639], device='cuda:0')
100 tensor([122], device='cuda:0')
101 tensor([1152], device='cuda:0')
102 tensor([372], device='cuda:0')
103 tensor([335], device='cuda:0')
104 tensor([1138], device='cuda:0')
105 tensor([247], device='cuda:0')
106 tensor([125], device='cuda:0')
107 tensor([507], device='cuda:0')
108 tensor([395], device='cuda:0')
109 tensor([523], device='cuda:0')
110 tensor([887], device='cuda:0')
111 tensor([710], device='cuda:0')
112 tensor([590], device='cuda:0')
113 tensor([1136], device='cuda:0')
114 tensor([402], device='cuda:0')
115 tensor([146], device='cuda:0')
116 tensor([2192], device='cuda:0')
117 tensor([463], device='cuda:0')
118 tensor([356], device='cuda:0')
119 tensor([1019], device='cuda:0')
120 tensor([228], device='cuda:0')
121 tensor([660], device='cuda:0')
122 tensor([1218], device='cuda:0')
123 tensor([818], device='cuda:0')
124 tensor([1008], device='cuda:0')
125 tensor([254], device='cuda:0')
126 tensor([125], device='cuda:0')
127 tensor([605], device='cuda:0')
Train Loss : 21346.699, Val Loss : 12120.918
======> Trajectory Loss : 18162.852, Gravity Loss : 0.001, EndOfTrajectory Loss : 1.381, BelowGroundPenalize Loss : 3045.753
0 tensor([1185], device='cuda:0')
0 tensor([550], device='cuda:0')
0 tensor([712], device='cuda:0')
0 tensor([778], device='cuda:0')
0 tensor([929], device='cuda:0')
0 tensor([2192], device='cuda:0')
0 tensor([1079], device='cuda:0')
0 tensor([435], device='cuda:0')
0 tensor([129], device='cuda:0')
0 tensor([921], device='cuda:0')
Opening in existing browser session.
[1021/220443.223519:ERROR:nacl_helper_linux.cc(308)] NaCl helper process running without a sandbox!
Most likely you need to configure your SUID sandbox correctly
Opening in existing browser session.
[1021/220443.559148:ERROR:nacl_helper_linux.cc(308)] NaCl helper process running without a sandbox!
Most likely you need to configure your SUID sandbox correctly
Opening in existing browser session.
[1021/220443.864701:ERROR:nacl_helper_linux.cc(308)] NaCl helper process running without a sandbox!
Most likely you need to configure your SUID sandbox correctly
