==============================================Features==============================================
Prediction = depth, Environment = unity
Available features :  ['x-0', 'y-1', 'z-2', 'u-3', 'v-4', 'd-5', 'eot-6', 'og-7', 'rad-8', 'f_sin-9', 'f_cos-10', 'g-11']
Selected features :  [5]
1. input_col =  [3, 4, 5]
2. input_startpos_col =  [3, 4, 5, 5]
3. gt_col =  [5, 5]
4. gt_startpos_col =  [0, 1, 2, 5]
5. gt_xyz_col =  [0, 1, 2, 5]
====================================================================================================
[#]Training : Trajectory Estimation
Mixed:   0%|                                                                                                                  | 0/1 [00:00<?, ?it/s]===============================Dataset shape===============================
Mixed: 100%|██████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 47.78it/s]
Mixed : (724,)
===========================================================================
Mixed:   0%|                                                                                                                  | 0/1 [00:00<?, ?it/s]===============================Dataset shape===============================
Mixed : (1841,)
===========================================================================
Mixed: 100%|██████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00, 23.65it/s]
======================================================Summary Batch (batch_size = 128)=========================================================================
Input batch [0] : batch=torch.Size([128, 1644, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 1644, 3]), initial position=torch.Size([128, 1, 4])
gt batch [0] : batch=torch.Size([128, 1644, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 1645, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [1] : batch=torch.Size([128, 1997, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 1997, 3]), initial position=torch.Size([128, 1, 4])
gt batch [1] : batch=torch.Size([128, 1997, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 1998, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [2] : batch=torch.Size([128, 1820, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 1820, 3]), initial position=torch.Size([128, 1, 4])
gt batch [2] : batch=torch.Size([128, 1820, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 1821, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [3] : batch=torch.Size([128, 1814, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 1814, 3]), initial position=torch.Size([128, 1, 4])
gt batch [3] : batch=torch.Size([128, 1814, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 1815, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
Input batch [4] : batch=torch.Size([128, 1699, 3]), lengths=torch.Size([128]), mask=torch.Size([128, 1699, 3]), initial position=torch.Size([128, 1, 4])
gt batch [4] : batch=torch.Size([128, 1699, 2]), lengths=torch.Size([128]), mask=torch.Size([128, 1700, 4]), initial position=torch.Size([128, 1, 4])
Unpacked equality :  tensor(True)
===============================================================================================================================================================
{'flag': {'input_size': 2, 'output_size': 1, 'hidden_dim': 32, 'n_layers': 1, 'n_stack': 4, 'recurrent_stacked': [2, 32, 32, 32, 32], 'fc_size': [64, 32, 16, 8, 4, 1]}, 'depth': {'input_size': 3, 'output_size': 1, 'hidden_dim': 32, 'n_layers': 1, 'n_stack': 4, 'recurrent_stacked': [3, 32, 32, 32, 32], 'fc_size': [64, 32, 16, 8, 4, 1]}}
===>No model checkpoint
[#] Define the Learning rate, Optimizer, Decay rate and Scheduler...
[#]Model Architecture
####### Model - Depth #######
BiLSTMResidual(
  (recurrent_blocks): ModuleList(
    (0): LSTM(3, 32, batch_first=True, bidirectional=True)
    (1): LSTM(64, 32, batch_first=True, bidirectional=True)
    (2): LSTM(64, 32, batch_first=True, bidirectional=True)
    (3): LSTM(64, 32, batch_first=True, bidirectional=True)
  )
  (fc_blocks): Sequential(
    (0): Sequential(
      (0): Linear(in_features=64, out_features=32, bias=True)
      (1): LeakyReLU(negative_slope=0.01)
    )
    (1): Sequential(
      (0): Linear(in_features=32, out_features=16, bias=True)
      (1): LeakyReLU(negative_slope=0.01)
    )
    (2): Sequential(
      (0): Linear(in_features=16, out_features=8, bias=True)
      (1): LeakyReLU(negative_slope=0.01)
    )
    (3): Sequential(
      (0): Linear(in_features=8, out_features=4, bias=True)
      (1): LeakyReLU(negative_slope=0.01)
    )
    (4): Sequential(
      (0): Linear(in_features=4, out_features=1, bias=True)
    )
  )
)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[Epoch : 1/100000]<<<<<<<<<<<<<<<<<<<<<<<<<<<<
[#]Learning rate (Depth & EOT) :  0.003
===> [Minibatch 1/5].........tensor([[[ 0.0000,  0.0000, -0.1042],
         [ 0.0000,  0.0000, -0.1042],
         [ 0.0000,  0.0000, -0.1042],
         ...,
         [-0.0000, -0.0000, -0.0000],
         [-0.0000, -0.0000, -0.0000],
         [-0.0000, -0.0000, -0.0000]],

        [[ 0.0000,  0.0000, -0.1055],
         [ 0.0000,  0.0000, -0.1055],
         [ 0.0000,  0.0000, -0.1055],
         ...,
         [-0.0000, -0.0000, -0.0000],
         [-0.0000, -0.0000, -0.0000],
         [-0.0000, -0.0000, -0.0000]],

        [[-0.0000,  0.0000, -0.1733],
         [-0.0000,  0.0000, -0.1733],
         [-0.0000,  0.0000, -0.1733],
         ...,
         [-0.0000, -0.0000, -0.0000],
         [-0.0000, -0.0000, -0.0000],
         [-0.0000, -0.0000, -0.0000]],

        ...,

        [[-0.0000,  0.0000, -0.0441],
         [-0.0000,  0.0000, -0.0441],
         [-0.0000,  0.0000, -0.0441],
         ...,
         [-0.0000, -0.0000, -0.0000],
         [-0.0000, -0.0000, -0.0000],
         [-0.0000, -0.0000, -0.0000]],

        [[-0.0000, -0.0000,  0.0479],
         [-0.0000,  0.0000,  0.0479],
         [-0.0000,  0.0000,  0.0479],
         ...,
         [-0.0000, -0.0000,  0.0000],
         [-0.0000, -0.0000,  0.0000],
         [-0.0000, -0.0000,  0.0000]],

        [[ 0.0000,  0.0000, -0.0834],
         [ 0.0000,  0.0000, -0.0834],
         [ 0.0000,  0.0000, -0.0834],
         ...,
         [-0.0000, -0.0000, -0.0000],
         [-0.0000, -0.0000, -0.0000],
         [-0.0000, -0.0000, -0.0000]]], device='cuda:0')
Train Loss : 16104.706, Val Loss : 18109.768
======> Trajectory Loss : 16059.485, Gravity Loss : 0.002, BelowGroundPenalize Loss : 0.000, Depth Loss : 0.045
===> [Minibatch 2/5].........tensor([[[-0.0000, -0.0000, -0.0580],
         [-0.0000, -0.0000, -0.0580],
         [-0.0000, -0.0000, -0.0580],
         ...,
         [-0.0000, -0.0000, -0.0000],
         [-0.0000, -0.0000, -0.0000],
         [-0.0000, -0.0000, -0.0000]],

        [[-0.0000, -0.0000, -0.0563],
         [ 0.0000,  0.0000, -0.0563],
         [-0.0000,  0.0000, -0.0563],
         ...,
         [-0.0000, -0.0000, -0.0000],
         [-0.0000, -0.0000, -0.0000],
         [-0.0000, -0.0000, -0.0000]],

        [[-0.0000,  0.0000,  0.1395],
         [-0.0000,  0.0000,  0.1395],
         [-0.0000,  0.0000,  0.1395],
         ...,
         [-0.0000, -0.0000,  0.0000],
         [-0.0000, -0.0000,  0.0000],
         [-0.0000, -0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0567],
         [ 0.0000,  0.0000,  0.0567],
         [ 0.0000,  0.0000,  0.0567],
         ...,
         [-0.0000, -0.0000,  0.0000],
         [-0.0000, -0.0000,  0.0000],
         [-0.0000, -0.0000,  0.0000]],

        [[-0.0000,  0.0000,  0.0971],
         [-0.0000,  0.0000,  0.0971],
         [-0.0000,  0.0000,  0.0971],
         ...,
         [-0.0000, -0.0000,  0.0000],
         [-0.0000, -0.0000,  0.0000],
         [-0.0000, -0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0380],
         [ 0.0000,  0.0000,  0.0380],
         [ 0.0000,  0.0000,  0.0380],
         ...,
         [-0.0000, -0.0000,  0.0000],
         [-0.0000, -0.0000,  0.0000],
         [-0.0000, -0.0000,  0.0000]]], device='cuda:0')
Train Loss : 12216.475, Val Loss : 16788.107
======> Trajectory Loss : 12176.051, Gravity Loss : 0.001, BelowGroundPenalize Loss : 0.000, Depth Loss : 0.040
===> [Minibatch 3/5].........tensor([[[ 0.0000,  0.0000,  0.0489],
         [ 0.0000,  0.0000,  0.0489],
         [ 0.0000,  0.0000,  0.0489],
         ...,
         [-0.0000, -0.0000,  0.0000],
         [-0.0000, -0.0000,  0.0000],
         [-0.0000, -0.0000,  0.0000]],

        [[-0.0000,  0.0000, -0.0011],
         [-0.0000,  0.0000, -0.0011],
         [-0.0000,  0.0000, -0.0011],
         ...,
         [-0.0000, -0.0000, -0.0000],
         [-0.0000, -0.0000, -0.0000],
         [-0.0000, -0.0000, -0.0000]],

        [[-0.0000,  0.0000,  0.0684],
         [-0.0000,  0.0000,  0.0684],
         [-0.0000,  0.0000,  0.0684],
         ...,
         [-0.0000, -0.0000,  0.0000],
         [-0.0000, -0.0000,  0.0000],
         [-0.0000, -0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000, -0.0057],
         [ 0.0000,  0.0000, -0.0057],
         [ 0.0000,  0.0000, -0.0057],
         ...,
         [-0.0000, -0.0000, -0.0000],
         [-0.0000, -0.0000, -0.0000],
         [-0.0000, -0.0000, -0.0000]],

        [[ 0.0000, -0.0000, -0.0919],
         [ 0.0000, -0.0000, -0.0919],
         [ 0.0000, -0.0000, -0.0919],
         ...,
         [-0.0000, -0.0000, -0.0000],
         [-0.0000, -0.0000, -0.0000],
         [-0.0000, -0.0000, -0.0000]],

        [[-0.0000,  0.0000,  0.0968],
         [-0.0000,  0.0000,  0.0968],
         [-0.0000,  0.0000,  0.0968],
         ...,
         [-0.0000, -0.0000,  0.0000],
         [-0.0000, -0.0000,  0.0000],
         [-0.0000, -0.0000,  0.0000]]], device='cuda:0')
Train Loss : 15197.005, Val Loss : 15569.595
======> Trajectory Loss : 15158.545, Gravity Loss : 0.002, BelowGroundPenalize Loss : 0.000, Depth Loss : 0.038
===> [Minibatch 4/5].........tensor([[[ 0.0000,  0.0000,  0.0060],
         [ 0.0000,  0.0000,  0.0060],
         [ 0.0000,  0.0000,  0.0060],
         ...,
         [-0.0000, -0.0000,  0.0000],
         [-0.0000, -0.0000,  0.0000],
         [-0.0000, -0.0000,  0.0000]],

        [[-0.0000,  0.0000, -0.0667],
         [-0.0000,  0.0000, -0.0667],
         [-0.0000,  0.0000, -0.0667],
         ...,
         [-0.0000, -0.0000, -0.0000],
         [-0.0000, -0.0000, -0.0000],
         [-0.0000, -0.0000, -0.0000]],

        [[ 0.0000,  0.0000, -0.0332],
         [ 0.0000,  0.0000, -0.0332],
         [ 0.0000,  0.0000, -0.0332],
         ...,
         [-0.0000, -0.0000, -0.0000],
         [-0.0000, -0.0000, -0.0000],
         [-0.0000, -0.0000, -0.0000]],

        ...,

        [[-0.0000,  0.0000,  0.1337],
         [-0.0000,  0.0000,  0.1337],
         [-0.0000,  0.0000,  0.1337],
         ...,
         [-0.0000, -0.0000,  0.0000],
         [-0.0000, -0.0000,  0.0000],
         [-0.0000, -0.0000,  0.0000]],

        [[-0.0000,  0.0000, -0.0764],
         [-0.0000,  0.0000, -0.0764],
         [-0.0000,  0.0000, -0.0764],
         ...,
         [-0.0000, -0.0000, -0.0000],
         [-0.0000, -0.0000, -0.0000],
         [-0.0000, -0.0000, -0.0000]],

        [[ 0.0000,  0.0000, -0.1145],
         [ 0.0000,  0.0000, -0.1145],
         [ 0.0000,  0.0000, -0.1145],
         ...,
         [-0.0000, -0.0000, -0.0000],
         [-0.0000, -0.0000, -0.0000],
         [-0.0000, -0.0000, -0.0000]]], device='cuda:0')
